{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/json-stringify-deterministic@1.0.12/node_modules/json-stringify-deterministic/lib/defaults.js", "../../node_modules/.pnpm/json-stringify-deterministic@1.0.12/node_modules/json-stringify-deterministic/lib/util.js", "../../node_modules/.pnpm/json-stringify-deterministic@1.0.12/node_modules/json-stringify-deterministic/lib/index.js"],
  "sourcesContent": ["module.exports = {\n  space: '',\n  cycles: false,\n  replacer: (k, v) => v,\n  stringify: JSON.stringify\n}\n", "'use strict'\n\nmodule.exports = {\n  isArray: Array.isArray,\n  assign: Object.assign,\n  isObject: v => typeof v === 'object',\n  isFunction: v => typeof v === 'function',\n  isBoolean: v => typeof v === 'boolean',\n  isRegex: v => v instanceof RegExp,\n  keys: Object.keys\n}\n", "'use strict'\n\nconst DEFAULTS = require('./defaults')\nconst isFunction = require('./util').isFunction\nconst isBoolean = require('./util').isBoolean\nconst isObject = require('./util').isObject\nconst isArray = require('./util').isArray\nconst isRegex = require('./util').isRegex\nconst assign = require('./util').assign\nconst keys = require('./util').keys\n\nfunction serialize (obj) {\n  if (obj === null || obj === undefined) return obj\n  if (isRegex(obj)) return obj.toString()\n  return obj.toJSON ? obj.toJSON() : obj\n}\n\nfunction stringifyDeterministic (obj, opts) {\n  opts = opts || assign({}, DEFAULTS)\n\n  if (isFunction(opts)) opts = { compare: opts }\n\n  const space = opts.space || DEFAULTS.space\n  const cycles = isBoolean(opts.cycles) ? opts.cycles : DEFAULTS.cycles\n  const replacer = opts.replacer || DEFAULTS.replacer\n  const stringify = opts.stringify || DEFAULTS.stringify\n\n  const compare = opts.compare && (function (f) {\n    return function (node) {\n      return function (a, b) {\n        const aobj = { key: a, value: node[a] }\n        const bobj = { key: b, value: node[b] }\n        return f(aobj, bobj)\n      }\n    }\n  })(opts.compare)\n\n  // Detect circular structure in obj and raise error efficiently.\n  if (!cycles) stringify(obj)\n\n  const seen = []\n\n  return (function _deterministic (parent, key, node, level) {\n    const indent = space ? ('\\n' + new Array(level + 1).join(space)) : ''\n    const colonSeparator = space ? ': ' : ':'\n\n    node = serialize(node)\n    node = replacer.call(parent, key, node)\n\n    if (node === undefined) return\n\n    if (!isObject(node) || node === null) return stringify(node)\n\n    if (isArray(node)) {\n      const out = []\n      for (let i = 0; i < node.length; i++) {\n        const item = _deterministic(node, i, node[i], level + 1) || stringify(null)\n        out.push(indent + space + item)\n      }\n      return '[' + out.join(',') + indent + ']'\n    } else {\n      if (cycles) {\n        if (seen.indexOf(node) !== -1) {\n          return stringify('[Circular]')\n        } else {\n          seen.push(node)\n        }\n      }\n\n      const nodeKeys = keys(node).sort(compare && compare(node))\n      const out = []\n      for (let i = 0; i < nodeKeys.length; i++) {\n        const key = nodeKeys[i]\n        const value = _deterministic(node, key, node[key], level + 1)\n\n        if (!value) continue\n\n        const keyValue = stringify(key) + colonSeparator + value\n        out.push(indent + space + keyValue)\n      }\n      seen.splice(seen.indexOf(node), 1)\n      return '{' + out.join(',') + indent + '}'\n    }\n  })({ '': obj }, '', obj, 0)\n}\n\nmodule.exports = stringifyDeterministic\n"],
  "mappings": "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",
  "names": ["key"]
}
