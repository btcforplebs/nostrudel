{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/applesauce-react@0.7.0_typescript@5.6.2/node_modules/applesauce-react/dist/hooks/use-observable.js", "../../node_modules/.pnpm/applesauce-react@0.7.0_typescript@5.6.2/node_modules/applesauce-react/dist/hooks/use-store-query.js", "../../node_modules/.pnpm/applesauce-react@0.7.0_typescript@5.6.2/node_modules/applesauce-react/dist/provider.js", "../../node_modules/.pnpm/applesauce-react@0.7.0_typescript@5.6.2/node_modules/applesauce-react/dist/hooks/use-render-nast.js", "../../node_modules/.pnpm/applesauce-react@0.7.0_typescript@5.6.2/node_modules/applesauce-react/dist/helpers/nast.js", "../../node_modules/.pnpm/applesauce-react@0.7.0_typescript@5.6.2/node_modules/applesauce-react/dist/hooks/use-rendered-text-content.js", "../../node_modules/.pnpm/applesauce-react@0.7.0_typescript@5.6.2/node_modules/applesauce-react/dist/helpers/build-link-renderer.js"],
  "sourcesContent": ["import { useState, useEffect } from \"react\";\nimport { isStateful } from \"applesauce-core/observable\";\n/** Subscribe to the value of an observable */\nexport function useObservable(observable) {\n    const [_count, update] = useState(0);\n    // const init = useRef(true);\n    // const value = useRef<T | undefined>(observable && isStateful(observable) ? observable.value : undefined);\n    // const prev = useRef(observable);\n    // const sub = useRef<ZenObservable.Subscription>();\n    // // This intentionally does not use useEffect\n    // // because we want the value to be returned on the first render\n    // if (!sub.current || prev.current !== observable) {\n    //   prev.current = observable;\n    //   if (sub.current) sub.current.unsubscribe();\n    //   sub.current = observable?.subscribe((v) => {\n    //     value.current = v;\n    //     // only explicitly update if its not the first render\n    //     if (!init.current) update(count + 1);\n    //   });\n    //   init.current = false;\n    // }\n    // // unsubscribe when unmount\n    // useEffect(() => {\n    //   return () => {\n    //     if (sub.current) sub.current.unsubscribe();\n    //   };\n    // }, []);\n    // return value.current;\n    const [value, setValue] = useState(observable && isStateful(observable) ? observable.value : undefined);\n    useEffect(() => {\n        const sub = observable?.subscribe((v) => {\n            setValue(v);\n            update((c) => c + 1);\n        });\n        return () => sub?.unsubscribe();\n    }, [observable]);\n    return value;\n}\n", "import { useMemo } from \"react\";\nimport { useObservable } from \"./use-observable.js\";\nimport { useQueryStore } from \"../provider.js\";\n/** Runs and subscribes to a query in the query store */\nexport function useStoreQuery(queryConstructor, args) {\n    const store = useQueryStore();\n    const observable = useMemo(() => {\n        if (args)\n            return store.runQuery(queryConstructor)(...args);\n        else\n            return undefined;\n    }, [args, store]);\n    return useObservable(observable);\n}\n", "import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createContext, useContext } from \"react\";\nconst QueryStoreContext = createContext(null);\nexport function useQueryStore() {\n    const store = useContext(QueryStoreContext);\n    if (!store)\n        throw new Error(\"Missing QueryStoreProvider\");\n    return store;\n}\nexport function QueryStoreProvider({ store, children }) {\n    return _jsx(QueryStoreContext.Provider, { value: store, children: children });\n}\n", "import { useMemo } from \"react\";\nimport { renderNast } from \"../helpers/nast.js\";\n/** A hook to get the rendered output of a nostr syntax tree */\nexport function useRenderNast(root, components) {\n    return useMemo(() => (root ? renderNast(root, components) : null), [root, Object.keys(components).join(\"|\")]);\n}\n", "import { jsx as _jsx, Fragment as _Fragment } from \"react/jsx-runtime\";\n/** Render a nostr syntax tree to JSX components */\nexport function renderNast(root, components) {\n    const indexes = {};\n    return (_jsx(_Fragment, { children: root.children.map((node) => {\n            indexes[node.type] = indexes[node.type] ?? 0;\n            const index = indexes[node.type];\n            indexes[node.type]++;\n            const Component = components[node.type];\n            if (!Component)\n                return null;\n            // @ts-expect-error\n            return _jsx(Component, { node: node }, node.type + \"-\" + index);\n        }) }));\n}\n", "import { useMemo } from \"react\";\nimport { getParsedTextContent } from \"applesauce-content/text\";\nimport { useRenderNast } from \"./use-render-nast.js\";\nimport { buildLinkRenderer } from \"../helpers/build-link-renderer.js\";\nimport { truncateContent } from \"applesauce-content/nast\";\n/** Returns the parsed and render text content for an event */\nexport function useRenderedContent(event, components, opts) {\n    // if link renderers are set, override the link components\n    const _components = useMemo(() => (opts?.linkRenderers ? { ...components, link: buildLinkRenderer(opts.linkRenderers) } : components), [opts?.linkRenderers, components]);\n    // add additional transformers\n    const nast = useMemo(() => (event ? getParsedTextContent(event, opts?.content, opts?.transformers) : undefined), [event, opts?.content, opts?.transformers]);\n    let truncated = nast;\n    if (opts?.maxLength && nast)\n        truncated = truncateContent(nast, opts.maxLength);\n    return useRenderNast(truncated, _components);\n}\n", "import { Fragment as _Fragment, jsx as _jsx } from \"react/jsx-runtime\";\nimport { memo, useMemo } from \"react\";\nexport function buildLinkRenderer(handlers) {\n    const LinkRenderer = ({ node }) => {\n        const content = useMemo(() => {\n            try {\n                const url = new URL(node.href);\n                for (const handler of handlers) {\n                    try {\n                        const content = handler(url, node);\n                        if (content)\n                            return content;\n                    }\n                    catch (e) { }\n                }\n            }\n            catch (error) { }\n            return null;\n        }, [node.href, node.value]);\n        return content || _jsx(_Fragment, { children: node.value });\n    };\n    return memo(LinkRenderer);\n}\n"],
  "mappings": "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",
  "names": ["import_react", "import_react", "_jsx", "import_react", "import_jsx_runtime", "_jsx", "_Fragment", "import_react", "import_jsx_runtime", "import_react", "content", "_jsx", "_Fragment"]
}
