{"version":3,"file":"emoji-packs-Cle-_4Lu.js","sources":["../../src/views/user/emoji-packs.tsx"],"sourcesContent":["import { useOutletContext } from \"react-router-dom\";\nimport { Heading, SimpleGrid } from \"@chakra-ui/react\";\nimport { useObservable } from \"applesauce-react\";\n\nimport { useAdditionalRelayContext } from \"../../providers/local/additional-relay-context\";\nimport useTimelineLoader from \"../../hooks/use-timeline-loader\";\nimport { getEventUID } from \"../../helpers/nostr/event\";\nimport IntersectionObserverProvider from \"../../providers/local/intersection-observer\";\nimport { useTimelineCurserIntersectionCallback } from \"../../hooks/use-timeline-cursor-intersection-callback\";\nimport EmojiPackCard from \"../emoji-packs/components/emoji-pack-card\";\nimport { EMOJI_PACK_KIND, getPackCordsFromFavorites } from \"../../helpers/nostr/emoji-packs\";\nimport useFavoriteEmojiPacks from \"../../hooks/use-favorite-emoji-packs\";\nimport useReplaceableEvents from \"../../hooks/use-replaceable-events\";\nimport VerticalPageLayout from \"../../components/vertical-page-layout\";\n\nexport default function UserEmojiPacksTab() {\n  const { pubkey } = useOutletContext() as { pubkey: string };\n  const readRelays = useAdditionalRelayContext();\n\n  const { loader, timeline: packs } = useTimelineLoader(pubkey + \"-emoji-packs\", readRelays, {\n    authors: [pubkey],\n    kinds: [EMOJI_PACK_KIND],\n  });\n\n  const favoritePacks = useFavoriteEmojiPacks(pubkey);\n  const favorites = useReplaceableEvents(favoritePacks && getPackCordsFromFavorites(favoritePacks));\n\n  const callback = useTimelineCurserIntersectionCallback(loader);\n\n  return (\n    <IntersectionObserverProvider callback={callback}>\n      <VerticalPageLayout>\n        {packs.length > 0 && (\n          <>\n            <Heading size=\"lg\" mt=\"2\">\n              Created packs\n            </Heading>\n            <SimpleGrid columns={{ base: 1, lg: 2 }} spacing=\"2\">\n              {packs.map((pack) => (\n                <EmojiPackCard key={getEventUID(pack)} pack={pack} />\n              ))}\n            </SimpleGrid>\n          </>\n        )}\n        {favorites.length > 0 && (\n          <>\n            <Heading size=\"lg\" mt=\"2\">\n              Favorite packs\n            </Heading>\n            <SimpleGrid columns={{ base: 1, lg: 2 }} spacing=\"2\">\n              {favorites.map((event) => (\n                <EmojiPackCard key={getEventUID(event)} pack={event} />\n              ))}\n            </SimpleGrid>\n          </>\n        )}\n      </VerticalPageLayout>\n    </IntersectionObserverProvider>\n  );\n}\n"],"names":["UserEmojiPacksTab","pubkey","useOutletContext","readRelays","useAdditionalRelayContext","loader","packs","useTimelineLoader","EMOJI_PACK_KIND","favoritePacks","useFavoriteEmojiPacks","favorites","useReplaceableEvents","getPackCordsFromFavorites","callback","useTimelineCurserIntersectionCallback","jsx","IntersectionObserverProvider","jsxs","VerticalPageLayout","Fragment","Heading","SimpleGrid","pack","EmojiPackCard","getEventUID","event"],"mappings":"kOAeA,SAAwBA,GAAoB,CACpC,KAAA,CAAE,OAAAC,GAAWC,IACbC,EAAaC,IAEb,CAAE,OAAAC,EAAQ,SAAUC,CAAA,EAAUC,EAAkBN,EAAS,eAAgBE,EAAY,CACzF,QAAS,CAACF,CAAM,EAChB,MAAO,CAACO,CAAe,CAAA,CACxB,EAEKC,EAAgBC,EAAsBT,CAAM,EAC5CU,EAAYC,EAAqBH,GAAiBI,EAA0BJ,CAAa,CAAC,EAE1FK,EAAWC,EAAsCV,CAAM,EAE7D,OACGW,EAAA,IAAAC,EAAA,CAA6B,SAAAH,EAC5B,SAAAI,OAACC,EACE,CAAA,SAAA,CAAMb,EAAA,OAAS,GAEZY,EAAA,KAAAE,EAAA,SAAA,CAAA,SAAA,CAAAJ,MAACK,EAAQ,CAAA,KAAK,KAAK,GAAG,IAAI,SAE1B,gBAAA,EACAL,EAAAA,IAACM,GAAW,QAAS,CAAE,KAAM,EAAG,GAAI,CAAE,EAAG,QAAQ,IAC9C,WAAM,IAAKC,GACTP,EAAAA,IAAAQ,EAAA,CAAsC,KAAAD,GAAnBE,EAAYF,CAAI,CAAe,CACpD,CACH,CAAA,CAAA,EACF,EAEDZ,EAAU,OAAS,GAEhBO,EAAA,KAAAE,EAAA,SAAA,CAAA,SAAA,CAAAJ,MAACK,EAAQ,CAAA,KAAK,KAAK,GAAG,IAAI,SAE1B,iBAAA,EACAL,EAAAA,IAACM,GAAW,QAAS,CAAE,KAAM,EAAG,GAAI,CAAE,EAAG,QAAQ,IAC9C,WAAU,IAAKI,GACdV,EAAA,IAACQ,EAAuC,CAAA,KAAME,GAA1BD,EAAYC,CAAK,CAAgB,CACtD,CACH,CAAA,CAAA,EACF,CAAA,CAEJ,CAAA,CACF,CAAA,CAEJ"}