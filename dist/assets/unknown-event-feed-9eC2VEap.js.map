{"version":3,"file":"unknown-event-feed-9eC2VEap.js","sources":["../../src/views/tools/unknown-event-feed.tsx"],"sourcesContent":["import { Button, Flex } from \"@chakra-ui/react\";\nimport { memo, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { kinds } from \"nostr-tools\";\n\nimport VerticalPageLayout from \"../../components/vertical-page-layout\";\nimport PeopleListProvider, { usePeopleListContext } from \"../../providers/local/people-list-provider\";\nimport PeopleListSelection from \"../../components/people-list-selection/people-list-selection\";\nimport useTimelineLoader from \"../../hooks/use-timeline-loader\";\nimport { useReadRelays } from \"../../hooks/use-client-relays\";\nimport { useTimelineCurserIntersectionCallback } from \"../../hooks/use-timeline-cursor-intersection-callback\";\nimport IntersectionObserverProvider from \"../../providers/local/intersection-observer\";\nimport { NostrEvent } from \"../../types/nostr-event\";\nimport { ChevronLeftIcon } from \"../../components/icons\";\nimport useClientSideMuteFilter from \"../../hooks/use-client-side-mute-filter\";\nimport { EmbedEvent } from \"../../components/embed-event\";\nimport {\n  BOOKMARK_LIST_KIND,\n  BOOKMARK_LIST_SET_KIND,\n  COMMUNITIES_LIST_KIND,\n  MUTE_LIST_KIND,\n  PEOPLE_LIST_KIND,\n  PIN_LIST_KIND,\n} from \"../../helpers/nostr/lists\";\nimport useEventIntersectionRef from \"../../hooks/use-event-intersection-ref\";\n\nconst UnknownEvent = memo(({ event }: { event: NostrEvent }) => {\n  const ref = useEventIntersectionRef(event);\n\n  return (\n    <div ref={ref}>\n      <EmbedEvent event={event} />\n    </div>\n  );\n});\n\nconst commonTimelineKinds = [\n  kinds.ShortTextNote,\n  kinds.LongFormArticle,\n  kinds.Repost,\n  kinds.GenericRepost,\n  kinds.Reaction,\n  kinds.BadgeAward,\n  kinds.BadgeDefinition,\n  kinds.LiveEvent,\n  kinds.Contacts,\n  kinds.Metadata,\n  kinds.EncryptedDirectMessage,\n  MUTE_LIST_KIND,\n  kinds.LiveChatMessage,\n  kinds.EventDeletion,\n  kinds.CommunityPostApproval,\n  BOOKMARK_LIST_KIND,\n  BOOKMARK_LIST_SET_KIND,\n  PEOPLE_LIST_KIND,\n  PIN_LIST_KIND,\n  COMMUNITIES_LIST_KIND,\n  kinds.ZapGoal,\n];\n\nexport function UnknownTimelinePage() {\n  const navigate = useNavigate();\n  const { listId, filter } = usePeopleListContext();\n\n  const clientMuteFilter = useClientSideMuteFilter();\n  const eventFilter = useCallback(\n    (e: NostrEvent) => {\n      if (clientMuteFilter(e)) return false;\n      if (commonTimelineKinds.includes(e.kind)) return false;\n      return true;\n    },\n    [clientMuteFilter],\n  );\n  const readRelays = useReadRelays();\n  const { loader, timeline } = useTimelineLoader(`${listId ?? \"global\"}-unknown-feed`, readRelays, filter, {\n    eventFilter,\n  });\n  const callback = useTimelineCurserIntersectionCallback(loader);\n\n  return (\n    <VerticalPageLayout>\n      <Flex gap=\"2\">\n        <Button leftIcon={<ChevronLeftIcon />} onClick={() => navigate(-1)}>\n          Back\n        </Button>\n        <PeopleListSelection />\n      </Flex>\n      <IntersectionObserverProvider callback={callback}>\n        {timeline.map((event) => (\n          <UnknownEvent key={event.id} event={event} />\n        ))}\n      </IntersectionObserverProvider>\n    </VerticalPageLayout>\n  );\n}\n\nexport default function UnknownTimelineView() {\n  return (\n    <PeopleListProvider>\n      <UnknownTimelinePage />\n    </PeopleListProvider>\n  );\n}\n"],"names":["UnknownEvent","memo","event","ref","useEventIntersectionRef","jsx","EmbedEvent","commonTimelineKinds","kinds","MUTE_LIST_KIND","BOOKMARK_LIST_KIND","BOOKMARK_LIST_SET_KIND","PEOPLE_LIST_KIND","PIN_LIST_KIND","COMMUNITIES_LIST_KIND","UnknownTimelinePage","navigate","useNavigate","listId","filter","usePeopleListContext","clientMuteFilter","useClientSideMuteFilter","eventFilter","useCallback","e","readRelays","useReadRelays","loader","timeline","useTimelineLoader","callback","useTimelineCurserIntersectionCallback","VerticalPageLayout","jsxs","Flex","Button","ChevronLeftIcon","PeopleListSelection","IntersectionObserverProvider","UnknownTimelineView","PeopleListProvider"],"mappings":"sNA0BA,MAAMA,EAAeC,EAAA,KAAK,CAAC,CAAE,MAAAC,KAAmC,CACxD,MAAAC,EAAMC,EAAwBF,CAAK,EAEzC,aACG,MAAI,CAAA,IAAAC,EACH,SAACE,MAAAC,EAAA,CAAW,MAAAJ,EAAc,CAC5B,CAAA,CAEJ,CAAC,EAEKK,EAAsB,CAC1BC,EAAM,cACNA,EAAM,gBACNA,EAAM,OACNA,EAAM,cACNA,EAAM,SACNA,EAAM,WACNA,EAAM,gBACNA,EAAM,UACNA,EAAM,SACNA,EAAM,SACNA,EAAM,uBACNC,EACAD,EAAM,gBACNA,EAAM,cACNA,EAAM,sBACNE,EACAC,EACAC,EACAC,EACAC,EACAN,EAAM,OACR,EAEO,SAASO,GAAsB,CACpC,MAAMC,EAAWC,IACX,CAAE,OAAAC,EAAQ,OAAAC,CAAO,EAAIC,EAAqB,EAE1CC,EAAmBC,IACnBC,EAAcC,EAAA,YACjBC,GACK,EAAAJ,EAAiBI,CAAC,GAClBlB,EAAoB,SAASkB,EAAE,IAAI,GAGzC,CAACJ,CAAgB,CAAA,EAEbK,EAAaC,IACb,CAAE,OAAAC,EAAQ,SAAAC,CAAa,EAAAC,EAAkB,GAAGZ,GAAU,QAAQ,gBAAiBQ,EAAYP,EAAQ,CACvG,YAAAI,CAAA,CACD,EACKQ,EAAWC,EAAsCJ,CAAM,EAE7D,cACGK,EACC,CAAA,SAAA,CAACC,EAAAA,KAAAC,EAAA,CAAK,IAAI,IACR,SAAA,CAAC9B,EAAAA,IAAA+B,EAAA,CAAO,SAAU/B,EAAA,IAACgC,EAAgB,CAAA,CAAA,EAAI,QAAS,IAAMrB,EAAS,EAAE,EAAG,SAEpE,MAAA,CAAA,QACCsB,EAAoB,EAAA,CAAA,EACvB,EACCjC,EAAA,IAAAkC,EAAA,CAA6B,SAAAR,EAC3B,SAAAF,EAAS,IAAK3B,GACbG,EAAAA,IAACL,EAA4B,CAAA,MAAAE,CAAA,EAAVA,EAAM,EAAkB,CAC5C,EACH,CACF,CAAA,CAAA,CAEJ,CAEA,SAAwBsC,GAAsB,CAC5C,OACGnC,EAAA,IAAAoC,EAAA,CACC,SAACpC,EAAA,IAAAU,EAAA,CAAA,CAAoB,CACvB,CAAA,CAEJ"}