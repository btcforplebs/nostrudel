{"version":3,"file":"index-B-OB5am6.js","sources":["../../src/views/discovery/dvm-feed/components/dvm-card.tsx","../../src/views/discovery/index.tsx"],"sourcesContent":["import { Card, CardProps, Heading, LinkBox, LinkOverlayProps, Text } from \"@chakra-ui/react\";\nimport { Link as RouterLink, To } from \"react-router-dom\";\nimport { useMemo } from \"react\";\nimport { AddressPointer } from \"nostr-tools/nip19\";\n\nimport { NostrEvent } from \"../../../../types/nostr-event\";\nimport HoverLinkOverlay from \"../../../../components/hover-link-overlay\";\nimport { DVMAvatarLink } from \"./dvm-avatar\";\nimport { getEventAddressPointer } from \"../../../../helpers/nostr/event\";\nimport { DVMName } from \"./dvm-name\";\nimport DebugEventButton from \"../../../../components/debug-modal/debug-event-button\";\nimport useEventIntersectionRef from \"../../../../hooks/use-event-intersection-ref\";\n\nexport default function DVMCard({\n  appData,\n  to,\n  onClick,\n  ...props\n}: Omit<CardProps, \"children\"> & { appData: NostrEvent; to: To; onClick?: LinkOverlayProps[\"onClick\"] }) {\n  const metadata = JSON.parse(appData.content);\n  const pointer: AddressPointer = useMemo(() => getEventAddressPointer(appData), [appData]);\n\n  const ref = useEventIntersectionRef(appData);\n\n  return (\n    <>\n      <Card as={LinkBox} display=\"block\" p=\"4\" ref={ref} {...props}>\n        <DebugEventButton size=\"sm\" float=\"right\" zIndex={1} event={appData} />\n        <DVMAvatarLink pointer={pointer} w=\"24\" float=\"left\" mr=\"4\" mb=\"2\" />\n        <Heading size=\"md\">\n          <HoverLinkOverlay as={RouterLink} to={to} onClick={onClick}>\n            <DVMName pointer={pointer} />\n          </HoverLinkOverlay>\n        </Heading>\n        <Text>{metadata.about}</Text>\n      </Card>\n    </>\n  );\n}\n","import { useCallback } from \"react\";\nimport { Card, Flex, Heading, Link, LinkBox, SimpleGrid, Text } from \"@chakra-ui/react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { kinds, NostrEvent } from \"nostr-tools\";\n\nimport VerticalPageLayout from \"../../components/vertical-page-layout\";\nimport DVMCard from \"./dvm-feed/components/dvm-card\";\nimport { DVM_CONTENT_DISCOVERY_JOB_KIND } from \"../../helpers/nostr/dvm\";\nimport useTimelineLoader from \"../../hooks/use-timeline-loader\";\nimport { useReadRelays } from \"../../hooks/use-client-relays\";\nimport RequireCurrentAccount from \"../../providers/route/require-current-account\";\nimport { getEventCoordinate } from \"../../helpers/nostr/event\";\nimport { useTimelineCurserIntersectionCallback } from \"../../hooks/use-timeline-cursor-intersection-callback\";\nimport IntersectionObserverProvider from \"../../providers/local/intersection-observer\";\nimport Telescope from \"../../components/icons/telescope\";\nimport HoverLinkOverlay from \"../../components/hover-link-overlay\";\nimport { RelayIcon } from \"../../components/icons\";\n\nfunction DVMFeeds() {\n  const readRelays = useReadRelays();\n  const eventFilter = useCallback((event: NostrEvent) => {\n    return !event.tags.some((t) => t[0] === \"web\");\n  }, []);\n  const { loader, timeline: DVMs } = useTimelineLoader(\n    \"content-discovery-dvms\",\n    readRelays,\n    {\n      kinds: [kinds.Handlerinformation],\n      \"#k\": [String(DVM_CONTENT_DISCOVERY_JOB_KIND)],\n    },\n    { eventFilter },\n  );\n  const callback = useTimelineCurserIntersectionCallback(loader);\n\n  return (\n    <>\n      <Heading size=\"md\" mt=\"4\">\n        DVM Feeds\n      </Heading>\n      <Text>\n        Learn more about data vending machines here:{\" \"}\n        <Link href=\"https://www.data-vending-machines.org/\" isExternal color=\"blue.500\">\n          https://www.data-vending-machines.org/\n        </Link>\n      </Text>\n      <IntersectionObserverProvider callback={callback}>\n        <SimpleGrid columns={{ base: 1, md: 1, lg: 2, xl: 3 }} spacing=\"2\">\n          {DVMs.map((appData) => (\n            <DVMCard key={appData.id} appData={appData} to={`/discovery/dvm/${getEventCoordinate(appData)}`} />\n          ))}\n        </SimpleGrid>\n      </IntersectionObserverProvider>\n    </>\n  );\n}\n\nfunction DiscoveryHomePage() {\n  return (\n    <VerticalPageLayout>\n      <SimpleGrid columns={{ base: 1, md: 1, lg: 2, xl: 3 }} spacing=\"2\">\n        <Card as={LinkBox} display=\"block\" p=\"4\" maxW=\"lg\">\n          <Telescope boxSize={16} float=\"left\" ml=\"2\" my=\"2\" mr=\"6\" />\n          <Flex direction=\"column\">\n            <Heading size=\"md\">\n              <HoverLinkOverlay as={RouterLink} to=\"/discovery/blindspot\">\n                Blind spots\n              </HoverLinkOverlay>\n            </Heading>\n            <Text>What are other users seeing that you are not?</Text>\n          </Flex>\n        </Card>\n        <Card as={LinkBox} display=\"block\" p=\"4\" maxW=\"lg\">\n          <RelayIcon boxSize={16} float=\"left\" ml=\"2\" my=\"2\" mr=\"6\" />\n          <Flex direction=\"column\">\n            <Heading size=\"md\">\n              <HoverLinkOverlay as={RouterLink} to=\"/discovery/relays\">\n                Relays\n              </HoverLinkOverlay>\n            </Heading>\n            <Text>See what notes are on relays and where they are</Text>\n          </Flex>\n        </Card>\n      </SimpleGrid>\n      <DVMFeeds />\n    </VerticalPageLayout>\n  );\n}\n\nexport default function DiscoveryHomeView() {\n  return (\n    <RequireCurrentAccount>\n      <DiscoveryHomePage />\n    </RequireCurrentAccount>\n  );\n}\n"],"names":["DVMCard","appData","to","onClick","props","metadata","pointer","useMemo","getEventAddressPointer","ref","useEventIntersectionRef","jsx","Fragment","jsxs","Card","LinkBox","DebugEventButton","DVMAvatarLink","Heading","HoverLinkOverlay","RouterLink","DVMName","Text","DVMFeeds","readRelays","useReadRelays","eventFilter","useCallback","event","t","loader","DVMs","useTimelineLoader","kinds","DVM_CONTENT_DISCOVERY_JOB_KIND","callback","useTimelineCurserIntersectionCallback","Link","IntersectionObserverProvider","SimpleGrid","getEventCoordinate","DiscoveryHomePage","VerticalPageLayout","Telescope","Flex","RelayIcon","DiscoveryHomeView","RequireCurrentAccount"],"mappings":"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"}