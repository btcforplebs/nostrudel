{"version":3,"file":"find-by-name-BZtDifqd.js","sources":["../../src/views/community/find-by-name.tsx"],"sourcesContent":["import { useCallback } from \"react\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { Heading, SimpleGrid } from \"@chakra-ui/react\";\n\nimport { useReadRelays } from \"../../hooks/use-client-relays\";\nimport { COMMUNITY_DEFINITION_KIND, validateCommunity } from \"../../helpers/nostr/communities\";\nimport useTimelineLoader from \"../../hooks/use-timeline-loader\";\nimport { NostrEvent } from \"../../types/nostr-event\";\nimport { useTimelineCurserIntersectionCallback } from \"../../hooks/use-timeline-cursor-intersection-callback\";\nimport IntersectionObserverProvider from \"../../providers/local/intersection-observer\";\nimport VerticalPageLayout from \"../../components/vertical-page-layout\";\nimport CommunityCard from \"../communities/components/community-card\";\nimport { getEventUID } from \"../../helpers/nostr/event\";\nimport { safeDecode } from \"../../helpers/nip19\";\n\nexport default function CommunityFindByNameView() {\n  const { community } = useParams() as { community: string };\n\n  // if community name is a naddr, redirect\n  const decoded = safeDecode(community);\n  if (decoded?.type === \"naddr\" && decoded.data.kind === COMMUNITY_DEFINITION_KIND) {\n    return <Navigate to={`/c/${decoded.data.identifier}/${decoded.data.pubkey}`} replace />;\n  }\n\n  const readRelays = useReadRelays();\n  const eventFilter = useCallback((event: NostrEvent) => {\n    return validateCommunity(event);\n  }, []);\n  const { loader, timeline: communities } = useTimelineLoader(\n    `${community}-find-communities`,\n    readRelays,\n    community ? { kinds: [COMMUNITY_DEFINITION_KIND], \"#d\": [community] } : undefined,\n  );\n  const callback = useTimelineCurserIntersectionCallback(loader);\n\n  return (\n    <IntersectionObserverProvider callback={callback}>\n      <VerticalPageLayout>\n        <Heading>Select Community</Heading>\n        <SimpleGrid spacing=\"2\" columns={{ base: 1, lg: 2 }}>\n          {communities?.map((event) => <CommunityCard key={getEventUID(event)} community={event} />)}\n        </SimpleGrid>\n      </VerticalPageLayout>\n    </IntersectionObserverProvider>\n  );\n}\n"],"names":["CommunityFindByNameView","community","useParams","decoded","safeDecode","COMMUNITY_DEFINITION_KIND","jsx","Navigate","readRelays","useReadRelays","useCallback","event","validateCommunity","loader","communities","useTimelineLoader","callback","useTimelineCurserIntersectionCallback","IntersectionObserverProvider","jsxs","VerticalPageLayout","Heading","SimpleGrid","CommunityCard","getEventUID"],"mappings":"mJAeA,SAAwBA,GAA0B,CAC1C,KAAA,CAAE,UAAAC,GAAcC,IAGhBC,EAAUC,EAAWH,CAAS,EACpC,IAAIE,GAAA,YAAAA,EAAS,QAAS,SAAWA,EAAQ,KAAK,OAASE,EACrD,OAAQC,EAAAA,IAAAC,EAAA,CAAS,GAAI,MAAMJ,EAAQ,KAAK,UAAU,IAAIA,EAAQ,KAAK,MAAM,GAAI,QAAO,EAAC,CAAA,EAGvF,MAAMK,EAAaC,IACCC,EAAY,YAACC,GACxBC,EAAkBD,CAAK,EAC7B,EAAE,EACL,KAAM,CAAE,OAAAE,EAAQ,SAAUC,CAAgB,EAAAC,EACxC,GAAGd,CAAS,oBACZO,EACAP,EAAY,CAAE,MAAO,CAACI,CAAyB,EAAG,KAAM,CAACJ,CAAS,CAAM,EAAA,MAAA,EAEpEe,EAAWC,EAAsCJ,CAAM,EAE7D,OACGP,EAAA,IAAAY,EAAA,CAA6B,SAAAF,EAC5B,SAAAG,OAACC,EACC,CAAA,SAAA,CAAAd,EAAAA,IAACe,GAAQ,SAAgB,kBAAA,CAAA,EACzBf,EAAAA,IAACgB,GAAW,QAAQ,IAAI,QAAS,CAAE,KAAM,EAAG,GAAI,CAAE,EAC/C,0BAAa,IAAKX,GAAUL,EAAA,IAACiB,EAAuC,CAAA,UAAWZ,GAA/Ba,EAAYb,CAAK,CAAqB,EACzF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAEJ"}