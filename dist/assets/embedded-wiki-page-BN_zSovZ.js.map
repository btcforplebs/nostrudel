{"version":3,"file":"embedded-wiki-page-BN_zSovZ.js","sources":["../../src/components/embed-event/event-types/embedded-wiki-page.tsx"],"sourcesContent":["import {\n  Button,\n  ButtonGroup,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardProps,\n  Heading,\n  LinkBox,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useMemo } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { nip19 } from \"nostr-tools\";\n\nimport { NostrEvent } from \"../../../types/nostr-event\";\nimport UserLink from \"../../user/user-link\";\nimport { getPageForks, getPageSummary, getPageTitle } from \"../../../helpers/nostr/wiki\";\nimport HoverLinkOverlay from \"../../hover-link-overlay\";\nimport Timestamp from \"../../timestamp\";\nimport GitBranch01 from \"../../icons/git-branch-01\";\nimport UserName from \"../../user/user-name\";\nimport relayHintService from \"../../../services/event-relay-hint\";\n\nexport default function EmbeddedWikiPage({ page: page, ...props }: Omit<CardProps, \"children\"> & { page: NostrEvent }) {\n  const { address } = useMemo(() => getPageForks(page), [page]);\n  const showFooter = !!address;\n\n  return (\n    <Card as={LinkBox} {...props}>\n      <CardHeader p=\"2\" pb=\"0\" display=\"flex\" gap=\"2\" alignItems=\"center\">\n        <Heading size=\"md\">\n          <HoverLinkOverlay as={RouterLink} to={`/wiki/page/${relayHintService.getSharableEventAddress(page)}`}>\n            {getPageTitle(page)}\n          </HoverLinkOverlay>\n        </Heading>\n        <Text>\n          by <UserLink pubkey={page.pubkey} fontWeight=\"bold \" /> - <Timestamp timestamp={page.created_at} />\n        </Text>\n      </CardHeader>\n      <CardBody p=\"2\" overflow=\"hidden\">\n        <Text noOfLines={2}>{getPageSummary(page)}</Text>\n      </CardBody>\n      {showFooter && (\n        <CardFooter>\n          <ButtonGroup variant=\"link\" mt=\"auto\">\n            {address && (\n              <Button\n                as={RouterLink}\n                to={`/wiki/page/${nip19.naddrEncode(address)}`}\n                p=\"2\"\n                colorScheme=\"blue\"\n                leftIcon={<GitBranch01 />}\n              >\n                <UserName pubkey={address.pubkey} />\n              </Button>\n            )}\n          </ButtonGroup>\n        </CardFooter>\n      )}\n    </Card>\n  );\n}\n"],"names":["EmbeddedWikiPage","page","props","address","useMemo","getPageForks","showFooter","jsxs","Card","LinkBox","CardHeader","jsx","Heading","HoverLinkOverlay","RouterLink","relayHintService","getPageTitle","Text","UserLink","Timestamp","CardBody","getPageSummary","CardFooter","ButtonGroup","Button","nip19","GitBranch01","UserName"],"mappings":"qMAyBA,SAAwBA,EAAiB,CAAE,KAAAC,EAAY,GAAGC,GAA6D,CAC/G,KAAA,CAAE,QAAAC,CAAQ,EAAIC,UAAQ,IAAMC,EAAaJ,CAAI,EAAG,CAACA,CAAI,CAAC,EACtDK,EAAa,CAAC,CAACH,EAErB,OACGI,EAAAA,KAAAC,EAAA,CAAK,GAAIC,EAAU,GAAGP,EACrB,SAAA,CAACK,EAAAA,KAAAG,EAAA,CAAW,EAAE,IAAI,GAAG,IAAI,QAAQ,OAAO,IAAI,IAAI,WAAW,SACzD,SAAA,CAAAC,MAACC,GAAQ,KAAK,KACZ,SAACD,EAAAA,IAAAE,EAAA,CAAiB,GAAIC,EAAY,GAAI,cAAcC,EAAiB,wBAAwBd,CAAI,CAAC,GAC/F,SAAae,EAAAf,CAAI,CACpB,CAAA,EACF,SACCgB,EAAK,CAAA,SAAA,CAAA,YACAC,EAAS,CAAA,OAAQjB,EAAK,OAAQ,WAAW,QAAQ,EAAE,MAAIU,EAAAA,IAAAQ,EAAA,CAAU,UAAWlB,EAAK,UAAY,CAAA,CAAA,EACnG,CAAA,EACF,EACCU,EAAA,IAAAS,EAAA,CAAS,EAAE,IAAI,SAAS,SACvB,SAACT,EAAAA,IAAAM,EAAA,CAAK,UAAW,EAAI,SAAeI,EAAApB,CAAI,CAAE,CAAA,EAC5C,EACCK,SACEgB,EACC,CAAA,SAAAX,EAAA,IAACY,GAAY,QAAQ,OAAO,GAAG,OAC5B,SACCpB,GAAAQ,EAAA,IAACa,EAAA,CACC,GAAIV,EACJ,GAAI,cAAcW,EAAM,YAAYtB,CAAO,CAAC,GAC5C,EAAE,IACF,YAAY,OACZ,eAAWuB,EAAY,EAAA,EAEvB,SAACf,EAAA,IAAAgB,EAAA,CAAS,OAAQxB,EAAQ,OAAQ,CAAA,GAGxC,CACF,CAAA,CAEJ,CAAA,CAAA,CAEJ"}