{"version":3,"file":"stl-viewer-OXRqsbLd.js","sources":["../../node_modules/.pnpm/three-stdlib@2.33.0_three@0.160.1/node_modules/three-stdlib/controls/OrbitControls.js","../../node_modules/.pnpm/three-stdlib@2.33.0_three@0.160.1/node_modules/three-stdlib/_polyfill/LoaderUtils.js","../../node_modules/.pnpm/three-stdlib@2.33.0_three@0.160.1/node_modules/three-stdlib/loaders/STLLoader.js","../../src/components/stl-viewer.tsx"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Ray, Plane, EventDispatcher, Vector3, MOUSE, TOUCH, Quaternion, PerspectiveCamera, OrthographicCamera, Spherical, Vector2 } from \"three\";\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst TILT_LIMIT = Math.cos(70 * (Math.PI / 180));\nconst moduloWrapAround = (offset, capacity) => (offset % capacity + capacity) % capacity;\nclass OrbitControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super();\n    __publicField(this, \"object\");\n    __publicField(this, \"domElement\");\n    // Set to false to disable this control\n    __publicField(this, \"enabled\", true);\n    // \"target\" sets the location of focus, where the object orbits around\n    __publicField(this, \"target\", new Vector3());\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    __publicField(this, \"minDistance\", 0);\n    __publicField(this, \"maxDistance\", Infinity);\n    // How far you can zoom in and out ( OrthographicCamera only )\n    __publicField(this, \"minZoom\", 0);\n    __publicField(this, \"maxZoom\", Infinity);\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    __publicField(this, \"minPolarAngle\", 0);\n    // radians\n    __publicField(this, \"maxPolarAngle\", Math.PI);\n    // radians\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n    __publicField(this, \"minAzimuthAngle\", -Infinity);\n    // radians\n    __publicField(this, \"maxAzimuthAngle\", Infinity);\n    // radians\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    __publicField(this, \"enableDamping\", false);\n    __publicField(this, \"dampingFactor\", 0.05);\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    __publicField(this, \"enableZoom\", true);\n    __publicField(this, \"zoomSpeed\", 1);\n    // Set to false to disable rotating\n    __publicField(this, \"enableRotate\", true);\n    __publicField(this, \"rotateSpeed\", 1);\n    // Set to false to disable panning\n    __publicField(this, \"enablePan\", true);\n    __publicField(this, \"panSpeed\", 1);\n    __publicField(this, \"screenSpacePanning\", true);\n    // if false, pan orthogonal to world-space direction camera.up\n    __publicField(this, \"keyPanSpeed\", 7);\n    // pixels moved per arrow key push\n    __publicField(this, \"zoomToCursor\", false);\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    __publicField(this, \"autoRotate\", false);\n    __publicField(this, \"autoRotateSpeed\", 2);\n    // 30 seconds per orbit when fps is 60\n    __publicField(this, \"reverseOrbit\", false);\n    // true if you want to reverse the orbit to mouse drag from left to right = orbits left\n    __publicField(this, \"reverseHorizontalOrbit\", false);\n    // true if you want to reverse the horizontal orbit direction\n    __publicField(this, \"reverseVerticalOrbit\", false);\n    // true if you want to reverse the vertical orbit direction\n    // The four arrow keys\n    __publicField(this, \"keys\", { LEFT: \"ArrowLeft\", UP: \"ArrowUp\", RIGHT: \"ArrowRight\", BOTTOM: \"ArrowDown\" });\n    // Mouse buttons\n    __publicField(this, \"mouseButtons\", {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    });\n    // Touch fingers\n    __publicField(this, \"touches\", { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN });\n    __publicField(this, \"target0\");\n    __publicField(this, \"position0\");\n    __publicField(this, \"zoom0\");\n    // the target DOM element for key events\n    __publicField(this, \"_domElementKeyEvents\", null);\n    __publicField(this, \"getPolarAngle\");\n    __publicField(this, \"getAzimuthalAngle\");\n    __publicField(this, \"setPolarAngle\");\n    __publicField(this, \"setAzimuthalAngle\");\n    __publicField(this, \"getDistance\");\n    __publicField(this, \"listenToKeyEvents\");\n    __publicField(this, \"stopListenToKeyEvents\");\n    __publicField(this, \"saveState\");\n    __publicField(this, \"reset\");\n    __publicField(this, \"update\");\n    __publicField(this, \"connect\");\n    __publicField(this, \"dispose\");\n    this.object = object;\n    this.domElement = domElement;\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n    this.getPolarAngle = () => spherical.phi;\n    this.getAzimuthalAngle = () => spherical.theta;\n    this.setPolarAngle = (value) => {\n      let phi = moduloWrapAround(value, 2 * Math.PI);\n      let currentPhi = spherical.phi;\n      if (currentPhi < 0)\n        currentPhi += 2 * Math.PI;\n      if (phi < 0)\n        phi += 2 * Math.PI;\n      let phiDist = Math.abs(phi - currentPhi);\n      if (2 * Math.PI - phiDist < phiDist) {\n        if (phi < currentPhi) {\n          phi += 2 * Math.PI;\n        } else {\n          currentPhi += 2 * Math.PI;\n        }\n      }\n      sphericalDelta.phi = phi - currentPhi;\n      scope.update();\n    };\n    this.setAzimuthalAngle = (value) => {\n      let theta = moduloWrapAround(value, 2 * Math.PI);\n      let currentTheta = spherical.theta;\n      if (currentTheta < 0)\n        currentTheta += 2 * Math.PI;\n      if (theta < 0)\n        theta += 2 * Math.PI;\n      let thetaDist = Math.abs(theta - currentTheta);\n      if (2 * Math.PI - thetaDist < thetaDist) {\n        if (theta < currentTheta) {\n          theta += 2 * Math.PI;\n        } else {\n          currentTheta += 2 * Math.PI;\n        }\n      }\n      sphericalDelta.theta = theta - currentTheta;\n      scope.update();\n    };\n    this.getDistance = () => scope.object.position.distanceTo(scope.target);\n    this.listenToKeyEvents = (domElement2) => {\n      domElement2.addEventListener(\"keydown\", onKeyDown);\n      this._domElementKeyEvents = domElement2;\n    };\n    this.stopListenToKeyEvents = () => {\n      this._domElementKeyEvents.removeEventListener(\"keydown\", onKeyDown);\n      this._domElementKeyEvents = null;\n    };\n    this.saveState = () => {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object.zoom;\n    };\n    this.reset = () => {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    };\n    this.update = (() => {\n      const offset = new Vector3();\n      const up = new Vector3(0, 1, 0);\n      const quat = new Quaternion().setFromUnitVectors(object.up, up);\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new Vector3();\n      const lastQuaternion = new Quaternion();\n      const twoPI = 2 * Math.PI;\n      return function update() {\n        const position = scope.object.position;\n        quat.setFromUnitVectors(object.up, up);\n        quatInverse.copy(quat).invert();\n        offset.copy(position).sub(scope.target);\n        offset.applyQuaternion(quat);\n        spherical.setFromVector3(offset);\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        }\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI)\n            min += twoPI;\n          else if (min > Math.PI)\n            min -= twoPI;\n          if (max < -Math.PI)\n            max += twoPI;\n          else if (max > Math.PI)\n            max -= twoPI;\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        }\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n        if (scope.zoomToCursor && performCursorZoom || scope.object.isOrthographicCamera) {\n          spherical.radius = clampDistance(spherical.radius);\n        } else {\n          spherical.radius = clampDistance(spherical.radius * scale);\n        }\n        offset.setFromSpherical(spherical);\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        if (!scope.object.matrixAutoUpdate)\n          scope.object.updateMatrix();\n        scope.object.lookAt(scope.target);\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n        let zoomChanged = false;\n        if (scope.zoomToCursor && performCursorZoom) {\n          let newRadius = null;\n          if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n            const prevRadius = offset.length();\n            newRadius = clampDistance(prevRadius * scale);\n            const radiusDelta = prevRadius - newRadius;\n            scope.object.position.addScaledVector(dollyDirection, radiusDelta);\n            scope.object.updateMatrixWorld();\n          } else if (scope.object.isOrthographicCamera) {\n            const mouseBefore = new Vector3(mouse.x, mouse.y, 0);\n            mouseBefore.unproject(scope.object);\n            scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / scale));\n            scope.object.updateProjectionMatrix();\n            zoomChanged = true;\n            const mouseAfter = new Vector3(mouse.x, mouse.y, 0);\n            mouseAfter.unproject(scope.object);\n            scope.object.position.sub(mouseAfter).add(mouseBefore);\n            scope.object.updateMatrixWorld();\n            newRadius = offset.length();\n          } else {\n            console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.\");\n            scope.zoomToCursor = false;\n          }\n          if (newRadius !== null) {\n            if (scope.screenSpacePanning) {\n              scope.target.set(0, 0, -1).transformDirection(scope.object.matrix).multiplyScalar(newRadius).add(scope.object.position);\n            } else {\n              _ray.origin.copy(scope.object.position);\n              _ray.direction.set(0, 0, -1).transformDirection(scope.object.matrix);\n              if (Math.abs(scope.object.up.dot(_ray.direction)) < TILT_LIMIT) {\n                object.lookAt(scope.target);\n              } else {\n                _plane.setFromNormalAndCoplanarPoint(scope.object.up, scope.target);\n                _ray.intersectPlane(_plane, scope.target);\n              }\n            }\n          }\n        } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          zoomChanged = scale !== 1;\n          if (zoomChanged) {\n            scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / scale));\n            scope.object.updateProjectionMatrix();\n          }\n        }\n        scale = 1;\n        performCursorZoom = false;\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n        return false;\n      };\n    })();\n    this.connect = (domElement2) => {\n      scope.domElement = domElement2;\n      scope.domElement.style.touchAction = \"none\";\n      scope.domElement.addEventListener(\"contextmenu\", onContextMenu);\n      scope.domElement.addEventListener(\"pointerdown\", onPointerDown);\n      scope.domElement.addEventListener(\"pointercancel\", onPointerUp);\n      scope.domElement.addEventListener(\"wheel\", onMouseWheel);\n    };\n    this.dispose = () => {\n      var _a, _b, _c, _d, _e, _f;\n      if (scope.domElement) {\n        scope.domElement.style.touchAction = \"auto\";\n      }\n      (_a = scope.domElement) == null ? void 0 : _a.removeEventListener(\"contextmenu\", onContextMenu);\n      (_b = scope.domElement) == null ? void 0 : _b.removeEventListener(\"pointerdown\", onPointerDown);\n      (_c = scope.domElement) == null ? void 0 : _c.removeEventListener(\"pointercancel\", onPointerUp);\n      (_d = scope.domElement) == null ? void 0 : _d.removeEventListener(\"wheel\", onMouseWheel);\n      (_e = scope.domElement) == null ? void 0 : _e.ownerDocument.removeEventListener(\"pointermove\", onPointerMove);\n      (_f = scope.domElement) == null ? void 0 : _f.ownerDocument.removeEventListener(\"pointerup\", onPointerUp);\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener(\"keydown\", onKeyDown);\n      }\n    };\n    const scope = this;\n    const changeEvent = { type: \"change\" };\n    const startEvent = { type: \"start\" };\n    const endEvent = { type: \"end\" };\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 1e-6;\n    const spherical = new Spherical();\n    const sphericalDelta = new Spherical();\n    let scale = 1;\n    const panOffset = new Vector3();\n    const rotateStart = new Vector2();\n    const rotateEnd = new Vector2();\n    const rotateDelta = new Vector2();\n    const panStart = new Vector2();\n    const panEnd = new Vector2();\n    const panDelta = new Vector2();\n    const dollyStart = new Vector2();\n    const dollyEnd = new Vector2();\n    const dollyDelta = new Vector2();\n    const dollyDirection = new Vector3();\n    const mouse = new Vector2();\n    let performCursorZoom = false;\n    const pointers = [];\n    const pointerPositions = {};\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n    function rotateLeft(angle) {\n      if (scope.reverseOrbit || scope.reverseHorizontalOrbit) {\n        sphericalDelta.theta += angle;\n      } else {\n        sphericalDelta.theta -= angle;\n      }\n    }\n    function rotateUp(angle) {\n      if (scope.reverseOrbit || scope.reverseVerticalOrbit) {\n        sphericalDelta.phi += angle;\n      } else {\n        sphericalDelta.phi -= angle;\n      }\n    }\n    const panLeft = (() => {\n      const v = new Vector3();\n      return function panLeft2(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0);\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    })();\n    const panUp = (() => {\n      const v = new Vector3();\n      return function panUp2(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    })();\n    const pan = (() => {\n      const offset = new Vector3();\n      return function pan2(deltaX, deltaY) {\n        const element = scope.domElement;\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length();\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180);\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          panLeft(\n            deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth,\n            scope.object.matrix\n          );\n          panUp(\n            deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight,\n            scope.object.matrix\n          );\n        } else {\n          console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\");\n          scope.enablePan = false;\n        }\n      };\n    })();\n    function dollyOut(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera || scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scale /= dollyScale;\n      } else {\n        console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\");\n        scope.enableZoom = false;\n      }\n    }\n    function dollyIn(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera || scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scale *= dollyScale;\n      } else {\n        console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\");\n        scope.enableZoom = false;\n      }\n    }\n    function updateMouseParameters(event) {\n      if (!scope.zoomToCursor || !scope.domElement) {\n        return;\n      }\n      performCursorZoom = true;\n      const rect = scope.domElement.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const y = event.clientY - rect.top;\n      const w = rect.width;\n      const h = rect.height;\n      mouse.x = x / w * 2 - 1;\n      mouse.y = -(y / h) * 2 + 1;\n      dollyDirection.set(mouse.x, mouse.y, 1).unproject(scope.object).sub(scope.object.position).normalize();\n    }\n    function clampDistance(dist) {\n      return Math.max(scope.minDistance, Math.min(scope.maxDistance, dist));\n    }\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownDolly(event) {\n      updateMouseParameters(event);\n      dollyStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight);\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n    function handleMouseWheel(event) {\n      updateMouseParameters(event);\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n      scope.update();\n    }\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n      if (needsUpdate) {\n        event.preventDefault();\n        scope.update();\n      }\n    }\n    function handleTouchStartRotate() {\n      if (pointers.length == 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n    function handleTouchStartPan() {\n      if (pointers.length == 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX;\n      const dy = pointers[0].pageY - pointers[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom)\n        handleTouchStartDolly();\n      if (scope.enablePan)\n        handleTouchStartPan();\n    }\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom)\n        handleTouchStartDolly();\n      if (scope.enableRotate)\n        handleTouchStartRotate();\n    }\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight);\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n      rotateStart.copy(rotateEnd);\n    }\n    function handleTouchMovePan(event) {\n      if (pointers.length == 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event);\n      const dx = event.pageX - position.x;\n      const dy = event.pageY - position.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom)\n        handleTouchMoveDolly(event);\n      if (scope.enablePan)\n        handleTouchMovePan(event);\n    }\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom)\n        handleTouchMoveDolly(event);\n      if (scope.enableRotate)\n        handleTouchMoveRotate(event);\n    }\n    function onPointerDown(event) {\n      var _a, _b;\n      if (scope.enabled === false)\n        return;\n      if (pointers.length === 0) {\n        (_a = scope.domElement) == null ? void 0 : _a.ownerDocument.addEventListener(\"pointermove\", onPointerMove);\n        (_b = scope.domElement) == null ? void 0 : _b.ownerDocument.addEventListener(\"pointerup\", onPointerUp);\n      }\n      addPointer(event);\n      if (event.pointerType === \"touch\") {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n    function onPointerMove(event) {\n      if (scope.enabled === false)\n        return;\n      if (event.pointerType === \"touch\") {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n    function onPointerUp(event) {\n      var _a, _b, _c;\n      removePointer(event);\n      if (pointers.length === 0) {\n        (_a = scope.domElement) == null ? void 0 : _a.releasePointerCapture(event.pointerId);\n        (_b = scope.domElement) == null ? void 0 : _b.ownerDocument.removeEventListener(\"pointermove\", onPointerMove);\n        (_c = scope.domElement) == null ? void 0 : _c.ownerDocument.removeEventListener(\"pointerup\", onPointerUp);\n      }\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n    function onMouseDown(event) {\n      let mouseAction;\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n        default:\n          mouseAction = -1;\n      }\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false)\n            return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false)\n              return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false)\n              return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n          break;\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false)\n              return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false)\n              return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n    function onMouseMove(event) {\n      if (scope.enabled === false)\n        return;\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false)\n            return;\n          handleMouseMoveRotate(event);\n          break;\n        case STATE.DOLLY:\n          if (scope.enableZoom === false)\n            return;\n          handleMouseMoveDolly(event);\n          break;\n        case STATE.PAN:\n          if (scope.enablePan === false)\n            return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) {\n        return;\n      }\n      event.preventDefault();\n      scope.dispatchEvent(startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(endEvent);\n    }\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false)\n        return;\n      handleKeyDown(event);\n    }\n    function onTouchStart(event) {\n      trackPointer(event);\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false)\n                return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n            case TOUCH.PAN:\n              if (scope.enablePan === false)\n                return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false)\n                return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false)\n                return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n    function onTouchMove(event) {\n      trackPointer(event);\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false)\n            return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false)\n            return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false)\n            return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false)\n            return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n        default:\n          state = STATE.NONE;\n      }\n    }\n    function onContextMenu(event) {\n      if (scope.enabled === false)\n        return;\n      event.preventDefault();\n    }\n    function addPointer(event) {\n      pointers.push(event);\n    }\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId];\n      if (position === void 0) {\n        position = new Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n      position.set(event.pageX, event.pageY);\n    }\n    function getSecondPointerPosition(event) {\n      const pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    }\n    if (domElement !== void 0)\n      this.connect(domElement);\n    this.update();\n  }\n}\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n    this.screenSpacePanning = false;\n    this.mouseButtons.LEFT = MOUSE.PAN;\n    this.mouseButtons.RIGHT = MOUSE.ROTATE;\n    this.touches.ONE = TOUCH.PAN;\n    this.touches.TWO = TOUCH.DOLLY_ROTATE;\n  }\n}\nexport {\n  MapControls,\n  OrbitControls\n};\n//# sourceMappingURL=OrbitControls.js.map\n","function decodeText(array) {\n  if (typeof TextDecoder !== \"undefined\") {\n    return new TextDecoder().decode(array);\n  }\n  let s = \"\";\n  for (let i = 0, il = array.length; i < il; i++) {\n    s += String.fromCharCode(array[i]);\n  }\n  try {\n    return decodeURIComponent(escape(s));\n  } catch (e) {\n    return s;\n  }\n}\nexport {\n  decodeText\n};\n//# sourceMappingURL=LoaderUtils.js.map\n","import { Loader, FileLoader, BufferGeometry, BufferAttribute, Vector3, Float32BufferAttribute } from \"three\";\nimport { decodeText } from \"../_polyfill/LoaderUtils.js\";\nclass STLLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType(\"arraybuffer\");\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(\n      url,\n      function(text) {\n        try {\n          onLoad(scope.parse(text));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          scope.manager.itemError(url);\n        }\n      },\n      onProgress,\n      onError\n    );\n  }\n  parse(data) {\n    function isBinary(data2) {\n      const reader = new DataView(data2);\n      const face_size = 32 / 8 * 3 + 32 / 8 * 3 * 3 + 16 / 8;\n      const n_faces = reader.getUint32(80, true);\n      const expect = 80 + 32 / 8 + n_faces * face_size;\n      if (expect === reader.byteLength) {\n        return true;\n      }\n      const solid = [115, 111, 108, 105, 100];\n      for (let off = 0; off < 5; off++) {\n        if (matchDataViewAt(solid, reader, off))\n          return false;\n      }\n      return true;\n    }\n    function matchDataViewAt(query, reader, offset) {\n      for (let i = 0, il = query.length; i < il; i++) {\n        if (query[i] !== reader.getUint8(offset + i, false))\n          return false;\n      }\n      return true;\n    }\n    function parseBinary(data2) {\n      const reader = new DataView(data2);\n      const faces = reader.getUint32(80, true);\n      let r, g, b, hasColors = false, colors;\n      let defaultR, defaultG, defaultB, alpha;\n      for (let index = 0; index < 80 - 10; index++) {\n        if (reader.getUint32(index, false) == 1129270351 && reader.getUint8(index + 4) == 82 && reader.getUint8(index + 5) == 61) {\n          hasColors = true;\n          colors = new Float32Array(faces * 3 * 3);\n          defaultR = reader.getUint8(index + 6) / 255;\n          defaultG = reader.getUint8(index + 7) / 255;\n          defaultB = reader.getUint8(index + 8) / 255;\n          alpha = reader.getUint8(index + 9) / 255;\n        }\n      }\n      const dataOffset = 84;\n      const faceLength = 12 * 4 + 2;\n      const geometry = new BufferGeometry();\n      const vertices = new Float32Array(faces * 3 * 3);\n      const normals = new Float32Array(faces * 3 * 3);\n      for (let face = 0; face < faces; face++) {\n        const start = dataOffset + face * faceLength;\n        const normalX = reader.getFloat32(start, true);\n        const normalY = reader.getFloat32(start + 4, true);\n        const normalZ = reader.getFloat32(start + 8, true);\n        if (hasColors) {\n          const packedColor = reader.getUint16(start + 48, true);\n          if ((packedColor & 32768) === 0) {\n            r = (packedColor & 31) / 31;\n            g = (packedColor >> 5 & 31) / 31;\n            b = (packedColor >> 10 & 31) / 31;\n          } else {\n            r = defaultR;\n            g = defaultG;\n            b = defaultB;\n          }\n        }\n        for (let i = 1; i <= 3; i++) {\n          const vertexstart = start + i * 12;\n          const componentIdx = face * 3 * 3 + (i - 1) * 3;\n          vertices[componentIdx] = reader.getFloat32(vertexstart, true);\n          vertices[componentIdx + 1] = reader.getFloat32(vertexstart + 4, true);\n          vertices[componentIdx + 2] = reader.getFloat32(vertexstart + 8, true);\n          normals[componentIdx] = normalX;\n          normals[componentIdx + 1] = normalY;\n          normals[componentIdx + 2] = normalZ;\n          if (hasColors) {\n            colors[componentIdx] = r;\n            colors[componentIdx + 1] = g;\n            colors[componentIdx + 2] = b;\n          }\n        }\n      }\n      geometry.setAttribute(\"position\", new BufferAttribute(vertices, 3));\n      geometry.setAttribute(\"normal\", new BufferAttribute(normals, 3));\n      if (hasColors) {\n        geometry.setAttribute(\"color\", new BufferAttribute(colors, 3));\n        geometry.hasColors = true;\n        geometry.alpha = alpha;\n      }\n      return geometry;\n    }\n    function parseASCII(data2) {\n      const geometry = new BufferGeometry();\n      const patternSolid = /solid([\\s\\S]*?)endsolid/g;\n      const patternFace = /facet([\\s\\S]*?)endfacet/g;\n      let faceCounter = 0;\n      const patternFloat = /[\\s]+([+-]?(?:\\d*)(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)/.source;\n      const patternVertex = new RegExp(\"vertex\" + patternFloat + patternFloat + patternFloat, \"g\");\n      const patternNormal = new RegExp(\"normal\" + patternFloat + patternFloat + patternFloat, \"g\");\n      const vertices = [];\n      const normals = [];\n      const normal = new Vector3();\n      let result;\n      let groupCount = 0;\n      let startVertex = 0;\n      let endVertex = 0;\n      while ((result = patternSolid.exec(data2)) !== null) {\n        startVertex = endVertex;\n        const solid = result[0];\n        while ((result = patternFace.exec(solid)) !== null) {\n          let vertexCountPerFace = 0;\n          let normalCountPerFace = 0;\n          const text = result[0];\n          while ((result = patternNormal.exec(text)) !== null) {\n            normal.x = parseFloat(result[1]);\n            normal.y = parseFloat(result[2]);\n            normal.z = parseFloat(result[3]);\n            normalCountPerFace++;\n          }\n          while ((result = patternVertex.exec(text)) !== null) {\n            vertices.push(parseFloat(result[1]), parseFloat(result[2]), parseFloat(result[3]));\n            normals.push(normal.x, normal.y, normal.z);\n            vertexCountPerFace++;\n            endVertex++;\n          }\n          if (normalCountPerFace !== 1) {\n            console.error(\"THREE.STLLoader: Something isn't right with the normal of face number \" + faceCounter);\n          }\n          if (vertexCountPerFace !== 3) {\n            console.error(\"THREE.STLLoader: Something isn't right with the vertices of face number \" + faceCounter);\n          }\n          faceCounter++;\n        }\n        const start = startVertex;\n        const count = endVertex - startVertex;\n        geometry.addGroup(start, count, groupCount);\n        groupCount++;\n      }\n      geometry.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n      geometry.setAttribute(\"normal\", new Float32BufferAttribute(normals, 3));\n      return geometry;\n    }\n    function ensureString(buffer) {\n      if (typeof buffer !== \"string\") {\n        return decodeText(new Uint8Array(buffer));\n      }\n      return buffer;\n    }\n    function ensureBinary(buffer) {\n      if (typeof buffer === \"string\") {\n        const array_buffer = new Uint8Array(buffer.length);\n        for (let i = 0; i < buffer.length; i++) {\n          array_buffer[i] = buffer.charCodeAt(i) & 255;\n        }\n        return array_buffer.buffer || array_buffer;\n      } else {\n        return buffer;\n      }\n    }\n    const binData = ensureBinary(data);\n    return isBinary(binData) ? parseBinary(binData) : parseASCII(ensureString(data));\n  }\n}\nexport {\n  STLLoader\n};\n//# sourceMappingURL=STLLoader.js.map\n","import { useEffect, useRef, useState } from \"react\";\nimport { Box, BoxProps } from \"@chakra-ui/react\";\nimport {\n  AmbientLight,\n  BufferGeometry,\n  Color,\n  DirectionalLight,\n  Fog,\n  GridHelper,\n  HemisphereLight,\n  Mesh,\n  MeshPhongMaterial,\n  NormalBufferAttributes,\n  PerspectiveCamera,\n  PlaneGeometry,\n  Scene,\n  Vector3,\n  WebGLRenderer,\n} from \"three\";\nimport { OrbitControls, STLLoader } from \"three-stdlib\";\nimport { useAsync, useMount } from \"react-use\";\n\nfunction createSTLWorld(canvas: HTMLCanvasElement) {\n  const renderer = new WebGLRenderer({\n    canvas,\n    antialias: true,\n    preserveDrawingBuffer: true,\n    alpha: true,\n  });\n  renderer.shadowMap.enabled = true;\n\n  const scene = new Scene();\n  scene.background = new Color(0xa0a0a0);\n  scene.fog = new Fog(0xa0a0a0, 4, 20);\n\n  const camera = new PerspectiveCamera(75, canvas.width / canvas.height, 0.1, 1000);\n  camera.position.set(-2, 2, -2.5);\n  scene.add(camera);\n\n  const hemiLight = new HemisphereLight(0xffffff, 0x444444, 3);\n  hemiLight.position.set(0, 20, 0);\n  scene.add(hemiLight);\n\n  const ambientLight = new AmbientLight(0xffffff, 0.5);\n  scene.add(ambientLight);\n\n  const dirLight = new DirectionalLight(0xffffff);\n  dirLight.position.set(-5, 15, 10);\n  dirLight.castShadow = true;\n  scene.add(dirLight);\n\n  const floor = new Mesh(new PlaneGeometry(40, 40), new MeshPhongMaterial({ color: 0xbbbbbb, depthWrite: false }));\n  floor.rotation.set(-Math.PI / 2, 0, 0);\n  floor.receiveShadow = true;\n  scene.add(floor);\n\n  const grid = new GridHelper(40, 40, 0x000000, 0x000000);\n  grid.material.transparent = true;\n  grid.material.opacity = 0.2;\n  scene.add(grid);\n\n  const object = new Mesh(\n    new BufferGeometry(),\n    new MeshPhongMaterial({ color: 0x1a5fb4, shininess: 60, flatShading: true }),\n  );\n  object.castShadow = true;\n  object.receiveShadow = true;\n  scene.add(object);\n\n  const controls = new OrbitControls(camera, renderer.domElement);\n  controls.update();\n\n  controls.enableDamping = true;\n  controls.enablePan = true;\n  controls.enableRotate = true;\n  controls.enableZoom = true;\n\n  function setSTLGeometry(geometry: BufferGeometry<NormalBufferAttributes>) {\n    if (!geometry.boundingBox) geometry.computeBoundingBox();\n    if (!geometry.boundingSphere) geometry.computeBoundingSphere();\n\n    const objectScale = 2 / geometry.boundingSphere!.radius;\n    const bb = geometry.boundingBox!;\n    const center = bb.getCenter(new Vector3()).multiplyScalar(objectScale);\n\n    // update object\n    object.geometry = geometry;\n    object.scale.set(objectScale, objectScale, objectScale);\n    object.rotation.set(Math.PI * -0.5, 0, 0);\n    object.position.set(-center.x, -center.z, center.y);\n\n    // update floor\n    grid.position.set(0, ((bb.min.z - bb.max.z) / 2) * objectScale, 0);\n    floor.position.set(0, ((bb.min.z - bb.max.z) / 2) * objectScale, 0);\n\n    console.log(object);\n  }\n\n  function resize() {\n    camera.aspect = canvas.width / canvas.height;\n    camera.updateProjectionMatrix();\n  }\n  function animate() {\n    controls.update();\n    renderer.render(scene, camera);\n  }\n\n  return {\n    renderer,\n    scene,\n    camera,\n    object,\n    grid,\n    floor,\n    dirLight,\n    ambientLight,\n    hemiLight,\n    controls,\n    animate,\n    resize,\n    setSTLGeometry,\n  };\n}\n\nexport default function STLViewer({\n  url,\n  width,\n  height,\n  ...props\n}: Omit<BoxProps, \"children\" | \"width\" | \"height\"> & { url: string; width: number; height: number }) {\n  const ref = useRef<HTMLCanvasElement | null>(null);\n\n  const [world, setWorld] = useState<ReturnType<typeof createSTLWorld>>();\n  const { value: geometry } = useAsync(async () => {\n    const loader = new STLLoader();\n    return await loader.loadAsync(url);\n  }, [url]);\n\n  useMount(() => {\n    if (!ref.current) return;\n    ref.current.width = width;\n    ref.current.height = height;\n    setWorld(createSTLWorld(ref.current));\n  });\n\n  useEffect(() => {\n    if (!world) return;\n    let running = true;\n    const animate = () => {\n      if (running) {\n        world.animate();\n        requestAnimationFrame(animate);\n      }\n    };\n    animate();\n    return () => {\n      running = false;\n    };\n  }, [world]);\n\n  useEffect(() => {\n    if (geometry && world) world.setSTLGeometry(geometry);\n  }, [world, geometry]);\n\n  return <Box as=\"canvas\" ref={ref} {...props} />;\n}\n"],"names":["__defProp","__defNormalProp","obj","key","value","__publicField","_ray","Ray","_plane","Plane","TILT_LIMIT","moduloWrapAround","offset","capacity","OrbitControls","EventDispatcher","object","domElement","Vector3","MOUSE","TOUCH","spherical","phi","currentPhi","phiDist","sphericalDelta","scope","theta","currentTheta","thetaDist","domElement2","onKeyDown","changeEvent","state","STATE","up","quat","Quaternion","quatInverse","lastPosition","lastQuaternion","twoPI","position","rotateLeft","getAutoRotationAngle","min","max","panOffset","performCursorZoom","clampDistance","scale","zoomChanged","newRadius","PerspectiveCamera","prevRadius","radiusDelta","dollyDirection","mouseBefore","mouse","mouseAfter","OrthographicCamera","EPS","onContextMenu","onPointerDown","onPointerUp","onMouseWheel","_a","_b","_c","_d","_e","_f","onPointerMove","startEvent","endEvent","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","angle","rotateUp","panLeft","v","distance","objectMatrix","panUp","pan","deltaX","deltaY","element","targetDistance","dollyOut","dollyScale","dollyIn","updateMouseParameters","event","rect","x","y","w","h","dist","handleMouseDownRotate","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","needsUpdate","handleTouchStartRotate","handleTouchStartPan","handleTouchStartDolly","dx","dy","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","addPointer","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","mouseAction","trackPointer","i","pointer","decodeText","array","s","il","STLLoader","Loader","manager","url","onLoad","onProgress","onError","loader","FileLoader","text","e","data","isBinary","data2","reader","face_size","n_faces","solid","off","matchDataViewAt","query","parseBinary","faces","r","g","b","hasColors","colors","defaultR","defaultG","defaultB","alpha","index","dataOffset","faceLength","geometry","BufferGeometry","vertices","normals","face","start","normalX","normalY","normalZ","packedColor","vertexstart","componentIdx","BufferAttribute","parseASCII","patternSolid","patternFace","faceCounter","patternFloat","patternVertex","patternNormal","normal","result","groupCount","startVertex","endVertex","vertexCountPerFace","normalCountPerFace","count","Float32BufferAttribute","ensureString","buffer","ensureBinary","array_buffer","binData","createSTLWorld","canvas","renderer","WebGLRenderer","scene","Scene","Color","Fog","camera","hemiLight","HemisphereLight","ambientLight","AmbientLight","dirLight","DirectionalLight","floor","Mesh","PlaneGeometry","MeshPhongMaterial","grid","GridHelper","controls","setSTLGeometry","objectScale","bb","center","resize","animate","STLViewer","width","height","props","ref","useRef","world","setWorld","useState","useAsync","useMount","useEffect","running","Box"],"mappings":"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","x_google_ignoreList":[0,1,2]}