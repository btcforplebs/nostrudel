{"version":3,"file":"embedded-zap-receipt-nWw12zGF.js","sources":["../../src/components/embed-event/event-types/embedded-zap-receipt.tsx"],"sourcesContent":["import { useMemo } from \"react\";\nimport { Box, ButtonGroup, Card, CardBody, CardHeader, CardProps, LinkBox, Text } from \"@chakra-ui/react\";\nimport { getPointerFromTag } from \"applesauce-core/helpers\";\n\nimport { NostrEvent } from \"../../../types/nostr-event\";\nimport UserLink from \"../../user/user-link\";\nimport Timestamp from \"../../timestamp\";\nimport { getParsedZap, getZapRecipient } from \"../../../helpers/nostr/zaps\";\nimport TextNoteContents from \"../../note/timeline-note/text-note-contents\";\nimport UserAvatar from \"../../user/user-avatar\";\nimport { LightningIcon } from \"../../icons\";\nimport { readablizeSats } from \"../../../helpers/bolt11\";\nimport ZapReceiptMenu from \"../../zap/zap-receipt-menu\";\nimport { EmbedEventPointer } from \"../index\";\n\nexport default function EmbeddedZapRecept({ zap, ...props }: Omit<CardProps, \"children\"> & { zap: NostrEvent }) {\n  const parsed = useMemo(() => getParsedZap(zap), [zap]);\n  if (!parsed) return null;\n  const recipient = getZapRecipient(parsed.request);\n  if (!recipient) return null;\n\n  const eTag = parsed.request.tags.find((t) => t[0] === \"e\" && t[1]);\n  const pointer = eTag && getPointerFromTag(eTag);\n\n  return (\n    <Card as={LinkBox} {...props}>\n      <CardHeader display=\"flex\" p=\"2\" gap=\"2\" alignItems=\"center\">\n        <UserAvatar pubkey={parsed.request.pubkey} size=\"sm\" />\n        <UserLink pubkey={parsed.request.pubkey} fontWeight=\"bold\" />\n        <Text>Zapped</Text>\n        <UserLink pubkey={recipient} fontWeight=\"bold\" />\n\n        {parsed.payment.amount && (\n          <>\n            <LightningIcon color=\"yellow.500\" boxSize={5} />\n            <Text>{readablizeSats(parsed.payment.amount / 1000)}</Text>\n          </>\n        )}\n\n        <Timestamp timestamp={parsed.event.created_at} ml=\"auto\" />\n        <ButtonGroup size=\"sm\" variant=\"ghost\">\n          <ZapReceiptMenu zap={zap} aria-label=\"More Options\" />\n        </ButtonGroup>\n      </CardHeader>\n      <CardBody px=\"2\" pb=\"2\" pt=\"0\" display=\"flex\" flexDirection=\"column\" gap=\"2\">\n        <Box>\n          <TextNoteContents event={parsed.request} />\n        </Box>\n\n        {pointer && <EmbedEventPointer pointer={pointer} />}\n      </CardBody>\n    </Card>\n  );\n}\n"],"names":["EmbeddedZapRecept","zap","props","parsed","useMemo","getParsedZap","recipient","getZapRecipient","eTag","t","pointer","getPointerFromTag","jsxs","Card","LinkBox","CardHeader","jsx","UserAvatar","UserLink","Text","Fragment","LightningIcon","readablizeSats","Timestamp","ButtonGroup","ZapReceiptMenu","CardBody","Box","TextNoteContents","EmbedEventPointer"],"mappings":"uLAeA,SAAwBA,EAAkB,CAAE,IAAAC,EAAK,GAAGC,GAA4D,CACxG,MAAAC,EAASC,EAAAA,QAAQ,IAAMC,EAAaJ,CAAG,EAAG,CAACA,CAAG,CAAC,EACjD,GAAA,CAACE,EAAe,OAAA,KACd,MAAAG,EAAYC,EAAgBJ,EAAO,OAAO,EAC5C,GAAA,CAACG,EAAkB,OAAA,KAEvB,MAAME,EAAOL,EAAO,QAAQ,KAAK,KAAMM,GAAMA,EAAE,CAAC,IAAM,KAAOA,EAAE,CAAC,CAAC,EAC3DC,EAAUF,GAAQG,EAAkBH,CAAI,EAE9C,OACGI,EAAAA,KAAAC,EAAA,CAAK,GAAIC,EAAU,GAAGZ,EACrB,SAAA,CAACU,EAAAA,KAAAG,EAAA,CAAW,QAAQ,OAAO,EAAE,IAAI,IAAI,IAAI,WAAW,SAClD,SAAA,CAAAC,MAACC,GAAW,OAAQd,EAAO,QAAQ,OAAQ,KAAK,KAAK,QACpDe,EAAS,CAAA,OAAQf,EAAO,QAAQ,OAAQ,WAAW,OAAO,EAC3Da,EAAAA,IAACG,GAAK,SAAM,QAAA,CAAA,EACXH,EAAA,IAAAE,EAAA,CAAS,OAAQZ,EAAW,WAAW,OAAO,EAE9CH,EAAO,QAAQ,QAEZS,EAAA,KAAAQ,EAAA,SAAA,CAAA,SAAA,CAAAJ,EAAA,IAACK,EAAc,CAAA,MAAM,aAAa,QAAS,EAAG,QAC7CF,EAAM,CAAA,SAAAG,EAAenB,EAAO,QAAQ,OAAS,GAAI,EAAE,CAAA,EACtD,QAGDoB,EAAU,CAAA,UAAWpB,EAAO,MAAM,WAAY,GAAG,OAAO,EACzDa,EAAA,IAACQ,EAAY,CAAA,KAAK,KAAK,QAAQ,QAC7B,SAAAR,EAAAA,IAACS,EAAe,CAAA,IAAAxB,EAAU,aAAW,cAAA,CAAe,CACtD,CAAA,CAAA,EACF,EACCW,EAAA,KAAAc,EAAA,CAAS,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,QAAQ,OAAO,cAAc,SAAS,IAAI,IACvE,SAAA,CAAAV,EAAAA,IAACW,GACC,SAACX,MAAAY,EAAA,CAAiB,MAAOzB,EAAO,OAAS,CAAA,EAC3C,EAECO,GAAYM,EAAA,IAAAa,EAAA,CAAkB,QAAAnB,CAAkB,CAAA,CAAA,EACnD,CACF,CAAA,CAAA,CAEJ"}