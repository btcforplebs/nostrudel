{"version":3,"file":"edit-UFkPthm5.js","sources":["../../src/views/wiki/edit.tsx"],"sourcesContent":["import {\n  Button,\n  Flex,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  Spacer,\n  Spinner,\n  Textarea,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { NostrEvent } from \"nostr-tools\";\n\nimport { WIKI_RELAYS } from \"../../const\";\nimport useCacheForm from \"../../hooks/use-cache-form\";\nimport useReplaceableEvent from \"../../hooks/use-replaceable-event\";\nimport useCurrentAccount from \"../../hooks/use-current-account\";\nimport { WIKI_PAGE_KIND, getPageSummary, getPageTitle, getPageTopic } from \"../../helpers/nostr/wiki\";\nimport { usePublishEvent } from \"../../providers/global/publish-provider\";\nimport VerticalPageLayout from \"../../components/vertical-page-layout\";\nimport MarkdownEditor from \"./components/markdown-editor\";\nimport { ErrorBoundary } from \"../../components/error-boundary\";\nimport { cloneEvent, replaceOrAddSimpleTag } from \"../../helpers/nostr/event\";\nimport FormatButton from \"./components/format-toolbar\";\nimport dictionaryService from \"../../services/dictionary\";\nimport relayHintService from \"../../services/event-relay-hint\";\n\nfunction EditWikiPagePage({ page }: { page: NostrEvent }) {\n  const toast = useToast();\n  const publish = usePublishEvent();\n  const navigate = useNavigate();\n\n  const topic = getPageTopic(page);\n\n  const { register, setValue, getValues, handleSubmit, watch, formState, reset } = useForm({\n    defaultValues: { content: page.content, title: getPageTitle(page) ?? topic, summary: getPageSummary(page, false) },\n    mode: \"all\",\n  });\n\n  const clearFormCache = useCacheForm(\n    \"wiki-\" + topic,\n    // @ts-expect-error\n    getValues,\n    reset,\n    formState,\n  );\n\n  watch(\"content\");\n  register(\"content\", {\n    minLength: 10,\n    required: true,\n  });\n\n  const submit = handleSubmit(async (values) => {\n    try {\n      const draft = cloneEvent(WIKI_PAGE_KIND, page);\n      draft.content = values.content;\n      replaceOrAddSimpleTag(draft, \"title\", values.title);\n      replaceOrAddSimpleTag(draft, \"summary\", values.summary);\n\n      const pub = await publish(\"Publish Page\", draft, WIKI_RELAYS, false);\n      dictionaryService.handleEvent(pub.event);\n      clearFormCache();\n      navigate(`/wiki/page/${relayHintService.getSharableEventAddress(pub.event)}`, { replace: true });\n    } catch (error) {\n      if (error instanceof Error) toast({ description: error.message, status: \"error\" });\n    }\n  });\n\n  return (\n    <VerticalPageLayout as=\"form\" h=\"full\" onSubmit={submit}>\n      <Heading>Edit Page</Heading>\n      <Flex gap=\"2\" wrap={{ base: \"wrap\", md: \"nowrap\" }}>\n        <FormControl w={{ base: \"full\", md: \"sm\" }} isRequired flexShrink={0}>\n          <FormLabel>Topic</FormLabel>\n          <Input readOnly value={topic} />\n        </FormControl>\n        <FormControl isRequired>\n          <FormLabel>Title</FormLabel>\n          <Input {...register(\"title\", { required: true })} autoComplete=\"off\" />\n        </FormControl>\n      </Flex>\n      <FormControl>\n        <FormLabel>Summary</FormLabel>\n        <Textarea {...register(\"summary\", { required: true })} isRequired />\n      </FormControl>\n      <Flex gap=\"2\">\n        <FormatButton\n          getValue={() => getValues().content}\n          setValue={(content) => setValue(\"content\", content, { shouldDirty: true })}\n        />\n        <Spacer />\n        <Button onClick={() => navigate(-1)}>Cancel</Button>\n        <Button colorScheme=\"primary\" type=\"submit\" isLoading={formState.isSubmitting}>\n          Publish\n        </Button>\n      </Flex>\n      <MarkdownEditor value={getValues().content} onChange={(v) => setValue(\"content\", v)} />\n    </VerticalPageLayout>\n  );\n}\n\nexport default function EditWikiPageView() {\n  const account = useCurrentAccount();\n  if (!account) return <Navigate to=\"/\" />;\n\n  const topic = useParams().topic;\n  if (!topic) return <Navigate to=\"/wiki\" />;\n\n  const page = useReplaceableEvent({ kind: WIKI_PAGE_KIND, pubkey: account.pubkey, identifier: topic });\n\n  if (!page) return <Spinner />;\n\n  return (\n    <ErrorBoundary>\n      <EditWikiPagePage page={page} />\n    </ErrorBoundary>\n  );\n}\n"],"names":["EditWikiPagePage","page","toast","useToast","publish","usePublishEvent","navigate","useNavigate","topic","getPageTopic","register","setValue","getValues","handleSubmit","watch","formState","reset","useForm","getPageTitle","getPageSummary","clearFormCache","useCacheForm","submit","values","draft","cloneEvent","WIKI_PAGE_KIND","replaceOrAddSimpleTag","pub","WIKI_RELAYS","dictionaryService","relayHintService","error","VerticalPageLayout","jsx","Heading","jsxs","Flex","FormControl","FormLabel","Input","Textarea","FormatButton","content","Spacer","Button","MarkdownEditor","v","EditWikiPageView","account","useCurrentAccount","Navigate","useParams","useReplaceableEvent","ErrorBoundary","Spinner"],"mappings":"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"}