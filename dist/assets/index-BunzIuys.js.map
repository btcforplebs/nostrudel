{"version":3,"file":"index-BunzIuys.js","sources":["../../src/views/channels/index.tsx"],"sourcesContent":["import { useCallback } from \"react\";\nimport { kinds } from \"nostr-tools\";\nimport { Flex, SimpleGrid } from \"@chakra-ui/react\";\n\nimport useTimelineLoader from \"../../hooks/use-timeline-loader\";\nimport { useTimelineCurserIntersectionCallback } from \"../../hooks/use-timeline-cursor-intersection-callback\";\nimport VerticalPageLayout from \"../../components/vertical-page-layout\";\nimport IntersectionObserverProvider from \"../../providers/local/intersection-observer\";\nimport { NostrEvent } from \"../../types/nostr-event\";\nimport { ErrorBoundary } from \"../../components/error-boundary\";\nimport useClientSideMuteFilter from \"../../hooks/use-client-side-mute-filter\";\nimport PeopleListProvider, { usePeopleListContext } from \"../../providers/local/people-list-provider\";\nimport PeopleListSelection from \"../../components/people-list-selection/people-list-selection\";\nimport ChannelCard from \"./components/channel-card\";\nimport { useReadRelays } from \"../../hooks/use-client-relays\";\n\nfunction ChannelsHomePage() {\n  const relays = useReadRelays();\n  const { filter, listId } = usePeopleListContext();\n\n  const clientMuteFilter = useClientSideMuteFilter();\n  const eventFilter = useCallback(\n    (e: NostrEvent) => {\n      if (clientMuteFilter(e)) return false;\n      return true;\n    },\n    [clientMuteFilter],\n  );\n  const { loader, timeline: channels } = useTimelineLoader(\n    `${listId}-channels`,\n    relays,\n    filter ? { ...filter, kinds: [kinds.ChannelCreation] } : undefined,\n    { eventFilter },\n  );\n  const callback = useTimelineCurserIntersectionCallback(loader);\n\n  return (\n    <VerticalPageLayout>\n      <Flex gap=\"2\">\n        <PeopleListSelection />\n      </Flex>\n      <IntersectionObserverProvider callback={callback}>\n        <SimpleGrid columns={{ base: 1, xl: 2 }} spacing=\"2\">\n          {channels?.map((channel) => (\n            <ErrorBoundary key={channel.id}>\n              <ChannelCard channel={channel} additionalRelays={relays} />\n            </ErrorBoundary>\n          ))}\n        </SimpleGrid>\n      </IntersectionObserverProvider>\n    </VerticalPageLayout>\n  );\n}\n\nexport default function ChannelsHomeView() {\n  return (\n    <PeopleListProvider>\n      <ChannelsHomePage />\n    </PeopleListProvider>\n  );\n}\n"],"names":["ChannelsHomePage","relays","useReadRelays","filter","listId","usePeopleListContext","clientMuteFilter","useClientSideMuteFilter","eventFilter","useCallback","e","loader","channels","useTimelineLoader","kinds","callback","useTimelineCurserIntersectionCallback","VerticalPageLayout","jsx","Flex","PeopleListSelection","IntersectionObserverProvider","SimpleGrid","channel","ErrorBoundary","ChannelCard","ChannelsHomeView","PeopleListProvider"],"mappings":"uJAgBA,SAASA,GAAmB,CAC1B,MAAMC,EAASC,IACT,CAAE,OAAAC,EAAQ,OAAAC,CAAO,EAAIC,EAAqB,EAE1CC,EAAmBC,IACnBC,EAAcC,EAAA,YACjBC,GACK,CAAAJ,EAAiBI,CAAC,EAGxB,CAACJ,CAAgB,CAAA,EAEb,CAAE,OAAAK,EAAQ,SAAUC,CAAa,EAAAC,EACrC,GAAGT,CAAM,YACTH,EACAE,EAAS,CAAE,GAAGA,EAAQ,MAAO,CAACW,EAAM,eAAe,CAAM,EAAA,OACzD,CAAE,YAAAN,CAAY,CAAA,EAEVO,EAAWC,EAAsCL,CAAM,EAE7D,cACGM,EACC,CAAA,SAAA,CAAAC,MAACC,EAAK,CAAA,IAAI,IACR,SAAAD,MAACE,GAAoB,CAAA,EACvB,EACCF,EAAA,IAAAG,EAAA,CAA6B,SAAAN,EAC5B,SAAAG,EAAA,IAACI,EAAW,CAAA,QAAS,CAAE,KAAM,EAAG,GAAI,CAAE,EAAG,QAAQ,IAC9C,SAAAV,GAAA,YAAAA,EAAU,IAAKW,GACdL,EAAAA,IAACM,EACC,CAAA,SAAAN,EAAAA,IAACO,EAAY,CAAA,QAAAF,EAAkB,iBAAkBtB,CAAQ,CAAA,GADvCsB,EAAQ,EAE5B,EAEJ,CAAA,EACF,CACF,CAAA,CAAA,CAEJ,CAEA,SAAwBG,GAAmB,CACzC,OACGR,EAAA,IAAAS,EAAA,CACC,SAACT,EAAA,IAAAlB,EAAA,CAAA,CAAiB,CACpB,CAAA,CAEJ"}