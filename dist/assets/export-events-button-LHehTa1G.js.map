{"version":3,"file":"export-events-button-LHehTa1G.js","sources":["../../src/views/relays/cache/database/components/import-events-button.tsx","../../src/views/relays/cache/database/components/export-events-button.tsx"],"sourcesContent":["import { Button, Input } from \"@chakra-ui/react\";\nimport { NostrEvent } from \"nostr-tools\";\nimport { useRef, useState } from \"react\";\nimport Download01 from \"../../../../../components/icons/download-01\";\n\nexport default function ImportEventsButton({ onLoad }: { onLoad: (events: NostrEvent[]) => Promise<void> }) {\n  const ref = useRef<HTMLInputElement | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  const importFile = (file: File) => {\n    setLoading(true);\n    const reader = new FileReader();\n    reader.readAsText(file, \"utf8\");\n    reader.onload = async () => {\n      if (typeof reader.result !== \"string\") return;\n      const lines = reader.result.split(\"\\n\");\n      const events: NostrEvent[] = [];\n      for (const line of lines) {\n        try {\n          const event = JSON.parse(line) as NostrEvent;\n          events.push(event);\n        } catch (e) {}\n      }\n      await onLoad(events);\n      alert(`Imported ${events.length} events`);\n      setLoading(false);\n    };\n  };\n\n  return (\n    <>\n      <Button onClick={() => ref.current?.click()} isLoading={loading} leftIcon={<Download01 />}>\n        Import events\n      </Button>\n      <Input\n        hidden\n        type=\"file\"\n        accept=\".jsonl\"\n        onChange={(e) => e.target.files?.[0] && importFile(e.target.files[0])}\n        ref={ref}\n      />\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { Button } from \"@chakra-ui/react\";\nimport { NostrEvent } from \"nostr-tools\";\nimport stringify from \"json-stringify-deterministic\";\nimport Upload01 from \"../../../../../components/icons/upload-01\";\n\nexport default function ExportEventsButton({ getEvents }: { getEvents: () => Promise<NostrEvent[]> }) {\n  const [loading, setLoading] = useState(false);\n  const exportDatabase = async () => {\n    setLoading(true);\n    const rows = await getEvents();\n    const lines = rows.map((event) => stringify(event));\n    const file = new File([lines.join(\"\\n\")], \"noStrudel-export.jsonl\", {\n      type: \"application/jsonl\",\n    });\n    const url = URL.createObjectURL(file);\n    window.open(url);\n    setLoading(false);\n  };\n\n  return (\n    <Button onClick={exportDatabase} isLoading={loading} leftIcon={<Upload01 />}>\n      Export database\n    </Button>\n  );\n}\n"],"names":["ImportEventsButton","onLoad","ref","useRef","loading","setLoading","useState","importFile","file","reader","lines","events","line","event","jsxs","Fragment","jsx","Button","_a","Download01","Input","e","ExportEventsButton","getEvents","exportDatabase","stringify","url","Upload01"],"mappings":"qFAKwB,SAAAA,EAAmB,CAAE,OAAAC,GAA+D,CACpG,MAAAC,EAAMC,SAAgC,IAAI,EAC1C,CAACC,EAASC,CAAU,EAAIC,WAAS,EAAK,EAEtCC,EAAcC,GAAe,CACjCH,EAAW,EAAI,EACT,MAAAI,EAAS,IAAI,WACZA,EAAA,WAAWD,EAAM,MAAM,EAC9BC,EAAO,OAAS,SAAY,CACtB,GAAA,OAAOA,EAAO,QAAW,SAAU,OACvC,MAAMC,EAAQD,EAAO,OAAO,MAAM;AAAA,CAAI,EAChCE,EAAuB,CAAA,EAC7B,UAAWC,KAAQF,EACb,GAAA,CACI,MAAAG,EAAQ,KAAK,MAAMD,CAAI,EAC7BD,EAAO,KAAKE,CAAK,OACP,CAAC,CAEf,MAAMZ,EAAOU,CAAM,EACb,MAAA,YAAYA,EAAO,MAAM,SAAS,EACxCN,EAAW,EAAK,CAAA,CAClB,EAGF,OAEIS,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAC,EAAA,IAACC,EAAO,CAAA,QAAS,IAAM,OAAA,OAAAC,EAAAhB,EAAI,UAAJ,YAAAgB,EAAa,SAAS,UAAWd,EAAS,SAAWY,EAAAA,IAAAG,EAAA,CAAW,CAAA,EAAI,SAE3F,gBAAA,EACAH,EAAA,IAACI,EAAA,CACC,OAAM,GACN,KAAK,OACL,OAAO,SACP,SAAWC,GAAM,OAAA,QAAAH,EAAAG,EAAE,OAAO,QAAT,YAAAH,EAAiB,KAAMX,EAAWc,EAAE,OAAO,MAAM,CAAC,CAAC,GACpE,IAAAnB,CAAA,CACF,CACF,CAAA,CAAA,CAEJ,CCrCwB,SAAAoB,EAAmB,CAAE,UAAAC,GAAyD,CACpG,KAAM,CAACnB,EAASC,CAAU,EAAIC,WAAS,EAAK,EACtCkB,EAAiB,SAAY,CACjCnB,EAAW,EAAI,EAEf,MAAMK,GADO,MAAMa,KACA,IAAKV,GAAUY,EAAUZ,CAAK,CAAC,EAC5CL,EAAO,IAAI,KAAK,CAACE,EAAM,KAAK;AAAA,CAAI,CAAC,EAAG,yBAA0B,CAClE,KAAM,mBAAA,CACP,EACKgB,EAAM,IAAI,gBAAgBlB,CAAI,EACpC,OAAO,KAAKkB,CAAG,EACfrB,EAAW,EAAK,CAAA,EAIhB,OAAAW,EAAAA,IAACC,EAAO,CAAA,QAASO,EAAgB,UAAWpB,EAAS,SAAUY,EAAA,IAACW,EAAS,CAAA,CAAA,EAAI,SAE7E,iBAAA,CAAA,CAEJ"}