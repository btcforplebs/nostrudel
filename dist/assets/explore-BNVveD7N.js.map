{"version":3,"file":"explore-BNVveD7N.js","sources":["../../src/views/communities/explore.tsx"],"sourcesContent":["import { useMemo } from \"react\";\nimport { AvatarGroup, Button, Flex, SimpleGrid, Switch, useDisclosure } from \"@chakra-ui/react\";\n\nimport PeopleListProvider, { usePeopleListContext } from \"../../providers/local/people-list-provider\";\nimport PeopleListSelection from \"../../components/people-list-selection/people-list-selection\";\nimport { PointerCommunityCard } from \"./components/community-card\";\nimport VerticalPageLayout from \"../../components/vertical-page-layout\";\nimport { COMMUNITY_DEFINITION_KIND } from \"../../helpers/nostr/communities\";\nimport { ErrorBoundary } from \"../../components/error-boundary\";\nimport { useReadRelays } from \"../../hooks/use-client-relays\";\nimport useSubjects from \"../../hooks/use-subjects\";\nimport replaceableEventsService from \"../../services/replaceable-events\";\nimport { COMMUNITIES_LIST_KIND, getCoordinatesFromList } from \"../../helpers/nostr/lists\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ChevronLeftIcon } from \"../../components/icons\";\nimport { parseCoordinate } from \"../../helpers/nostr/event\";\nimport UserAvatarLink from \"../../components/user/user-avatar-link\";\nimport { AddressPointer } from \"nostr-tools/nip19\";\n\nexport function useUsersJoinedCommunitiesLists(pubkeys: string[], additionalRelays?: Iterable<string>) {\n  const readRelays = useReadRelays(additionalRelays);\n  const communityListsSubjects = useMemo(() => {\n    return pubkeys.map((pubkey) => replaceableEventsService.requestEvent(readRelays, COMMUNITIES_LIST_KIND, pubkey));\n  }, [pubkeys]);\n  return useSubjects(communityListsSubjects);\n}\n\nfunction CommunityCardWithMembers({ pointer, pubkeys }: { pointer: AddressPointer; pubkeys: string[] }) {\n  return (\n    <ErrorBoundary>\n      <Flex direction=\"column\" gap=\"2\">\n        <AvatarGroup size=\"md\">\n          {pubkeys.map((pubkey) => (\n            <UserAvatarLink key={pubkey} pubkey={pubkey} />\n          ))}\n        </AvatarGroup>\n        <PointerCommunityCard pointer={pointer} maxW=\"xl\" />\n      </Flex>\n    </ErrorBoundary>\n  );\n}\n\nfunction CommunitiesExplorePage() {\n  const navigate = useNavigate();\n  const { people } = usePeopleListContext();\n  const showMore = useDisclosure();\n\n  const communitiesLists = useUsersJoinedCommunitiesLists(people?.map((p) => p.pubkey) ?? []);\n\n  const communityPointers = useMemo(() => {\n    const dir = new Map<string, { pointer: AddressPointer; pubkeys: string[] }>();\n    for (const list of communitiesLists) {\n      for (const { coordinate } of getCoordinatesFromList(list)) {\n        const pointer = parseCoordinate(coordinate, true);\n        if (!pointer) continue;\n        if (pointer.kind === COMMUNITY_DEFINITION_KIND) {\n          if (dir.has(coordinate)) {\n            dir.get(coordinate)?.pubkeys.push(list.pubkey);\n          } else dir.set(coordinate, { pointer, pubkeys: [list.pubkey] });\n        }\n      }\n    }\n    return dir;\n  }, [communitiesLists]);\n\n  const sorted = Array.from(communityPointers.values()).sort((a, b) => b.pubkeys.length - a.pubkeys.length);\n\n  return (\n    <VerticalPageLayout>\n      <Flex gap=\"2\" alignItems=\"center\" wrap=\"wrap\">\n        <Button onClick={() => navigate(-1)} leftIcon={<ChevronLeftIcon />}>\n          Back\n        </Button>\n        <PeopleListSelection hideGlobalOption />\n        <Switch onChange={showMore.onToggle} isChecked={showMore.isOpen}>\n          Show More\n        </Switch>\n      </Flex>\n      <SimpleGrid spacing=\"4\" columns={{ base: 1, lg: 2 }}>\n        {sorted\n          .filter((c) => (showMore ? c.pubkeys.length > 1 : true))\n          .map(({ pointer, pubkeys }) => (\n            <CommunityCardWithMembers\n              key={pointer.kind + pointer.pubkey + pointer.identifier}\n              pointer={pointer}\n              pubkeys={pubkeys}\n            />\n          ))}\n      </SimpleGrid>\n    </VerticalPageLayout>\n  );\n}\n\nexport default function ExploreCommunitiesView() {\n  return (\n    <PeopleListProvider>\n      <CommunitiesExplorePage />\n    </PeopleListProvider>\n  );\n}\n"],"names":["useUsersJoinedCommunitiesLists","pubkeys","additionalRelays","readRelays","useReadRelays","communityListsSubjects","useMemo","pubkey","replaceableEventsService","COMMUNITIES_LIST_KIND","useSubjects","CommunityCardWithMembers","pointer","ErrorBoundary","jsxs","Flex","jsx","AvatarGroup","UserAvatarLink","PointerCommunityCard","CommunitiesExplorePage","navigate","useNavigate","people","usePeopleListContext","showMore","useDisclosure","communitiesLists","p","communityPointers","dir","list","coordinate","getCoordinatesFromList","parseCoordinate","COMMUNITY_DEFINITION_KIND","_a","sorted","a","b","VerticalPageLayout","Button","ChevronLeftIcon","PeopleListSelection","Switch","SimpleGrid","c","ExploreCommunitiesView","PeopleListProvider"],"mappings":"oNAmBgB,SAAAA,EAA+BC,EAAmBC,EAAqC,CAC/F,MAAAC,EAAaC,EAAcF,CAAgB,EAC3CG,EAAyBC,EAAAA,QAAQ,IAC9BL,EAAQ,IAAKM,GAAWC,EAAyB,aAAaL,EAAYM,EAAuBF,CAAM,CAAC,EAC9G,CAACN,CAAO,CAAC,EACZ,OAAOS,EAAYL,CAAsB,CAC3C,CAEA,SAASM,EAAyB,CAAE,QAAAC,EAAS,QAAAX,GAA2D,CACtG,aACGY,EACC,CAAA,SAAAC,EAAAA,KAACC,GAAK,UAAU,SAAS,IAAI,IAC3B,SAAA,CAAAC,EAAA,IAACC,EAAY,CAAA,KAAK,KACf,SAAAhB,EAAQ,IAAKM,GACZS,EAAAA,IAACE,EAA4B,CAAA,OAAAX,CAAA,EAARA,CAAwB,CAC9C,EACH,EACCS,EAAAA,IAAAG,EAAA,CAAqB,QAAAP,EAAkB,KAAK,IAAK,CAAA,CAAA,CACpD,CAAA,CACF,CAAA,CAEJ,CAEA,SAASQ,GAAyB,CAChC,MAAMC,EAAWC,IACX,CAAE,OAAAC,GAAWC,IACbC,EAAWC,IAEXC,EAAmB3B,GAA+BuB,GAAA,YAAAA,EAAQ,IAAKK,GAAMA,EAAE,UAAW,CAAA,CAAE,EAEpFC,EAAoBvB,EAAAA,QAAQ,IAAM,OAChC,MAAAwB,MAAU,IAChB,UAAWC,KAAQJ,EACjB,SAAW,CAAE,WAAAK,CAAA,IAAgBC,EAAuBF,CAAI,EAAG,CACnD,MAAAnB,EAAUsB,EAAgBF,EAAY,EAAI,EAC3CpB,GACDA,EAAQ,OAASuB,IACfL,EAAI,IAAIE,CAAU,GACpBI,EAAAN,EAAI,IAAIE,CAAU,IAAlB,MAAAI,EAAqB,QAAQ,KAAKL,EAAK,QAC9BD,EAAA,IAAIE,EAAY,CAAE,QAAApB,EAAS,QAAS,CAACmB,EAAK,MAAM,CAAA,CAAG,EAElE,CAEK,OAAAD,CAAA,EACN,CAACH,CAAgB,CAAC,EAEfU,EAAS,MAAM,KAAKR,EAAkB,OAAA,CAAQ,EAAE,KAAK,CAACS,EAAGC,IAAMA,EAAE,QAAQ,OAASD,EAAE,QAAQ,MAAM,EAExG,cACGE,EACC,CAAA,SAAA,CAAA1B,OAACC,GAAK,IAAI,IAAI,WAAW,SAAS,KAAK,OACrC,SAAA,CAACC,EAAAA,IAAAyB,EAAA,CAAO,QAAS,IAAMpB,EAAS,EAAE,EAAG,SAAUL,EAAAA,IAAC0B,EAAgB,CAAA,CAAA,EAAI,SAEpE,MAAA,CAAA,EACA1B,EAAAA,IAAC2B,EAAoB,CAAA,iBAAgB,EAAC,CAAA,EACtC3B,EAAAA,IAAC4B,GAAO,SAAUnB,EAAS,SAAU,UAAWA,EAAS,OAAQ,SAEjE,WAAA,CAAA,CAAA,EACF,EACAT,EAAAA,IAAC6B,EAAW,CAAA,QAAQ,IAAI,QAAS,CAAE,KAAM,EAAG,GAAI,GAC7C,SACER,EAAA,OAAQS,GAAOrB,EAAWqB,EAAE,QAAQ,OAAS,EAAI,EAAK,EACtD,IAAI,CAAC,CAAE,QAAAlC,EAAS,QAAAX,CACf,IAAAe,EAAA,IAACL,EAAA,CAEC,QAAAC,EACA,QAAAX,CAAA,EAFKW,EAAQ,KAAOA,EAAQ,OAASA,EAAQ,UAIhD,CAAA,EACL,CACF,CAAA,CAAA,CAEJ,CAEA,SAAwBmC,GAAyB,CAC/C,OACG/B,EAAA,IAAAgC,EAAA,CACC,SAAChC,EAAA,IAAAI,EAAA,CAAA,CAAuB,CAC1B,CAAA,CAEJ"}