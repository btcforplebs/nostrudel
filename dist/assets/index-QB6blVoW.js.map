{"version":3,"file":"index-QB6blVoW.js","sources":["../../src/views/streams/index.tsx"],"sourcesContent":["import { useCallback, useMemo } from \"react\";\nimport { Flex, Heading, SimpleGrid, Switch } from \"@chakra-ui/react\";\nimport { Filter, kinds } from \"nostr-tools\";\n\nimport useTimelineLoader from \"../../hooks/use-timeline-loader\";\nimport IntersectionObserverProvider from \"../../providers/local/intersection-observer\";\nimport { useTimelineCurserIntersectionCallback } from \"../../hooks/use-timeline-cursor-intersection-callback\";\nimport StreamCard from \"./components/stream-card\";\nimport useRelaysChanged from \"../../hooks/use-relays-changed\";\nimport PeopleListSelection from \"../../components/people-list-selection/people-list-selection\";\nimport PeopleListProvider, { usePeopleListContext } from \"../../providers/local/people-list-provider\";\nimport TimelineActionAndStatus from \"../../components/timeline/timeline-action-and-status\";\nimport useParsedStreams from \"../../hooks/use-parsed-streams\";\nimport { useAppTitle } from \"../../hooks/use-app-title\";\nimport { NostrEvent } from \"../../types/nostr-event\";\nimport VerticalPageLayout from \"../../components/vertical-page-layout\";\nimport useClientSideMuteFilter from \"../../hooks/use-client-side-mute-filter\";\nimport { useRouteStateBoolean } from \"../../hooks/use-route-state-value\";\nimport { useReadRelays } from \"../../hooks/use-client-relays\";\nimport { AdditionalRelayProvider, useAdditionalRelayContext } from \"../../providers/local/additional-relay-context\";\n\nfunction StreamsPage() {\n  useAppTitle(\"Streams\");\n  const relays = useReadRelays(useAdditionalRelayContext()).urls;\n  const userMuteFilter = useClientSideMuteFilter();\n  const showEnded = useRouteStateBoolean(\"ended\", false);\n\n  const eventFilter = useCallback(\n    (event: NostrEvent) => {\n      if (userMuteFilter(event)) return false;\n      return true;\n    },\n    [userMuteFilter],\n  );\n\n  const { filter, listId } = usePeopleListContext();\n  const query = useMemo<Filter | Filter[] | undefined>(() => {\n    if (!filter) return undefined;\n    return [\n      { authors: filter.authors, kinds: [kinds.LiveEvent] },\n      { \"#p\": filter.authors, kinds: [kinds.LiveEvent] },\n    ];\n  }, [filter]);\n\n  const { loader, timeline } = useTimelineLoader(`${listId ?? \"global\"}-streams`, relays, query, { eventFilter });\n  const callback = useTimelineCurserIntersectionCallback(loader);\n\n  useRelaysChanged(relays, () => loader.reset());\n\n  const streams = useParsedStreams(timeline);\n\n  const liveStreams = streams.filter((stream) => stream.status === \"live\");\n  const endedStreams = streams.filter((stream) => stream.status === \"ended\");\n\n  return (\n    <VerticalPageLayout>\n      <Flex gap=\"2\" wrap=\"wrap\" alignItems=\"center\">\n        <PeopleListSelection />\n        <Switch isChecked={showEnded.isOpen} onChange={showEnded.onToggle}>\n          Show Ended\n        </Switch>\n      </Flex>\n      <IntersectionObserverProvider callback={callback}>\n        <Heading size=\"lg\" mt=\"2\">\n          Live\n        </Heading>\n        <SimpleGrid columns={{ base: 1, md: 2, lg: 3, xl: 4 }} spacing=\"2\">\n          {liveStreams.map((stream) => (\n            <StreamCard key={stream.event.id} stream={stream} />\n          ))}\n        </SimpleGrid>\n        {showEnded.isOpen && (\n          <>\n            <Heading size=\"lg\" mt=\"4\">\n              Ended\n            </Heading>\n            <SimpleGrid columns={{ base: 1, md: 2, lg: 3, xl: 4 }} spacing=\"2\">\n              {endedStreams.map((stream) => (\n                <StreamCard key={stream.event.id} stream={stream} />\n              ))}\n            </SimpleGrid>\n          </>\n        )}\n        <TimelineActionAndStatus timeline={loader} />\n      </IntersectionObserverProvider>\n    </VerticalPageLayout>\n  );\n}\nexport default function StreamsView() {\n  return (\n    <AdditionalRelayProvider\n      relays={[\"wss://nos.lol\", \"wss://relay.damus.io\", \"wss://relay.snort.social\", \"wss://nostr.wine\"]}\n    >\n      <PeopleListProvider>\n        <StreamsPage />\n      </PeopleListProvider>\n    </AdditionalRelayProvider>\n  );\n}\n"],"names":["StreamsPage","useAppTitle","relays","useReadRelays","useAdditionalRelayContext","userMuteFilter","useClientSideMuteFilter","showEnded","useRouteStateBoolean","eventFilter","useCallback","event","filter","listId","usePeopleListContext","query","useMemo","kinds","loader","timeline","useTimelineLoader","callback","useTimelineCurserIntersectionCallback","useRelaysChanged","streams","useParsedStreams","liveStreams","stream","endedStreams","VerticalPageLayout","jsxs","Flex","jsx","PeopleListSelection","Switch","IntersectionObserverProvider","Heading","SimpleGrid","StreamCard","Fragment","TimelineActionAndStatus","StreamsView","AdditionalRelayProvider","PeopleListProvider"],"mappings":"4XAqBA,SAASA,GAAc,CACrBC,EAAY,SAAS,EACrB,MAAMC,EAASC,EAAcC,EAA2B,CAAA,EAAE,KACpDC,EAAiBC,IACjBC,EAAYC,EAAqB,QAAS,EAAK,EAE/CC,EAAcC,EAAA,YACjBC,GACK,CAAAN,EAAeM,CAAK,EAG1B,CAACN,CAAc,CAAA,EAGX,CAAE,OAAAO,EAAQ,OAAAC,CAAO,EAAIC,EAAqB,EAC1CC,EAAQC,EAAAA,QAAuC,IAAM,CACrD,GAACJ,EACE,MAAA,CACL,CAAE,QAASA,EAAO,QAAS,MAAO,CAACK,EAAM,SAAS,CAAE,EACpD,CAAE,KAAML,EAAO,QAAS,MAAO,CAACK,EAAM,SAAS,CAAE,CAAA,CACnD,EACC,CAACL,CAAM,CAAC,EAEL,CAAE,OAAAM,EAAQ,SAAAC,CAAS,EAAIC,EAAkB,GAAGP,GAAU,QAAQ,WAAYX,EAAQa,EAAO,CAAE,YAAAN,CAAa,CAAA,EACxGY,EAAWC,EAAsCJ,CAAM,EAE7DK,EAAiBrB,EAAQ,IAAMgB,EAAO,MAAO,CAAA,EAEvC,MAAAM,EAAUC,EAAiBN,CAAQ,EAEnCO,EAAcF,EAAQ,OAAQG,GAAWA,EAAO,SAAW,MAAM,EACjEC,EAAeJ,EAAQ,OAAQG,GAAWA,EAAO,SAAW,OAAO,EAEzE,cACGE,EACC,CAAA,SAAA,CAAAC,OAACC,GAAK,IAAI,IAAI,KAAK,OAAO,WAAW,SACnC,SAAA,CAAAC,EAAA,IAACC,EAAoB,EAAA,EACrBD,EAAAA,IAACE,GAAO,UAAW3B,EAAU,OAAQ,SAAUA,EAAU,SAAU,SAEnE,YAAA,CAAA,CAAA,EACF,EACAuB,EAAAA,KAACK,GAA6B,SAAAd,EAC5B,SAAA,CAAAW,MAACI,EAAQ,CAAA,KAAK,KAAK,GAAG,IAAI,SAE1B,OAAA,EACAJ,EAAAA,IAACK,EAAW,CAAA,QAAS,CAAE,KAAM,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,CAAE,EAAG,QAAQ,IAC5D,SAAAX,EAAY,IAAKC,GAChBK,EAAAA,IAACM,EAAiC,CAAA,OAAAX,CAAA,EAAjBA,EAAO,MAAM,EAAoB,CACnD,CACH,CAAA,EACCpB,EAAU,QAEPuB,EAAAA,KAAAS,EAAA,SAAA,CAAA,SAAA,CAAAP,MAACI,EAAQ,CAAA,KAAK,KAAK,GAAG,IAAI,SAE1B,QAAA,EACAJ,EAAAA,IAACK,EAAW,CAAA,QAAS,CAAE,KAAM,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,CAAE,EAAG,QAAQ,IAC5D,SAAAT,EAAa,IAAKD,GACjBK,EAAAA,IAACM,EAAiC,CAAA,OAAAX,CAAA,EAAjBA,EAAO,MAAM,EAAoB,CACnD,CACH,CAAA,CAAA,EACF,EAEFK,EAAAA,IAACQ,EAAwB,CAAA,SAAUtB,CAAQ,CAAA,CAAA,EAC7C,CACF,CAAA,CAAA,CAEJ,CACA,SAAwBuB,GAAc,CAElC,OAAAT,EAAA,IAACU,EAAA,CACC,OAAQ,CAAC,gBAAiB,uBAAwB,2BAA4B,kBAAkB,EAEhG,SAACV,EAAAA,IAAAW,EAAA,CACC,SAACX,EAAAA,IAAAhC,EAAA,CAAY,CAAA,EACf,CAAA,CAAA,CAGN"}