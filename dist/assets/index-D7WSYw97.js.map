{"version":3,"file":"index-D7WSYw97.js","sources":["../../src/components/user/user-about.tsx","../../src/views/search/components/profile-results.tsx","../../src/views/search/components/note-results.tsx","../../src/views/search/components/article-results.tsx","../../src/views/search/components/search-results.tsx","../../src/hooks/use-search-relays.ts","../../src/views/search/index.tsx"],"sourcesContent":["import { Box, BoxProps } from \"@chakra-ui/react\";\nimport { useRenderedContent } from \"applesauce-react\";\nimport { nostrMentions } from \"applesauce-content/text\";\n\nimport useUserProfile from \"../../hooks/use-user-profile\";\nimport { renderGenericUrl } from \"../content/links\";\nimport { components } from \"../content\";\n\nconst transformers = [nostrMentions];\nconst linkRenderers = [renderGenericUrl];\n\nexport default function UserAbout({ pubkey, ...props }: { pubkey: string } & Omit<BoxProps, \"children\">) {\n  const profile = useUserProfile(pubkey);\n  const content = useRenderedContent(profile?.about, components, { transformers, linkRenderers });\n\n  return (\n    <Box whiteSpace=\"pre-line\" {...props}>\n      {content}\n    </Box>\n  );\n}\n","import { useEffect, useMemo, useState } from \"react\";\nimport { useAsync, useStartTyping } from \"react-use\";\nimport { nip19, NostrEvent } from \"nostr-tools\";\nimport { Button, ButtonGroup, Flex, LinkBox, Text } from \"@chakra-ui/react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport UserAvatar from \"../../../components/user/user-avatar\";\nimport UserDnsIdentity from \"../../../components/user/user-dns-identity\";\nimport trustedUserStatsService from \"../../../services/trusted-user-stats\";\nimport { readablizeSats } from \"../../../helpers/bolt11\";\nimport replaceableEventsService from \"../../../services/replaceable-events\";\nimport UserAbout from \"../../../components/user/user-about\";\nimport UserName from \"../../../components/user/user-name\";\nimport HoverLinkOverlay from \"../../../components/hover-link-overlay\";\nimport { useWebOfTrust } from \"../../../providers/global/web-of-trust-provider\";\n\nfunction ProfileResult({ profile }: { profile: NostrEvent }) {\n  useEffect(() => replaceableEventsService.handleEvent(profile), [profile.id]);\n\n  const { value: stats } = useAsync(() => trustedUserStatsService.getUserStats(profile.pubkey), [profile.pubkey]);\n\n  return (\n    <Flex\n      as={LinkBox}\n      overflow=\"hidden\"\n      direction=\"column\"\n      borderWidth={1}\n      rounded=\"md\"\n      p=\"2\"\n      flexShrink={0}\n      maxW=\"xs\"\n      minW=\"48\"\n    >\n      <Flex gap=\"2\" overflow=\"hidden\">\n        <UserAvatar pubkey={profile.pubkey} float=\"left\" />\n        <Flex direction=\"column\" overflow=\"hidden\">\n          <HoverLinkOverlay as={RouterLink} to={\"/u/\" + nip19.npubEncode(profile.pubkey)}>\n            <UserName pubkey={profile.pubkey} fontSize=\"xl\" isTruncated />\n          </HoverLinkOverlay>\n          <UserDnsIdentity pubkey={profile.pubkey} isTruncated />\n        </Flex>\n      </Flex>\n      <UserAbout pubkey={profile.pubkey} noOfLines={3} isTruncated />\n      {stats && (\n        <>{stats.followers_pubkey_count && <Text>Followers: {readablizeSats(stats.followers_pubkey_count)}</Text>}</>\n      )}\n    </Flex>\n  );\n}\n\nexport default function ProfileSearchResults({ profiles }: { profiles: NostrEvent[] }) {\n  const [order, setOrder] = useState(\"relay\");\n  const graph = useWebOfTrust();\n\n  const sorted = useMemo(() => {\n    switch (order) {\n      case \"trust\":\n        return graph?.sortByDistanceAndConnections(profiles, (p) => p.pubkey) || profiles;\n      default:\n      case \"relay\":\n        return profiles;\n    }\n  }, [order, profiles, graph]);\n\n  return (\n    <>\n      <Flex gap=\"2\">\n        <Text>Order By:</Text>\n        <ButtonGroup size=\"xs\">\n          <Button variant={order === \"relay\" ? \"solid\" : \"outline\"} onClick={() => setOrder(\"relay\")}>\n            Relay order\n          </Button>\n          {graph && (\n            <Button variant={order === \"trust\" ? \"solid\" : \"outline\"} onClick={() => setOrder(\"trust\")}>\n              Trust\n            </Button>\n          )}\n        </ButtonGroup>\n      </Flex>\n      <Flex gap=\"2\" overflowY=\"hidden\" overflowX=\"auto\" w=\"full\" px=\"2\" pb=\"2\">\n        {sorted.map((profile) => (\n          <ProfileResult key={profile.pubkey} profile={profile} />\n        ))}\n      </Flex>\n    </>\n  );\n}\n","import { useMemo } from \"react\";\nimport { NostrEvent } from \"nostr-tools\";\nimport { Button, Flex, Heading, useDisclosure } from \"@chakra-ui/react\";\n\nimport { TimelineNote } from \"../../../components/note/timeline-note\";\n\nconst MAX_NOTES = 4;\n\nexport default function NoteSearchResults({ notes }: { notes: NostrEvent[] }) {\n  const more = useDisclosure();\n\n  const filtered = useMemo(() => (more.isOpen ? notes : Array.from(notes).slice(0, MAX_NOTES)), [notes, more.isOpen]);\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\" gap=\"2\" alignItems=\"flex-end\">\n        <Heading size=\"md\">Notes ({notes.length})</Heading>\n        {notes.length > MAX_NOTES && (\n          <Button size=\"sm\" variant=\"ghost\" onClick={more.onToggle}>\n            Show {more.isOpen ? \"less\" : \"all\"}\n          </Button>\n        )}\n      </Flex>\n      {filtered.map((note) => (\n        <TimelineNote key={note.id} event={note} />\n      ))}\n      {!more.isOpen && notes.length > MAX_NOTES && (\n        <Button mx=\"auto\" size=\"lg\" variant=\"ghost\" onClick={more.onOpen} px=\"10\">\n          Show all\n        </Button>\n      )}\n    </>\n  );\n}\n","import { useMemo } from \"react\";\nimport { NostrEvent } from \"nostr-tools\";\nimport { Button, Flex, Heading, useDisclosure } from \"@chakra-ui/react\";\n\nimport EmbeddedArticle from \"../../../components/embed-event/event-types/embedded-article\";\n\nconst MAX_ARTICLES = 4;\n\nexport default function ArticleSearchResults({ articles }: { articles: NostrEvent[] }) {\n  const more = useDisclosure();\n\n  const filtered = useMemo(\n    () => (more.isOpen ? articles : Array.from(articles).slice(0, MAX_ARTICLES)),\n    [articles, more.isOpen],\n  );\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\" gap=\"2\" alignItems=\"flex-end\">\n        <Heading size=\"md\">Articles ({articles.length})</Heading>\n        {articles.length > MAX_ARTICLES && (\n          <Button size=\"sm\" variant=\"ghost\" onClick={more.onToggle}>\n            Show {more.isOpen ? \"less\" : \"all\"}\n          </Button>\n        )}\n      </Flex>\n      {filtered.map((article) => (\n        <EmbeddedArticle key={article.id} article={article} />\n      ))}\n      {!more.isOpen && articles.length > MAX_ARTICLES && (\n        <Button mx=\"auto\" size=\"lg\" variant=\"ghost\" onClick={more.onOpen} px=\"10\">\n          Show all\n        </Button>\n      )}\n    </>\n  );\n}\n","import { useEffect, useMemo, useState } from \"react\";\nimport { Filter, kinds, NostrEvent } from \"nostr-tools\";\nimport { AbstractRelay, Subscription, SubscriptionParams } from \"nostr-tools/abstract-relay\";\nimport { Alert, AlertDescription, AlertIcon, AlertTitle, Heading, Spinner, Text } from \"@chakra-ui/react\";\nimport { LRU } from \"tiny-lru\";\n\nimport relayPoolService from \"../../../services/relay-pool\";\nimport ProfileSearchResults from \"./profile-results\";\nimport NoteSearchResults from \"./note-results\";\nimport ArticleSearchResults from \"./article-results\";\nimport { eventStore } from \"../../../services/event-store\";\n\nfunction createSearchAction(url: string | AbstractRelay) {\n  let sub: Subscription | undefined = undefined;\n\n  let running = true;\n  const search = async (filters: Filter[], params: Partial<SubscriptionParams>) => {\n    running = true;\n    const relay = typeof url === \"string\" ? await relayPoolService.requestRelay(url, false) : url;\n    await relayPoolService.requestConnect(relay);\n\n    sub = relay.subscribe(filters, {\n      onevent: (event) => running && params.onevent?.(event),\n      oneose: () => {\n        sub?.close();\n        params.oneose?.();\n      },\n      onclose: params.onclose,\n    });\n  };\n\n  const cancel = () => {\n    running = false;\n    if (sub) sub.close();\n  };\n\n  return { search, cancel, relay: url };\n}\n\nconst searchCache = new LRU<NostrEvent[]>(10);\n\nexport default function SearchResults({ query, relay }: { query: string; relay: string | AbstractRelay }) {\n  const [results, setResults] = useState<NostrEvent[]>([]);\n\n  const [searching, setSearching] = useState(false);\n  const [error, setError] = useState<Error>();\n  const search = useMemo(() => createSearchAction(relay), [relay]);\n\n  useEffect(() => {\n    if (query.length < 3) return;\n\n    setError(undefined);\n    if (searchCache.has(query + relay)) {\n      // restore search from cache\n      const events = searchCache.get(query + relay)!;\n      setResults(events);\n      setSearching(false);\n    } else {\n      // run a new search\n      setResults([]);\n      setSearching(true);\n      search\n        .search([{ search: query, kinds: [kinds.Metadata, kinds.ShortTextNote, kinds.LongFormArticle], limit: 200 }], {\n          onevent: (event) => {\n            event = eventStore.add(event, typeof search.relay === \"string\" ? search.relay : search.relay.url);\n\n            setResults((arr) => {\n              const newArr = [...arr, event];\n              searchCache.set(query + relay, newArr);\n              return newArr;\n            });\n          },\n          oneose: () => setSearching(false),\n        })\n        .catch((err) => setError(err));\n\n      return () => search.cancel();\n    }\n  }, [query, search]);\n\n  const profiles = results.filter((e) => e.kind === kinds.Metadata);\n  const notes = results.filter((e) => e.kind === kinds.ShortTextNote);\n  const articles = results.filter((e) => e.kind === kinds.LongFormArticle);\n\n  if (searching && results.length === 0) {\n    return (\n      <Heading size=\"md\" mx=\"auto\" my=\"10\">\n        <Spinner /> Searching relay...\n      </Heading>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert\n        status=\"error\"\n        variant=\"subtle\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        textAlign=\"center\"\n        height=\"200px\"\n      >\n        <AlertIcon boxSize=\"40px\" mr={0} />\n        <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n          {error.name}\n        </AlertTitle>\n        <AlertDescription maxWidth=\"sm\" whiteSpace=\"pre\">\n          {error.message}\n        </AlertDescription>\n      </Alert>\n    );\n  }\n\n  if (results.length === 0) {\n    return (\n      <Heading size=\"md\" mx=\"auto\" my=\"10\">\n        Found nothing... :(\n      </Heading>\n    );\n  }\n\n  return (\n    <>\n      {results.length > 0 && <Text>Found {results.length} results</Text>}\n      {profiles.length > 0 && <ProfileSearchResults profiles={profiles} />}\n      {notes.length > 0 && <NoteSearchResults notes={notes} />}\n      {articles.length > 0 && <ArticleSearchResults articles={articles} />}\n    </>\n  );\n}\n","import { DEFAULT_SEARCH_RELAYS } from \"../const\";\nimport { getRelaysFromList } from \"../helpers/nostr/lists\";\nimport useCurrentAccount from \"./use-current-account\";\nimport useUserSearchRelayList from \"./use-user-search-relay-list\";\n\nexport default function useSearchRelays() {\n  const account = useCurrentAccount();\n  const searchRelayList = useUserSearchRelayList(account?.pubkey);\n  const searchRelays = searchRelayList ? getRelaysFromList(searchRelayList) : DEFAULT_SEARCH_RELAYS;\n\n  // TODO: maybe add localRelay into the list if it supports NIP-50\n\n  return searchRelays;\n}\n","import { useCallback, useEffect } from \"react\";\nimport { ButtonGroup, Flex, IconButton, Input, Select } from \"@chakra-ui/react\";\nimport { useNavigate, useSearchParams, Link as RouterLink } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\n\nimport { safeDecode } from \"../../helpers/nip19\";\nimport { getMatchHashtag } from \"../../helpers/regexp\";\nimport { CopyToClipboardIcon, SearchIcon, SettingsIcon } from \"../../components/icons\";\nimport VerticalPageLayout from \"../../components/vertical-page-layout\";\nimport PeopleListProvider from \"../../providers/local/people-list-provider\";\nimport { useBreakpointValue } from \"../../providers/global/breakpoint-provider\";\nimport QRCodeScannerButton from \"../../components/qr-code/qr-code-scanner-button\";\nimport SearchResults from \"./components/search-results\";\nimport useSearchRelays from \"../../hooks/use-search-relays\";\n\nexport function SearchPage() {\n  const navigate = useNavigate();\n  const searchRelays = useSearchRelays();\n\n  const autoFocusSearch = useBreakpointValue({ base: false, lg: true });\n\n  const [params, setParams] = useSearchParams();\n  const searchQuery = params.get(\"q\") || \"\";\n  const searchRelay = params.get(\"relay\") || searchRelays[0];\n\n  const { register, handleSubmit, setValue } = useForm({\n    defaultValues: { query: searchQuery, relay: searchRelay },\n    mode: \"all\",\n  });\n\n  // reset the relay when the search relay changes\n  useEffect(() => setValue(\"relay\", searchRelay), [searchRelay]);\n\n  const handleSearchText = (text: string) => {\n    const cleanText = text.trim();\n\n    if (cleanText.startsWith(\"nostr:\") || cleanText.startsWith(\"web+nostr:\") || safeDecode(text)) {\n      navigate({ pathname: \"/l/\" + encodeURIComponent(text) }, { replace: true });\n      return true;\n    }\n\n    const hashTagMatch = getMatchHashtag().exec(cleanText);\n    if (hashTagMatch) {\n      navigate({ pathname: \"/t/\" + hashTagMatch[2].toLocaleLowerCase() }, { replace: true });\n      return true;\n    }\n\n    return false;\n  };\n\n  const readClipboard = useCallback(async () => {\n    handleSearchText(await navigator.clipboard.readText());\n  }, []);\n\n  // set the search when the form is submitted\n  const submit = handleSubmit((values) => {\n    if (!handleSearchText(values.query)) {\n      const newParams = new URLSearchParams(params);\n      newParams.set(\"q\", values.query);\n      newParams.set(\"relay\", values.relay);\n      setParams(newParams);\n    }\n  });\n\n  const shouldSearch = searchQuery && searchRelay;\n\n  return (\n    <VerticalPageLayout>\n      <Flex as=\"form\" gap=\"2\" wrap=\"wrap\" onSubmit={submit}>\n        <ButtonGroup>\n          <QRCodeScannerButton onData={handleSearchText} />\n          {!!navigator.clipboard?.readText && (\n            <IconButton\n              onClick={readClipboard}\n              icon={<CopyToClipboardIcon boxSize={5} />}\n              aria-label=\"Read clipboard\"\n            />\n          )}\n        </ButtonGroup>\n        <Input\n          type=\"search\"\n          isRequired\n          autoFocus={autoFocusSearch}\n          w=\"auto\"\n          flexGrow={1}\n          {...register(\"query\", { required: true, minLength: 3 })}\n          autoComplete=\"off\"\n        />\n        <Select w=\"auto\" {...register(\"relay\")}>\n          {searchRelays.map((url) => (\n            <option key={url} value={url}>\n              {url}\n            </option>\n          ))}\n        </Select>\n        <ButtonGroup>\n          <IconButton type=\"submit\" aria-label=\"Search\" icon={<SearchIcon boxSize={5} />} colorScheme=\"primary\" />\n          <IconButton\n            as={RouterLink}\n            type=\"button\"\n            aria-label=\"Advanced\"\n            icon={<SettingsIcon boxSize={5} />}\n            to=\"/relays/search\"\n          />\n        </ButtonGroup>\n      </Flex>\n\n      <Flex direction=\"column\" gap=\"2\">\n        {shouldSearch ? <SearchResults relay={searchRelay} query={searchQuery} /> : null}\n      </Flex>\n    </VerticalPageLayout>\n  );\n}\n\nexport default function SearchView() {\n  return (\n    <PeopleListProvider initList=\"global\">\n      <SearchPage />\n    </PeopleListProvider>\n  );\n}\n"],"names":["transformers","nostrMentions","linkRenderers","renderGenericUrl","UserAbout","pubkey","props","profile","useUserProfile","content","useRenderedContent","components","Box","ProfileResult","useEffect","replaceableEventsService","stats","useAsync","trustedUserStatsService","jsxs","Flex","LinkBox","jsx","UserAvatar","HoverLinkOverlay","RouterLink","nip19","UserName","UserDnsIdentity","Fragment","Text","readablizeSats","ProfileSearchResults","profiles","order","setOrder","useState","graph","useWebOfTrust","sorted","useMemo","p","ButtonGroup","Button","MAX_NOTES","NoteSearchResults","notes","more","useDisclosure","filtered","Heading","note","TimelineNote","MAX_ARTICLES","ArticleSearchResults","articles","article","EmbeddedArticle","createSearchAction","url","sub","running","filters","params","relay","relayPoolService","event","_a","searchCache","LRU","SearchResults","query","results","setResults","searching","setSearching","error","setError","search","events","kinds","eventStore","arr","newArr","err","e","Spinner","Alert","AlertIcon","AlertTitle","AlertDescription","useSearchRelays","account","useCurrentAccount","searchRelayList","useUserSearchRelayList","getRelaysFromList","DEFAULT_SEARCH_RELAYS","SearchPage","navigate","useNavigate","searchRelays","autoFocusSearch","useBreakpointValue","setParams","useSearchParams","searchQuery","searchRelay","register","handleSubmit","setValue","useForm","handleSearchText","text","cleanText","safeDecode","hashTagMatch","getMatchHashtag","readClipboard","useCallback","submit","values","newParams","shouldSearch","VerticalPageLayout","QRCodeScannerButton","IconButton","CopyToClipboardIcon","Input","Select","SearchIcon","SettingsIcon","SearchView","PeopleListProvider"],"mappings":"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"}