{"version":3,"file":"index-D6oneq3Q.js","sources":["../../src/components/icons/trend-up-01.tsx","../../src/components/icons/clock.tsx","../../src/components/icons/hourglass-03.tsx","../../src/views/communities/components/community-description.tsx","../../src/views/communities/components/community-join-button.tsx","../../src/views/community/components/community-menu.tsx","../../src/views/community/components/community-members-modal.tsx","../../src/views/community/components/vertical-community-details.tsx","../../src/views/community/components/horizonal-community-details.tsx","../../src/views/community/components/community-edit-modal.tsx","../../src/views/community/community-home.tsx","../../src/views/community/index.tsx"],"sourcesContent":["import { createIcon } from \"@chakra-ui/icons\";\n\nconst TrendUp01 = createIcon({\n  displayName: \"TrendUp01\",\n  viewBox: \"0 0 24 24\",\n  path: [\n    <path\n      d=\"M22 7L14.1314 14.8686C13.7354 15.2646 13.5373 15.4627 13.309 15.5368C13.1082 15.6021 12.8918 15.6021 12.691 15.5368C12.4627 15.4627 12.2646 15.2646 11.8686 14.8686L9.13137 12.1314C8.73535 11.7354 8.53735 11.5373 8.30902 11.4632C8.10817 11.3979 7.89183 11.3979 7.69098 11.4632C7.46265 11.5373 7.26465 11.7354 6.86863 12.1314L2 17M22 7H15M22 7V14\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    ></path>,\n  ],\n  defaultProps: { boxSize: 4 },\n});\n\nexport default TrendUp01;\n","import { createIcon } from \"@chakra-ui/icons\";\n\nconst Clock = createIcon({\n  displayName: \"Clock\",\n  viewBox: \"0 0 24 24\",\n  path: [\n    <path\n      d=\"M12 6V12L16 14M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    ></path>,\n  ],\n  defaultProps: { boxSize: 4 },\n});\n\nexport default Clock;\n","import { createIcon } from \"@chakra-ui/icons\";\n\nconst Hourglass03 = createIcon({\n  displayName: \"Hourglass03\",\n  viewBox: \"0 0 24 24\",\n  path: [\n    <path\n      d=\"M9 18.5H15M6.6 2H17.4C17.9601 2 18.2401 2 18.454 2.10899C18.6422 2.20487 18.7951 2.35785 18.891 2.54601C19 2.75992 19 3.03995 19 3.6V5.67452C19 6.1637 19 6.40829 18.9447 6.63846C18.8957 6.84254 18.8149 7.03763 18.7053 7.21657C18.5816 7.4184 18.4086 7.59135 18.0627 7.93726L15.1314 10.8686C14.7354 11.2646 14.5373 11.4627 14.4632 11.691C14.3979 11.8918 14.3979 12.1082 14.4632 12.309C14.5373 12.5373 14.7354 12.7354 15.1314 13.1314L18.0627 16.0627C18.4086 16.4086 18.5816 16.5816 18.7053 16.7834C18.8149 16.9624 18.8957 17.1575 18.9447 17.3615C19 17.5917 19 17.8363 19 18.3255V20.4C19 20.9601 19 21.2401 18.891 21.454C18.7951 21.6422 18.6422 21.7951 18.454 21.891C18.2401 22 17.9601 22 17.4 22H6.6C6.03995 22 5.75992 22 5.54601 21.891C5.35785 21.7951 5.20487 21.6422 5.10899 21.454C5 21.2401 5 20.9601 5 20.4V18.3255C5 17.8363 5 17.5917 5.05526 17.3615C5.10425 17.1575 5.18506 16.9624 5.29472 16.7834C5.4184 16.5816 5.59135 16.4086 5.93726 16.0627L8.86863 13.1314C9.26465 12.7354 9.46265 12.5373 9.53684 12.309C9.6021 12.1082 9.6021 11.8918 9.53684 11.691C9.46266 11.4627 9.26464 11.2646 8.86863 10.8686L5.93726 7.93726C5.59136 7.59136 5.4184 7.4184 5.29472 7.21657C5.18506 7.03763 5.10425 6.84254 5.05526 6.63846C5 6.40829 5 6.1637 5 5.67452V3.6C5 3.03995 5 2.75992 5.10899 2.54601C5.20487 2.35785 5.35785 2.20487 5.54601 2.10899C5.75992 2 6.03995 2 6.6 2Z\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    ></path>,\n  ],\n  defaultProps: { boxSize: 4 },\n});\n\nexport default Hourglass03;\n","import { useState } from \"react\";\nimport { Box, BoxProps, Button } from \"@chakra-ui/react\";\nimport { useRenderedContent } from \"applesauce-react\";\n\nimport { NostrEvent } from \"../../../types/nostr-event\";\nimport { getCommunityDescription } from \"../../../helpers/nostr/communities\";\nimport { components } from \"../../../components/content\";\nimport { renderGenericUrl } from \"../../../components/content/links\";\n\nconst linkRenderers = [renderGenericUrl];\n\nexport default function CommunityDescription({\n  community,\n  maxLength,\n  showExpand,\n  ...props\n}: Omit<BoxProps, \"children\"> & { community: NostrEvent; maxLength?: number; showExpand?: boolean }) {\n  const description = getCommunityDescription(community);\n  const [showAll, setShowAll] = useState(false);\n  const content = useRenderedContent(description, components, {\n    maxLength: showAll ? undefined : maxLength,\n    linkRenderers,\n  });\n\n  return (\n    <>\n      <Box whiteSpace=\"pre-wrap\" {...props}>\n        {content}\n      </Box>\n      {maxLength !== undefined && showExpand && !showAll && (description?.length ?? 0) > maxLength && (\n        <Button variant=\"link\" onClick={() => setShowAll(true)}>\n          Show More\n        </Button>\n      )}\n    </>\n  );\n}\n","import { useCallback } from \"react\";\nimport dayjs from \"dayjs\";\nimport { Button, ButtonProps } from \"@chakra-ui/react\";\n\nimport { DraftNostrEvent, NostrEvent, isDTag } from \"../../../types/nostr-event\";\nimport useUserCommunitiesList from \"../../../hooks/use-user-communities-list\";\nimport useCurrentAccount from \"../../../hooks/use-current-account\";\nimport { getCommunityName } from \"../../../helpers/nostr/communities\";\nimport { COMMUNITIES_LIST_KIND, listAddCoordinate, listRemoveCoordinate } from \"../../../helpers/nostr/lists\";\nimport { getEventCoordinate } from \"../../../helpers/nostr/event\";\nimport { usePublishEvent } from \"../../../providers/global/publish-provider\";\n\nexport default function CommunityJoinButton({\n  community,\n  ...props\n}: Omit<ButtonProps, \"children\"> & { community: NostrEvent }) {\n  const publish = usePublishEvent();\n  const account = useCurrentAccount();\n  const { list, pointers } = useUserCommunitiesList(account?.pubkey);\n\n  const isSubscribed = pointers.find(\n    (cord) => cord.identifier === getCommunityName(community) && cord.pubkey === community.pubkey,\n  );\n\n  const handleClick = useCallback(async () => {\n    const favList = {\n      kind: COMMUNITIES_LIST_KIND,\n      content: list?.content ?? \"\",\n      created_at: dayjs().unix(),\n      tags: list?.tags.filter((t) => !isDTag(t)) ?? [],\n    };\n\n    let draft: DraftNostrEvent;\n    if (isSubscribed) draft = listRemoveCoordinate(favList, getEventCoordinate(community));\n    else draft = listAddCoordinate(favList, getEventCoordinate(community));\n\n    await publish(isSubscribed ? \"Unsubscribe\" : \"Subscribe\", draft);\n  }, [isSubscribed, list, community, publish]);\n\n  return (\n    <Button\n      onClick={handleClick}\n      variant={isSubscribed ? \"outline\" : \"solid\"}\n      colorScheme={isSubscribed ? \"red\" : \"green\"}\n      {...props}\n    >\n      {isSubscribed ? \"Leave\" : \"Join\"}\n    </Button>\n  );\n}\n","import { MenuItem } from \"@chakra-ui/react\";\n\nimport { DotsMenuButton, MenuIconButtonProps } from \"../../../components/dots-menu-button\";\nimport { NostrEvent } from \"../../../types/nostr-event\";\nimport useCurrentAccount from \"../../../hooks/use-current-account\";\nimport PencilLine from \"../../../components/icons/pencil-line\";\nimport OpenInAppMenuItem from \"../../../components/common-menu-items/open-in-app\";\nimport CopyEmbedCodeMenuItem from \"../../../components/common-menu-items/copy-embed-code\";\nimport DebugEventMenuItem from \"../../../components/debug-modal/debug-event-menu-item\";\n\nexport default function CommunityMenu({\n  community,\n  onEditClick,\n  ...props\n}: Omit<MenuIconButtonProps, \"children\"> & { community: NostrEvent; onEditClick?: () => void }) {\n  const account = useCurrentAccount();\n\n  return (\n    <>\n      <DotsMenuButton {...props}>\n        <OpenInAppMenuItem event={community} />\n        <CopyEmbedCodeMenuItem event={community} />\n        {account?.pubkey === community.pubkey && onEditClick && (\n          <MenuItem onClick={onEditClick} icon={<PencilLine />}>\n            Edit Community\n          </MenuItem>\n        )}\n        <DebugEventMenuItem event={community} />\n      </DotsMenuButton>\n    </>\n  );\n}\n","import {\n  Button,\n  Flex,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  ModalProps,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\n\nimport { NostrEvent } from \"../../../types/nostr-event\";\nimport useTimelineLoader from \"../../../hooks/use-timeline-loader\";\nimport { useReadRelays } from \"../../../hooks/use-client-relays\";\nimport { getCommunityRelays } from \"../../../helpers/nostr/communities\";\nimport { getEventCoordinate } from \"../../../helpers/nostr/event\";\nimport { COMMUNITIES_LIST_KIND } from \"../../../helpers/nostr/lists\";\nimport IntersectionObserverProvider from \"../../../providers/local/intersection-observer\";\nimport { useTimelineCurserIntersectionCallback } from \"../../../hooks/use-timeline-cursor-intersection-callback\";\nimport TimelineActionAndStatus from \"../../../components/timeline/timeline-action-and-status\";\nimport UserLink from \"../../../components/user/user-link\";\nimport UserDnsIdentity from \"../../../components/user/user-dns-identity\";\nimport UserAvatarLink from \"../../../components/user/user-avatar-link\";\n\nfunction UserCard({ pubkey }: { pubkey: string }) {\n  return (\n    <Flex overflow=\"hidden\" gap=\"4\" alignItems=\"center\">\n      <UserAvatarLink pubkey={pubkey} />\n      <Flex direction=\"column\" flex={1} overflow=\"hidden\">\n        <UserLink pubkey={pubkey} fontWeight=\"bold\" />\n        <UserDnsIdentity pubkey={pubkey} />\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default function CommunityMembersModal({\n  community,\n  onClose,\n  ...props\n}: Omit<ModalProps, \"children\"> & { community: NostrEvent }) {\n  const communityCoordinate = getEventCoordinate(community);\n  const readRelays = useReadRelays(getCommunityRelays(community));\n  const { loader, timeline: lists } = useTimelineLoader(`${communityCoordinate}-members`, readRelays, [\n    { \"#a\": [communityCoordinate], kinds: [COMMUNITIES_LIST_KIND] },\n  ]);\n  const callback = useTimelineCurserIntersectionCallback(loader);\n\n  const listsByPubkey: Record<string, NostrEvent> = {};\n  if (lists) {\n    for (const list of lists) {\n      if (!listsByPubkey[list.pubkey] || listsByPubkey[list.pubkey].created_at < list.created_at) {\n        listsByPubkey[list.pubkey] = list;\n      }\n    }\n  }\n\n  return (\n    <IntersectionObserverProvider callback={callback}>\n      <Modal onClose={onClose} size=\"4xl\" {...props}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader px=\"4\" pt=\"4\" pb=\"0\">\n            Community Members\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody p=\"4\">\n            <SimpleGrid columns={{ base: 1, lg: 2 }} spacing=\"4\">\n              {lists?.map((list) => <UserCard key={list.id} pubkey={list.pubkey} />)}\n            </SimpleGrid>\n            <TimelineActionAndStatus timeline={loader} />\n          </ModalBody>\n\n          <ModalFooter px=\"4\" pt=\"0\" pb=\"4\">\n            <Button onClick={onClose}>Close</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </IntersectionObserverProvider>\n  );\n}\n","import { Box, ButtonGroup, Card, CardProps, Flex, Heading, Link, Text, useDisclosure } from \"@chakra-ui/react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport {\n  getCommunityDescription,\n  getCommunityLinks,\n  getCommunityMods,\n  getCommunityRelays,\n  getCommunityRules,\n} from \"../../../helpers/nostr/communities\";\nimport CommunityDescription from \"../../communities/components/community-description\";\nimport UserAvatarLink from \"../../../components/user/user-avatar-link\";\nimport UserLink from \"../../../components/user/user-link\";\nimport { NostrEvent } from \"../../../types/nostr-event\";\nimport CommunityJoinButton from \"../../communities/components/community-join-button\";\nimport CommunityMenu from \"./community-menu\";\nimport useCountCommunityMembers from \"../../../hooks/use-count-community-members\";\nimport CommunityMembersModal from \"./community-members-modal\";\nimport { readablizeSats } from \"../../../helpers/bolt11\";\nimport { RelayFavicon } from \"../../../components/relay-favicon\";\n\nexport default function VerticalCommunityDetails({\n  community,\n  onEditClick,\n  ...props\n}: Omit<CardProps, \"children\"> & { community: NostrEvent; onEditClick?: () => void }) {\n  const membersModal = useDisclosure();\n  const communityRelays = getCommunityRelays(community);\n  const mods = getCommunityMods(community);\n  const description = getCommunityDescription(community);\n  const rules = getCommunityRules(community);\n  const links = getCommunityLinks(community);\n\n  const countMembers = useCountCommunityMembers(community);\n\n  return (\n    <>\n      <Card p=\"4\" gap=\"4\" {...props}>\n        {description && (\n          <Box>\n            <Heading size=\"sm\" mb=\"1\">\n              About\n            </Heading>\n            <CommunityDescription community={community} maxLength={256} showExpand />\n          </Box>\n        )}\n        <ButtonGroup w=\"full\">\n          <CommunityJoinButton community={community} flex={1} />\n          <CommunityMenu community={community} aria-label=\"More\" onEditClick={onEditClick} />\n        </ButtonGroup>\n        <Box>\n          <Heading size=\"sm\" mb=\"1\">\n            Mods\n          </Heading>\n          <Flex direction=\"column\" gap=\"2\">\n            {mods.map((pubkey) => (\n              <Flex gap=\"2\">\n                <UserAvatarLink pubkey={pubkey} size=\"xs\" />\n                <UserLink pubkey={pubkey} />\n              </Flex>\n            ))}\n          </Flex>\n        </Box>\n        <Box as=\"button\" textAlign=\"start\" cursor=\"pointer\" onClick={membersModal.onOpen}>\n          <Heading size=\"sm\" mb=\"1\">\n            Members\n          </Heading>\n          <Text>{countMembers ? readablizeSats(countMembers) : \"unknown\"}</Text>\n        </Box>\n        {rules && (\n          <Box>\n            <Heading size=\"sm\" mb=\"1\">\n              Rules\n            </Heading>\n            <Text whiteSpace=\"pre-wrap\">{rules}</Text>\n          </Box>\n        )}\n        {communityRelays.length > 0 && (\n          <Box>\n            <Heading size=\"sm\" mb=\"1\">\n              Relays\n            </Heading>\n            <Flex direction=\"column\" gap=\"2\">\n              {communityRelays.map((url) => (\n                <Flex key={url} alignItems=\"center\" gap=\"2\">\n                  <RelayFavicon relay={url} size=\"xs\" />\n                  <Link as={RouterLink} to={`/r/${encodeURIComponent(url)}`} fontWeight=\"bold\" isTruncated>\n                    {url}\n                  </Link>\n                </Flex>\n              ))}\n            </Flex>\n          </Box>\n        )}\n        {links.length > 0 && (\n          <Box>\n            <Heading size=\"sm\" mb=\"1\">\n              Links\n            </Heading>\n            <Box>\n              {links.map(([url, name]) => (\n                <Link href={url} isTruncated isExternal display=\"block\">\n                  {name || url}\n                </Link>\n              ))}\n            </Box>\n          </Box>\n        )}\n      </Card>\n      {membersModal.isOpen && (\n        <CommunityMembersModal isOpen={membersModal.isOpen} onClose={membersModal.onClose} community={community} />\n      )}\n    </>\n  );\n}\n","import {\n  Box,\n  Button,\n  ButtonGroup,\n  Card,\n  CardBody,\n  CardProps,\n  Flex,\n  Heading,\n  Link,\n  SimpleGrid,\n  Text,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport {\n  getCommunityDescription,\n  getCommunityLinks,\n  getCommunityMods,\n  getCommunityRelays,\n  getCommunityRules,\n} from \"../../../helpers/nostr/communities\";\nimport CommunityDescription from \"../../communities/components/community-description\";\nimport UserAvatarLink from \"../../../components/user/user-avatar-link\";\nimport UserLink from \"../../../components/user/user-link\";\nimport { NostrEvent } from \"../../../types/nostr-event\";\nimport CommunityJoinButton from \"../../communities/components/community-join-button\";\nimport CommunityMenu from \"./community-menu\";\nimport useCountCommunityMembers from \"../../../hooks/use-count-community-members\";\nimport { readablizeSats } from \"../../../helpers/bolt11\";\nimport CommunityMembersModal from \"./community-members-modal\";\nimport { RelayFavicon } from \"../../../components/relay-favicon\";\n\nexport default function HorizontalCommunityDetails({\n  community,\n  onEditClick,\n  ...props\n}: Omit<CardProps, \"children\"> & { community: NostrEvent; onEditClick?: () => void }) {\n  const membersModal = useDisclosure();\n  const communityRelays = getCommunityRelays(community);\n  const mods = getCommunityMods(community);\n  const description = getCommunityDescription(community);\n  const rules = getCommunityRules(community);\n  const links = getCommunityLinks(community);\n\n  const more = useDisclosure();\n  const countMembers = useCountCommunityMembers(community);\n\n  return (\n    <>\n      <Card {...props}>\n        <CardBody>\n          <ButtonGroup float=\"right\">\n            <CommunityJoinButton community={community} />\n            <CommunityMenu community={community} aria-label=\"More\" onEditClick={onEditClick} />\n          </ButtonGroup>\n          {description && (\n            <>\n              <Heading size=\"sm\" mb=\"1\">\n                Description\n              </Heading>\n              <CommunityDescription community={community} mb=\"1\" />\n            </>\n          )}\n\n          {more.isOpen ? (\n            <SimpleGrid spacing=\"4\" columns={2}>\n              <Box>\n                <Heading size=\"sm\" mb=\"1\">\n                  Mods\n                </Heading>\n                <Flex direction=\"column\" gap=\"2\">\n                  {mods.map((pubkey) => (\n                    <Flex gap=\"2\">\n                      <UserAvatarLink pubkey={pubkey} size=\"xs\" />\n                      <UserLink pubkey={pubkey} />\n                    </Flex>\n                  ))}\n                </Flex>\n              </Box>\n              <Box as=\"button\" textAlign=\"start\" cursor=\"pointer\" onClick={membersModal.onOpen}>\n                <Heading size=\"sm\" mb=\"1\">\n                  Members\n                </Heading>\n                <Text>{countMembers ? readablizeSats(countMembers) : \"unknown\"}</Text>\n              </Box>\n              {rules && (\n                <Box>\n                  <Heading size=\"sm\" mb=\"1\">\n                    Rules\n                  </Heading>\n                  <Text whiteSpace=\"pre-wrap\">{rules}</Text>\n                </Box>\n              )}\n              {communityRelays.length > 0 && (\n                <Box>\n                  <Heading size=\"sm\" mb=\"1\">\n                    Relays\n                  </Heading>\n                  <Flex direction=\"column\" gap=\"2\">\n                    {communityRelays.map((url) => (\n                      <Flex key={url} alignItems=\"center\" gap=\"2\">\n                        <RelayFavicon relay={url} size=\"xs\" />\n                        <Link as={RouterLink} to={`/r/${encodeURIComponent(url)}`} fontWeight=\"bold\" isTruncated>\n                          {url}\n                        </Link>\n                      </Flex>\n                    ))}\n                  </Flex>\n                </Box>\n              )}\n              {links.length > 0 && (\n                <Box>\n                  <Heading size=\"sm\" mb=\"1\">\n                    Links\n                  </Heading>\n                  <Box>\n                    {links.map(([url, name]) => (\n                      <Link href={url} isTruncated isExternal display=\"block\">\n                        {name || url}\n                      </Link>\n                    ))}\n                  </Box>\n                </Box>\n              )}\n            </SimpleGrid>\n          ) : (\n            <Button variant=\"link\" onClick={more.onOpen} w=\"full\">\n              Show more\n            </Button>\n          )}\n        </CardBody>\n      </Card>\n      {membersModal.isOpen && (\n        <CommunityMembersModal isOpen={membersModal.isOpen} onClose={membersModal.onClose} community={community} />\n      )}\n    </>\n  );\n}\n","import { useMemo } from \"react\";\nimport { ModalProps } from \"@chakra-ui/react\";\nimport dayjs from \"dayjs\";\n\nimport { DraftNostrEvent, NostrEvent } from \"../../../types/nostr-event\";\nimport {\n  COMMUNITY_DEFINITION_KIND,\n  getCommunityDescription,\n  getCommunityImage,\n  getCommunityLinks,\n  getCommunityMods,\n  getCommunityName,\n  getCommunityRelays,\n  getCommunityRules,\n} from \"../../../helpers/nostr/communities\";\nimport CommunityCreateModal, { FormValues } from \"../../communities/components/community-create-modal\";\nimport { getImageSize } from \"../../../helpers/image\";\nimport { usePublishEvent } from \"../../../providers/global/publish-provider\";\n\nexport default function CommunityEditModal({\n  isOpen,\n  onClose,\n  community,\n  ...props\n}: Omit<ModalProps, \"children\"> & { community: NostrEvent }) {\n  const publish = usePublishEvent();\n\n  const defaultValues = useMemo<FormValues>(\n    () => ({\n      name: getCommunityName(community),\n      description: getCommunityDescription(community) || \"\",\n      banner: getCommunityImage(community) || \"\",\n      rules: getCommunityRules(community) || \"\",\n      mods: getCommunityMods(community) || [],\n      relays: getCommunityRelays(community) || [],\n      links: getCommunityLinks(community) || [],\n      // ranking: getCommunityRanking(community) || \"votes\",\n    }),\n    [community],\n  );\n\n  const updateCommunity = async (values: FormValues) => {\n    const draft: DraftNostrEvent = {\n      kind: COMMUNITY_DEFINITION_KIND,\n      created_at: dayjs().unix(),\n      content: \"\",\n      tags: [[\"d\", getCommunityName(community)]],\n    };\n\n    if (values.description) draft.tags.push([\"description\", values.description]);\n    if (values.banner) {\n      try {\n        const size = await getImageSize(values.banner);\n        draft.tags.push([\"image\", values.banner, `${size.width}x${size.height}`]);\n      } catch (e) {\n        draft.tags.push([\"image\", values.banner]);\n      }\n    }\n    for (const pubkey of values.mods) draft.tags.push([\"p\", pubkey, \"\", \"moderator\"]);\n    for (const url of values.relays) draft.tags.push([\"relay\", url]);\n    for (const [url, name] of values.links) draft.tags.push(name ? [\"r\", url, name] : [\"r\", url]);\n\n    // if (values.ranking) draft.tags.push([\"rank_mode\", values.ranking]);\n\n    const pub = await publish(\"Update Community\", draft, values.relays);\n    if (pub) onClose();\n  };\n\n  return (\n    <CommunityCreateModal\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={updateCommunity}\n      defaultValues={defaultValues}\n      isUpdate\n      {...props}\n    />\n  );\n}\n","import { useContext } from \"react\";\nimport { Button, ButtonGroup, Divider, Flex, Heading, Text, useDisclosure } from \"@chakra-ui/react\";\nimport { Outlet, Link as RouterLink, useLocation } from \"react-router-dom\";\nimport { useObservable } from \"applesauce-react\";\nimport { kinds, nip19 } from \"nostr-tools\";\n\nimport {\n  getCommunityRelays as getCommunityRelays,\n  getCommunityImage,\n  getCommunityName,\n  COMMUNITY_APPROVAL_KIND,\n  getCommunityMods,\n  buildApprovalMap,\n} from \"../../helpers/nostr/communities\";\nimport { NostrEvent } from \"../../types/nostr-event\";\nimport VerticalPageLayout from \"../../components/vertical-page-layout\";\nimport UserAvatarLink from \"../../components/user/user-avatar-link\";\nimport UserLink from \"../../components/user/user-link\";\nimport { AdditionalRelayProvider } from \"../../providers/local/additional-relay-context\";\n\nimport TrendUp01 from \"../../components/icons/trend-up-01\";\nimport Clock from \"../../components/icons/clock\";\nimport Hourglass03 from \"../../components/icons/hourglass-03\";\nimport VerticalCommunityDetails from \"./components/vertical-community-details\";\nimport { useBreakpointValue } from \"../../providers/global/breakpoint-provider\";\nimport HorizontalCommunityDetails from \"./components/horizonal-community-details\";\nimport { useReadRelays } from \"../../hooks/use-client-relays\";\nimport useTimelineLoader from \"../../hooks/use-timeline-loader\";\nimport { getEventCoordinate, getEventUID } from \"../../helpers/nostr/event\";\nimport { WritingIcon } from \"../../components/icons\";\nimport { PostModalContext } from \"../../providers/route/post-modal-provider\";\nimport CommunityEditModal from \"./components/community-edit-modal\";\nimport TimelineLoader from \"../../classes/timeline-loader\";\nimport useClientSideMuteFilter from \"../../hooks/use-client-side-mute-filter\";\n\nfunction getCommunityPath(community: NostrEvent) {\n  return `/c/${encodeURIComponent(getCommunityName(community))}/${nip19.npubEncode(community.pubkey)}`;\n}\n\nexport type RouterContext = { community: NostrEvent; timeline: TimelineLoader };\n\nexport default function CommunityHomePage({ community }: { community: NostrEvent }) {\n  const muteFilter = useClientSideMuteFilter();\n  const image = getCommunityImage(community);\n  const location = useLocation();\n  const { openModal } = useContext(PostModalContext);\n  const editModal = useDisclosure();\n  const communityCoordinate = getEventCoordinate(community);\n\n  const verticalLayout = useBreakpointValue({ base: true, xl: false });\n\n  const communityRelays = getCommunityRelays(community);\n  const readRelays = useReadRelays(communityRelays);\n  const { loader } = useTimelineLoader(`${getEventUID(community)}-timeline`, readRelays, {\n    kinds: [kinds.ShortTextNote, kinds.Repost, kinds.GenericRepost, COMMUNITY_APPROVAL_KIND],\n    \"#a\": [communityCoordinate],\n  });\n\n  // get pending notes\n  const events = useObservable(loader.timeline) ?? [];\n  const mods = getCommunityMods(community);\n  const approvals = buildApprovalMap(events, mods);\n  const pending = events.filter((e) => e.kind !== COMMUNITY_APPROVAL_KIND && !approvals.has(e.id) && !muteFilter(e));\n\n  let active = \"newest\";\n  if (location.pathname.endsWith(\"/newest\")) active = \"newest\";\n  if (location.pathname.endsWith(\"/pending\")) active = \"pending\";\n  if (location.pathname.endsWith(\"/trending\")) active = \"trending\";\n\n  return (\n    <>\n      <AdditionalRelayProvider relays={communityRelays}>\n        <VerticalPageLayout pt={image && \"0\"}>\n          <Flex\n            backgroundImage={getCommunityImage(community)}\n            backgroundRepeat=\"no-repeat\"\n            backgroundSize=\"cover\"\n            backgroundPosition=\"center\"\n            aspectRatio={3 / 1}\n            backgroundColor=\"rgba(0,0,0,0.2)\"\n            p=\"4\"\n            gap=\"4\"\n            direction=\"column\"\n            justifyContent=\"flex-end\"\n            textShadow=\"2px 2px var(--chakra-blur-sm) var(--chakra-colors-blackAlpha-800)\"\n          >\n            <Heading>{getCommunityName(community)}</Heading>\n            <Flex gap=\"2\" alignItems=\"center\">\n              <UserAvatarLink pubkey={community.pubkey} size=\"sm\" />\n              <Text>by</Text>\n              <UserLink pubkey={community.pubkey} />\n            </Flex>\n          </Flex>\n\n          {verticalLayout && (\n            <HorizontalCommunityDetails community={community} w=\"full\" flexShrink={0} onEditClick={editModal.onOpen} />\n          )}\n\n          <Flex gap=\"4\" alignItems=\"flex-start\" overflow=\"hidden\">\n            <Flex direction=\"column\" gap=\"4\" flex={1} overflow=\"hidden\" minH=\"full\">\n              <ButtonGroup size=\"sm\">\n                <Button\n                  colorScheme=\"primary\"\n                  leftIcon={<WritingIcon />}\n                  onClick={() =>\n                    openModal({\n                      cacheFormKey: communityCoordinate + \"-new-post\",\n                      initCommunity: communityCoordinate,\n                      requireSubject: true,\n                    })\n                  }\n                >\n                  New Post\n                </Button>\n                <Divider orientation=\"vertical\" h=\"2rem\" />\n                <Button\n                  leftIcon={<TrendUp01 />}\n                  as={RouterLink}\n                  to={getCommunityPath(community) + \"/trending\"}\n                  colorScheme={active === \"trending\" ? \"primary\" : \"gray\"}\n                  replace\n                >\n                  Trending\n                </Button>\n                <Button\n                  leftIcon={<Clock />}\n                  as={RouterLink}\n                  to={getCommunityPath(community) + \"/newest\"}\n                  colorScheme={active === \"newest\" ? \"primary\" : \"gray\"}\n                  replace\n                >\n                  New\n                </Button>\n                <Button\n                  leftIcon={<Hourglass03 />}\n                  as={RouterLink}\n                  to={getCommunityPath(community) + \"/pending\"}\n                  colorScheme={active == \"pending\" ? \"primary\" : \"gray\"}\n                  replace\n                >\n                  Pending ({pending.length})\n                </Button>\n              </ButtonGroup>\n\n              <Outlet context={{ community, timeline: loader } satisfies RouterContext} />\n            </Flex>\n\n            {!verticalLayout && (\n              <VerticalCommunityDetails\n                community={community}\n                w=\"full\"\n                maxW=\"xs\"\n                flexShrink={0}\n                onEditClick={editModal.onOpen}\n              />\n            )}\n          </Flex>\n        </VerticalPageLayout>\n      </AdditionalRelayProvider>\n      {editModal.isOpen && (\n        <CommunityEditModal isOpen={editModal.isOpen} onClose={editModal.onClose} community={community} />\n      )}\n    </>\n  );\n}\n","import { useParams } from \"react-router-dom\";\nimport { COMMUNITY_DEFINITION_KIND } from \"../../helpers/nostr/communities\";\nimport useReplaceableEvent from \"../../hooks/use-replaceable-event\";\nimport { Spinner } from \"@chakra-ui/react\";\nimport CommunityHomePage from \"./community-home\";\nimport { getPubkeyFromDecodeResult, isHexKey, safeDecode } from \"../../helpers/nip19\";\n\nfunction useCommunityPointer() {\n  const { community, pubkey } = useParams();\n\n  const decoded = community ? safeDecode(community) : undefined;\n  if (decoded) {\n    if (decoded.type === \"naddr\" && decoded.data.kind === COMMUNITY_DEFINITION_KIND) return decoded.data;\n  } else if (community && pubkey) {\n    const hexPubkey = isHexKey(pubkey) ? pubkey : getPubkeyFromDecodeResult(safeDecode(pubkey));\n    if (!hexPubkey) return;\n\n    return { kind: COMMUNITY_DEFINITION_KIND, pubkey: hexPubkey, identifier: community };\n  }\n}\n\nexport default function CommunityView() {\n  const pointer = useCommunityPointer();\n  const community = useReplaceableEvent(pointer, undefined, { alwaysRequest: true });\n\n  if (!community) return <Spinner />;\n\n  return <CommunityHomePage community={community} />;\n}\n"],"names":["TrendUp01","createIcon","jsx","Clock","Hourglass03","linkRenderers","renderGenericUrl","CommunityDescription","community","maxLength","showExpand","props","description","getCommunityDescription","showAll","setShowAll","useState","content","useRenderedContent","components","jsxs","Fragment","Box","Button","CommunityJoinButton","publish","usePublishEvent","account","useCurrentAccount","list","pointers","useUserCommunitiesList","isSubscribed","cord","getCommunityName","handleClick","useCallback","favList","COMMUNITIES_LIST_KIND","dayjs","t","isDTag","draft","listRemoveCoordinate","getEventCoordinate","listAddCoordinate","CommunityMenu","onEditClick","DotsMenuButton","OpenInAppMenuItem","CopyEmbedCodeMenuItem","MenuItem","PencilLine","DebugEventMenuItem","UserCard","pubkey","Flex","UserAvatarLink","UserLink","UserDnsIdentity","CommunityMembersModal","onClose","communityCoordinate","readRelays","useReadRelays","getCommunityRelays","loader","lists","useTimelineLoader","callback","useTimelineCurserIntersectionCallback","listsByPubkey","IntersectionObserverProvider","Modal","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","SimpleGrid","TimelineActionAndStatus","ModalFooter","VerticalCommunityDetails","membersModal","useDisclosure","communityRelays","mods","getCommunityMods","rules","getCommunityRules","links","getCommunityLinks","countMembers","useCountCommunityMembers","Card","Heading","ButtonGroup","Text","readablizeSats","url","RelayFavicon","Link","RouterLink","name","HorizontalCommunityDetails","more","CardBody","CommunityEditModal","isOpen","defaultValues","useMemo","getCommunityImage","updateCommunity","values","COMMUNITY_DEFINITION_KIND","size","getImageSize","CommunityCreateModal","getCommunityPath","nip19","CommunityHomePage","muteFilter","useClientSideMuteFilter","image","location","useLocation","openModal","useContext","PostModalContext","editModal","verticalLayout","useBreakpointValue","getEventUID","kinds","COMMUNITY_APPROVAL_KIND","events","useObservable","approvals","buildApprovalMap","pending","e","active","AdditionalRelayProvider","VerticalPageLayout","WritingIcon","Divider","Outlet","useCommunityPointer","useParams","decoded","safeDecode","hexPubkey","isHexKey","getPubkeyFromDecodeResult","CommunityView","pointer","useReplaceableEvent","Spinner"],"mappings":"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"}