{"version":3,"file":"index-Dy8b-5Ga.js","sources":["../../src/views/discovery/blindspot/index.tsx"],"sourcesContent":["import { memo, useEffect, useMemo, useState } from \"react\";\nimport {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n  Box,\n  Card,\n  Heading,\n  Select,\n  SimpleGrid,\n  Text,\n  useForceUpdate,\n} from \"@chakra-ui/react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { nip19 } from \"nostr-tools\";\n\nimport useCurrentAccount from \"../../../hooks/use-current-account\";\nimport useUserContactList from \"../../../hooks/use-user-contact-list\";\nimport { useWebOfTrust } from \"../../../providers/global/web-of-trust-provider\";\nimport UserAvatar from \"../../../components/user/user-avatar\";\nimport UserName from \"../../../components/user/user-name\";\nimport HoverLinkOverlay from \"../../../components/hover-link-overlay\";\nimport VerticalPageLayout from \"../../../components/vertical-page-layout\";\n\nconst UserCard = memo(({ pubkey, blindspot }: { pubkey: string; blindspot: string[] }) => {\n  return (\n    <Card display=\"block\" p=\"4\">\n      <UserAvatar pubkey={pubkey} mr=\"4\" float=\"left\" />\n      <Heading size=\"md\" isTruncated>\n        <HoverLinkOverlay as={RouterLink} to={`/discovery/blindspot/${nip19.npubEncode(pubkey)}`}>\n          <UserName pubkey={pubkey} />\n        </HoverLinkOverlay>\n      </Heading>\n      <Text>Following {blindspot.length} users you don't follow</Text>\n    </Card>\n  );\n});\n\nexport default function BlindspotHomeView() {\n  const account = useCurrentAccount()!;\n  const [sort, setSort] = useState(\"quality\"); // follows, quality\n\n  const contacts = useUserContactList(account.pubkey);\n  const graph = useWebOfTrust();\n\n  const update = useForceUpdate();\n  useEffect(() => {\n    graph?.on(\"computed\", update);\n    return () => {\n      graph?.off(\"computed\", update);\n    };\n  }, [graph]);\n\n  const pubkeys = useMemo(() => graph?.connections.get(account.pubkey), [contacts]);\n\n  const blindspots = useMemo(() => {\n    if (!contacts || !pubkeys) return [];\n\n    const arr = Array.from(pubkeys)\n      .map((pubkey) => {\n        const following = graph?.connections.get(pubkey);\n        const blindspot = following?.filter((p) => !pubkeys.includes(p) && p !== account.pubkey) ?? [];\n\n        return { pubkey, blindspot };\n      })\n      .filter((p) => p.blindspot.length > 2);\n\n    if (sort === \"follows\") {\n      return arr.sort((a, b) => b.blindspot.length - a.blindspot.length);\n    } else {\n      // the average distance to pubkeys in the blindspot\n      const quality = new Map<string, number>();\n      for (const { pubkey, blindspot } of arr) {\n        const total = blindspot.reduce((t, p) => t + (graph?.distance.get(p) ?? 0), 0);\n        quality.set(pubkey, total / blindspot.length);\n      }\n\n      return arr.sort((a, b) => quality.get(a.pubkey)! - quality.get(b.pubkey)!);\n    }\n  }, [account.pubkey, pubkeys, graph, sort]);\n\n  return (\n    <VerticalPageLayout>\n      <Box>\n        <Heading>Blind spots</Heading>\n        <Text fontStyle=\"italic\">Pick another user and see what they are seeing that your not.</Text>\n      </Box>\n      <Select ml=\"auto\" maxW=\"48\" value={sort} onChange={(e) => setSort(e.target.value)}>\n        <option value=\"quality\">Quality</option>\n        <option value=\"follows\">Follows</option>\n      </Select>\n\n      {blindspots.length > 0 ? (\n        <SimpleGrid columns={{ base: 1, md: 2, xl: 3 }} spacing=\"4\">\n          {blindspots.map(({ pubkey, blindspot }) => (\n            <UserCard key={pubkey} blindspot={blindspot} pubkey={pubkey} />\n          ))}\n        </SimpleGrid>\n      ) : (\n        <Alert\n          status=\"info\"\n          variant=\"subtle\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          textAlign=\"center\"\n          height=\"200px\"\n        >\n          <AlertIcon boxSize=\"40px\" mr={0} />\n          <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n            No blind spots!\n          </AlertTitle>\n          <AlertDescription maxWidth=\"sm\">\n            Unable to find any blind spots. maybe try following some people?\n          </AlertDescription>\n        </Alert>\n      )}\n    </VerticalPageLayout>\n  );\n}\n"],"names":["UserCard","memo","pubkey","blindspot","jsxs","Card","jsx","UserAvatar","Heading","HoverLinkOverlay","RouterLink","nip19","UserName","Text","BlindspotHomeView","account","useCurrentAccount","sort","setSort","useState","contacts","useUserContactList","graph","useWebOfTrust","update","useForceUpdate","useEffect","pubkeys","useMemo","blindspots","arr","following","p","a","b","quality","total","t","VerticalPageLayout","Box","Select","e","SimpleGrid","Alert","AlertIcon","AlertTitle","AlertDescription"],"mappings":"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"}