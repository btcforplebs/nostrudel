{"version":3,"file":"emoji-pack-Czybvn80.js","sources":["../../src/views/emoji-packs/emoji-pack.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useThrottle } from \"react-use\";\nimport dayjs from \"dayjs\";\n\nimport {\n  Button,\n  ButtonGroup,\n  Flex,\n  Heading,\n  Image,\n  Input,\n  SimpleGrid,\n  Spacer,\n  Tag,\n  TagCloseButton,\n  TagLabel,\n  Text,\n} from \"@chakra-ui/react\";\n\nimport UserLink from \"../../components/user/user-link\";\nimport { ChevronLeftIcon } from \"../../components/icons\";\nimport useCurrentAccount from \"../../hooks/use-current-account\";\nimport { useDeleteEventContext } from \"../../providers/route/delete-event-provider\";\nimport useReplaceableEvent from \"../../hooks/use-replaceable-event\";\nimport EmojiPackMenu from \"./components/emoji-pack-menu\";\nimport EmojiPackFavoriteButton from \"./components/emoji-pack-favorite-button\";\nimport { EMOJI_PACK_KIND, getEmojisFromPack, getPackName } from \"../../helpers/nostr/emoji-packs\";\nimport { DraftNostrEvent, NostrEvent } from \"../../types/nostr-event\";\nimport VerticalPageLayout from \"../../components/vertical-page-layout\";\nimport UserAvatarLink from \"../../components/user/user-avatar-link\";\nimport Timestamp from \"../../components/timestamp\";\nimport useParamsAddressPointer from \"../../hooks/use-params-address-pointer\";\nimport { usePublishEvent } from \"../../providers/global/publish-provider\";\nimport NoteZapButton from \"../../components/note/note-zap-button\";\nimport QuoteEventButton from \"../../components/note/quote-event-button\";\n\nfunction AddEmojiForm({ onAdd }: { onAdd: (values: { name: string; url: string }) => void }) {\n  const { register, handleSubmit, watch, getValues, reset } = useForm({\n    defaultValues: {\n      name: \"\",\n      url: \"\",\n    },\n  });\n\n  const submit = handleSubmit((values) => {\n    onAdd(values);\n    reset();\n  });\n\n  watch(\"url\");\n  const previewURL = useThrottle(getValues().url);\n\n  return (\n    <Flex as=\"form\" gap=\"2\" onSubmit={submit}>\n      <Input\n        placeholder=\"name\"\n        {...register(\"name\", { required: true })}\n        pattern=\"^[a-zA-Z0-9_-]+$\"\n        autoComplete=\"off\"\n        title=\"emoji name, can not contain spaces\"\n      />\n      <Input placeholder=\"https://example.com/emoji.png\" {...register(\"url\", { required: true })} autoComplete=\"off\" />\n      {previewURL && <Image aspectRatio={1} h=\"10\" src={previewURL} />}\n      <Button flexShrink={0} type=\"submit\">\n        Add\n      </Button>\n    </Flex>\n  );\n}\n\nfunction EmojiTag({ name, url, onRemove, scale }: { name: string; url: string; onRemove?: () => void; scale: number }) {\n  return (\n    <Tag>\n      <Image\n        key={name + url}\n        src={url}\n        title={name}\n        alt={`:${name}:`}\n        w={scale}\n        h={scale}\n        ml=\"-1\"\n        mr=\"2\"\n        my=\"1\"\n        borderRadius=\"md\"\n        overflow=\"hidden\"\n      />\n      <TagLabel flex={1}>{name}</TagLabel>\n      {onRemove && <TagCloseButton onClick={onRemove} />}\n    </Tag>\n  );\n}\n\nfunction EmojiPackPage({ pack }: { pack: NostrEvent }) {\n  const navigate = useNavigate();\n  const account = useCurrentAccount();\n  const publish = usePublishEvent();\n  const { deleteEvent } = useDeleteEventContext();\n  const [scale, setScale] = useState(10);\n\n  const isAuthor = account?.pubkey === pack.pubkey;\n  const emojis = getEmojisFromPack(pack);\n\n  const [editing, setEditing] = useState(false);\n  const [draftEmojis, setDraft] = useState(emojis);\n\n  const startEdit = () => {\n    setDraft(emojis);\n    setEditing(true);\n  };\n  const addEmoji = (emoji: { name: string; url: string }) => {\n    setDraft((a) => a.concat(emoji));\n  };\n  const removeEmoji = (name: string) => {\n    setDraft((a) => a.filter((e) => e.name !== name));\n  };\n  const cancelEdit = () => {\n    setDraft([]);\n    setEditing(false);\n  };\n  const saveEdit = async () => {\n    const draft: DraftNostrEvent = {\n      kind: EMOJI_PACK_KIND,\n      content: pack.content || \"\",\n      created_at: dayjs().unix(),\n      tags: [...pack.tags.filter((t) => t[0] !== \"emoji\"), ...draftEmojis.map(({ name, url }) => [\"emoji\", name, url])],\n    };\n\n    const pub = await publish(\"Update emoji pack\", draft);\n    if (pub) setEditing(false);\n  };\n\n  return (\n    <VerticalPageLayout>\n      <Flex gap=\"2\" alignItems=\"center\">\n        <Button onClick={() => navigate(-1)} leftIcon={<ChevronLeftIcon />}>\n          Back\n        </Button>\n\n        <Spacer />\n\n        <ButtonGroup>\n          {isAuthor && (\n            <>\n              {!editing && (\n                <Button colorScheme=\"primary\" onClick={startEdit}>\n                  Edit\n                </Button>\n              )}\n              <Button colorScheme=\"red\" onClick={() => deleteEvent(pack).then(() => navigate(\"/lists\"))}>\n                Delete\n              </Button>\n            </>\n          )}\n          <EmojiPackMenu aria-label=\"More options\" pack={pack} />\n        </ButtonGroup>\n      </Flex>\n\n      <Flex gap=\"2\" alignItems=\"center\">\n        <Heading size=\"lg\" isTruncated>\n          {getPackName(pack)}\n        </Heading>\n        <EmojiPackFavoriteButton pack={pack} size=\"sm\" />\n      </Flex>\n\n      <Flex gap=\"2\" alignItems=\"center\">\n        <Text>Created by:</Text>\n        <UserAvatarLink pubkey={pack.pubkey} size=\"sm\" />\n        <UserLink pubkey={pack.pubkey} fontWeight=\"bold\" />\n      </Flex>\n      <Text>\n        Updated: <Timestamp timestamp={pack.created_at} />\n      </Text>\n\n      <ButtonGroup variant=\"ghost\">\n        <NoteZapButton event={pack} />\n        <QuoteEventButton event={pack} />\n        <EmojiPackFavoriteButton pack={pack} />\n      </ButtonGroup>\n\n      {emojis.length > 0 && (\n        <>\n          {!editing && (\n            <Flex alignItems=\"flex-end\">\n              <Heading size=\"md\">Emojis</Heading>\n              <ButtonGroup size=\"sm\" isAttached ml=\"auto\">\n                <Button variant={scale === 10 ? \"solid\" : \"outline\"} onClick={() => setScale(10)}>\n                  SM\n                </Button>\n                <Button variant={scale === 16 ? \"solid\" : \"outline\"} onClick={() => setScale(16)}>\n                  MD\n                </Button>\n                <Button variant={scale === 24 ? \"solid\" : \"outline\"} onClick={() => setScale(24)}>\n                  LG\n                </Button>\n              </ButtonGroup>\n            </Flex>\n          )}\n          <SimpleGrid columns={{ base: 2, sm: 3, md: 2, lg: 4, xl: 6 }} gap=\"2\">\n            {(editing ? draftEmojis : emojis).map(({ name, url }) => (\n              <EmojiTag\n                key={name + url}\n                scale={scale}\n                name={name}\n                url={url}\n                onRemove={editing ? () => removeEmoji(name) : undefined}\n              />\n            ))}\n          </SimpleGrid>\n        </>\n      )}\n\n      {editing && (\n        <Flex gap=\"2\">\n          <AddEmojiForm onAdd={addEmoji} />\n          <Button ml=\"auto\" onClick={cancelEdit}>\n            Cancel\n          </Button>\n          <Button colorScheme=\"primary\" onClick={saveEdit}>\n            Save\n          </Button>\n        </Flex>\n      )}\n    </VerticalPageLayout>\n  );\n}\n\nexport default function EmojiPackView() {\n  const coordinate = useParamsAddressPointer(\"addr\");\n  const pack = useReplaceableEvent(coordinate);\n\n  if (!pack) {\n    return (\n      <>\n        Looking for pack \"{coordinate.identifier}\" created by <UserLink pubkey={coordinate.pubkey} />\n      </>\n    );\n  }\n\n  return <EmojiPackPage pack={pack} />;\n}\n"],"names":["AddEmojiForm","onAdd","register","handleSubmit","watch","getValues","reset","useForm","submit","values","previewURL","useThrottle","Flex","jsx","Input","Image","Button","EmojiTag","name","url","onRemove","scale","Tag","TagLabel","TagCloseButton","EmojiPackPage","pack","navigate","useNavigate","account","useCurrentAccount","publish","usePublishEvent","deleteEvent","useDeleteEventContext","setScale","useState","isAuthor","emojis","getEmojisFromPack","editing","setEditing","draftEmojis","setDraft","startEdit","addEmoji","emoji","a","removeEmoji","e","cancelEdit","saveEdit","draft","EMOJI_PACK_KIND","dayjs","t","VerticalPageLayout","jsxs","ChevronLeftIcon","Spacer","ButtonGroup","Fragment","EmojiPackMenu","Heading","getPackName","EmojiPackFavoriteButton","Text","UserAvatarLink","UserLink","Timestamp","NoteZapButton","QuoteEventButton","SimpleGrid","EmojiPackView","coordinate","useParamsAddressPointer","useReplaceableEvent"],"mappings":"oVAsCA,SAASA,GAAa,CAAE,MAAAC,GAAqE,CAC3F,KAAM,CAAE,SAAAC,EAAU,aAAAC,EAAc,MAAAC,EAAO,UAAAC,EAAW,MAAAC,GAAUC,EAAQ,CAClE,cAAe,CACb,KAAM,GACN,IAAK,EACP,CAAA,CACD,EAEKC,EAASL,EAAcM,GAAW,CACtCR,EAAMQ,CAAM,EACNH,GAAA,CACP,EAEDF,EAAM,KAAK,EACX,MAAMM,EAAaC,EAAYN,EAAU,EAAE,GAAG,EAE9C,cACGO,EAAK,CAAA,GAAG,OAAO,IAAI,IAAI,SAAUJ,EAChC,SAAA,CAAAK,EAAA,IAACC,EAAA,CACC,YAAY,OACX,GAAGZ,EAAS,OAAQ,CAAE,SAAU,GAAM,EACvC,QAAQ,mBACR,aAAa,MACb,MAAM,oCAAA,CACR,EACCW,EAAAA,IAAAC,EAAA,CAAM,YAAY,gCAAiC,GAAGZ,EAAS,MAAO,CAAE,SAAU,EAAA,CAAM,EAAG,aAAa,KAAM,CAAA,EAC9GQ,SAAeK,EAAM,CAAA,YAAa,EAAG,EAAE,KAAK,IAAKL,EAAY,QAC7DM,EAAO,CAAA,WAAY,EAAG,KAAK,SAAS,SAErC,MAAA,CACF,CAAA,CAAA,CAEJ,CAEA,SAASC,GAAS,CAAE,KAAAC,EAAM,IAAAC,EAAK,SAAAC,EAAU,MAAAC,GAA8E,CACrH,cACGC,EACC,CAAA,SAAA,CAAAT,EAAA,IAACE,EAAA,CAEC,IAAKI,EACL,MAAOD,EACP,IAAK,IAAIA,CAAI,IACb,EAAGG,EACH,EAAGA,EACH,GAAG,KACH,GAAG,IACH,GAAG,IACH,aAAa,KACb,SAAS,QAAA,EAVJH,EAAOC,CAWd,EACCN,EAAA,IAAAU,EAAA,CAAS,KAAM,EAAI,SAAKL,EAAA,EACxBE,GAAYP,EAAAA,IAACW,EAAe,CAAA,QAASJ,CAAU,CAAA,CAClD,CAAA,CAAA,CAEJ,CAEA,SAASK,GAAc,CAAE,KAAAC,GAA8B,CACrD,MAAMC,EAAWC,IACXC,EAAUC,IACVC,EAAUC,IACV,CAAE,YAAAC,GAAgBC,IAClB,CAACb,EAAOc,CAAQ,EAAIC,WAAS,EAAE,EAE/BC,GAAWR,GAAA,YAAAA,EAAS,UAAWH,EAAK,OACpCY,EAASC,EAAkBb,CAAI,EAE/B,CAACc,EAASC,CAAU,EAAIL,WAAS,EAAK,EACtC,CAACM,EAAaC,CAAQ,EAAIP,WAASE,CAAM,EAEzCM,EAAY,IAAM,CACtBD,EAASL,CAAM,EACfG,EAAW,EAAI,CAAA,EAEXI,EAAYC,GAAyC,CACzDH,EAAUI,GAAMA,EAAE,OAAOD,CAAK,CAAC,CAAA,EAE3BE,EAAe9B,GAAiB,CAC3ByB,EAACI,GAAMA,EAAE,OAAQE,GAAMA,EAAE,OAAS/B,CAAI,CAAC,CAAA,EAE5CgC,EAAa,IAAM,CACvBP,EAAS,CAAE,CAAA,EACXF,EAAW,EAAK,CAAA,EAEZU,EAAW,SAAY,CAC3B,MAAMC,EAAyB,CAC7B,KAAMC,GACN,QAAS3B,EAAK,SAAW,GACzB,WAAY4B,GAAM,EAAE,KAAK,EACzB,KAAM,CAAC,GAAG5B,EAAK,KAAK,OAAQ6B,GAAMA,EAAE,CAAC,IAAM,OAAO,EAAG,GAAGb,EAAY,IAAI,CAAC,CAAE,KAAAxB,EAAM,IAAAC,KAAU,CAAC,QAASD,EAAMC,CAAG,CAAC,CAAC,CAAA,EAGtG,MAAMY,EAAQ,oBAAqBqB,CAAK,KAChC,EAAK,CAAA,EAG3B,cACGI,EACC,CAAA,SAAA,CAAAC,EAAA,KAAC7C,EAAK,CAAA,IAAI,IAAI,WAAW,SACvB,SAAA,CAACC,EAAAA,IAAAG,EAAA,CAAO,QAAS,IAAMW,EAAS,EAAE,EAAG,SAAUd,EAAAA,IAAC6C,EAAgB,CAAA,CAAA,EAAI,SAEpE,MAAA,CAAA,QAECC,EAAO,EAAA,SAEPC,EACE,CAAA,SAAA,CAAAvB,GAEIoB,EAAA,KAAAI,WAAA,CAAA,SAAA,CAAA,CAACrB,GACC3B,EAAAA,IAAAG,EAAA,CAAO,YAAY,UAAU,QAAS4B,EAAW,SAElD,OAAA,EAED/B,EAAA,IAAAG,EAAA,CAAO,YAAY,MAAM,QAAS,IAAMiB,EAAYP,CAAI,EAAE,KAAK,IAAMC,EAAS,QAAQ,CAAC,EAAG,SAE3F,SAAA,CAAA,EACF,EAEDd,EAAAA,IAAAiD,GAAA,CAAc,aAAW,eAAe,KAAApC,CAAY,CAAA,CAAA,EACvD,CAAA,EACF,EAEC+B,EAAA,KAAA7C,EAAA,CAAK,IAAI,IAAI,WAAW,SACvB,SAAA,CAAAC,EAAAA,IAACkD,GAAQ,KAAK,KAAK,YAAW,GAC3B,SAAAC,EAAYtC,CAAI,EACnB,EACCb,EAAAA,IAAAoD,EAAA,CAAwB,KAAAvC,EAAY,KAAK,IAAK,CAAA,CAAA,EACjD,EAEC+B,EAAA,KAAA7C,EAAA,CAAK,IAAI,IAAI,WAAW,SACvB,SAAA,CAAAC,EAAAA,IAACqD,GAAK,SAAW,aAAA,CAAA,QAChBC,EAAe,CAAA,OAAQzC,EAAK,OAAQ,KAAK,KAAK,QAC9C0C,EAAS,CAAA,OAAQ1C,EAAK,OAAQ,WAAW,OAAO,CAAA,EACnD,SACCwC,EAAK,CAAA,SAAA,CAAA,YACMrD,EAAAA,IAAAwD,EAAA,CAAU,UAAW3C,EAAK,UAAY,CAAA,CAAA,EAClD,EAEA+B,EAAAA,KAACG,EAAY,CAAA,QAAQ,QACnB,SAAA,CAAC/C,EAAAA,IAAAyD,EAAA,CAAc,MAAO5C,CAAM,CAAA,EAC5Bb,EAAAA,IAAC0D,EAAiB,CAAA,MAAO7C,CAAM,CAAA,EAC/Bb,MAACoD,GAAwB,KAAAvC,EAAY,CAAA,EACvC,EAECY,EAAO,OAAS,GAEZmB,EAAA,KAAAI,EAAA,SAAA,CAAA,SAAA,CAAA,CAACrB,GACAiB,EAAAA,KAAC7C,EAAK,CAAA,WAAW,WACf,SAAA,CAACC,EAAA,IAAAkD,EAAA,CAAQ,KAAK,KAAK,SAAM,SAAA,SACxBH,EAAY,CAAA,KAAK,KAAK,WAAU,GAAC,GAAG,OACnC,SAAA,CAAC/C,EAAAA,IAAAG,EAAA,CAAO,QAASK,IAAU,GAAK,QAAU,UAAW,QAAS,IAAMc,EAAS,EAAE,EAAG,SAElF,IAAA,CAAA,EACCtB,EAAAA,IAAAG,EAAA,CAAO,QAASK,IAAU,GAAK,QAAU,UAAW,QAAS,IAAMc,EAAS,EAAE,EAAG,SAElF,IAAA,CAAA,EACCtB,EAAAA,IAAAG,EAAA,CAAO,QAASK,IAAU,GAAK,QAAU,UAAW,QAAS,IAAMc,EAAS,EAAE,EAAG,SAElF,IAAA,CAAA,CAAA,EACF,CAAA,EACF,EAEFtB,EAAAA,IAAC2D,EAAW,CAAA,QAAS,CAAE,KAAM,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,CAAE,EAAG,IAAI,IAC9D,UAAUhC,EAAAE,EAAcJ,GAAQ,IAAI,CAAC,CAAE,KAAApB,EAAM,IAAAC,CAC7C,IAAAN,EAAA,IAACI,GAAA,CAEC,MAAAI,EACA,KAAAH,EACA,IAAAC,EACA,SAAUqB,EAAU,IAAMQ,EAAY9B,CAAI,EAAI,MAAA,EAJzCA,EAAOC,CAMf,CAAA,EACH,CAAA,EACF,EAGDqB,GACCiB,EAAA,KAAC7C,EAAK,CAAA,IAAI,IACR,SAAA,CAACC,EAAAA,IAAAb,GAAA,CAAa,MAAO6C,CAAU,CAAA,QAC9B7B,EAAO,CAAA,GAAG,OAAO,QAASkC,EAAY,SAEvC,SAAA,QACClC,EAAO,CAAA,YAAY,UAAU,QAASmC,EAAU,SAEjD,OAAA,CAAA,EACF,CAEJ,CAAA,CAAA,CAEJ,CAEA,SAAwBsB,IAAgB,CAChC,MAAAC,EAAaC,EAAwB,MAAM,EAC3CjD,EAAOkD,EAAoBF,CAAU,EAE3C,OAAKhD,EAQEb,MAACY,IAAc,KAAAC,CAAY,CAAA,EAN5B+B,EAAA,KAAAI,WAAA,CAAA,SAAA,CAAA,qBACmBa,EAAW,WAAW,gBAAc7D,EAAAA,IAAAuD,EAAA,CAAS,OAAQM,EAAW,MAAQ,CAAA,CAC7F,CAAA,CAAA,CAKN"}