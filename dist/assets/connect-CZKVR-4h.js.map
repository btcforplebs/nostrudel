{"version":3,"file":"connect-CZKVR-4h.js","sources":["../../src/views/relays/webrtc/connect.tsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport {\n  Alert,\n  AlertIcon,\n  Button,\n  CloseButton,\n  Flex,\n  Heading,\n  Input,\n  Text,\n  useForceUpdate,\n  useInterval,\n} from \"@chakra-ui/react\";\nimport { useForm } from \"react-hook-form\";\n\nimport BackButton from \"../../../components/router/back-button\";\nimport webRtcRelaysService from \"../../../services/webrtc-relays\";\nimport NostrWebRtcBroker from \"../../../classes/webrtc/nostr-webrtc-broker\";\nimport QRCodeScannerButton from \"../../../components/qr-code/qr-code-scanner-button\";\nimport UserAvatar from \"../../../components/user/user-avatar\";\nimport UserName from \"../../../components/user/user-name\";\nimport localSettings from \"../../../services/local-settings\";\nimport useSubject from \"../../../hooks/use-subject\";\n\nexport default function WebRtcConnectView() {\n  const update = useForceUpdate();\n  useInterval(update, 1000);\n\n  useEffect(() => {\n    webRtcRelaysService.broker.on(\"call\", update);\n    return () => {\n      webRtcRelaysService.broker.off(\"call\", update);\n    };\n  }, [update]);\n\n  const { register, handleSubmit, formState, reset, setValue } = useForm({\n    defaultValues: {\n      uri: \"\",\n    },\n    mode: \"all\",\n  });\n\n  const connect = handleSubmit(async (values) => {\n    webRtcRelaysService.connect(values.uri);\n    localSettings.webRtcRecentConnections.next([...localSettings.webRtcRecentConnections.value, values.uri]);\n    reset();\n  });\n\n  const recent = useSubject(localSettings.webRtcRecentConnections)\n    .map((uri) => ({ ...NostrWebRtcBroker.parseNostrWebRtcURI(uri), uri }))\n    .filter(({ pubkey }) => !webRtcRelaysService.broker.peers.has(pubkey));\n\n  return (\n    <Flex gap=\"2\" direction=\"column\" overflow=\"auto hidden\" flex={1} px={{ base: \"2\", lg: 0 }}>\n      <Flex gap=\"2\" alignItems=\"center\" wrap=\"wrap\">\n        <BackButton hideFrom=\"lg\" size=\"sm\" />\n        <Heading size=\"lg\">Connect to WebRTC Relay</Heading>\n      </Flex>\n\n      <Text fontStyle=\"italic\" mt=\"-2\">\n        Scan or paste the WebRTC Connection URI of the relay you wish to connect to\n      </Text>\n\n      <Flex as=\"form\" gap=\"2\" onSubmit={connect}>\n        <Input placeholder=\"webrtc+nostr:npub1...\" {...register(\"uri\")} autoComplete=\"off\" />\n        <QRCodeScannerButton onData={(data) => setValue(\"uri\", data)} />\n        <Button colorScheme=\"primary\" type=\"submit\" isLoading={formState.isSubmitting}>\n          Connect\n        </Button>\n      </Flex>\n\n      {recent.length > 0 && (\n        <>\n          <Heading size=\"md\" mt=\"2\">\n            Recent Peers:\n          </Heading>\n          {recent.map(({ pubkey, uri }) => (\n            <Flex key={pubkey} borderWidth=\"1px\" rounded=\"md\" p=\"2\" alignItems=\"center\" gap=\"2\">\n              <UserAvatar pubkey={pubkey} size=\"sm\" />\n              <UserName pubkey={pubkey} />\n              <Button\n                size=\"sm\"\n                ml=\"auto\"\n                colorScheme=\"primary\"\n                onClick={() => {\n                  webRtcRelaysService.connect(uri);\n                  update();\n                }}\n              >\n                Connect\n              </Button>\n              <CloseButton\n                onClick={() =>\n                  localSettings.webRtcRecentConnections.next(\n                    localSettings.webRtcRecentConnections.value.filter((u) => u !== uri),\n                  )\n                }\n              />\n            </Flex>\n          ))}\n        </>\n      )}\n\n      <Heading size=\"md\" mt=\"4\">\n        Pending Connection Requests:\n      </Heading>\n      {webRtcRelaysService.pendingOutgoing.length > 0 ? (\n        <>\n          {webRtcRelaysService.pendingOutgoing.map(({ call, peer }) => (\n            <Flex key={call.id} borderWidth=\"1px\" rounded=\"md\" p=\"2\" alignItems=\"center\" gap=\"2\">\n              {peer.peer && (\n                <>\n                  <UserAvatar pubkey={peer.peer} size=\"sm\" />\n                  <UserName pubkey={peer.peer} />\n                </>\n              )}\n              <Text>{peer.connection.connectionState}</Text>\n            </Flex>\n          ))}\n        </>\n      ) : (\n        <Alert status=\"info\">\n          <AlertIcon />\n          No connections requests\n        </Alert>\n      )}\n    </Flex>\n  );\n}\n"],"names":["WebRtcConnectView","update","useForceUpdate","useInterval","useEffect","webRtcRelaysService","register","handleSubmit","formState","reset","setValue","useForm","connect","values","localSettings","recent","useSubject","uri","NostrWebRtcBroker","pubkey","Flex","jsxs","jsx","BackButton","Heading","Text","Input","QRCodeScannerButton","data","Button","Fragment","UserAvatar","UserName","CloseButton","u","call","peer","Alert","AlertIcon"],"mappings":"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"}