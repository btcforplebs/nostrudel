{"version":3,"file":"stream-card-C9oVRsFU.js","sources":["../../src/views/streams/components/stream-card.tsx"],"sourcesContent":["import { memo } from \"react\";\nimport { Box, Card, CardBody, CardProps, Flex, Heading, LinkBox, LinkOverlay, Text } from \"@chakra-ui/react\";\n\nimport { ParsedStream } from \"../../../helpers/nostr/stream\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport UserAvatar from \"../../../components/user/user-avatar\";\nimport UserLink from \"../../../components/user/user-link\";\nimport StreamStatusBadge from \"./status-badge\";\nimport useShareableEventAddress from \"../../../hooks/use-shareable-event-address\";\nimport StreamHashtags from \"./stream-hashtags\";\nimport Timestamp from \"../../../components/timestamp\";\nimport useEventIntersectionRef from \"../../../hooks/use-event-intersection-ref\";\n\nfunction StreamCard({ stream, ...props }: CardProps & { stream: ParsedStream }) {\n  const { title, image } = stream;\n\n  // if there is a parent intersection observer, register this card\n  const ref = useEventIntersectionRef(stream.event);\n\n  const naddr = useShareableEventAddress(stream.event, stream.relays);\n\n  return (\n    <Card {...props} ref={ref} position=\"relative\">\n      <LinkBox as={CardBody} p=\"2\" display=\"flex\" flexDirection=\"column\" gap=\"2\">\n        <StreamStatusBadge stream={stream} position=\"absolute\" top=\"4\" left=\"4\" />\n        <Box\n          backgroundImage={image}\n          backgroundPosition=\"center\"\n          backgroundRepeat=\"no-repeat\"\n          backgroundSize=\"cover\"\n          aspectRatio={16 / 9}\n          borderRadius=\"lg\"\n        />\n        <Flex gap=\"2\" alignItems=\"center\">\n          <UserAvatar pubkey={stream.host} size=\"sm\" noProxy />\n          <Heading size=\"sm\">\n            <UserLink pubkey={stream.host} />\n          </Heading>\n        </Flex>\n        <Heading size=\"md\">\n          <LinkOverlay as={RouterLink} to={`/streams/${naddr}`}>\n            {title}\n          </LinkOverlay>\n        </Heading>\n        {stream.tags.length > 0 && (\n          <Flex gap=\"2\" wrap=\"wrap\">\n            <StreamHashtags stream={stream} />\n          </Flex>\n        )}\n        {stream.starts && (\n          <Text>\n            Started: <Timestamp timestamp={stream.starts} />\n          </Text>\n        )}\n      </LinkBox>\n    </Card>\n  );\n}\nexport default memo(StreamCard);\n"],"names":["StreamCard","stream","props","title","image","ref","useEventIntersectionRef","naddr","useShareableEventAddress","Card","jsxs","LinkBox","CardBody","jsx","StreamStatusBadge","Box","Flex","UserAvatar","Heading","UserLink","LinkOverlay","RouterLink","StreamHashtags","Text","Timestamp","memo"],"mappings":"+MAaA,SAASA,EAAW,CAAE,OAAAC,EAAQ,GAAGC,GAA+C,CACxE,KAAA,CAAE,MAAAC,EAAO,MAAAC,CAAU,EAAAH,EAGnBI,EAAMC,EAAwBL,EAAO,KAAK,EAE1CM,EAAQC,EAAyBP,EAAO,MAAOA,EAAO,MAAM,EAElE,aACGQ,EAAM,CAAA,GAAGP,EAAO,IAAAG,EAAU,SAAS,WAClC,SAACK,EAAAA,KAAAC,EAAA,CAAQ,GAAIC,EAAU,EAAE,IAAI,QAAQ,OAAO,cAAc,SAAS,IAAI,IACrE,SAAA,CAAAC,MAACC,GAAkB,OAAAb,EAAgB,SAAS,WAAW,IAAI,IAAI,KAAK,IAAI,EACxEY,EAAA,IAACE,EAAA,CACC,gBAAiBX,EACjB,mBAAmB,SACnB,iBAAiB,YACjB,eAAe,QACf,YAAa,GAAK,EAClB,aAAa,IAAA,CACf,EACCM,EAAA,KAAAM,EAAA,CAAK,IAAI,IAAI,WAAW,SACvB,SAAA,CAAAH,MAACI,GAAW,OAAQhB,EAAO,KAAM,KAAK,KAAK,QAAO,GAAC,EACnDY,EAAAA,IAACK,GAAQ,KAAK,KACZ,eAACC,EAAS,CAAA,OAAQlB,EAAO,IAAA,CAAM,CACjC,CAAA,CAAA,EACF,EACCY,EAAA,IAAAK,EAAA,CAAQ,KAAK,KACZ,SAACL,EAAAA,IAAAO,EAAA,CAAY,GAAIC,EAAY,GAAI,YAAYd,CAAK,GAC/C,UACH,CAAA,EACF,EACCN,EAAO,KAAK,OAAS,GACnBY,EAAAA,IAAAG,EAAA,CAAK,IAAI,IAAI,KAAK,OACjB,SAACH,EAAA,IAAAS,EAAA,CAAe,OAAArB,CAAgB,CAAA,EAClC,EAEDA,EAAO,QACNS,EAAAA,KAACa,EAAK,CAAA,SAAA,CAAA,YACMV,EAAAA,IAAAW,EAAA,CAAU,UAAWvB,EAAO,MAAQ,CAAA,CAAA,EAChD,CAAA,CAEJ,CAAA,CACF,CAAA,CAEJ,CACA,MAAewB,EAAAA,EAAAA,KAAKzB,CAAU"}