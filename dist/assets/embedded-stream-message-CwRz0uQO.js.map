{"version":3,"file":"embedded-stream-message-CwRz0uQO.js","sources":["../../src/components/embed-event/event-types/embedded-stream-message.tsx"],"sourcesContent":["import { Card, CardProps, Divider, Flex, Link } from \"@chakra-ui/react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport { NostrEvent, isATag } from \"../../../types/nostr-event\";\nimport UserLink from \"../../user/user-link\";\nimport UserAvatar from \"../../user/user-avatar\";\nimport ChatMessageContent from \"../../../views/streams/stream/stream-chat/chat-message-content\";\nimport useReplaceableEvent from \"../../../hooks/use-replaceable-event\";\nimport { parseStreamEvent } from \"../../../helpers/nostr/stream\";\nimport StreamStatusBadge from \"../../../views/streams/components/status-badge\";\nimport relayHintService from \"../../../services/event-relay-hint\";\n\nexport default function EmbeddedStreamMessage({\n  message,\n  ...props\n}: Omit<CardProps, \"children\"> & { message: NostrEvent }) {\n  const streamCoordinate = message.tags.find(isATag)?.[1];\n  const streamEvent = useReplaceableEvent(streamCoordinate);\n  const stream = streamEvent && parseStreamEvent(streamEvent);\n\n  return (\n    <Card overflow=\"hidden\" maxH=\"lg\" display=\"block\" p=\"2\" {...props}>\n      {stream && (\n        <>\n          <Flex gap=\"2\" alignItems=\"center\">\n            <Link\n              as={RouterLink}\n              to={`/streams/${relayHintService.getSharableEventAddress(streamEvent) ?? \"\"}`}\n              fontWeight=\"bold\"\n              fontSize=\"lg\"\n            >\n              {stream.title}\n            </Link>\n            <StreamStatusBadge stream={stream} />\n          </Flex>\n          <Divider mb=\"2\" />\n        </>\n      )}\n      <UserAvatar pubkey={message.pubkey} size=\"xs\" display=\"inline-block\" mr=\"2\" />\n      <UserLink pubkey={message.pubkey} fontWeight=\"bold\" />\n      <span>: </span>\n      <ChatMessageContent event={message} />\n    </Card>\n  );\n}\n"],"names":["EmbeddedStreamMessage","message","props","streamCoordinate","_a","isATag","streamEvent","useReplaceableEvent","stream","parseStreamEvent","jsxs","Card","Fragment","Flex","jsx","Link","RouterLink","relayHintService","StreamStatusBadge","Divider","UserAvatar","UserLink","ChatMessageContent"],"mappings":"yLAYA,SAAwBA,EAAsB,CAC5C,QAAAC,EACA,GAAGC,CACL,EAA0D,OACxD,MAAMC,GAAmBC,EAAAH,EAAQ,KAAK,KAAKI,CAAM,IAAxB,YAAAD,EAA4B,GAC/CE,EAAcC,EAAoBJ,CAAgB,EAClDK,EAASF,GAAeG,EAAiBH,CAAW,EAGxD,OAAAI,EAAA,KAACC,EAAK,CAAA,SAAS,SAAS,KAAK,KAAK,QAAQ,QAAQ,EAAE,IAAK,GAAGT,EACzD,SAAA,CAAAM,GAEGE,EAAA,KAAAE,WAAA,CAAA,SAAA,CAAAF,EAAA,KAACG,EAAK,CAAA,IAAI,IAAI,WAAW,SACvB,SAAA,CAAAC,EAAA,IAACC,EAAA,CACC,GAAIC,EACJ,GAAI,YAAYC,EAAiB,wBAAwBX,CAAW,GAAK,EAAE,GAC3E,WAAW,OACX,SAAS,KAER,SAAOE,EAAA,KAAA,CACV,EACAM,MAACI,GAAkB,OAAAV,EAAgB,CAAA,EACrC,EACAM,EAAAA,IAACK,EAAQ,CAAA,GAAG,GAAI,CAAA,CAAA,EAClB,EAEFL,EAAAA,IAACM,EAAW,CAAA,OAAQnB,EAAQ,OAAQ,KAAK,KAAK,QAAQ,eAAe,GAAG,GAAI,CAAA,QAC3EoB,EAAS,CAAA,OAAQpB,EAAQ,OAAQ,WAAW,OAAO,EACpDa,EAAAA,IAAC,QAAK,SAAE,IAAA,CAAA,EACRA,EAAAA,IAACQ,EAAmB,CAAA,MAAOrB,CAAS,CAAA,CACtC,CAAA,CAAA,CAEJ"}