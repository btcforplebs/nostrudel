{"version":3,"file":"page-Y2_K54eM.js","sources":["../../src/views/wiki/page.tsx"],"sourcesContent":["import { useMemo } from \"react\";\nimport { NostrEvent, nip19 } from \"nostr-tools\";\nimport {\n  Alert,\n  AlertIcon,\n  Box,\n  Button,\n  ButtonGroup,\n  Divider,\n  Flex,\n  Heading,\n  SimpleGrid,\n  Spinner,\n  Text,\n} from \"@chakra-ui/react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport useParamsAddressPointer from \"../../hooks/use-params-address-pointer\";\nimport useReplaceableEvent from \"../../hooks/use-replaceable-event\";\nimport VerticalPageLayout from \"../../components/vertical-page-layout\";\nimport { getPageDefer, getPageForks, getPageSummary, getPageTitle, getPageTopic } from \"../../helpers/nostr/wiki\";\nimport MarkdownContent from \"./components/markdown\";\nimport UserLink from \"../../components/user/user-link\";\nimport useSubject from \"../../hooks/use-subject\";\nimport WikiPageResult from \"./components/wiki-page-result\";\nimport Timestamp from \"../../components/timestamp\";\nimport WikiPageHeader from \"./components/wiki-page-header\";\nimport { WIKI_RELAYS } from \"../../const\";\nimport GitBranch01 from \"../../components/icons/git-branch-01\";\nimport { ExternalLinkIcon } from \"../../components/icons\";\nimport FileSearch01 from \"../../components/icons/file-search-01\";\nimport NoteZapButton from \"../../components/note/note-zap-button\";\nimport ZapBubbles from \"../../components/note/timeline-note/components/zap-bubbles\";\nimport QuoteEventButton from \"../../components/note/quote-event-button\";\nimport WikiPageMenu from \"./components/wiki-page-menu\";\nimport EventVoteButtons from \"../../components/reactions/event-vote-buttions\";\nimport useCurrentAccount from \"../../hooks/use-current-account\";\nimport dictionaryService from \"../../services/dictionary\";\nimport { useReadRelays } from \"../../hooks/use-client-relays\";\nimport { useWebOfTrust } from \"../../providers/global/web-of-trust-provider\";\nimport relayHintService from \"../../services/event-relay-hint\";\n\nfunction ForkAlert({ page, address }: { page: NostrEvent; address: nip19.AddressPointer }) {\n  const topic = getPageTopic(page);\n\n  return (\n    <Alert status=\"info\" display=\"flex\" flexWrap=\"wrap\">\n      <AlertIcon>\n        <GitBranch01 boxSize={5} />\n      </AlertIcon>\n      <Text>\n        This page was forked from <UserLink pubkey={address.pubkey} fontWeight=\"bold\" /> version\n      </Text>\n      <ButtonGroup variant=\"link\" ml=\"auto\">\n        <Button leftIcon={<ExternalLinkIcon />} as={RouterLink} to={`/wiki/page/${nip19.naddrEncode(address)}`}>\n          Original\n        </Button>\n        <Button\n          leftIcon={<FileSearch01 />}\n          as={RouterLink}\n          to={`/wiki/compare/${topic}/${address.pubkey}/${page.pubkey}`}\n        >\n          Compare\n        </Button>\n      </ButtonGroup>\n    </Alert>\n  );\n}\n\nfunction DeferAlert({ page, address }: { page: NostrEvent; address: nip19.AddressPointer }) {\n  return (\n    <Alert status=\"warning\" display=\"flex\" flexWrap=\"wrap\">\n      <AlertIcon />\n      <Text>\n        The author of this page has deferred to <UserLink pubkey={address.pubkey} fontWeight=\"bold\" /> version\n      </Text>\n      <Button\n        leftIcon={<ExternalLinkIcon />}\n        as={RouterLink}\n        to={`/wiki/page/${nip19.naddrEncode(address)}`}\n        variant=\"link\"\n        ml=\"4\"\n      >\n        View\n      </Button>\n    </Alert>\n  );\n}\n\nexport function WikiPagePage({ page }: { page: NostrEvent }) {\n  const account = useCurrentAccount();\n\n  const { address } = getPageForks(page);\n  const defer = getPageDefer(page);\n  const summary = getPageSummary(page, false);\n\n  return (\n    <>\n      <Flex gap=\"2\" wrap=\"wrap\">\n        <Box flex={1}>\n          <Heading>{getPageTitle(page)}</Heading>\n          <Text>\n            by <UserLink pubkey={page.pubkey} /> - <Timestamp timestamp={page.created_at} />\n          </Text>\n        </Box>\n        <Flex direction=\"column\" gap=\"2\" ml=\"auto\">\n          <ButtonGroup ml=\"auto\" size=\"sm\">\n            {page.pubkey === account?.pubkey && (\n              <Button as={RouterLink} colorScheme=\"primary\" to={`/wiki/edit/${getPageTopic(page)}`}>\n                Edit\n              </Button>\n            )}\n            {page.pubkey !== account?.pubkey && (\n              <Button\n                as={RouterLink}\n                colorScheme=\"primary\"\n                to={`/wiki/create?fork=${relayHintService.getSharableEventAddress(page)}`}\n              >\n                Fork\n              </Button>\n            )}\n          </ButtonGroup>\n          <Flex alignItems=\"flex-end\" gap=\"2\" ml=\"auto\">\n            <EventVoteButtons event={page} inline chevrons={false} />\n            <ButtonGroup size=\"sm\">\n              <QuoteEventButton event={page} />\n              <NoteZapButton event={page} showEventPreview={false} />\n              <WikiPageMenu page={page} aria-label=\"Page Options\" />\n            </ButtonGroup>\n          </Flex>\n        </Flex>\n      </Flex>\n      {address && <ForkAlert page={page} address={address} />}\n      {defer?.address && <DeferAlert page={page} address={defer.address} />}\n      <ZapBubbles event={page} />\n      <Divider />\n      {summary && <Text fontStyle=\"italic\">{summary}</Text>}\n      <MarkdownContent event={page} />\n    </>\n  );\n}\n\nfunction WikiPageFooter({ page }: { page: NostrEvent }) {\n  const webOfTrust = useWebOfTrust();\n  const topic = getPageTopic(page);\n\n  const readRelays = useReadRelays();\n  const subject = useMemo(() => dictionaryService.requestTopic(topic, readRelays), [topic, readRelays]);\n  const pages = useSubject(subject);\n\n  let forks = pages ? Array.from(pages.values()).filter((p) => getPageForks(p).address?.pubkey === page.pubkey) : [];\n  if (webOfTrust) forks = webOfTrust.sortByDistanceAndConnections(forks, (p) => p.pubkey);\n\n  let other = pages ? Array.from(pages.values()).filter((p) => !forks.includes(p) && p.pubkey !== page.pubkey) : [];\n  if (webOfTrust) other = webOfTrust.sortByDistanceAndConnections(other, (p) => p.pubkey);\n\n  return (\n    <>\n      {forks.length > 0 && (\n        <>\n          <Heading size=\"lg\" mt=\"4\">\n            Forks:\n          </Heading>\n          <SimpleGrid spacing=\"2\" columns={{ base: 1, lg: 2, xl: 3 }}>\n            {forks.map((p) => (\n              <WikiPageResult key={p.id} page={p} compare={page} />\n            ))}\n          </SimpleGrid>\n        </>\n      )}\n      {other.length > 0 && (\n        <>\n          <Heading size=\"lg\" mt=\"4\">\n            Other Versions:\n          </Heading>\n          <SimpleGrid spacing=\"2\" columns={{ base: 1, lg: 2, xl: 3 }}>\n            {other.map((p) => (\n              <WikiPageResult key={p.id} page={p} compare={page} />\n            ))}\n          </SimpleGrid>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default function WikiPageView() {\n  const pointer = useParamsAddressPointer(\"naddr\");\n  const event = useReplaceableEvent(pointer, WIKI_RELAYS);\n\n  if (!event) return <Spinner />;\n  return (\n    <VerticalPageLayout>\n      <WikiPageHeader />\n      <WikiPagePage page={event} />\n      <WikiPageFooter page={event} />\n    </VerticalPageLayout>\n  );\n}\n"],"names":["ForkAlert","page","address","topic","getPageTopic","Alert","jsx","AlertIcon","GitBranch01","Text","UserLink","jsxs","ButtonGroup","Button","ExternalLinkIcon","RouterLink","nip19","FileSearch01","DeferAlert","WikiPagePage","account","useCurrentAccount","getPageForks","defer","getPageDefer","summary","getPageSummary","Fragment","Flex","Box","Heading","getPageTitle","Timestamp","relayHintService","EventVoteButtons","QuoteEventButton","NoteZapButton","WikiPageMenu","ZapBubbles","Divider","MarkdownContent","WikiPageFooter","webOfTrust","useWebOfTrust","readRelays","useReadRelays","subject","useMemo","dictionaryService","pages","useSubject","forks","p","_a","other","SimpleGrid","WikiPageResult","WikiPageView","pointer","useParamsAddressPointer","event","useReplaceableEvent","WIKI_RELAYS","VerticalPageLayout","WikiPageHeader","Spinner"],"mappings":"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"}