{"version":3,"file":"network-dm-graph-BL3Ad5fA.js","sources":["../../node_modules/.pnpm/react-use@17.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-use/esm/useIsomorphicLayoutEffect.js","../../node_modules/.pnpm/react-use@17.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-use/esm/useObservable.js","../../src/views/tools/network-dm-graph.tsx"],"sourcesContent":["import { useEffect, useLayoutEffect } from 'react';\nimport { isBrowser } from './misc/util';\nvar useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\nexport default useIsomorphicLayoutEffect;\n","import { useState } from 'react';\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect';\nfunction useObservable(observable$, initialValue) {\n    var _a = useState(initialValue), value = _a[0], update = _a[1];\n    useIsomorphicLayoutEffect(function () {\n        var s = observable$.subscribe(update);\n        return function () { return s.unsubscribe(); };\n    }, [observable$]);\n    return value;\n}\nexport default useObservable;\n","import { useEffect, useMemo, useState } from \"react\";\nimport { Box, Button, Flex, Input, Text } from \"@chakra-ui/react\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport ForceGraph, { LinkObject, NodeObject } from \"react-force-graph-3d\";\nimport { Filter, kinds } from \"nostr-tools\";\nimport dayjs from \"dayjs\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDebounce, useObservable } from \"react-use\";\nimport {\n  Group,\n  Mesh,\n  MeshBasicMaterial,\n  SRGBColorSpace,\n  SphereGeometry,\n  Sprite,\n  SpriteMaterial,\n  TextureLoader,\n} from \"three\";\n\nimport useCurrentAccount from \"../../hooks/use-current-account\";\nimport RequireCurrentAccount from \"../../providers/route/require-current-account\";\nimport { useUsersMetadata } from \"../../hooks/use-user-network\";\nimport { getPubkeysFromList } from \"../../helpers/nostr/lists\";\nimport useUserContactList from \"../../hooks/use-user-contact-list\";\nimport useUserProfile from \"../../hooks/use-user-profile\";\nimport EventStore from \"../../classes/event-store\";\nimport { isPTag } from \"../../types/nostr-event\";\nimport { ChevronLeftIcon } from \"../../components/icons\";\nimport { useReadRelays } from \"../../hooks/use-client-relays\";\nimport { subscribeMany } from \"../../helpers/relay\";\n\ntype NodeType = { id: string; image?: string; name?: string };\n\nfunction NetworkDMGraphPage() {\n  const navigate = useNavigate();\n  const account = useCurrentAccount()!;\n  const relays = useReadRelays();\n\n  const contacts = useUserContactList(account.pubkey);\n  const contactsPubkeys = useMemo(\n    () => (contacts ? getPubkeysFromList(contacts).map((p) => p.pubkey) : []),\n    [contacts],\n  );\n\n  const [until, setUntil] = useState(dayjs().unix());\n  const [since, setSince] = useState(dayjs().subtract(1, \"week\").unix());\n\n  const store = useMemo(() => new EventStore(), []);\n  const [fetchData] = useDebounce(\n    () => {\n      if (!contacts) return;\n\n      store.clear();\n      const filter: Filter = {\n        authors: contactsPubkeys,\n        kinds: [kinds.EncryptedDirectMessage],\n        since,\n        until,\n      };\n      const sub = subscribeMany(Array.from(relays), [filter], {\n        onevent: (event) => store.addEvent(event),\n        oneose: () => sub.close(),\n      });\n    },\n    2 * 1000,\n    [relays, store, contactsPubkeys, since, until],\n  );\n  useEffect(() => {\n    fetchData();\n  }, [relays, store, contactsPubkeys, since, until]);\n\n  const selfMetadata = useUserProfile(account.pubkey);\n  const usersMetadata = useUsersMetadata(contactsPubkeys);\n\n  const newEventTrigger = useObservable(store.onEvent);\n  const graphData = useMemo(() => {\n    if (store.events.size === 0) return { nodes: [], links: [] };\n\n    const nodes: Record<string, NodeObject<NodeType>> = {};\n    const links: Record<string, LinkObject<NodeType>> = {};\n\n    const getOrCreateNode = (pubkey: string) => {\n      if (!nodes[pubkey]) {\n        const node: NodeType = {\n          id: pubkey,\n        };\n\n        const metadata = usersMetadata[pubkey];\n        if (metadata) {\n          node.image = metadata.picture;\n          node.name = metadata.name;\n        }\n\n        nodes[pubkey] = node;\n      }\n      return nodes[pubkey];\n    };\n\n    for (const [_, dm] of store.events) {\n      const author = dm.pubkey;\n      const receiver = dm.tags.find(isPTag)?.[1];\n      if (!receiver) continue;\n\n      if (contactsPubkeys.includes(receiver) && (contactsPubkeys.includes(author) || author === account.pubkey)) {\n        const keyA = [author, receiver].join(\"|\");\n        links[keyA] = { source: getOrCreateNode(author), target: getOrCreateNode(receiver) };\n      }\n    }\n\n    return { nodes: Object.values(nodes), links: Object.values(links) };\n  }, [contactsPubkeys, account.pubkey, usersMetadata, selfMetadata, newEventTrigger]);\n\n  return (\n    <Flex direction=\"column\" gap=\"2\" h=\"full\" pt=\"2\">\n      <Flex gap=\"2\" alignItems=\"center\">\n        <Button leftIcon={<ChevronLeftIcon />} onClick={() => navigate(-1)}>\n          Back\n        </Button>\n        <Input\n          type=\"datetime-local\"\n          maxW=\"sm\"\n          value={dayjs.unix(since).format(\"YYYY-MM-DDThh:mm\")}\n          onChange={(e) => setSince(dayjs(e.target.value).unix())}\n        />\n        <Text>Showing all direct messages between contacts in the last {dayjs.unix(since).fromNow(true)}</Text>\n      </Flex>\n      <Box overflow=\"hidden\" flex={1}>\n        <AutoSizer>\n          {({ height, width }) => (\n            <ForceGraph<NodeType>\n              graphData={graphData}\n              enableNodeDrag={false}\n              width={width}\n              height={height}\n              linkDirectionalArrowLength={3.5}\n              linkDirectionalArrowRelPos={1}\n              linkCurvature={0.25}\n              nodeThreeObject={(node: NodeType) => {\n                if (!node.image) {\n                  return new Mesh(new SphereGeometry(5, 12, 6), new MeshBasicMaterial({ color: 0xaa0f0f }));\n                }\n\n                const group = new Group();\n\n                const imgTexture = new TextureLoader().load(node.image);\n                imgTexture.colorSpace = SRGBColorSpace;\n                const material = new SpriteMaterial({ map: imgTexture });\n                const sprite = new Sprite(material);\n                sprite.scale.set(10, 10, 10);\n\n                group.children.push(sprite);\n\n                // if (node.name) {\n                //   const text = new SpriteText(node.name, 8, \"ffffff\");\n                //   text.position.set(0, 0, 16);\n                //   group.children.push(text);\n                // }\n\n                return sprite;\n              }}\n            />\n          )}\n        </AutoSizer>\n      </Box>\n    </Flex>\n  );\n}\n\nexport default function NetworkDMGraphView() {\n  return (\n    <RequireCurrentAccount>\n      <NetworkDMGraphPage />\n    </RequireCurrentAccount>\n  );\n}\n"],"names":["useIsomorphicLayoutEffect","isBrowser","useLayoutEffect","useEffect","useObservable","observable$","initialValue","_a","useState","value","update","s","NetworkDMGraphPage","navigate","useNavigate","account","useCurrentAccount","relays","useReadRelays","contacts","useUserContactList","contactsPubkeys","useMemo","getPubkeysFromList","p","until","setUntil","dayjs","since","setSince","store","EventStore","fetchData","useDebounce","filter","kinds","sub","subscribeMany","event","selfMetadata","useUserProfile","usersMetadata","useUsersMetadata","newEventTrigger","graphData","nodes","links","getOrCreateNode","pubkey","node","metadata","_","dm","author","receiver","isPTag","keyA","jsxs","Flex","jsx","Button","ChevronLeftIcon","Input","Text","Box","AutoSizer","height","width","ForceGraph","Mesh","SphereGeometry","MeshBasicMaterial","group","Group","imgTexture","TextureLoader","SRGBColorSpace","material","SpriteMaterial","sprite","Sprite","NetworkDMGraphView","RequireCurrentAccount"],"mappings":"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","x_google_ignoreList":[0,1]}