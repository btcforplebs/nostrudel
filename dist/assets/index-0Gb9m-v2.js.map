{"version":3,"file":"index-0Gb9m-v2.js","sources":["../../src/views/emoji-packs/components/create-modal.tsx","../../src/views/emoji-packs/index.tsx"],"sourcesContent":["import {\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  ModalProps,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\n\nimport { EMOJI_PACK_KIND } from \"../../../helpers/nostr/emoji-packs\";\nimport { DraftNostrEvent } from \"../../../types/nostr-event\";\nimport { usePublishEvent } from \"../../../providers/global/publish-provider\";\nimport relayHintService from \"../../../services/event-relay-hint\";\n\nexport default function EmojiPackCreateModal({ onClose, ...props }: Omit<ModalProps, \"children\">) {\n  const publish = usePublishEvent();\n  const navigate = useNavigate();\n  const { register, handleSubmit } = useForm({\n    defaultValues: {\n      title: \"\",\n    },\n  });\n\n  const submit = handleSubmit(async (values) => {\n    const draft: DraftNostrEvent = {\n      kind: EMOJI_PACK_KIND,\n      created_at: dayjs().unix(),\n      content: \"\",\n      tags: [[\"d\", values.title]],\n    };\n\n    const pub = await publish(\"Create emoji pack\", draft);\n    if (pub) navigate(`/emojis/${relayHintService.getSharableEventAddress(pub.event)}`);\n  });\n\n  return (\n    <Modal onClose={onClose} size=\"xl\" {...props}>\n      <ModalOverlay />\n      <ModalContent as=\"form\" onSubmit={submit}>\n        <ModalHeader p=\"4\">Create Emoji pack</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody px=\"4\" py=\"0\">\n          <FormControl isRequired>\n            <FormLabel>Pack name</FormLabel>\n            <Input type=\"name\" {...register(\"title\", { required: true })} autoComplete=\"off\" />\n          </FormControl>\n        </ModalBody>\n\n        <ModalFooter p=\"4\">\n          <Button mr=\"2\" onClick={onClose}>\n            Cancel\n          </Button>\n          <Button colorScheme=\"primary\" type=\"submit\">\n            Create\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import { Button, Flex, Heading, Link, SimpleGrid, useDisclosure } from \"@chakra-ui/react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useObservable } from \"applesauce-react\";\n\nimport useCurrentAccount from \"../../hooks/use-current-account\";\nimport { ExternalLinkIcon } from \"../../components/icons\";\nimport { getEventCoordinate, getEventUID } from \"../../helpers/nostr/event\";\nimport { useReadRelays } from \"../../hooks/use-client-relays\";\nimport useTimelineLoader from \"../../hooks/use-timeline-loader\";\nimport { EMOJI_PACK_KIND, getPackCordsFromFavorites } from \"../../helpers/nostr/emoji-packs\";\nimport EmojiPackCard from \"./components/emoji-pack-card\";\nimport useFavoriteEmojiPacks from \"../../hooks/use-favorite-emoji-packs\";\nimport useReplaceableEvents from \"../../hooks/use-replaceable-events\";\nimport EmojiPackCreateModal from \"./components/create-modal\";\nimport VerticalPageLayout from \"../../components/vertical-page-layout\";\n\nfunction UserEmojiPackMangerPage() {\n  const account = useCurrentAccount()!;\n\n  const favoritePacks = useFavoriteEmojiPacks(account.pubkey);\n  const readRelays = useReadRelays();\n  const { loader, timeline: packs } = useTimelineLoader(\n    `${account.pubkey}-emoji-packs`,\n    readRelays,\n    account.pubkey\n      ? {\n          authors: [account.pubkey],\n          kinds: [EMOJI_PACK_KIND],\n        }\n      : undefined,\n  );\n\n  const favorites = useReplaceableEvents(favoritePacks && getPackCordsFromFavorites(favoritePacks));\n  const filtered = packs.filter((pack) => {\n    const cord = getEventCoordinate(pack);\n    return !favorites.some((e) => getEventCoordinate(e) === cord);\n  });\n\n  return (\n    <>\n      {favorites.length > 0 && (\n        <>\n          <Heading size=\"lg\" mt=\"2\">\n            Favorite packs\n          </Heading>\n          <SimpleGrid columns={{ base: 1, lg: 2 }} spacing=\"2\">\n            {favorites.map((event) => (\n              <EmojiPackCard key={getEventUID(event)} pack={event} />\n            ))}\n          </SimpleGrid>\n        </>\n      )}\n      {filtered.length > 0 && (\n        <>\n          <Heading size=\"lg\" mt=\"2\">\n            Emoji packs\n          </Heading>\n          <SimpleGrid columns={{ base: 1, lg: 2 }} spacing=\"2\">\n            {packs.map((event) => (\n              <EmojiPackCard key={getEventUID(event)} pack={event} />\n            ))}\n          </SimpleGrid>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default function EmojiPacksView() {\n  const account = useCurrentAccount();\n  const createModal = useDisclosure();\n\n  return (\n    <VerticalPageLayout>\n      <Flex gap=\"2\" wrap=\"wrap\">\n        <Button as={RouterLink} to=\"/emojis/browse\">\n          Find packs\n        </Button>\n        <Button as={Link} href=\"https://emojito.meme\" isExternal rightIcon={<ExternalLinkIcon />} ml=\"auto\">\n          Emoji pack manager\n        </Button>\n        {account && (\n          <Button colorScheme=\"primary\" onClick={createModal.onOpen}>\n            Create Emoji pack\n          </Button>\n        )}\n      </Flex>\n\n      {account && <UserEmojiPackMangerPage />}\n      {createModal.isOpen && <EmojiPackCreateModal isOpen={createModal.isOpen} onClose={createModal.onClose} />}\n    </VerticalPageLayout>\n  );\n}\n"],"names":["EmojiPackCreateModal","onClose","props","publish","usePublishEvent","navigate","useNavigate","register","handleSubmit","useForm","submit","values","draft","EMOJI_PACK_KIND","dayjs","pub","relayHintService","Modal","jsx","ModalOverlay","jsxs","ModalContent","ModalHeader","ModalCloseButton","ModalBody","FormControl","FormLabel","Input","ModalFooter","Button","UserEmojiPackMangerPage","account","useCurrentAccount","favoritePacks","useFavoriteEmojiPacks","readRelays","useReadRelays","loader","packs","useTimelineLoader","favorites","useReplaceableEvents","getPackCordsFromFavorites","filtered","pack","cord","getEventCoordinate","e","Fragment","Heading","SimpleGrid","event","EmojiPackCard","getEventUID","EmojiPacksView","createModal","useDisclosure","VerticalPageLayout","Flex","RouterLink","Link","ExternalLinkIcon"],"mappings":"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"}