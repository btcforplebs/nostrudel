{"version":3,"file":"embedded-emoji-pack-DOY9_LdN.js","sources":["../../src/components/embed-event/event-types/embedded-emoji-pack.tsx"],"sourcesContent":["import {\n  ButtonGroup,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardProps,\n  Flex,\n  Heading,\n  Image,\n  Link,\n  Text,\n} from \"@chakra-ui/react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport { getEmojisFromPack, getPackName } from \"../../../helpers/nostr/emoji-packs\";\nimport UserAvatarLink from \"../../user/user-avatar-link\";\nimport UserLink from \"../../user/user-link\";\nimport EmojiPackFavoriteButton from \"../../../views/emoji-packs/components/emoji-pack-favorite-button\";\nimport EmojiPackMenu from \"../../../views/emoji-packs/components/emoji-pack-menu\";\nimport { NostrEvent } from \"../../../types/nostr-event\";\nimport Timestamp from \"../../timestamp\";\nimport relayHintService from \"../../../services/event-relay-hint\";\n\nexport default function EmbeddedEmojiPack({ pack, ...props }: Omit<CardProps, \"children\"> & { pack: NostrEvent }) {\n  const emojis = getEmojisFromPack(pack);\n  const naddr = relayHintService.getSharableEventAddress(pack);\n\n  return (\n    <Card {...props}>\n      <CardHeader display=\"flex\" gap=\"2\" alignItems=\"center\" p=\"2\" pb=\"0\" flexWrap=\"wrap\">\n        <Heading size=\"md\">\n          <Link as={RouterLink} to={`/emojis/${naddr}`}>\n            {getPackName(pack)}\n          </Link>\n        </Heading>\n        <Text>by</Text>\n        <UserAvatarLink pubkey={pack.pubkey} size=\"xs\" />\n        <UserLink pubkey={pack.pubkey} isTruncated fontWeight=\"bold\" fontSize=\"md\" />\n        <ButtonGroup size=\"sm\" ml=\"auto\">\n          <EmojiPackFavoriteButton pack={pack} />\n          <EmojiPackMenu pack={pack} aria-label=\"emoji pack menu\" />\n        </ButtonGroup>\n      </CardHeader>\n      <CardBody p=\"2\">\n        {emojis.length > 0 && (\n          <Flex mb=\"2\" wrap=\"wrap\" gap=\"2\">\n            {emojis.map(({ name, url }) => (\n              <Image key={name + url} src={url} title={name} alt={`:${name}:`} w={8} h={8} overflow=\"hidden\" />\n            ))}\n          </Flex>\n        )}\n      </CardBody>\n      <CardFooter p=\"2\" display=\"flex\" pt=\"0\">\n        <Text>\n          Updated: <Timestamp timestamp={pack.created_at} />\n        </Text>\n      </CardFooter>\n    </Card>\n  );\n}\n"],"names":["EmbeddedEmojiPack","pack","props","emojis","getEmojisFromPack","naddr","relayHintService","jsxs","Card","CardHeader","jsx","Heading","Link","RouterLink","getPackName","Text","UserAvatarLink","UserLink","ButtonGroup","EmojiPackFavoriteButton","EmojiPackMenu","CardBody","Flex","name","url","Image","CardFooter","Timestamp"],"mappings":"gOAwBA,SAAwBA,EAAkB,CAAE,KAAAC,EAAM,GAAGC,GAA6D,CAC1G,MAAAC,EAASC,EAAkBH,CAAI,EAC/BI,EAAQC,EAAiB,wBAAwBL,CAAI,EAGzD,OAAAM,EAAA,KAACC,EAAM,CAAA,GAAGN,EACR,SAAA,CAAAK,EAAA,KAACE,EAAW,CAAA,QAAQ,OAAO,IAAI,IAAI,WAAW,SAAS,EAAE,IAAI,GAAG,IAAI,SAAS,OAC3E,SAAA,CAAAC,MAACC,EAAQ,CAAA,KAAK,KACZ,SAAAD,EAAA,IAACE,GAAK,GAAIC,EAAY,GAAI,WAAWR,CAAK,GACvC,SAAYS,EAAAb,CAAI,CACnB,CAAA,EACF,EACAS,EAAAA,IAACK,GAAK,SAAE,IAAA,CAAA,QACPC,EAAe,CAAA,OAAQf,EAAK,OAAQ,KAAK,KAAK,EAC/CS,EAAAA,IAACO,EAAS,CAAA,OAAQhB,EAAK,OAAQ,YAAW,GAAC,WAAW,OAAO,SAAS,IAAK,CAAA,EAC1EM,EAAA,KAAAW,EAAA,CAAY,KAAK,KAAK,GAAG,OACxB,SAAA,CAAAR,MAACS,GAAwB,KAAAlB,EAAY,EACpCS,EAAAA,IAAAU,EAAA,CAAc,KAAAnB,EAAY,aAAW,iBAAkB,CAAA,CAAA,EAC1D,CAAA,EACF,QACCoB,EAAS,CAAA,EAAE,IACT,SAAOlB,EAAA,OAAS,GACdO,EAAAA,IAAAY,EAAA,CAAK,GAAG,IAAI,KAAK,OAAO,IAAI,IAC1B,WAAO,IAAI,CAAC,CAAE,KAAAC,EAAM,IAAAC,KACnBd,EAAAA,IAACe,GAAuB,IAAKD,EAAK,MAAOD,EAAM,IAAK,IAAIA,CAAI,IAAK,EAAG,EAAG,EAAG,EAAG,SAAS,UAA1EA,EAAOC,CAA4E,CAChG,CACH,CAAA,EAEJ,EACAd,EAAAA,IAACgB,GAAW,EAAE,IAAI,QAAQ,OAAO,GAAG,IAClC,SAAAnB,EAAA,KAACQ,EAAK,CAAA,SAAA,CAAA,YACML,EAAAA,IAAAiB,EAAA,CAAU,UAAW1B,EAAK,UAAY,CAAA,CAAA,CAAA,CAClD,CACF,CAAA,CACF,CAAA,CAAA,CAEJ"}