{"version":3,"file":"goal-details-C4cbHRXX.js","sources":["../../src/views/goals/components/goal-zap-list.tsx","../../src/views/goals/goal-details.tsx"],"sourcesContent":["import { Box, Flex, Spacer, Text } from \"@chakra-ui/react\";\nimport { getEventUID } from \"../../../helpers/nostr/event\";\nimport { getGoalRelays } from \"../../../helpers/nostr/goal\";\nimport useEventZaps from \"../../../hooks/use-event-zaps\";\nimport { NostrEvent } from \"../../../types/nostr-event\";\nimport UserAvatarLink from \"../../../components/user/user-avatar-link\";\nimport UserLink from \"../../../components/user/user-link\";\nimport { readablizeSats } from \"../../../helpers/bolt11\";\nimport { LightningIcon } from \"../../../components/icons\";\nimport Timestamp from \"../../../components/timestamp\";\n\nexport default function GoalZapList({ goal }: { goal: NostrEvent }) {\n  const zaps = useEventZaps(getEventUID(goal), getGoalRelays(goal), true);\n  const sorted = Array.from(zaps).sort((a, b) => b.event.created_at - a.event.created_at);\n\n  return (\n    <>\n      {sorted.map((zap) => (\n        <Flex key={zap.eventId} gap=\"2\">\n          <UserAvatarLink pubkey={zap.request.pubkey} size=\"md\" />\n          <Box>\n            <Text>\n              <UserLink fontSize=\"lg\" fontWeight=\"bold\" pubkey={zap.request.pubkey} mr=\"2\" />\n              <Timestamp timestamp={zap.event.created_at} />\n            </Text>\n            {zap.request.content && <Text>{zap.request.content}</Text>}\n          </Box>\n          <Spacer />\n          {zap.payment.amount && (\n            <Text>\n              <LightningIcon /> {readablizeSats(zap.payment.amount / 1000)}\n            </Text>\n          )}\n        </Flex>\n      ))}\n    </>\n  );\n}\n","import { useNavigate } from \"react-router-dom\";\nimport { Button, ButtonGroup, Divider, Flex, Heading, Spacer, Spinner } from \"@chakra-ui/react\";\n\nimport { ChevronLeftIcon } from \"../../components/icons\";\nimport GoalMenu from \"./components/goal-menu\";\nimport { getGoalAmount, getGoalName } from \"../../helpers/nostr/goal\";\nimport GoalProgress from \"./components/goal-progress\";\nimport useSingleEvent from \"../../hooks/use-single-event\";\nimport UserAvatar from \"../../components/user/user-avatar\";\nimport UserLink from \"../../components/user/user-link\";\nimport GoalContents from \"./components/goal-contents\";\nimport GoalZapList from \"./components/goal-zap-list\";\nimport { readablizeSats } from \"../../helpers/bolt11\";\nimport GoalZapButton from \"./components/goal-zap-button\";\nimport VerticalPageLayout from \"../../components/vertical-page-layout\";\nimport useParamsEventPointer from \"../../hooks/use-params-event-pointer\";\n\nexport default function GoalDetailsView() {\n  const navigate = useNavigate();\n  const pointer = useParamsEventPointer(\"id\");\n\n  const goal = useSingleEvent(pointer.id, pointer.relays);\n  if (!goal) return <Spinner />;\n\n  return (\n    <VerticalPageLayout overflow=\"hidden\" h=\"full\">\n      <Flex gap=\"2\" alignItems=\"center\">\n        <Button onClick={() => navigate(-1)} leftIcon={<ChevronLeftIcon />}>\n          Back\n        </Button>\n\n        <Heading size=\"md\" isTruncated>\n          {getGoalName(goal)} ({readablizeSats(getGoalAmount(goal) / 1000)})\n        </Heading>\n\n        <Spacer />\n\n        <ButtonGroup>\n          <GoalZapButton goal={goal} />\n          <GoalMenu aria-label=\"More options\" goal={goal} />\n        </ButtonGroup>\n      </Flex>\n      <Flex gap=\"2\" alignItems=\"center\">\n        <UserAvatar pubkey={goal.pubkey} size=\"sm\" />\n        <UserLink pubkey={goal.pubkey} fontWeight=\"bold\" fontSize=\"lg\" />\n      </Flex>\n\n      <GoalContents goal={goal} />\n      <Heading size=\"md\" mt=\"2\">\n        Progress:\n      </Heading>\n      <GoalProgress goal={goal} />\n      <Heading size=\"md\" mt=\"2\">\n        Contributors:\n      </Heading>\n      <Divider />\n      <GoalZapList goal={goal} />\n    </VerticalPageLayout>\n  );\n}\n"],"names":["GoalZapList","goal","zaps","useEventZaps","getEventUID","getGoalRelays","sorted","a","b","jsx","Fragment","zap","jsxs","Flex","UserAvatarLink","Box","Text","UserLink","Timestamp","Spacer","LightningIcon","readablizeSats","GoalDetailsView","navigate","useNavigate","pointer","useParamsEventPointer","useSingleEvent","VerticalPageLayout","Button","ChevronLeftIcon","Heading","getGoalName","getGoalAmount","ButtonGroup","GoalZapButton","GoalMenu","UserAvatar","GoalContents","GoalProgress","Divider","Spinner"],"mappings":"qQAWwB,SAAAA,EAAY,CAAE,KAAAC,GAA8B,CAC5D,MAAAC,EAAOC,EAAaC,EAAYH,CAAI,EAAGI,EAAcJ,CAAI,EAAG,EAAI,EAChEK,EAAS,MAAM,KAAKJ,CAAI,EAAE,KAAK,CAACK,EAAGC,IAAMA,EAAE,MAAM,WAAaD,EAAE,MAAM,UAAU,EAGpF,OAAAE,EAAA,IAAAC,EAAA,SAAA,CACG,WAAO,IAAKC,GACVC,EAAA,KAAAC,EAAA,CAAuB,IAAI,IAC1B,SAAA,CAAAJ,MAACK,GAAe,OAAQH,EAAI,QAAQ,OAAQ,KAAK,KAAK,SACrDI,EACC,CAAA,SAAA,CAAAH,OAACI,EACC,CAAA,SAAA,CAACP,EAAAA,IAAAQ,EAAA,CAAS,SAAS,KAAK,WAAW,OAAO,OAAQN,EAAI,QAAQ,OAAQ,GAAG,GAAI,CAAA,EAC5EF,EAAA,IAAAS,EAAA,CAAU,UAAWP,EAAI,MAAM,WAAY,CAAA,EAC9C,EACCA,EAAI,QAAQ,eAAYK,EAAM,CAAA,SAAAL,EAAI,QAAQ,QAAQ,CAAA,EACrD,QACCQ,EAAO,EAAA,EACPR,EAAI,QAAQ,QACXC,EAAA,KAACI,EACC,CAAA,SAAA,CAAAP,EAAA,IAACW,EAAc,EAAA,EAAE,IAAEC,EAAeV,EAAI,QAAQ,OAAS,GAAI,CAAA,EAC7D,CAbO,CAAA,EAAAA,EAAI,OAef,CACD,CACH,CAAA,CAEJ,CCpBA,SAAwBW,GAAkB,CACxC,MAAMC,EAAWC,IACXC,EAAUC,EAAsB,IAAI,EAEpCzB,EAAO0B,EAAeF,EAAQ,GAAIA,EAAQ,MAAM,EACtD,OAAKxB,EAGFW,EAAAA,KAAAgB,EAAA,CAAmB,SAAS,SAAS,EAAE,OACtC,SAAA,CAAAhB,EAAA,KAACC,EAAK,CAAA,IAAI,IAAI,WAAW,SACvB,SAAA,CAACJ,EAAAA,IAAAoB,EAAA,CAAO,QAAS,IAAMN,EAAS,EAAE,EAAG,SAAUd,EAAAA,IAACqB,EAAgB,CAAA,CAAA,EAAI,SAEpE,MAAA,CAAA,EAEClB,EAAA,KAAAmB,EAAA,CAAQ,KAAK,KAAK,YAAW,GAC3B,SAAA,CAAAC,EAAY/B,CAAI,EAAE,KAAGoB,EAAeY,EAAchC,CAAI,EAAI,GAAI,EAAE,GAAA,EACnE,QAECkB,EAAO,EAAA,SAEPe,EACC,CAAA,SAAA,CAAAzB,MAAC0B,GAAc,KAAAlC,EAAY,EAC1BQ,EAAAA,IAAA2B,EAAA,CAAS,aAAW,eAAe,KAAAnC,CAAY,CAAA,CAAA,EAClD,CAAA,EACF,EACCW,EAAA,KAAAC,EAAA,CAAK,IAAI,IAAI,WAAW,SACvB,SAAA,CAAAJ,EAAA,IAAC4B,EAAW,CAAA,OAAQpC,EAAK,OAAQ,KAAK,KAAK,EAC3CQ,MAACQ,GAAS,OAAQhB,EAAK,OAAQ,WAAW,OAAO,SAAS,KAAK,CAAA,EACjE,EAEAQ,MAAC6B,GAAa,KAAArC,EAAY,QACzB8B,EAAQ,CAAA,KAAK,KAAK,GAAG,IAAI,SAE1B,YAAA,EACAtB,MAAC8B,GAAa,KAAAtC,EAAY,QACzB8B,EAAQ,CAAA,KAAK,KAAK,GAAG,IAAI,SAE1B,gBAAA,QACCS,EAAQ,EAAA,EACT/B,MAACT,GAAY,KAAAC,EAAY,CAC3B,CAAA,CAAA,EAnCgBQ,EAAA,IAACgC,EAAQ,CAAA,CAAA,CAqC7B"}