{"version":3,"file":"tracks-pn_jjhiv.js","sources":["../../src/views/user/tracks.tsx"],"sourcesContent":["import { useOutletContext } from \"react-router-dom\";\nimport { Box, SimpleGrid } from \"@chakra-ui/react\";\n\nimport { useAdditionalRelayContext } from \"../../providers/local/additional-relay-context\";\nimport useTimelineLoader from \"../../hooks/use-timeline-loader\";\nimport { getEventUID } from \"../../helpers/nostr/event\";\nimport IntersectionObserverProvider from \"../../providers/local/intersection-observer\";\nimport { useTimelineCurserIntersectionCallback } from \"../../hooks/use-timeline-cursor-intersection-callback\";\nimport VerticalPageLayout from \"../../components/vertical-page-layout\";\nimport { STEMSTR_TRACK_KIND } from \"../../helpers/nostr/stemstr\";\nimport EmbeddedStemstrTrack from \"../../components/embed-event/event-types/embedded-stemstr-track\";\nimport { unique } from \"../../helpers/array\";\nimport { NostrEvent } from \"../../types/nostr-event\";\nimport useEventIntersectionRef from \"../../hooks/use-event-intersection-ref\";\n\nfunction Track({ track }: { track: NostrEvent }) {\n  const ref = useEventIntersectionRef(track);\n\n  return (\n    <Box ref={ref}>\n      <EmbeddedStemstrTrack track={track} />\n    </Box>\n  );\n}\n\nexport default function UserTracksTab() {\n  const { pubkey } = useOutletContext() as { pubkey: string };\n  const readRelays = useAdditionalRelayContext();\n\n  const { loader, timeline: tracks } = useTimelineLoader(\n    pubkey + \"-tracks\",\n    unique([...readRelays, \"wss://relay.stemstr.app\"]),\n    {\n      authors: [pubkey],\n      kinds: [STEMSTR_TRACK_KIND],\n    },\n  );\n  const callback = useTimelineCurserIntersectionCallback(loader);\n\n  return (\n    <IntersectionObserverProvider callback={callback}>\n      <VerticalPageLayout>\n        <SimpleGrid columns={{ base: 1, xl: 2 }} spacing=\"4\">\n          {tracks?.map((track) => <Track key={getEventUID(track)} track={track} />)}\n        </SimpleGrid>\n      </VerticalPageLayout>\n    </IntersectionObserverProvider>\n  );\n}\n"],"names":["Track","track","ref","useEventIntersectionRef","Box","jsx","EmbeddedStemstrTrack","UserTracksTab","pubkey","useOutletContext","readRelays","useAdditionalRelayContext","loader","tracks","useTimelineLoader","unique","STEMSTR_TRACK_KIND","callback","useTimelineCurserIntersectionCallback","IntersectionObserverProvider","VerticalPageLayout","SimpleGrid","getEventUID"],"mappings":"6QAeA,SAASA,EAAM,CAAE,MAAAC,GAAgC,CACzC,MAAAC,EAAMC,EAAwBF,CAAK,EAEzC,aACGG,EAAI,CAAA,IAAAF,EACH,SAACG,MAAAC,EAAA,CAAqB,MAAAL,EAAc,CACtC,CAAA,CAEJ,CAEA,SAAwBM,GAAgB,CAChC,KAAA,CAAE,OAAAC,GAAWC,IACbC,EAAaC,IAEb,CAAE,OAAAC,EAAQ,SAAUC,CAAW,EAAAC,EACnCN,EAAS,UACTO,EAAO,CAAC,GAAGL,EAAY,yBAAyB,CAAC,EACjD,CACE,QAAS,CAACF,CAAM,EAChB,MAAO,CAACQ,CAAkB,CAC5B,CAAA,EAEIC,EAAWC,EAAsCN,CAAM,EAE7D,OACGP,EAAAA,IAAAc,EAAA,CAA6B,SAAAF,EAC5B,SAAAZ,EAAA,IAACe,EACC,CAAA,SAAAf,EAAA,IAACgB,EAAW,CAAA,QAAS,CAAE,KAAM,EAAG,GAAI,CAAE,EAAG,QAAQ,IAC9C,SAAQR,GAAA,YAAAA,EAAA,IAAKZ,GAAWI,EAAAA,IAAAL,EAAA,CAA+B,MAAAC,CAApB,EAAAqB,EAAYrB,CAAK,CAAiB,EAAE,CAC1E,EACF,CACF,CAAA,CAEJ"}