{"version":3,"file":"sqlite3-worker1-bundler-friendly-C0USlvNK.js","sources":["../node_modules/.pnpm/@sqlite.org+sqlite-wasm@3.46.1-build3/node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-bundler-friendly.mjs","../node_modules/.pnpm/@sqlite.org+sqlite-wasm@3.46.1-build3/node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-worker1-bundler-friendly.mjs"],"sourcesContent":["/*\n ** LICENSE for the sqlite3 WebAssembly/JavaScript APIs.\n **\n ** This bundle (typically released as sqlite3.js or sqlite3.mjs)\n ** is an amalgamation of JavaScript source code from two projects:\n **\n ** 1) https://emscripten.org: the Emscripten \"glue code\" is covered by\n **    the terms of the MIT license and University of Illinois/NCSA\n **    Open Source License, as described at:\n **\n **    https://emscripten.org/docs/introducing_emscripten/emscripten_license.html\n **\n ** 2) https://sqlite.org: all code and documentation labeled as being\n **    from this source are released under the same terms as the sqlite3\n **    C library:\n **\n ** 2022-10-16\n **\n ** The author disclaims copyright to this source code.  In place of a\n ** legal notice, here is a blessing:\n **\n ** *   May you do good and not evil.\n ** *   May you find forgiveness for yourself and forgive others.\n ** *   May you share freely, never taking more than you give.\n */\n/*\n ** This code was built from sqlite3 version...\n **\n ** SQLITE_VERSION \"3.46.1\"\n ** SQLITE_VERSION_NUMBER 3046001\n ** SQLITE_SOURCE_ID \"2024-08-13 09:16:08 c9c2ab54ba1f5f46360f1b4f35d849cd3f080e6fc2b6c60e91b16c63f69a1e33\"\n **\n ** Using the Emscripten SDK version 3.1.30.\n */\n\nvar sqlite3InitModule = (() => {\n  var _scriptDir = import.meta.url;\n\n  return function (config) {\n    var sqlite3InitModule = config || {};\n\n    var Module =\n      typeof sqlite3InitModule != 'undefined' ? sqlite3InitModule : {};\n\n    var readyPromiseResolve, readyPromiseReject;\n    Module['ready'] = new Promise(function (resolve, reject) {\n      readyPromiseResolve = resolve;\n      readyPromiseReject = reject;\n    });\n\n    const sqlite3InitModuleState =\n      globalThis.sqlite3InitModuleState ||\n      Object.assign(Object.create(null), {\n        debugModule: () => {},\n      });\n    delete globalThis.sqlite3InitModuleState;\n    sqlite3InitModuleState.debugModule(\n      'globalThis.location =',\n      globalThis.location,\n    );\n\n    const xNameOfInstantiateWasm = false\n      ? 'instantiateWasm'\n      : 'emscripten-bug-17951';\n    Module[xNameOfInstantiateWasm] = function callee(imports, onSuccess) {\n      imports.env.foo = function () {};\n      const uri = Module.locateFile(\n        callee.uri,\n        'undefined' === typeof scriptDirectory ? '' : scriptDirectory,\n      );\n      sqlite3InitModuleState.debugModule('instantiateWasm() uri =', uri);\n      const wfetch = () => fetch(uri, { credentials: 'same-origin' });\n      const loadWasm = WebAssembly.instantiateStreaming\n        ? async () => {\n            return WebAssembly.instantiateStreaming(wfetch(), imports).then(\n              (arg) => onSuccess(arg.instance, arg.module),\n            );\n          }\n        : async () => {\n            return wfetch()\n              .then((response) => response.arrayBuffer())\n              .then((bytes) => WebAssembly.instantiate(bytes, imports))\n              .then((arg) => onSuccess(arg.instance, arg.module));\n          };\n      loadWasm();\n      return {};\n    };\n\n    Module[xNameOfInstantiateWasm].uri = 'sqlite3.wasm';\n\n    var moduleOverrides = Object.assign({}, Module);\n\n    var arguments_ = [];\n    var thisProgram = './this.program';\n    var quit_ = (status, toThrow) => {\n      throw toThrow;\n    };\n\n    var ENVIRONMENT_IS_WEB = typeof window == 'object';\n    var ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';\n\n    var ENVIRONMENT_IS_NODE =\n      typeof process == 'object' &&\n      typeof process.versions == 'object' &&\n      typeof process.versions.node == 'string';\n    var ENVIRONMENT_IS_SHELL =\n      !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\n    var scriptDirectory = '';\n    function locateFile(path) {\n      if (Module['locateFile']) {\n        return Module['locateFile'](path, scriptDirectory);\n      }\n      return scriptDirectory + path;\n    }\n\n    var read_, readAsync, readBinary, setWindowTitle;\n\n    if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = self.location.href;\n      } else if (typeof document != 'undefined' && document.currentScript) {\n        scriptDirectory = document.currentScript.src;\n      }\n\n      if (_scriptDir) {\n        scriptDirectory = _scriptDir;\n      }\n\n      if (scriptDirectory.indexOf('blob:') !== 0) {\n        scriptDirectory = scriptDirectory.substr(\n          0,\n          scriptDirectory.replace(/[?#].*/, '').lastIndexOf('/') + 1,\n        );\n      } else {\n        scriptDirectory = '';\n      }\n\n      {\n        read_ = (url) => {\n          var xhr = new XMLHttpRequest();\n          xhr.open('GET', url, false);\n          xhr.send(null);\n          return xhr.responseText;\n        };\n\n        if (ENVIRONMENT_IS_WORKER) {\n          readBinary = (url) => {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', url, false);\n            xhr.responseType = 'arraybuffer';\n            xhr.send(null);\n            return new Uint8Array(xhr.response);\n          };\n        }\n\n        readAsync = (url, onload, onerror) => {\n          var xhr = new XMLHttpRequest();\n          xhr.open('GET', url, true);\n          xhr.responseType = 'arraybuffer';\n          xhr.onload = () => {\n            if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) {\n              onload(xhr.response);\n              return;\n            }\n            onerror();\n          };\n          xhr.onerror = onerror;\n          xhr.send(null);\n        };\n      }\n\n      setWindowTitle = (title) => (document.title = title);\n    } else {\n    }\n\n    var out = Module['print'] || console.log.bind(console);\n    var err = Module['printErr'] || console.warn.bind(console);\n\n    Object.assign(Module, moduleOverrides);\n\n    moduleOverrides = null;\n\n    if (Module['arguments']) arguments_ = Module['arguments'];\n\n    if (Module['thisProgram']) thisProgram = Module['thisProgram'];\n\n    if (Module['quit']) quit_ = Module['quit'];\n\n    var STACK_ALIGN = 16;\n    var POINTER_SIZE = 4;\n\n    function getNativeTypeSize(type) {\n      switch (type) {\n        case 'i1':\n        case 'i8':\n        case 'u8':\n          return 1;\n        case 'i16':\n        case 'u16':\n          return 2;\n        case 'i32':\n        case 'u32':\n          return 4;\n        case 'i64':\n        case 'u64':\n          return 8;\n        case 'float':\n          return 4;\n        case 'double':\n          return 8;\n        default: {\n          if (type[type.length - 1] === '*') {\n            return POINTER_SIZE;\n          }\n          if (type[0] === 'i') {\n            const bits = Number(type.substr(1));\n            assert(\n              bits % 8 === 0,\n              'getNativeTypeSize invalid bits ' + bits + ', type ' + type,\n            );\n            return bits / 8;\n          }\n          return 0;\n        }\n      }\n    }\n\n    var wasmBinary;\n    if (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\n    var noExitRuntime = Module['noExitRuntime'] || true;\n\n    if (typeof WebAssembly != 'object') {\n      abort('no native wasm support detected');\n    }\n\n    var wasmMemory;\n\n    var ABORT = false;\n\n    var EXITSTATUS;\n\n    function assert(condition, text) {\n      if (!condition) {\n        abort(text);\n      }\n    }\n\n    var UTF8Decoder =\n      typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n\n    function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = '';\n\n      while (idx < endPtr) {\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 0x80)) {\n          str += String.fromCharCode(u0);\n          continue;\n        }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xe0) == 0xc0) {\n          str += String.fromCharCode(((u0 & 31) << 6) | u1);\n          continue;\n        }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xf0) == 0xe0) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          u0 =\n            ((u0 & 7) << 18) |\n            (u1 << 12) |\n            (u2 << 6) |\n            (heapOrArray[idx++] & 63);\n        }\n\n        if (u0 < 0x10000) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 0x10000;\n          str += String.fromCharCode(\n            0xd800 | (ch >> 10),\n            0xdc00 | (ch & 0x3ff),\n          );\n        }\n      }\n      return str;\n    }\n\n    function UTF8ToString(ptr, maxBytesToRead) {\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n    }\n\n    function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n      if (!(maxBytesToWrite > 0)) return 0;\n\n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1;\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 0xd800 && u <= 0xdfff) {\n          var u1 = str.charCodeAt(++i);\n          u = (0x10000 + ((u & 0x3ff) << 10)) | (u1 & 0x3ff);\n        }\n        if (u <= 0x7f) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 0x7ff) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 0xc0 | (u >> 6);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else if (u <= 0xffff) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 0xe0 | (u >> 12);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 0xf0 | (u >> 18);\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        }\n      }\n\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    }\n\n    function stringToUTF8(str, outPtr, maxBytesToWrite) {\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    }\n\n    function lengthBytesUTF8(str) {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        var c = str.charCodeAt(i);\n        if (c <= 0x7f) {\n          len++;\n        } else if (c <= 0x7ff) {\n          len += 2;\n        } else if (c >= 0xd800 && c <= 0xdfff) {\n          len += 4;\n          ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    }\n\n    var HEAP,\n      HEAP8,\n      HEAPU8,\n      HEAP16,\n      HEAPU16,\n      HEAP32,\n      HEAPU32,\n      HEAPF32,\n      HEAP64,\n      HEAPU64,\n      HEAPF64;\n\n    function updateMemoryViews() {\n      var b = wasmMemory.buffer;\n      Module['HEAP8'] = HEAP8 = new Int8Array(b);\n      Module['HEAP16'] = HEAP16 = new Int16Array(b);\n      Module['HEAP32'] = HEAP32 = new Int32Array(b);\n      Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n      Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n      Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n      Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n      Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n      Module['HEAP64'] = HEAP64 = new BigInt64Array(b);\n      Module['HEAPU64'] = HEAPU64 = new BigUint64Array(b);\n    }\n\n    var STACK_SIZE = 524288;\n\n    var INITIAL_MEMORY = Module['INITIAL_MEMORY'] || 16777216;\n\n    if (Module['wasmMemory']) {\n      wasmMemory = Module['wasmMemory'];\n    } else {\n      wasmMemory = new WebAssembly.Memory({\n        initial: INITIAL_MEMORY / 65536,\n\n        maximum: 2147483648 / 65536,\n      });\n    }\n\n    updateMemoryViews();\n\n    INITIAL_MEMORY = wasmMemory.buffer.byteLength;\n\n    var wasmTable;\n\n    var __ATPRERUN__ = [];\n    var __ATINIT__ = [];\n    var __ATEXIT__ = [];\n    var __ATPOSTRUN__ = [];\n\n    var runtimeInitialized = false;\n\n    function keepRuntimeAlive() {\n      return noExitRuntime;\n    }\n\n    function preRun() {\n      if (Module['preRun']) {\n        if (typeof Module['preRun'] == 'function')\n          Module['preRun'] = [Module['preRun']];\n        while (Module['preRun'].length) {\n          addOnPreRun(Module['preRun'].shift());\n        }\n      }\n\n      callRuntimeCallbacks(__ATPRERUN__);\n    }\n\n    function initRuntime() {\n      runtimeInitialized = true;\n\n      if (!Module['noFSInit'] && !FS.init.initialized) FS.init();\n      FS.ignorePermissions = false;\n\n      TTY.init();\n      callRuntimeCallbacks(__ATINIT__);\n    }\n\n    function postRun() {\n      if (Module['postRun']) {\n        if (typeof Module['postRun'] == 'function')\n          Module['postRun'] = [Module['postRun']];\n        while (Module['postRun'].length) {\n          addOnPostRun(Module['postRun'].shift());\n        }\n      }\n\n      callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n\n    function addOnPreRun(cb) {\n      __ATPRERUN__.unshift(cb);\n    }\n\n    function addOnInit(cb) {\n      __ATINIT__.unshift(cb);\n    }\n\n    function addOnExit(cb) {}\n\n    function addOnPostRun(cb) {\n      __ATPOSTRUN__.unshift(cb);\n    }\n\n    var runDependencies = 0;\n    var runDependencyWatcher = null;\n    var dependenciesFulfilled = null;\n\n    function getUniqueRunDependency(id) {\n      return id;\n    }\n\n    function addRunDependency(id) {\n      runDependencies++;\n\n      if (Module['monitorRunDependencies']) {\n        Module['monitorRunDependencies'](runDependencies);\n      }\n    }\n\n    function removeRunDependency(id) {\n      runDependencies--;\n\n      if (Module['monitorRunDependencies']) {\n        Module['monitorRunDependencies'](runDependencies);\n      }\n\n      if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n        }\n        if (dependenciesFulfilled) {\n          var callback = dependenciesFulfilled;\n          dependenciesFulfilled = null;\n          callback();\n        }\n      }\n    }\n\n    function abort(what) {\n      if (Module['onAbort']) {\n        Module['onAbort'](what);\n      }\n\n      what = 'Aborted(' + what + ')';\n\n      err(what);\n\n      ABORT = true;\n      EXITSTATUS = 1;\n\n      what += '. Build with -sASSERTIONS for more info.';\n\n      var e = new WebAssembly.RuntimeError(what);\n\n      readyPromiseReject(e);\n\n      throw e;\n    }\n\n    var dataURIPrefix = 'data:application/octet-stream;base64,';\n\n    function isDataURI(filename) {\n      return filename.startsWith(dataURIPrefix);\n    }\n\n    function isFileURI(filename) {\n      return filename.startsWith('file://');\n    }\n\n    var wasmBinaryFile;\n    if (Module['locateFile']) {\n      wasmBinaryFile = 'sqlite3.wasm';\n      if (!isDataURI(wasmBinaryFile)) {\n        wasmBinaryFile = locateFile(wasmBinaryFile);\n      }\n    } else {\n      wasmBinaryFile = new URL('sqlite3.wasm', import.meta.url).href;\n    }\n\n    function getBinary(file) {\n      try {\n        if (file == wasmBinaryFile && wasmBinary) {\n          return new Uint8Array(wasmBinary);\n        }\n        if (readBinary) {\n          return readBinary(file);\n        }\n        throw 'both async and sync fetching of the wasm failed';\n      } catch (err) {\n        abort(err);\n      }\n    }\n\n    function getBinaryPromise() {\n      if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n        if (typeof fetch == 'function') {\n          return fetch(wasmBinaryFile, { credentials: 'same-origin' })\n            .then(function (response) {\n              if (!response['ok']) {\n                throw (\n                  \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\"\n                );\n              }\n              return response['arrayBuffer']();\n            })\n            .catch(function () {\n              return getBinary(wasmBinaryFile);\n            });\n        }\n      }\n\n      return Promise.resolve().then(function () {\n        return getBinary(wasmBinaryFile);\n      });\n    }\n\n    function createWasm() {\n      var info = {\n        env: asmLibraryArg,\n        wasi_snapshot_preview1: asmLibraryArg,\n      };\n\n      function receiveInstance(instance, module) {\n        var exports = instance.exports;\n\n        Module['asm'] = exports;\n\n        wasmTable = Module['asm']['__indirect_function_table'];\n\n        addOnInit(Module['asm']['__wasm_call_ctors']);\n\n        removeRunDependency('wasm-instantiate');\n      }\n\n      addRunDependency('wasm-instantiate');\n\n      function receiveInstantiationResult(result) {\n        receiveInstance(result['instance']);\n      }\n\n      function instantiateArrayBuffer(receiver) {\n        return getBinaryPromise()\n          .then(function (binary) {\n            return WebAssembly.instantiate(binary, info);\n          })\n          .then(function (instance) {\n            return instance;\n          })\n          .then(receiver, function (reason) {\n            err('failed to asynchronously prepare wasm: ' + reason);\n\n            abort(reason);\n          });\n      }\n\n      function instantiateAsync() {\n        if (\n          !wasmBinary &&\n          typeof WebAssembly.instantiateStreaming == 'function' &&\n          !isDataURI(wasmBinaryFile) &&\n          typeof fetch == 'function'\n        ) {\n          return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(\n            function (response) {\n              var result = WebAssembly.instantiateStreaming(response, info);\n\n              return result.then(receiveInstantiationResult, function (reason) {\n                err('wasm streaming compile failed: ' + reason);\n                err('falling back to ArrayBuffer instantiation');\n                return instantiateArrayBuffer(receiveInstantiationResult);\n              });\n            },\n          );\n        } else {\n          return instantiateArrayBuffer(receiveInstantiationResult);\n        }\n      }\n\n      if (Module['instantiateWasm']) {\n        try {\n          var exports = Module['instantiateWasm'](info, receiveInstance);\n          return exports;\n        } catch (e) {\n          err('Module.instantiateWasm callback failed with error: ' + e);\n\n          readyPromiseReject(e);\n        }\n      }\n\n      instantiateAsync().catch(readyPromiseReject);\n      return {};\n    }\n\n    var tempDouble;\n    var tempI64;\n\n    var ASM_CONSTS = {};\n\n    function ExitStatus(status) {\n      this.name = 'ExitStatus';\n      this.message = 'Program terminated with exit(' + status + ')';\n      this.status = status;\n    }\n\n    function callRuntimeCallbacks(callbacks) {\n      while (callbacks.length > 0) {\n        callbacks.shift()(Module);\n      }\n    }\n\n    function getValue(ptr, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1':\n          return HEAP8[ptr >> 0];\n        case 'i8':\n          return HEAP8[ptr >> 0];\n        case 'i16':\n          return HEAP16[ptr >> 1];\n        case 'i32':\n          return HEAP32[ptr >> 2];\n        case 'i64':\n          return HEAP64[ptr >> 3];\n        case 'float':\n          return HEAPF32[ptr >> 2];\n        case 'double':\n          return HEAPF64[ptr >> 3];\n        case '*':\n          return HEAPU32[ptr >> 2];\n        default:\n          abort('invalid type for getValue: ' + type);\n      }\n      return null;\n    }\n\n    function setValue(ptr, value, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1':\n          HEAP8[ptr >> 0] = value;\n          break;\n        case 'i8':\n          HEAP8[ptr >> 0] = value;\n          break;\n        case 'i16':\n          HEAP16[ptr >> 1] = value;\n          break;\n        case 'i32':\n          HEAP32[ptr >> 2] = value;\n          break;\n        case 'i64':\n          (tempI64 = [\n            value >>> 0,\n            ((tempDouble = value),\n            +Math.abs(tempDouble) >= 1.0\n              ? tempDouble > 0.0\n                ? (Math.min(\n                    +Math.floor(tempDouble / 4294967296.0),\n                    4294967295.0,\n                  ) |\n                    0) >>>\n                  0\n                : ~~+Math.ceil(\n                    (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                  ) >>> 0\n              : 0),\n          ]),\n            (HEAP32[ptr >> 2] = tempI64[0]),\n            (HEAP32[(ptr + 4) >> 2] = tempI64[1]);\n          break;\n        case 'float':\n          HEAPF32[ptr >> 2] = value;\n          break;\n        case 'double':\n          HEAPF64[ptr >> 3] = value;\n          break;\n        case '*':\n          HEAPU32[ptr >> 2] = value;\n          break;\n        default:\n          abort('invalid type for setValue: ' + type);\n      }\n    }\n\n    var PATH = {\n      isAbs: (path) => path.charAt(0) === '/',\n      splitPath: (filename) => {\n        var splitPathRe =\n          /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n      normalizeArray: (parts, allowAboveRoot) => {\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === '.') {\n            parts.splice(i, 1);\n          } else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift('..');\n          }\n        }\n        return parts;\n      },\n      normalize: (path) => {\n        var isAbsolute = PATH.isAbs(path),\n          trailingSlash = path.substr(-1) === '/';\n\n        path = PATH.normalizeArray(\n          path.split('/').filter((p) => !!p),\n          !isAbsolute,\n        ).join('/');\n        if (!path && !isAbsolute) {\n          path = '.';\n        }\n        if (path && trailingSlash) {\n          path += '/';\n        }\n        return (isAbsolute ? '/' : '') + path;\n      },\n      dirname: (path) => {\n        var result = PATH.splitPath(path),\n          root = result[0],\n          dir = result[1];\n        if (!root && !dir) {\n          return '.';\n        }\n        if (dir) {\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },\n      basename: (path) => {\n        if (path === '/') return '/';\n        path = PATH.normalize(path);\n        path = path.replace(/\\/$/, '');\n        var lastSlash = path.lastIndexOf('/');\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash + 1);\n      },\n      join: function () {\n        var paths = Array.prototype.slice.call(arguments);\n        return PATH.normalize(paths.join('/'));\n      },\n      join2: (l, r) => {\n        return PATH.normalize(l + '/' + r);\n      },\n    };\n\n    function getRandomDevice() {\n      if (\n        typeof crypto == 'object' &&\n        typeof crypto['getRandomValues'] == 'function'\n      ) {\n        var randomBuffer = new Uint8Array(1);\n        return () => {\n          crypto.getRandomValues(randomBuffer);\n          return randomBuffer[0];\n        };\n      } else return () => abort('randomDevice');\n    }\n\n    var PATH_FS = {\n      resolve: function () {\n        var resolvedPath = '',\n          resolvedAbsolute = false;\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = i >= 0 ? arguments[i] : FS.cwd();\n\n          if (typeof path != 'string') {\n            throw new TypeError('Arguments to path.resolve must be strings');\n          } else if (!path) {\n            return '';\n          }\n          resolvedPath = path + '/' + resolvedPath;\n          resolvedAbsolute = PATH.isAbs(path);\n        }\n\n        resolvedPath = PATH.normalizeArray(\n          resolvedPath.split('/').filter((p) => !!p),\n          !resolvedAbsolute,\n        ).join('/');\n        return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n      },\n      relative: (from, to) => {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== '') break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== '') break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split('/'));\n        var toParts = trim(to.split('/'));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push('..');\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join('/');\n      },\n    };\n\n    function intArrayFromString(stringy, dontAddNull, length) {\n      var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n      var u8array = new Array(len);\n      var numBytesWritten = stringToUTF8Array(\n        stringy,\n        u8array,\n        0,\n        u8array.length,\n      );\n      if (dontAddNull) u8array.length = numBytesWritten;\n      return u8array;\n    }\n    var TTY = {\n      ttys: [],\n      init: function () {},\n      shutdown: function () {},\n      register: function (dev, ops) {\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n      stream_ops: {\n        open: function (stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n        close: function (stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        fsync: function (stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        read: function (stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        },\n        write: function (stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        },\n      },\n      default_tty_ops: {\n        get_char: function (tty) {\n          if (!tty.input.length) {\n            var result = null;\n            if (\n              typeof window != 'undefined' &&\n              typeof window.prompt == 'function'\n            ) {\n              result = window.prompt('Input: ');\n              if (result !== null) {\n                result += '\\n';\n              }\n            } else if (typeof readline == 'function') {\n              result = readline();\n              if (result !== null) {\n                result += '\\n';\n              }\n            }\n            if (!result) {\n              return null;\n            }\n            tty.input = intArrayFromString(result, true);\n          }\n          return tty.input.shift();\n        },\n        put_char: function (tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync: function (tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n      },\n      default_tty1_ops: {\n        put_char: function (tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync: function (tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n      },\n    };\n\n    function zeroMemory(address, size) {\n      HEAPU8.fill(0, address, address + size);\n      return address;\n    }\n\n    function alignMemory(size, alignment) {\n      return Math.ceil(size / alignment) * alignment;\n    }\n    function mmapAlloc(size) {\n      size = alignMemory(size, 65536);\n      var ptr = _emscripten_builtin_memalign(65536, size);\n      if (!ptr) return 0;\n      return zeroMemory(ptr, size);\n    }\n    var MEMFS = {\n      ops_table: null,\n      mount: function (mount) {\n        return MEMFS.createNode(null, '/', 16384 | 511, 0);\n      },\n      createNode: function (parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          throw new FS.ErrnoError(63);\n        }\n        if (!MEMFS.ops_table) {\n          MEMFS.ops_table = {\n            dir: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                lookup: MEMFS.node_ops.lookup,\n                mknod: MEMFS.node_ops.mknod,\n                rename: MEMFS.node_ops.rename,\n                unlink: MEMFS.node_ops.unlink,\n                rmdir: MEMFS.node_ops.rmdir,\n                readdir: MEMFS.node_ops.readdir,\n                symlink: MEMFS.node_ops.symlink,\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek,\n              },\n            },\n            file: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek,\n                read: MEMFS.stream_ops.read,\n                write: MEMFS.stream_ops.write,\n                allocate: MEMFS.stream_ops.allocate,\n                mmap: MEMFS.stream_ops.mmap,\n                msync: MEMFS.stream_ops.msync,\n              },\n            },\n            link: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                readlink: MEMFS.node_ops.readlink,\n              },\n              stream: {},\n            },\n            chrdev: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n              },\n              stream: FS.chrdev_stream_ops,\n            },\n          };\n        }\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0;\n\n          node.contents = null;\n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.timestamp = Date.now();\n\n        if (parent) {\n          parent.contents[name] = node;\n          parent.timestamp = node.timestamp;\n        }\n        return node;\n      },\n      getFileDataAsTypedArray: function (node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray)\n          return node.contents.subarray(0, node.usedBytes);\n        return new Uint8Array(node.contents);\n      },\n      expandFileStorage: function (node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return;\n\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(\n          newCapacity,\n          (prevCapacity *\n            (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>>\n            0,\n        );\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity);\n        if (node.usedBytes > 0)\n          node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n      },\n      resizeFileStorage: function (node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null;\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize);\n          if (oldContents) {\n            node.contents.set(\n              oldContents.subarray(0, Math.min(newSize, node.usedBytes)),\n            );\n          }\n          node.usedBytes = newSize;\n        }\n      },\n      node_ops: {\n        getattr: function (node) {\n          var attr = {};\n\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n        setattr: function (node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n        lookup: function (parent, name) {\n          throw FS.genericErrors[44];\n        },\n        mknod: function (parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n        rename: function (old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {}\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now();\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n          old_node.parent = new_dir;\n        },\n        unlink: function (parent, name) {\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        rmdir: function (parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        readdir: function (node) {\n          var entries = ['.', '..'];\n          for (var key in node.contents) {\n            if (!node.contents.hasOwnProperty(key)) {\n              continue;\n            }\n            entries.push(key);\n          }\n          return entries;\n        },\n        symlink: function (parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n        readlink: function (node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        },\n      },\n      stream_ops: {\n        read: function (stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++)\n              buffer[offset + i] = contents[position + i];\n          }\n          return size;\n        },\n        write: function (stream, buffer, offset, length, position, canOwn) {\n          if (buffer.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n\n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(\n                buffer.subarray(offset, offset + length),\n                position,\n              );\n              return length;\n            }\n          }\n\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer.subarray) {\n            node.contents.set(\n              buffer.subarray(offset, offset + length),\n              position,\n            );\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n        llseek: function (stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n        allocate: function (stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(\n            stream.node.usedBytes,\n            offset + length,\n          );\n        },\n        mmap: function (stream, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n\n          if (!(flags & 2) && contents.buffer === HEAP8.buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(\n                  contents,\n                  position,\n                  position + length,\n                );\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            HEAP8.set(contents, ptr);\n          }\n          return { ptr: ptr, allocated: allocated };\n        },\n        msync: function (stream, buffer, offset, length, mmapFlags) {\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n\n          return 0;\n        },\n      },\n    };\n\n    function asyncLoad(url, onload, onerror, noRunDep) {\n      var dep = !noRunDep ? getUniqueRunDependency('al ' + url) : '';\n      readAsync(\n        url,\n        (arrayBuffer) => {\n          assert(\n            arrayBuffer,\n            'Loading data file \"' + url + '\" failed (no arrayBuffer).',\n          );\n          onload(new Uint8Array(arrayBuffer));\n          if (dep) removeRunDependency(dep);\n        },\n        (event) => {\n          if (onerror) {\n            onerror();\n          } else {\n            throw 'Loading data file \"' + url + '\" failed.';\n          }\n        },\n      );\n      if (dep) addRunDependency(dep);\n    }\n\n    var FS = {\n      root: null,\n      mounts: [],\n      devices: {},\n      streams: [],\n      nextInode: 1,\n      nameTable: null,\n      currentPath: '/',\n      initialized: false,\n      ignorePermissions: true,\n      ErrnoError: null,\n      genericErrors: {},\n      filesystems: null,\n      syncFSRequests: 0,\n      lookupPath: (path, opts = {}) => {\n        path = PATH_FS.resolve(path);\n\n        if (!path) return { path: '', node: null };\n\n        var defaults = {\n          follow_mount: true,\n          recurse_count: 0,\n        };\n        opts = Object.assign(defaults, opts);\n\n        if (opts.recurse_count > 8) {\n          throw new FS.ErrnoError(32);\n        }\n\n        var parts = path.split('/').filter((p) => !!p);\n\n        var current = FS.root;\n        var current_path = '/';\n\n        for (var i = 0; i < parts.length; i++) {\n          var islast = i === parts.length - 1;\n          if (islast && opts.parent) {\n            break;\n          }\n\n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n\n          if (FS.isMountpoint(current)) {\n            if (!islast || (islast && opts.follow_mount)) {\n              current = current.mounted.root;\n            }\n          }\n\n          if (!islast || opts.follow) {\n            var count = 0;\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n\n              var lookup = FS.lookupPath(current_path, {\n                recurse_count: opts.recurse_count + 1,\n              });\n              current = lookup.node;\n\n              if (count++ > 40) {\n                throw new FS.ErrnoError(32);\n              }\n            }\n          }\n        }\n\n        return { path: current_path, node: current };\n      },\n      getPath: (node) => {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length - 1] !== '/'\n              ? mount + '/' + path\n              : mount + path;\n          }\n          path = path ? node.name + '/' + path : node.name;\n          node = node.parent;\n        }\n      },\n      hashName: (parentid, name) => {\n        var hash = 0;\n\n        for (var i = 0; i < name.length; i++) {\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n        }\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\n      },\n      hashAddNode: (node) => {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n      hashRemoveNode: (node) => {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },\n      lookupNode: (parent, name) => {\n        var errCode = FS.mayLookup(parent);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode, parent);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n\n        return FS.lookup(parent, name);\n      },\n      createNode: (parent, name, mode, rdev) => {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n\n        FS.hashAddNode(node);\n\n        return node;\n      },\n      destroyNode: (node) => {\n        FS.hashRemoveNode(node);\n      },\n      isRoot: (node) => {\n        return node === node.parent;\n      },\n      isMountpoint: (node) => {\n        return !!node.mounted;\n      },\n      isFile: (mode) => {\n        return (mode & 61440) === 32768;\n      },\n      isDir: (mode) => {\n        return (mode & 61440) === 16384;\n      },\n      isLink: (mode) => {\n        return (mode & 61440) === 40960;\n      },\n      isChrdev: (mode) => {\n        return (mode & 61440) === 8192;\n      },\n      isBlkdev: (mode) => {\n        return (mode & 61440) === 24576;\n      },\n      isFIFO: (mode) => {\n        return (mode & 61440) === 4096;\n      },\n      isSocket: (mode) => {\n        return (mode & 49152) === 49152;\n      },\n      flagModes: { r: 0, 'r+': 2, w: 577, 'w+': 578, a: 1089, 'a+': 1090 },\n      modeStringToFlags: (str) => {\n        var flags = FS.flagModes[str];\n        if (typeof flags == 'undefined') {\n          throw new Error('Unknown file open mode: ' + str);\n        }\n        return flags;\n      },\n      flagsToPermissionString: (flag) => {\n        var perms = ['r', 'w', 'rw'][flag & 3];\n        if (flag & 512) {\n          perms += 'w';\n        }\n        return perms;\n      },\n      nodePermissions: (node, perms) => {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n\n        if (perms.includes('r') && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.includes('w') && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.includes('x') && !(node.mode & 73)) {\n          return 2;\n        }\n        return 0;\n      },\n      mayLookup: (dir) => {\n        var errCode = FS.nodePermissions(dir, 'x');\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n      mayCreate: (dir, name) => {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {}\n        return FS.nodePermissions(dir, 'wx');\n      },\n      mayDelete: (dir, name, isdir) => {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var errCode = FS.nodePermissions(dir, 'wx');\n        if (errCode) {\n          return errCode;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n        return 0;\n      },\n      mayOpen: (node, flags) => {\n        if (!node) {\n          return 44;\n        }\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== 'r' || flags & 512) {\n            return 31;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n      MAX_OPEN_FDS: 4096,\n      nextfd: (fd_start = 0, fd_end = FS.MAX_OPEN_FDS) => {\n        for (var fd = fd_start; fd <= fd_end; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(33);\n      },\n      getStream: (fd) => FS.streams[fd],\n      createStream: (stream, fd_start, fd_end) => {\n        if (!FS.FSStream) {\n          FS.FSStream = function () {\n            this.shared = {};\n          };\n          FS.FSStream.prototype = {};\n          Object.defineProperties(FS.FSStream.prototype, {\n            object: {\n              get: function () {\n                return this.node;\n              },\n\n              set: function (val) {\n                this.node = val;\n              },\n            },\n            isRead: {\n              get: function () {\n                return (this.flags & 2097155) !== 1;\n              },\n            },\n            isWrite: {\n              get: function () {\n                return (this.flags & 2097155) !== 0;\n              },\n            },\n            isAppend: {\n              get: function () {\n                return this.flags & 1024;\n              },\n            },\n            flags: {\n              get: function () {\n                return this.shared.flags;\n              },\n\n              set: function (val) {\n                this.shared.flags = val;\n              },\n            },\n            position: {\n              get: function () {\n                return this.shared.position;\n              },\n\n              set: function (val) {\n                this.shared.position = val;\n              },\n            },\n          });\n        }\n\n        stream = Object.assign(new FS.FSStream(), stream);\n        var fd = FS.nextfd(fd_start, fd_end);\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n      closeStream: (fd) => {\n        FS.streams[fd] = null;\n      },\n      chrdev_stream_ops: {\n        open: (stream) => {\n          var device = FS.getDevice(stream.node.rdev);\n\n          stream.stream_ops = device.stream_ops;\n\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        },\n        llseek: () => {\n          throw new FS.ErrnoError(70);\n        },\n      },\n      major: (dev) => dev >> 8,\n      minor: (dev) => dev & 0xff,\n      makedev: (ma, mi) => (ma << 8) | mi,\n      registerDevice: (dev, ops) => {\n        FS.devices[dev] = { stream_ops: ops };\n      },\n      getDevice: (dev) => FS.devices[dev],\n      getMounts: (mount) => {\n        var mounts = [];\n        var check = [mount];\n\n        while (check.length) {\n          var m = check.pop();\n\n          mounts.push(m);\n\n          check.push.apply(check, m.mounts);\n        }\n\n        return mounts;\n      },\n      syncfs: (populate, callback) => {\n        if (typeof populate == 'function') {\n          callback = populate;\n          populate = false;\n        }\n\n        FS.syncFSRequests++;\n\n        if (FS.syncFSRequests > 1) {\n          err(\n            'warning: ' +\n              FS.syncFSRequests +\n              ' FS.syncfs operations in flight at once, probably just doing extra work',\n          );\n        }\n\n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n\n        function doCallback(errCode) {\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n\n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        }\n\n        mounts.forEach((mount) => {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n      mount: (type, opts, mountpoint) => {\n        var root = mountpoint === '/';\n        var pseudo = !mountpoint;\n        var node;\n\n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n\n          mountpoint = lookup.path;\n          node = lookup.node;\n\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n\n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n\n        var mount = {\n          type: type,\n          opts: opts,\n          mountpoint: mountpoint,\n          mounts: [],\n        };\n\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n\n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          node.mounted = mount;\n\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n\n        return mountRoot;\n      },\n      unmount: (mountpoint) => {\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n\n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n\n        Object.keys(FS.nameTable).forEach((hash) => {\n          var current = FS.nameTable[hash];\n\n          while (current) {\n            var next = current.name_next;\n\n            if (mounts.includes(current.mount)) {\n              FS.destroyNode(current);\n            }\n\n            current = next;\n          }\n        });\n\n        node.mounted = null;\n\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n      },\n      lookup: (parent, name) => {\n        return parent.node_ops.lookup(parent, name);\n      },\n      mknod: (path, mode, dev) => {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name || name === '.' || name === '..') {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.mayCreate(parent, name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n      create: (path, mode) => {\n        mode = mode !== undefined ? mode : 438;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdir: (path, mode) => {\n        mode = mode !== undefined ? mode : 511;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdirTree: (path, mode) => {\n        var dirs = path.split('/');\n        var d = '';\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += '/' + dirs[i];\n          try {\n            FS.mkdir(d, mode);\n          } catch (e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n      mkdev: (path, mode, dev) => {\n        if (typeof dev == 'undefined') {\n          dev = mode;\n          mode = 438;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n      symlink: (oldpath, newpath) => {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n        var lookup = FS.lookupPath(newpath, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n      rename: (old_path, new_path) => {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n\n        var lookup, old_dir, new_dir;\n\n        lookup = FS.lookupPath(old_path, { parent: true });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, { parent: true });\n        new_dir = lookup.node;\n\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n\n        var old_node = FS.lookupNode(old_dir, old_name);\n\n        var relative = PATH_FS.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(28);\n        }\n\n        relative = PATH_FS.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(55);\n        }\n\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {}\n\n        if (old_node === new_node) {\n          return;\n        }\n\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        errCode = new_node\n          ? FS.mayDelete(new_dir, new_name, isdir)\n          : FS.mayCreate(new_dir, new_name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n        if (\n          FS.isMountpoint(old_node) ||\n          (new_node && FS.isMountpoint(new_node))\n        ) {\n          throw new FS.ErrnoError(10);\n        }\n\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, 'w');\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        FS.hashRemoveNode(old_node);\n\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.hashAddNode(old_node);\n        }\n      },\n      rmdir: (path) => {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n      },\n      readdir: (path) => {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(54);\n        }\n        return node.node_ops.readdir(node);\n      },\n      unlink: (path) => {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n      },\n      readlink: (path) => {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n        return PATH_FS.resolve(\n          FS.getPath(link.parent),\n          link.node_ops.readlink(link),\n        );\n      },\n      stat: (path, dontFollow) => {\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\n        var node = lookup.node;\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(63);\n        }\n        return node.node_ops.getattr(node);\n      },\n      lstat: (path) => {\n        return FS.stat(path, true);\n      },\n      chmod: (path, mode, dontFollow) => {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          mode: (mode & 4095) | (node.mode & ~4095),\n          timestamp: Date.now(),\n        });\n      },\n      lchmod: (path, mode) => {\n        FS.chmod(path, mode, true);\n      },\n      fchmod: (fd, mode) => {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        FS.chmod(stream.node, mode);\n      },\n      chown: (path, uid, gid, dontFollow) => {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          timestamp: Date.now(),\n        });\n      },\n      lchown: (path, uid, gid) => {\n        FS.chown(path, uid, gid, true);\n      },\n      fchown: (fd, uid, gid) => {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        FS.chown(stream.node, uid, gid);\n      },\n      truncate: (path, len) => {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.nodePermissions(node, 'w');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        node.node_ops.setattr(node, {\n          size: len,\n          timestamp: Date.now(),\n        });\n      },\n      ftruncate: (fd, len) => {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n        FS.truncate(stream.node, len);\n      },\n      utime: (path, atime, mtime) => {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        node.node_ops.setattr(node, {\n          timestamp: Math.max(atime, mtime),\n        });\n      },\n      open: (path, flags, mode) => {\n        if (path === '') {\n          throw new FS.ErrnoError(44);\n        }\n        flags = typeof flags == 'string' ? FS.modeStringToFlags(flags) : flags;\n        mode = typeof mode == 'undefined' ? 438 : mode;\n        if (flags & 64) {\n          mode = (mode & 4095) | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        if (typeof path == 'object') {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n          try {\n            var lookup = FS.lookupPath(path, {\n              follow: !(flags & 131072),\n            });\n            node = lookup.node;\n          } catch (e) {}\n        }\n\n        var created = false;\n        if (flags & 64) {\n          if (node) {\n            if (flags & 128) {\n              throw new FS.ErrnoError(20);\n            }\n          } else {\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n\n        if (flags & 65536 && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        if (flags & 512 && !created) {\n          FS.truncate(node, 0);\n        }\n\n        flags &= ~(128 | 512 | 131072);\n\n        var stream = FS.createStream({\n          node: node,\n          path: FS.getPath(node),\n          flags: flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n\n          ungotten: [],\n          error: false,\n        });\n\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (Module['logReadFiles'] && !(flags & 1)) {\n          if (!FS.readFiles) FS.readFiles = {};\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n          }\n        }\n        return stream;\n      },\n      close: (stream) => {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (stream.getdents) stream.getdents = null;\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n      },\n      isClosed: (stream) => {\n        return stream.fd === null;\n      },\n      llseek: (stream, offset, whence) => {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n      read: (stream, buffer, offset, length, position) => {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesRead = stream.stream_ops.read(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n        );\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n      write: (stream, buffer, offset, length, position, canOwn) => {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n        if (stream.seekable && stream.flags & 1024) {\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesWritten = stream.stream_ops.write(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n          canOwn,\n        );\n        if (!seeking) stream.position += bytesWritten;\n        return bytesWritten;\n      },\n      allocate: (stream, offset, length) => {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(138);\n        }\n        stream.stream_ops.allocate(stream, offset, length);\n      },\n      mmap: (stream, length, position, prot, flags) => {\n        if (\n          (prot & 2) !== 0 &&\n          (flags & 2) === 0 &&\n          (stream.flags & 2097155) !== 2\n        ) {\n          throw new FS.ErrnoError(2);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\n      },\n      msync: (stream, buffer, offset, length, mmapFlags) => {\n        if (!stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(\n          stream,\n          buffer,\n          offset,\n          length,\n          mmapFlags,\n        );\n      },\n      munmap: (stream) => 0,\n      ioctl: (stream, cmd, arg) => {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n      readFile: (path, opts = {}) => {\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || 'binary';\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\n          throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === 'utf8') {\n          ret = UTF8ArrayToString(buf, 0);\n        } else if (opts.encoding === 'binary') {\n          ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n      },\n      writeFile: (path, data, opts = {}) => {\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data == 'string') {\n          var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error('Unsupported data type');\n        }\n        FS.close(stream);\n      },\n      cwd: () => FS.currentPath,\n      chdir: (path) => {\n        var lookup = FS.lookupPath(path, { follow: true });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        var errCode = FS.nodePermissions(lookup.node, 'x');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.currentPath = lookup.path;\n      },\n      createDefaultDirectories: () => {\n        FS.mkdir('/tmp');\n        FS.mkdir('/home');\n        FS.mkdir('/home/web_user');\n      },\n      createDefaultDevices: () => {\n        FS.mkdir('/dev');\n\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: () => 0,\n          write: (stream, buffer, offset, length, pos) => length,\n        });\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\n\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\n\n        var random_device = getRandomDevice();\n        FS.createDevice('/dev', 'random', random_device);\n        FS.createDevice('/dev', 'urandom', random_device);\n\n        FS.mkdir('/dev/shm');\n        FS.mkdir('/dev/shm/tmp');\n      },\n      createSpecialDirectories: () => {\n        FS.mkdir('/proc');\n        var proc_self = FS.mkdir('/proc/self');\n        FS.mkdir('/proc/self/fd');\n        FS.mount(\n          {\n            mount: () => {\n              var node = FS.createNode(proc_self, 'fd', 16384 | 511, 73);\n              node.node_ops = {\n                lookup: (parent, name) => {\n                  var fd = +name;\n                  var stream = FS.getStream(fd);\n                  if (!stream) throw new FS.ErrnoError(8);\n                  var ret = {\n                    parent: null,\n                    mount: { mountpoint: 'fake' },\n                    node_ops: { readlink: () => stream.path },\n                  };\n                  ret.parent = ret;\n                  return ret;\n                },\n              };\n              return node;\n            },\n          },\n          {},\n          '/proc/self/fd',\n        );\n      },\n      createStandardStreams: () => {\n        if (Module['stdin']) {\n          FS.createDevice('/dev', 'stdin', Module['stdin']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdin');\n        }\n        if (Module['stdout']) {\n          FS.createDevice('/dev', 'stdout', null, Module['stdout']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdout');\n        }\n        if (Module['stderr']) {\n          FS.createDevice('/dev', 'stderr', null, Module['stderr']);\n        } else {\n          FS.symlink('/dev/tty1', '/dev/stderr');\n        }\n\n        var stdin = FS.open('/dev/stdin', 0);\n        var stdout = FS.open('/dev/stdout', 1);\n        var stderr = FS.open('/dev/stderr', 1);\n      },\n      ensureErrnoError: () => {\n        if (FS.ErrnoError) return;\n        FS.ErrnoError = function ErrnoError(errno, node) {\n          this.node = node;\n          this.setErrno = function (errno) {\n            this.errno = errno;\n          };\n          this.setErrno(errno);\n          this.message = 'FS error';\n        };\n        FS.ErrnoError.prototype = new Error();\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n\n        [44].forEach((code) => {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = '<generic error, no stack>';\n        });\n      },\n      staticInit: () => {\n        FS.ensureErrnoError();\n\n        FS.nameTable = new Array(4096);\n\n        FS.mount(MEMFS, {}, '/');\n\n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n\n        FS.filesystems = {\n          MEMFS: MEMFS,\n        };\n      },\n      init: (input, output, error) => {\n        FS.init.initialized = true;\n\n        FS.ensureErrnoError();\n\n        Module['stdin'] = input || Module['stdin'];\n        Module['stdout'] = output || Module['stdout'];\n        Module['stderr'] = error || Module['stderr'];\n\n        FS.createStandardStreams();\n      },\n      quit: () => {\n        FS.init.initialized = false;\n\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n          if (!stream) {\n            continue;\n          }\n          FS.close(stream);\n        }\n      },\n      getMode: (canRead, canWrite) => {\n        var mode = 0;\n        if (canRead) mode |= 292 | 73;\n        if (canWrite) mode |= 146;\n        return mode;\n      },\n      findObject: (path, dontResolveLastLink) => {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (!ret.exists) {\n          return null;\n        }\n        return ret.object;\n      },\n      analyzePath: (path, dontResolveLastLink) => {\n        try {\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          path = lookup.path;\n        } catch (e) {}\n        var ret = {\n          isRoot: false,\n          exists: false,\n          error: 0,\n          name: null,\n          path: null,\n          object: null,\n          parentExists: false,\n          parentPath: null,\n          parentObject: null,\n        };\n        try {\n          var lookup = FS.lookupPath(path, { parent: true });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === '/';\n        } catch (e) {\n          ret.error = e.errno;\n        }\n        return ret;\n      },\n      createPath: (parent, path, canRead, canWrite) => {\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n        var parts = path.split('/').reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {}\n          parent = current;\n        }\n        return current;\n      },\n      createFile: (parent, name, properties, canRead, canWrite) => {\n        var path = PATH.join2(\n          typeof parent == 'string' ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS.getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n      createDataFile: (parent, name, data, canRead, canWrite, canOwn) => {\n        var path = name;\n        if (parent) {\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n          path = name ? PATH.join2(parent, name) : parent;\n        }\n        var mode = FS.getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data == 'string') {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i)\n              arr[i] = data.charCodeAt(i);\n            data = arr;\n          }\n\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 577);\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n        return node;\n      },\n      createDevice: (parent, name, input, output) => {\n        var path = PATH.join2(\n          typeof parent == 'string' ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS.getMode(!!input, !!output);\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n\n        FS.registerDevice(dev, {\n          open: (stream) => {\n            stream.seekable = false;\n          },\n          close: (stream) => {\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          },\n          read: (stream, buffer, offset, length, pos) => {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          },\n          write: (stream, buffer, offset, length, pos) => {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          },\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n      forceLoadFile: (obj) => {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n          return true;\n        if (typeof XMLHttpRequest != 'undefined') {\n          throw new Error(\n            'Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.',\n          );\n        } else if (read_) {\n          try {\n            obj.contents = intArrayFromString(read_(obj.url), true);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n        } else {\n          throw new Error('Cannot load without read() or XMLHttpRequest.');\n        }\n      },\n      createLazyFile: (parent, name, url, canRead, canWrite) => {\n        function LazyUint8Array() {\n          this.lengthKnown = false;\n          this.chunks = [];\n        }\n        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n          if (idx > this.length - 1 || idx < 0) {\n            return undefined;\n          }\n          var chunkOffset = idx % this.chunkSize;\n          var chunkNum = (idx / this.chunkSize) | 0;\n          return this.getter(chunkNum)[chunkOffset];\n        };\n        LazyUint8Array.prototype.setDataGetter =\n          function LazyUint8Array_setDataGetter(getter) {\n            this.getter = getter;\n          };\n        LazyUint8Array.prototype.cacheLength =\n          function LazyUint8Array_cacheLength() {\n            var xhr = new XMLHttpRequest();\n            xhr.open('HEAD', url, false);\n            xhr.send(null);\n            if (\n              !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n            )\n              throw new Error(\n                \"Couldn't load \" + url + '. Status: ' + xhr.status,\n              );\n            var datalength = Number(xhr.getResponseHeader('Content-length'));\n            var header;\n            var hasByteServing =\n              (header = xhr.getResponseHeader('Accept-Ranges')) &&\n              header === 'bytes';\n            var usesGzip =\n              (header = xhr.getResponseHeader('Content-Encoding')) &&\n              header === 'gzip';\n\n            var chunkSize = 1024 * 1024;\n\n            if (!hasByteServing) chunkSize = datalength;\n\n            var doXHR = (from, to) => {\n              if (from > to)\n                throw new Error(\n                  'invalid range (' +\n                    from +\n                    ', ' +\n                    to +\n                    ') or no bytes requested!',\n                );\n              if (to > datalength - 1)\n                throw new Error(\n                  'only ' + datalength + ' bytes available! programmer error!',\n                );\n\n              var xhr = new XMLHttpRequest();\n              xhr.open('GET', url, false);\n              if (datalength !== chunkSize)\n                xhr.setRequestHeader('Range', 'bytes=' + from + '-' + to);\n\n              xhr.responseType = 'arraybuffer';\n              if (xhr.overrideMimeType) {\n                xhr.overrideMimeType('text/plain; charset=x-user-defined');\n              }\n\n              xhr.send(null);\n              if (\n                !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n              )\n                throw new Error(\n                  \"Couldn't load \" + url + '. Status: ' + xhr.status,\n                );\n              if (xhr.response !== undefined) {\n                return new Uint8Array(xhr.response || []);\n              }\n              return intArrayFromString(xhr.responseText || '', true);\n            };\n            var lazyArray = this;\n            lazyArray.setDataGetter((chunkNum) => {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum + 1) * chunkSize - 1;\n              end = Math.min(end, datalength - 1);\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\n                lazyArray.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined')\n                throw new Error('doXHR failed!');\n              return lazyArray.chunks[chunkNum];\n            });\n\n            if (usesGzip || !datalength) {\n              chunkSize = datalength = 1;\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\n                'LazyFiles on gzip forces download of the whole file when length is accessed',\n              );\n            }\n\n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          };\n        if (typeof XMLHttpRequest != 'undefined') {\n          if (!ENVIRONMENT_IS_WORKER)\n            throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\n          var lazyArray = new LazyUint8Array();\n          Object.defineProperties(lazyArray, {\n            length: {\n              get: function () {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._length;\n              },\n            },\n            chunkSize: {\n              get: function () {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._chunkSize;\n              },\n            },\n          });\n\n          var properties = { isDevice: false, contents: lazyArray };\n        } else {\n          var properties = { isDevice: false, url: url };\n        }\n\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: function () {\n              return this.contents.length;\n            },\n          },\n        });\n\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach((key) => {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = function forceLoadLazyFile() {\n            FS.forceLoadFile(node);\n            return fn.apply(null, arguments);\n          };\n        });\n        function writeChunks(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= contents.length) return 0;\n          var size = Math.min(contents.length - position, length);\n          if (contents.slice) {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        }\n\n        stream_ops.read = (stream, buffer, offset, length, position) => {\n          FS.forceLoadFile(node);\n          return writeChunks(stream, buffer, offset, length, position);\n        };\n\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\n          FS.forceLoadFile(node);\n          var ptr = mmapAlloc(length);\n          if (!ptr) {\n            throw new FS.ErrnoError(48);\n          }\n          writeChunks(stream, HEAP8, ptr, length, position);\n          return { ptr: ptr, allocated: true };\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      },\n      createPreloadedFile: (\n        parent,\n        name,\n        url,\n        canRead,\n        canWrite,\n        onload,\n        onerror,\n        dontCreateFile,\n        canOwn,\n        preFinish,\n      ) => {\n        var fullname = name\n          ? PATH_FS.resolve(PATH.join2(parent, name))\n          : parent;\n        var dep = getUniqueRunDependency('cp ' + fullname);\n        function processData(byteArray) {\n          function finish(byteArray) {\n            if (preFinish) preFinish();\n            if (!dontCreateFile) {\n              FS.createDataFile(\n                parent,\n                name,\n                byteArray,\n                canRead,\n                canWrite,\n                canOwn,\n              );\n            }\n            if (onload) onload();\n            removeRunDependency(dep);\n          }\n          if (\n            Browser.handledByPreloadPlugin(byteArray, fullname, finish, () => {\n              if (onerror) onerror();\n              removeRunDependency(dep);\n            })\n          ) {\n            return;\n          }\n          finish(byteArray);\n        }\n        addRunDependency(dep);\n        if (typeof url == 'string') {\n          asyncLoad(url, (byteArray) => processData(byteArray), onerror);\n        } else {\n          processData(url);\n        }\n      },\n      indexedDB: () => {\n        return (\n          window.indexedDB ||\n          window.mozIndexedDB ||\n          window.webkitIndexedDB ||\n          window.msIndexedDB\n        );\n      },\n      DB_NAME: () => {\n        return 'EM_FS_' + window.location.pathname;\n      },\n      DB_VERSION: 20,\n      DB_STORE_NAME: 'FILE_DATA',\n      saveFilesToDB: (paths, onload, onerror) => {\n        onload = onload || (() => {});\n        onerror = onerror || (() => {});\n        var indexedDB = FS.indexedDB();\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n        openRequest.onupgradeneeded = () => {\n          out('creating db');\n          var db = openRequest.result;\n          db.createObjectStore(FS.DB_STORE_NAME);\n        };\n        openRequest.onsuccess = () => {\n          var db = openRequest.result;\n          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0,\n            fail = 0,\n            total = paths.length;\n          function finish() {\n            if (fail == 0) onload();\n            else onerror();\n          }\n          paths.forEach((path) => {\n            var putRequest = files.put(\n              FS.analyzePath(path).object.contents,\n              path,\n            );\n            putRequest.onsuccess = () => {\n              ok++;\n              if (ok + fail == total) finish();\n            };\n            putRequest.onerror = () => {\n              fail++;\n              if (ok + fail == total) finish();\n            };\n          });\n          transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n      },\n      loadFilesFromDB: (paths, onload, onerror) => {\n        onload = onload || (() => {});\n        onerror = onerror || (() => {});\n        var indexedDB = FS.indexedDB();\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n        openRequest.onupgradeneeded = onerror;\n        openRequest.onsuccess = () => {\n          var db = openRequest.result;\n          try {\n            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');\n          } catch (e) {\n            onerror(e);\n            return;\n          }\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0,\n            fail = 0,\n            total = paths.length;\n          function finish() {\n            if (fail == 0) onload();\n            else onerror();\n          }\n          paths.forEach((path) => {\n            var getRequest = files.get(path);\n            getRequest.onsuccess = () => {\n              if (FS.analyzePath(path).exists) {\n                FS.unlink(path);\n              }\n              FS.createDataFile(\n                PATH.dirname(path),\n                PATH.basename(path),\n                getRequest.result,\n                true,\n                true,\n                true,\n              );\n              ok++;\n              if (ok + fail == total) finish();\n            };\n            getRequest.onerror = () => {\n              fail++;\n              if (ok + fail == total) finish();\n            };\n          });\n          transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n      },\n    };\n    var SYSCALLS = {\n      DEFAULT_POLLMASK: 5,\n      calculateAt: function (dirfd, path, allowEmpty) {\n        if (PATH.isAbs(path)) {\n          return path;\n        }\n\n        var dir;\n        if (dirfd === -100) {\n          dir = FS.cwd();\n        } else {\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\n          dir = dirstream.path;\n        }\n        if (path.length == 0) {\n          if (!allowEmpty) {\n            throw new FS.ErrnoError(44);\n          }\n          return dir;\n        }\n        return PATH.join2(dir, path);\n      },\n      doStat: function (func, path, buf) {\n        try {\n          var stat = func(path);\n        } catch (e) {\n          if (\n            e &&\n            e.node &&\n            PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))\n          ) {\n            return -54;\n          }\n          throw e;\n        }\n        HEAP32[buf >> 2] = stat.dev;\n        HEAP32[(buf + 8) >> 2] = stat.ino;\n        HEAP32[(buf + 12) >> 2] = stat.mode;\n        HEAPU32[(buf + 16) >> 2] = stat.nlink;\n        HEAP32[(buf + 20) >> 2] = stat.uid;\n        HEAP32[(buf + 24) >> 2] = stat.gid;\n        HEAP32[(buf + 28) >> 2] = stat.rdev;\n        (tempI64 = [\n          stat.size >>> 0,\n          ((tempDouble = stat.size),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 40) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 44) >> 2] = tempI64[1]);\n        HEAP32[(buf + 48) >> 2] = 4096;\n        HEAP32[(buf + 52) >> 2] = stat.blocks;\n        var atime = stat.atime.getTime();\n        var mtime = stat.mtime.getTime();\n        var ctime = stat.ctime.getTime();\n        (tempI64 = [\n          Math.floor(atime / 1000) >>> 0,\n          ((tempDouble = Math.floor(atime / 1000)),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 56) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 60) >> 2] = tempI64[1]);\n        HEAPU32[(buf + 64) >> 2] = (atime % 1000) * 1000;\n        (tempI64 = [\n          Math.floor(mtime / 1000) >>> 0,\n          ((tempDouble = Math.floor(mtime / 1000)),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 72) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 76) >> 2] = tempI64[1]);\n        HEAPU32[(buf + 80) >> 2] = (mtime % 1000) * 1000;\n        (tempI64 = [\n          Math.floor(ctime / 1000) >>> 0,\n          ((tempDouble = Math.floor(ctime / 1000)),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 88) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 92) >> 2] = tempI64[1]);\n        HEAPU32[(buf + 96) >> 2] = (ctime % 1000) * 1000;\n        (tempI64 = [\n          stat.ino >>> 0,\n          ((tempDouble = stat.ino),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 104) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 108) >> 2] = tempI64[1]);\n        return 0;\n      },\n      doMsync: function (addr, stream, len, flags, offset) {\n        if (!FS.isFile(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (flags & 2) {\n          return 0;\n        }\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n      varargs: undefined,\n      get: function () {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[(SYSCALLS.varargs - 4) >> 2];\n        return ret;\n      },\n      getStr: function (ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n      getStreamFromFD: function (fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) throw new FS.ErrnoError(8);\n        return stream;\n      },\n    };\n    function ___syscall_chmod(path, mode) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.chmod(path, mode);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_faccessat(dirfd, path, amode, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (amode & ~7) {\n          return -28;\n        }\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node) {\n          return -44;\n        }\n        var perms = '';\n        if (amode & 4) perms += 'r';\n        if (amode & 2) perms += 'w';\n        if (amode & 1) perms += 'x';\n        if (perms && FS.nodePermissions(node, perms)) {\n          return -2;\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fchmod(fd, mode) {\n      try {\n        FS.fchmod(fd, mode);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fchown32(fd, owner, group) {\n      try {\n        FS.fchown(fd, owner, group);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function setErrNo(value) {\n      HEAP32[___errno_location() >> 2] = value;\n      return value;\n    }\n\n    function ___syscall_fcntl64(fd, cmd, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        switch (cmd) {\n          case 0: {\n            var arg = SYSCALLS.get();\n            if (arg < 0) {\n              return -28;\n            }\n            var newStream;\n            newStream = FS.createStream(stream, arg);\n            return newStream.fd;\n          }\n          case 1:\n          case 2:\n            return 0;\n          case 3:\n            return stream.flags;\n          case 4: {\n            var arg = SYSCALLS.get();\n            stream.flags |= arg;\n            return 0;\n          }\n          case 5: {\n            var arg = SYSCALLS.get();\n            var offset = 0;\n\n            HEAP16[(arg + offset) >> 1] = 2;\n            return 0;\n          }\n          case 6:\n          case 7:\n            return 0;\n          case 16:\n          case 8:\n            return -28;\n          case 9:\n            setErrNo(28);\n            return -1;\n          default: {\n            return -28;\n          }\n        }\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fstat64(fd, buf) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        return SYSCALLS.doStat(FS.stat, stream.path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    var MAX_INT53 = 9007199254740992;\n\n    var MIN_INT53 = -9007199254740992;\n    function bigintToI53Checked(num) {\n      return num < MIN_INT53 || num > MAX_INT53 ? NaN : Number(num);\n    }\n\n    function ___syscall_ftruncate64(fd, length) {\n      try {\n        length = bigintToI53Checked(length);\n        if (isNaN(length)) return -61;\n        FS.ftruncate(fd, length);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_getcwd(buf, size) {\n      try {\n        if (size === 0) return -28;\n        var cwd = FS.cwd();\n        var cwdLengthInBytes = lengthBytesUTF8(cwd) + 1;\n        if (size < cwdLengthInBytes) return -68;\n        stringToUTF8(cwd, buf, size);\n        return cwdLengthInBytes;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_ioctl(fd, op, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        switch (op) {\n          case 21509:\n          case 21505: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21510:\n          case 21511:\n          case 21512:\n          case 21506:\n          case 21507:\n          case 21508: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21519: {\n            if (!stream.tty) return -59;\n            var argp = SYSCALLS.get();\n            HEAP32[argp >> 2] = 0;\n            return 0;\n          }\n          case 21520: {\n            if (!stream.tty) return -59;\n            return -28;\n          }\n          case 21531: {\n            var argp = SYSCALLS.get();\n            return FS.ioctl(stream, op, argp);\n          }\n          case 21523: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21524: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          default:\n            return -28;\n        }\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_lstat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.lstat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_mkdirat(dirfd, path, mode) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n\n        path = PATH.normalize(path);\n        if (path[path.length - 1] === '/')\n          path = path.substr(0, path.length - 1);\n        FS.mkdir(path, mode, 0);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_newfstatat(dirfd, path, buf, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        var nofollow = flags & 256;\n        var allowEmpty = flags & 4096;\n        flags = flags & ~6400;\n        path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\n        return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_openat(dirfd, path, flags, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        var mode = varargs ? SYSCALLS.get() : 0;\n        return FS.open(path, flags, mode).fd;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_readlinkat(dirfd, path, buf, bufsize) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (bufsize <= 0) return -28;\n        var ret = FS.readlink(path);\n\n        var len = Math.min(bufsize, lengthBytesUTF8(ret));\n        var endChar = HEAP8[buf + len];\n        stringToUTF8(ret, buf, bufsize + 1);\n\n        HEAP8[buf + len] = endChar;\n        return len;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_rmdir(path) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.rmdir(path);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_stat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.stat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_unlinkat(dirfd, path, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (flags === 0) {\n          FS.unlink(path);\n        } else if (flags === 512) {\n          FS.rmdir(path);\n        } else {\n          abort('Invalid flags passed to unlinkat');\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function readI53FromI64(ptr) {\n      return HEAPU32[ptr >> 2] + HEAP32[(ptr + 4) >> 2] * 4294967296;\n    }\n\n    function ___syscall_utimensat(dirfd, path, times, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path, true);\n        if (!times) {\n          var atime = Date.now();\n          var mtime = atime;\n        } else {\n          var seconds = readI53FromI64(times);\n          var nanoseconds = HEAP32[(times + 8) >> 2];\n          atime = seconds * 1000 + nanoseconds / (1000 * 1000);\n          times += 16;\n          seconds = readI53FromI64(times);\n          nanoseconds = HEAP32[(times + 8) >> 2];\n          mtime = seconds * 1000 + nanoseconds / (1000 * 1000);\n        }\n        FS.utime(path, atime, mtime);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    var nowIsMonotonic = true;\n    function __emscripten_get_now_is_monotonic() {\n      return nowIsMonotonic;\n    }\n\n    function __isLeapYear(year) {\n      return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n    }\n\n    var __MONTH_DAYS_LEAP_CUMULATIVE = [\n      0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335,\n    ];\n\n    var __MONTH_DAYS_REGULAR_CUMULATIVE = [\n      0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334,\n    ];\n    function __yday_from_date(date) {\n      var isLeapYear = __isLeapYear(date.getFullYear());\n      var monthDaysCumulative = isLeapYear\n        ? __MONTH_DAYS_LEAP_CUMULATIVE\n        : __MONTH_DAYS_REGULAR_CUMULATIVE;\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1;\n\n      return yday;\n    }\n    function __localtime_js(time, tmPtr) {\n      var date = new Date(readI53FromI64(time) * 1000);\n      HEAP32[tmPtr >> 2] = date.getSeconds();\n      HEAP32[(tmPtr + 4) >> 2] = date.getMinutes();\n      HEAP32[(tmPtr + 8) >> 2] = date.getHours();\n      HEAP32[(tmPtr + 12) >> 2] = date.getDate();\n      HEAP32[(tmPtr + 16) >> 2] = date.getMonth();\n      HEAP32[(tmPtr + 20) >> 2] = date.getFullYear() - 1900;\n      HEAP32[(tmPtr + 24) >> 2] = date.getDay();\n\n      var yday = __yday_from_date(date) | 0;\n      HEAP32[(tmPtr + 28) >> 2] = yday;\n      HEAP32[(tmPtr + 36) >> 2] = -(date.getTimezoneOffset() * 60);\n\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dst =\n        (summerOffset != winterOffset &&\n          date.getTimezoneOffset() == Math.min(winterOffset, summerOffset)) | 0;\n      HEAP32[(tmPtr + 32) >> 2] = dst;\n    }\n\n    function __mmap_js(len, prot, flags, fd, off, allocated, addr) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var res = FS.mmap(stream, len, off, prot, flags);\n        var ptr = res.ptr;\n        HEAP32[allocated >> 2] = res.allocated;\n        HEAPU32[addr >> 2] = ptr;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function __munmap_js(addr, len, prot, flags, fd, offset) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        if (prot & 2) {\n          SYSCALLS.doMsync(addr, stream, len, flags, offset);\n        }\n        FS.munmap(stream);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function allocateUTF8(str) {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = _malloc(size);\n      if (ret) stringToUTF8Array(str, HEAP8, ret, size);\n      return ret;\n    }\n    function __tzset_js(timezone, daylight, tzname) {\n      var currentYear = new Date().getFullYear();\n      var winter = new Date(currentYear, 0, 1);\n      var summer = new Date(currentYear, 6, 1);\n      var winterOffset = winter.getTimezoneOffset();\n      var summerOffset = summer.getTimezoneOffset();\n\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\n\n      HEAPU32[timezone >> 2] = stdTimezoneOffset * 60;\n\n      HEAP32[daylight >> 2] = Number(winterOffset != summerOffset);\n\n      function extractZone(date) {\n        var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\n        return match ? match[1] : 'GMT';\n      }\n      var winterName = extractZone(winter);\n      var summerName = extractZone(summer);\n      var winterNamePtr = allocateUTF8(winterName);\n      var summerNamePtr = allocateUTF8(summerName);\n      if (summerOffset < winterOffset) {\n        HEAPU32[tzname >> 2] = winterNamePtr;\n        HEAPU32[(tzname + 4) >> 2] = summerNamePtr;\n      } else {\n        HEAPU32[tzname >> 2] = summerNamePtr;\n        HEAPU32[(tzname + 4) >> 2] = winterNamePtr;\n      }\n    }\n\n    function _emscripten_date_now() {\n      return Date.now();\n    }\n\n    var _emscripten_get_now;\n    _emscripten_get_now = () => performance.now();\n    function getHeapMax() {\n      return 2147483648;\n    }\n\n    function emscripten_realloc_buffer(size) {\n      var b = wasmMemory.buffer;\n      try {\n        wasmMemory.grow((size - b.byteLength + 65535) >>> 16);\n        updateMemoryViews();\n        return 1;\n      } catch (e) {}\n    }\n    function _emscripten_resize_heap(requestedSize) {\n      var oldSize = HEAPU8.length;\n      requestedSize = requestedSize >>> 0;\n\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n\n      let alignUp = (x, multiple) =>\n        x + ((multiple - (x % multiple)) % multiple);\n\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n\n        overGrownHeapSize = Math.min(\n          overGrownHeapSize,\n          requestedSize + 100663296,\n        );\n\n        var newSize = Math.min(\n          maxHeapSize,\n          alignUp(Math.max(requestedSize, overGrownHeapSize), 65536),\n        );\n\n        var replacement = emscripten_realloc_buffer(newSize);\n        if (replacement) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    var ENV = {};\n\n    function getExecutableName() {\n      return thisProgram || './this.program';\n    }\n    function getEnvStrings() {\n      if (!getEnvStrings.strings) {\n        var lang =\n          (\n            (typeof navigator == 'object' &&\n              navigator.languages &&\n              navigator.languages[0]) ||\n            'C'\n          ).replace('-', '_') + '.UTF-8';\n        var env = {\n          USER: 'web_user',\n          LOGNAME: 'web_user',\n          PATH: '/',\n          PWD: '/',\n          HOME: '/home/web_user',\n          LANG: lang,\n          _: getExecutableName(),\n        };\n\n        for (var x in ENV) {\n          if (ENV[x] === undefined) delete env[x];\n          else env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(x + '=' + env[x]);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    }\n\n    function writeAsciiToMemory(str, buffer, dontAddNull) {\n      for (var i = 0; i < str.length; ++i) {\n        HEAP8[buffer++ >> 0] = str.charCodeAt(i);\n      }\n\n      if (!dontAddNull) HEAP8[buffer >> 0] = 0;\n    }\n\n    function _environ_get(__environ, environ_buf) {\n      var bufSize = 0;\n      getEnvStrings().forEach(function (string, i) {\n        var ptr = environ_buf + bufSize;\n        HEAPU32[(__environ + i * 4) >> 2] = ptr;\n        writeAsciiToMemory(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    }\n\n    function _environ_sizes_get(penviron_count, penviron_buf_size) {\n      var strings = getEnvStrings();\n      HEAPU32[penviron_count >> 2] = strings.length;\n      var bufSize = 0;\n      strings.forEach(function (string) {\n        bufSize += string.length + 1;\n      });\n      HEAPU32[penviron_buf_size >> 2] = bufSize;\n      return 0;\n    }\n\n    function _fd_close(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.close(stream);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_fdstat_get(fd, pbuf) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n\n        var type = stream.tty\n          ? 2\n          : FS.isDir(stream.mode)\n            ? 3\n            : FS.isLink(stream.mode)\n              ? 7\n              : 4;\n        HEAP8[pbuf >> 0] = type;\n\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function doReadv(stream, iov, iovcnt, offset) {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.read(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) break;\n        if (typeof offset !== 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    }\n\n    function _fd_read(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doReadv(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_seek(fd, offset, whence, newOffset) {\n      try {\n        offset = bigintToI53Checked(offset);\n        if (isNaN(offset)) return 61;\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.llseek(stream, offset, whence);\n        (tempI64 = [\n          stream.position >>> 0,\n          ((tempDouble = stream.position),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[newOffset >> 2] = tempI64[0]),\n          (HEAP32[(newOffset + 4) >> 2] = tempI64[1]);\n        if (stream.getdents && offset === 0 && whence === 0)\n          stream.getdents = null;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_sync(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        if (stream.stream_ops && stream.stream_ops.fsync) {\n          return stream.stream_ops.fsync(stream);\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function doWritev(stream, iov, iovcnt, offset) {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.write(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (typeof offset !== 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    }\n\n    function _fd_write(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doWritev(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    var FSNode = function (parent, name, mode, rdev) {\n      if (!parent) {\n        parent = this;\n      }\n      this.parent = parent;\n      this.mount = parent.mount;\n      this.mounted = null;\n      this.id = FS.nextInode++;\n      this.name = name;\n      this.mode = mode;\n      this.node_ops = {};\n      this.stream_ops = {};\n      this.rdev = rdev;\n    };\n    var readMode = 292 | 73;\n    var writeMode = 146;\n    Object.defineProperties(FSNode.prototype, {\n      read: {\n        get: function () {\n          return (this.mode & readMode) === readMode;\n        },\n        set: function (val) {\n          val ? (this.mode |= readMode) : (this.mode &= ~readMode);\n        },\n      },\n      write: {\n        get: function () {\n          return (this.mode & writeMode) === writeMode;\n        },\n        set: function (val) {\n          val ? (this.mode |= writeMode) : (this.mode &= ~writeMode);\n        },\n      },\n      isFolder: {\n        get: function () {\n          return FS.isDir(this.mode);\n        },\n      },\n      isDevice: {\n        get: function () {\n          return FS.isChrdev(this.mode);\n        },\n      },\n    });\n    FS.FSNode = FSNode;\n    FS.staticInit();\n    var ASSERTIONS = false;\n\n    var asmLibraryArg = {\n      __syscall_chmod: ___syscall_chmod,\n      __syscall_faccessat: ___syscall_faccessat,\n      __syscall_fchmod: ___syscall_fchmod,\n      __syscall_fchown32: ___syscall_fchown32,\n      __syscall_fcntl64: ___syscall_fcntl64,\n      __syscall_fstat64: ___syscall_fstat64,\n      __syscall_ftruncate64: ___syscall_ftruncate64,\n      __syscall_getcwd: ___syscall_getcwd,\n      __syscall_ioctl: ___syscall_ioctl,\n      __syscall_lstat64: ___syscall_lstat64,\n      __syscall_mkdirat: ___syscall_mkdirat,\n      __syscall_newfstatat: ___syscall_newfstatat,\n      __syscall_openat: ___syscall_openat,\n      __syscall_readlinkat: ___syscall_readlinkat,\n      __syscall_rmdir: ___syscall_rmdir,\n      __syscall_stat64: ___syscall_stat64,\n      __syscall_unlinkat: ___syscall_unlinkat,\n      __syscall_utimensat: ___syscall_utimensat,\n      _emscripten_get_now_is_monotonic: __emscripten_get_now_is_monotonic,\n      _localtime_js: __localtime_js,\n      _mmap_js: __mmap_js,\n      _munmap_js: __munmap_js,\n      _tzset_js: __tzset_js,\n      emscripten_date_now: _emscripten_date_now,\n      emscripten_get_now: _emscripten_get_now,\n      emscripten_resize_heap: _emscripten_resize_heap,\n      environ_get: _environ_get,\n      environ_sizes_get: _environ_sizes_get,\n      fd_close: _fd_close,\n      fd_fdstat_get: _fd_fdstat_get,\n      fd_read: _fd_read,\n      fd_seek: _fd_seek,\n      fd_sync: _fd_sync,\n      fd_write: _fd_write,\n      memory: wasmMemory,\n    };\n    var asm = createWasm();\n\n    var ___wasm_call_ctors = (Module['___wasm_call_ctors'] = function () {\n      return (___wasm_call_ctors = Module['___wasm_call_ctors'] =\n        Module['asm']['__wasm_call_ctors']).apply(null, arguments);\n    });\n\n    var _sqlite3_status64 = (Module['_sqlite3_status64'] = function () {\n      return (_sqlite3_status64 = Module['_sqlite3_status64'] =\n        Module['asm']['sqlite3_status64']).apply(null, arguments);\n    });\n\n    var _sqlite3_status = (Module['_sqlite3_status'] = function () {\n      return (_sqlite3_status = Module['_sqlite3_status'] =\n        Module['asm']['sqlite3_status']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_status = (Module['_sqlite3_db_status'] = function () {\n      return (_sqlite3_db_status = Module['_sqlite3_db_status'] =\n        Module['asm']['sqlite3_db_status']).apply(null, arguments);\n    });\n\n    var _sqlite3_msize = (Module['_sqlite3_msize'] = function () {\n      return (_sqlite3_msize = Module['_sqlite3_msize'] =\n        Module['asm']['sqlite3_msize']).apply(null, arguments);\n    });\n\n    var _sqlite3_vfs_find = (Module['_sqlite3_vfs_find'] = function () {\n      return (_sqlite3_vfs_find = Module['_sqlite3_vfs_find'] =\n        Module['asm']['sqlite3_vfs_find']).apply(null, arguments);\n    });\n\n    var _sqlite3_initialize = (Module['_sqlite3_initialize'] = function () {\n      return (_sqlite3_initialize = Module['_sqlite3_initialize'] =\n        Module['asm']['sqlite3_initialize']).apply(null, arguments);\n    });\n\n    var _sqlite3_malloc = (Module['_sqlite3_malloc'] = function () {\n      return (_sqlite3_malloc = Module['_sqlite3_malloc'] =\n        Module['asm']['sqlite3_malloc']).apply(null, arguments);\n    });\n\n    var _sqlite3_free = (Module['_sqlite3_free'] = function () {\n      return (_sqlite3_free = Module['_sqlite3_free'] =\n        Module['asm']['sqlite3_free']).apply(null, arguments);\n    });\n\n    var _sqlite3_vfs_register = (Module['_sqlite3_vfs_register'] = function () {\n      return (_sqlite3_vfs_register = Module['_sqlite3_vfs_register'] =\n        Module['asm']['sqlite3_vfs_register']).apply(null, arguments);\n    });\n\n    var _sqlite3_vfs_unregister = (Module['_sqlite3_vfs_unregister'] =\n      function () {\n        return (_sqlite3_vfs_unregister = Module['_sqlite3_vfs_unregister'] =\n          Module['asm']['sqlite3_vfs_unregister']).apply(null, arguments);\n      });\n\n    var _sqlite3_malloc64 = (Module['_sqlite3_malloc64'] = function () {\n      return (_sqlite3_malloc64 = Module['_sqlite3_malloc64'] =\n        Module['asm']['sqlite3_malloc64']).apply(null, arguments);\n    });\n\n    var _sqlite3_realloc = (Module['_sqlite3_realloc'] = function () {\n      return (_sqlite3_realloc = Module['_sqlite3_realloc'] =\n        Module['asm']['sqlite3_realloc']).apply(null, arguments);\n    });\n\n    var _sqlite3_realloc64 = (Module['_sqlite3_realloc64'] = function () {\n      return (_sqlite3_realloc64 = Module['_sqlite3_realloc64'] =\n        Module['asm']['sqlite3_realloc64']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_text = (Module['_sqlite3_value_text'] = function () {\n      return (_sqlite3_value_text = Module['_sqlite3_value_text'] =\n        Module['asm']['sqlite3_value_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_randomness = (Module['_sqlite3_randomness'] = function () {\n      return (_sqlite3_randomness = Module['_sqlite3_randomness'] =\n        Module['asm']['sqlite3_randomness']).apply(null, arguments);\n    });\n\n    var _sqlite3_stricmp = (Module['_sqlite3_stricmp'] = function () {\n      return (_sqlite3_stricmp = Module['_sqlite3_stricmp'] =\n        Module['asm']['sqlite3_stricmp']).apply(null, arguments);\n    });\n\n    var _sqlite3_strnicmp = (Module['_sqlite3_strnicmp'] = function () {\n      return (_sqlite3_strnicmp = Module['_sqlite3_strnicmp'] =\n        Module['asm']['sqlite3_strnicmp']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_parameter = (Module['_sqlite3_uri_parameter'] =\n      function () {\n        return (_sqlite3_uri_parameter = Module['_sqlite3_uri_parameter'] =\n          Module['asm']['sqlite3_uri_parameter']).apply(null, arguments);\n      });\n\n    var ___errno_location = (Module['___errno_location'] = function () {\n      return (___errno_location = Module['___errno_location'] =\n        Module['asm']['__errno_location']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_boolean = (Module['_sqlite3_uri_boolean'] = function () {\n      return (_sqlite3_uri_boolean = Module['_sqlite3_uri_boolean'] =\n        Module['asm']['sqlite3_uri_boolean']).apply(null, arguments);\n    });\n\n    var _sqlite3_serialize = (Module['_sqlite3_serialize'] = function () {\n      return (_sqlite3_serialize = Module['_sqlite3_serialize'] =\n        Module['asm']['sqlite3_serialize']).apply(null, arguments);\n    });\n\n    var _sqlite3_prepare_v2 = (Module['_sqlite3_prepare_v2'] = function () {\n      return (_sqlite3_prepare_v2 = Module['_sqlite3_prepare_v2'] =\n        Module['asm']['sqlite3_prepare_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_step = (Module['_sqlite3_step'] = function () {\n      return (_sqlite3_step = Module['_sqlite3_step'] =\n        Module['asm']['sqlite3_step']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_int64 = (Module['_sqlite3_column_int64'] = function () {\n      return (_sqlite3_column_int64 = Module['_sqlite3_column_int64'] =\n        Module['asm']['sqlite3_column_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_reset = (Module['_sqlite3_reset'] = function () {\n      return (_sqlite3_reset = Module['_sqlite3_reset'] =\n        Module['asm']['sqlite3_reset']).apply(null, arguments);\n    });\n\n    var _sqlite3_exec = (Module['_sqlite3_exec'] = function () {\n      return (_sqlite3_exec = Module['_sqlite3_exec'] =\n        Module['asm']['sqlite3_exec']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_int = (Module['_sqlite3_column_int'] = function () {\n      return (_sqlite3_column_int = Module['_sqlite3_column_int'] =\n        Module['asm']['sqlite3_column_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_finalize = (Module['_sqlite3_finalize'] = function () {\n      return (_sqlite3_finalize = Module['_sqlite3_finalize'] =\n        Module['asm']['sqlite3_finalize']).apply(null, arguments);\n    });\n\n    var _sqlite3_file_control = (Module['_sqlite3_file_control'] = function () {\n      return (_sqlite3_file_control = Module['_sqlite3_file_control'] =\n        Module['asm']['sqlite3_file_control']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_name = (Module['_sqlite3_column_name'] = function () {\n      return (_sqlite3_column_name = Module['_sqlite3_column_name'] =\n        Module['asm']['sqlite3_column_name']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_text = (Module['_sqlite3_column_text'] = function () {\n      return (_sqlite3_column_text = Module['_sqlite3_column_text'] =\n        Module['asm']['sqlite3_column_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_type = (Module['_sqlite3_column_type'] = function () {\n      return (_sqlite3_column_type = Module['_sqlite3_column_type'] =\n        Module['asm']['sqlite3_column_type']).apply(null, arguments);\n    });\n\n    var _sqlite3_errmsg = (Module['_sqlite3_errmsg'] = function () {\n      return (_sqlite3_errmsg = Module['_sqlite3_errmsg'] =\n        Module['asm']['sqlite3_errmsg']).apply(null, arguments);\n    });\n\n    var _sqlite3_deserialize = (Module['_sqlite3_deserialize'] = function () {\n      return (_sqlite3_deserialize = Module['_sqlite3_deserialize'] =\n        Module['asm']['sqlite3_deserialize']).apply(null, arguments);\n    });\n\n    var _sqlite3_clear_bindings = (Module['_sqlite3_clear_bindings'] =\n      function () {\n        return (_sqlite3_clear_bindings = Module['_sqlite3_clear_bindings'] =\n          Module['asm']['sqlite3_clear_bindings']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_blob = (Module['_sqlite3_value_blob'] = function () {\n      return (_sqlite3_value_blob = Module['_sqlite3_value_blob'] =\n        Module['asm']['sqlite3_value_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_bytes = (Module['_sqlite3_value_bytes'] = function () {\n      return (_sqlite3_value_bytes = Module['_sqlite3_value_bytes'] =\n        Module['asm']['sqlite3_value_bytes']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_double = (Module['_sqlite3_value_double'] = function () {\n      return (_sqlite3_value_double = Module['_sqlite3_value_double'] =\n        Module['asm']['sqlite3_value_double']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_int = (Module['_sqlite3_value_int'] = function () {\n      return (_sqlite3_value_int = Module['_sqlite3_value_int'] =\n        Module['asm']['sqlite3_value_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_int64 = (Module['_sqlite3_value_int64'] = function () {\n      return (_sqlite3_value_int64 = Module['_sqlite3_value_int64'] =\n        Module['asm']['sqlite3_value_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_subtype = (Module['_sqlite3_value_subtype'] =\n      function () {\n        return (_sqlite3_value_subtype = Module['_sqlite3_value_subtype'] =\n          Module['asm']['sqlite3_value_subtype']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_pointer = (Module['_sqlite3_value_pointer'] =\n      function () {\n        return (_sqlite3_value_pointer = Module['_sqlite3_value_pointer'] =\n          Module['asm']['sqlite3_value_pointer']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_type = (Module['_sqlite3_value_type'] = function () {\n      return (_sqlite3_value_type = Module['_sqlite3_value_type'] =\n        Module['asm']['sqlite3_value_type']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_nochange = (Module['_sqlite3_value_nochange'] =\n      function () {\n        return (_sqlite3_value_nochange = Module['_sqlite3_value_nochange'] =\n          Module['asm']['sqlite3_value_nochange']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_frombind = (Module['_sqlite3_value_frombind'] =\n      function () {\n        return (_sqlite3_value_frombind = Module['_sqlite3_value_frombind'] =\n          Module['asm']['sqlite3_value_frombind']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_dup = (Module['_sqlite3_value_dup'] = function () {\n      return (_sqlite3_value_dup = Module['_sqlite3_value_dup'] =\n        Module['asm']['sqlite3_value_dup']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_free = (Module['_sqlite3_value_free'] = function () {\n      return (_sqlite3_value_free = Module['_sqlite3_value_free'] =\n        Module['asm']['sqlite3_value_free']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_blob = (Module['_sqlite3_result_blob'] = function () {\n      return (_sqlite3_result_blob = Module['_sqlite3_result_blob'] =\n        Module['asm']['sqlite3_result_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_error_toobig = (Module['_sqlite3_result_error_toobig'] =\n      function () {\n        return (_sqlite3_result_error_toobig = Module[\n          '_sqlite3_result_error_toobig'\n        ] =\n          Module['asm']['sqlite3_result_error_toobig']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_error_nomem = (Module['_sqlite3_result_error_nomem'] =\n      function () {\n        return (_sqlite3_result_error_nomem = Module[\n          '_sqlite3_result_error_nomem'\n        ] =\n          Module['asm']['sqlite3_result_error_nomem']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_double = (Module['_sqlite3_result_double'] =\n      function () {\n        return (_sqlite3_result_double = Module['_sqlite3_result_double'] =\n          Module['asm']['sqlite3_result_double']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_error = (Module['_sqlite3_result_error'] = function () {\n      return (_sqlite3_result_error = Module['_sqlite3_result_error'] =\n        Module['asm']['sqlite3_result_error']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_int = (Module['_sqlite3_result_int'] = function () {\n      return (_sqlite3_result_int = Module['_sqlite3_result_int'] =\n        Module['asm']['sqlite3_result_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_int64 = (Module['_sqlite3_result_int64'] = function () {\n      return (_sqlite3_result_int64 = Module['_sqlite3_result_int64'] =\n        Module['asm']['sqlite3_result_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_null = (Module['_sqlite3_result_null'] = function () {\n      return (_sqlite3_result_null = Module['_sqlite3_result_null'] =\n        Module['asm']['sqlite3_result_null']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_pointer = (Module['_sqlite3_result_pointer'] =\n      function () {\n        return (_sqlite3_result_pointer = Module['_sqlite3_result_pointer'] =\n          Module['asm']['sqlite3_result_pointer']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_subtype = (Module['_sqlite3_result_subtype'] =\n      function () {\n        return (_sqlite3_result_subtype = Module['_sqlite3_result_subtype'] =\n          Module['asm']['sqlite3_result_subtype']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_text = (Module['_sqlite3_result_text'] = function () {\n      return (_sqlite3_result_text = Module['_sqlite3_result_text'] =\n        Module['asm']['sqlite3_result_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_zeroblob = (Module['_sqlite3_result_zeroblob'] =\n      function () {\n        return (_sqlite3_result_zeroblob = Module['_sqlite3_result_zeroblob'] =\n          Module['asm']['sqlite3_result_zeroblob']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_zeroblob64 = (Module['_sqlite3_result_zeroblob64'] =\n      function () {\n        return (_sqlite3_result_zeroblob64 = Module[\n          '_sqlite3_result_zeroblob64'\n        ] =\n          Module['asm']['sqlite3_result_zeroblob64']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_error_code = (Module['_sqlite3_result_error_code'] =\n      function () {\n        return (_sqlite3_result_error_code = Module[\n          '_sqlite3_result_error_code'\n        ] =\n          Module['asm']['sqlite3_result_error_code']).apply(null, arguments);\n      });\n\n    var _sqlite3_user_data = (Module['_sqlite3_user_data'] = function () {\n      return (_sqlite3_user_data = Module['_sqlite3_user_data'] =\n        Module['asm']['sqlite3_user_data']).apply(null, arguments);\n    });\n\n    var _sqlite3_context_db_handle = (Module['_sqlite3_context_db_handle'] =\n      function () {\n        return (_sqlite3_context_db_handle = Module[\n          '_sqlite3_context_db_handle'\n        ] =\n          Module['asm']['sqlite3_context_db_handle']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_nochange = (Module['_sqlite3_vtab_nochange'] =\n      function () {\n        return (_sqlite3_vtab_nochange = Module['_sqlite3_vtab_nochange'] =\n          Module['asm']['sqlite3_vtab_nochange']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_in_first = (Module['_sqlite3_vtab_in_first'] =\n      function () {\n        return (_sqlite3_vtab_in_first = Module['_sqlite3_vtab_in_first'] =\n          Module['asm']['sqlite3_vtab_in_first']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_in_next = (Module['_sqlite3_vtab_in_next'] = function () {\n      return (_sqlite3_vtab_in_next = Module['_sqlite3_vtab_in_next'] =\n        Module['asm']['sqlite3_vtab_in_next']).apply(null, arguments);\n    });\n\n    var _sqlite3_aggregate_context = (Module['_sqlite3_aggregate_context'] =\n      function () {\n        return (_sqlite3_aggregate_context = Module[\n          '_sqlite3_aggregate_context'\n        ] =\n          Module['asm']['sqlite3_aggregate_context']).apply(null, arguments);\n      });\n\n    var _sqlite3_get_auxdata = (Module['_sqlite3_get_auxdata'] = function () {\n      return (_sqlite3_get_auxdata = Module['_sqlite3_get_auxdata'] =\n        Module['asm']['sqlite3_get_auxdata']).apply(null, arguments);\n    });\n\n    var _sqlite3_set_auxdata = (Module['_sqlite3_set_auxdata'] = function () {\n      return (_sqlite3_set_auxdata = Module['_sqlite3_set_auxdata'] =\n        Module['asm']['sqlite3_set_auxdata']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_count = (Module['_sqlite3_column_count'] = function () {\n      return (_sqlite3_column_count = Module['_sqlite3_column_count'] =\n        Module['asm']['sqlite3_column_count']).apply(null, arguments);\n    });\n\n    var _sqlite3_data_count = (Module['_sqlite3_data_count'] = function () {\n      return (_sqlite3_data_count = Module['_sqlite3_data_count'] =\n        Module['asm']['sqlite3_data_count']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_blob = (Module['_sqlite3_column_blob'] = function () {\n      return (_sqlite3_column_blob = Module['_sqlite3_column_blob'] =\n        Module['asm']['sqlite3_column_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_bytes = (Module['_sqlite3_column_bytes'] = function () {\n      return (_sqlite3_column_bytes = Module['_sqlite3_column_bytes'] =\n        Module['asm']['sqlite3_column_bytes']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_double = (Module['_sqlite3_column_double'] =\n      function () {\n        return (_sqlite3_column_double = Module['_sqlite3_column_double'] =\n          Module['asm']['sqlite3_column_double']).apply(null, arguments);\n      });\n\n    var _sqlite3_column_value = (Module['_sqlite3_column_value'] = function () {\n      return (_sqlite3_column_value = Module['_sqlite3_column_value'] =\n        Module['asm']['sqlite3_column_value']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_blob = (Module['_sqlite3_bind_blob'] = function () {\n      return (_sqlite3_bind_blob = Module['_sqlite3_bind_blob'] =\n        Module['asm']['sqlite3_bind_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_double = (Module['_sqlite3_bind_double'] = function () {\n      return (_sqlite3_bind_double = Module['_sqlite3_bind_double'] =\n        Module['asm']['sqlite3_bind_double']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_int = (Module['_sqlite3_bind_int'] = function () {\n      return (_sqlite3_bind_int = Module['_sqlite3_bind_int'] =\n        Module['asm']['sqlite3_bind_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_int64 = (Module['_sqlite3_bind_int64'] = function () {\n      return (_sqlite3_bind_int64 = Module['_sqlite3_bind_int64'] =\n        Module['asm']['sqlite3_bind_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_null = (Module['_sqlite3_bind_null'] = function () {\n      return (_sqlite3_bind_null = Module['_sqlite3_bind_null'] =\n        Module['asm']['sqlite3_bind_null']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_pointer = (Module['_sqlite3_bind_pointer'] = function () {\n      return (_sqlite3_bind_pointer = Module['_sqlite3_bind_pointer'] =\n        Module['asm']['sqlite3_bind_pointer']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_text = (Module['_sqlite3_bind_text'] = function () {\n      return (_sqlite3_bind_text = Module['_sqlite3_bind_text'] =\n        Module['asm']['sqlite3_bind_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_parameter_count = (Module[\n      '_sqlite3_bind_parameter_count'\n    ] = function () {\n      return (_sqlite3_bind_parameter_count = Module[\n        '_sqlite3_bind_parameter_count'\n      ] =\n        Module['asm']['sqlite3_bind_parameter_count']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_parameter_index = (Module[\n      '_sqlite3_bind_parameter_index'\n    ] = function () {\n      return (_sqlite3_bind_parameter_index = Module[\n        '_sqlite3_bind_parameter_index'\n      ] =\n        Module['asm']['sqlite3_bind_parameter_index']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_handle = (Module['_sqlite3_db_handle'] = function () {\n      return (_sqlite3_db_handle = Module['_sqlite3_db_handle'] =\n        Module['asm']['sqlite3_db_handle']).apply(null, arguments);\n    });\n\n    var _sqlite3_stmt_readonly = (Module['_sqlite3_stmt_readonly'] =\n      function () {\n        return (_sqlite3_stmt_readonly = Module['_sqlite3_stmt_readonly'] =\n          Module['asm']['sqlite3_stmt_readonly']).apply(null, arguments);\n      });\n\n    var _sqlite3_stmt_isexplain = (Module['_sqlite3_stmt_isexplain'] =\n      function () {\n        return (_sqlite3_stmt_isexplain = Module['_sqlite3_stmt_isexplain'] =\n          Module['asm']['sqlite3_stmt_isexplain']).apply(null, arguments);\n      });\n\n    var _sqlite3_stmt_status = (Module['_sqlite3_stmt_status'] = function () {\n      return (_sqlite3_stmt_status = Module['_sqlite3_stmt_status'] =\n        Module['asm']['sqlite3_stmt_status']).apply(null, arguments);\n    });\n\n    var _sqlite3_sql = (Module['_sqlite3_sql'] = function () {\n      return (_sqlite3_sql = Module['_sqlite3_sql'] =\n        Module['asm']['sqlite3_sql']).apply(null, arguments);\n    });\n\n    var _sqlite3_expanded_sql = (Module['_sqlite3_expanded_sql'] = function () {\n      return (_sqlite3_expanded_sql = Module['_sqlite3_expanded_sql'] =\n        Module['asm']['sqlite3_expanded_sql']).apply(null, arguments);\n    });\n\n    var _sqlite3_preupdate_old = (Module['_sqlite3_preupdate_old'] =\n      function () {\n        return (_sqlite3_preupdate_old = Module['_sqlite3_preupdate_old'] =\n          Module['asm']['sqlite3_preupdate_old']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_count = (Module['_sqlite3_preupdate_count'] =\n      function () {\n        return (_sqlite3_preupdate_count = Module['_sqlite3_preupdate_count'] =\n          Module['asm']['sqlite3_preupdate_count']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_depth = (Module['_sqlite3_preupdate_depth'] =\n      function () {\n        return (_sqlite3_preupdate_depth = Module['_sqlite3_preupdate_depth'] =\n          Module['asm']['sqlite3_preupdate_depth']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_blobwrite = (Module['_sqlite3_preupdate_blobwrite'] =\n      function () {\n        return (_sqlite3_preupdate_blobwrite = Module[\n          '_sqlite3_preupdate_blobwrite'\n        ] =\n          Module['asm']['sqlite3_preupdate_blobwrite']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_new = (Module['_sqlite3_preupdate_new'] =\n      function () {\n        return (_sqlite3_preupdate_new = Module['_sqlite3_preupdate_new'] =\n          Module['asm']['sqlite3_preupdate_new']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_numeric_type = (Module['_sqlite3_value_numeric_type'] =\n      function () {\n        return (_sqlite3_value_numeric_type = Module[\n          '_sqlite3_value_numeric_type'\n        ] =\n          Module['asm']['sqlite3_value_numeric_type']).apply(null, arguments);\n      });\n\n    var _sqlite3_set_authorizer = (Module['_sqlite3_set_authorizer'] =\n      function () {\n        return (_sqlite3_set_authorizer = Module['_sqlite3_set_authorizer'] =\n          Module['asm']['sqlite3_set_authorizer']).apply(null, arguments);\n      });\n\n    var _sqlite3_strglob = (Module['_sqlite3_strglob'] = function () {\n      return (_sqlite3_strglob = Module['_sqlite3_strglob'] =\n        Module['asm']['sqlite3_strglob']).apply(null, arguments);\n    });\n\n    var _sqlite3_strlike = (Module['_sqlite3_strlike'] = function () {\n      return (_sqlite3_strlike = Module['_sqlite3_strlike'] =\n        Module['asm']['sqlite3_strlike']).apply(null, arguments);\n    });\n\n    var _sqlite3_auto_extension = (Module['_sqlite3_auto_extension'] =\n      function () {\n        return (_sqlite3_auto_extension = Module['_sqlite3_auto_extension'] =\n          Module['asm']['sqlite3_auto_extension']).apply(null, arguments);\n      });\n\n    var _sqlite3_cancel_auto_extension = (Module[\n      '_sqlite3_cancel_auto_extension'\n    ] = function () {\n      return (_sqlite3_cancel_auto_extension = Module[\n        '_sqlite3_cancel_auto_extension'\n      ] =\n        Module['asm']['sqlite3_cancel_auto_extension']).apply(null, arguments);\n    });\n\n    var _sqlite3_reset_auto_extension = (Module[\n      '_sqlite3_reset_auto_extension'\n    ] = function () {\n      return (_sqlite3_reset_auto_extension = Module[\n        '_sqlite3_reset_auto_extension'\n      ] =\n        Module['asm']['sqlite3_reset_auto_extension']).apply(null, arguments);\n    });\n\n    var _sqlite3_prepare_v3 = (Module['_sqlite3_prepare_v3'] = function () {\n      return (_sqlite3_prepare_v3 = Module['_sqlite3_prepare_v3'] =\n        Module['asm']['sqlite3_prepare_v3']).apply(null, arguments);\n    });\n\n    var _sqlite3_create_module = (Module['_sqlite3_create_module'] =\n      function () {\n        return (_sqlite3_create_module = Module['_sqlite3_create_module'] =\n          Module['asm']['sqlite3_create_module']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_module_v2 = (Module['_sqlite3_create_module_v2'] =\n      function () {\n        return (_sqlite3_create_module_v2 = Module[\n          '_sqlite3_create_module_v2'\n        ] =\n          Module['asm']['sqlite3_create_module_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3_drop_modules = (Module['_sqlite3_drop_modules'] = function () {\n      return (_sqlite3_drop_modules = Module['_sqlite3_drop_modules'] =\n        Module['asm']['sqlite3_drop_modules']).apply(null, arguments);\n    });\n\n    var _sqlite3_declare_vtab = (Module['_sqlite3_declare_vtab'] = function () {\n      return (_sqlite3_declare_vtab = Module['_sqlite3_declare_vtab'] =\n        Module['asm']['sqlite3_declare_vtab']).apply(null, arguments);\n    });\n\n    var _sqlite3_vtab_on_conflict = (Module['_sqlite3_vtab_on_conflict'] =\n      function () {\n        return (_sqlite3_vtab_on_conflict = Module[\n          '_sqlite3_vtab_on_conflict'\n        ] =\n          Module['asm']['sqlite3_vtab_on_conflict']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_collation = (Module['_sqlite3_vtab_collation'] =\n      function () {\n        return (_sqlite3_vtab_collation = Module['_sqlite3_vtab_collation'] =\n          Module['asm']['sqlite3_vtab_collation']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_in = (Module['_sqlite3_vtab_in'] = function () {\n      return (_sqlite3_vtab_in = Module['_sqlite3_vtab_in'] =\n        Module['asm']['sqlite3_vtab_in']).apply(null, arguments);\n    });\n\n    var _sqlite3_vtab_rhs_value = (Module['_sqlite3_vtab_rhs_value'] =\n      function () {\n        return (_sqlite3_vtab_rhs_value = Module['_sqlite3_vtab_rhs_value'] =\n          Module['asm']['sqlite3_vtab_rhs_value']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_distinct = (Module['_sqlite3_vtab_distinct'] =\n      function () {\n        return (_sqlite3_vtab_distinct = Module['_sqlite3_vtab_distinct'] =\n          Module['asm']['sqlite3_vtab_distinct']).apply(null, arguments);\n      });\n\n    var _sqlite3_keyword_name = (Module['_sqlite3_keyword_name'] = function () {\n      return (_sqlite3_keyword_name = Module['_sqlite3_keyword_name'] =\n        Module['asm']['sqlite3_keyword_name']).apply(null, arguments);\n    });\n\n    var _sqlite3_keyword_count = (Module['_sqlite3_keyword_count'] =\n      function () {\n        return (_sqlite3_keyword_count = Module['_sqlite3_keyword_count'] =\n          Module['asm']['sqlite3_keyword_count']).apply(null, arguments);\n      });\n\n    var _sqlite3_keyword_check = (Module['_sqlite3_keyword_check'] =\n      function () {\n        return (_sqlite3_keyword_check = Module['_sqlite3_keyword_check'] =\n          Module['asm']['sqlite3_keyword_check']).apply(null, arguments);\n      });\n\n    var _sqlite3_complete = (Module['_sqlite3_complete'] = function () {\n      return (_sqlite3_complete = Module['_sqlite3_complete'] =\n        Module['asm']['sqlite3_complete']).apply(null, arguments);\n    });\n\n    var _sqlite3_libversion = (Module['_sqlite3_libversion'] = function () {\n      return (_sqlite3_libversion = Module['_sqlite3_libversion'] =\n        Module['asm']['sqlite3_libversion']).apply(null, arguments);\n    });\n\n    var _sqlite3_libversion_number = (Module['_sqlite3_libversion_number'] =\n      function () {\n        return (_sqlite3_libversion_number = Module[\n          '_sqlite3_libversion_number'\n        ] =\n          Module['asm']['sqlite3_libversion_number']).apply(null, arguments);\n      });\n\n    var _sqlite3_shutdown = (Module['_sqlite3_shutdown'] = function () {\n      return (_sqlite3_shutdown = Module['_sqlite3_shutdown'] =\n        Module['asm']['sqlite3_shutdown']).apply(null, arguments);\n    });\n\n    var _sqlite3_last_insert_rowid = (Module['_sqlite3_last_insert_rowid'] =\n      function () {\n        return (_sqlite3_last_insert_rowid = Module[\n          '_sqlite3_last_insert_rowid'\n        ] =\n          Module['asm']['sqlite3_last_insert_rowid']).apply(null, arguments);\n      });\n\n    var _sqlite3_set_last_insert_rowid = (Module[\n      '_sqlite3_set_last_insert_rowid'\n    ] = function () {\n      return (_sqlite3_set_last_insert_rowid = Module[\n        '_sqlite3_set_last_insert_rowid'\n      ] =\n        Module['asm']['sqlite3_set_last_insert_rowid']).apply(null, arguments);\n    });\n\n    var _sqlite3_changes64 = (Module['_sqlite3_changes64'] = function () {\n      return (_sqlite3_changes64 = Module['_sqlite3_changes64'] =\n        Module['asm']['sqlite3_changes64']).apply(null, arguments);\n    });\n\n    var _sqlite3_changes = (Module['_sqlite3_changes'] = function () {\n      return (_sqlite3_changes = Module['_sqlite3_changes'] =\n        Module['asm']['sqlite3_changes']).apply(null, arguments);\n    });\n\n    var _sqlite3_total_changes64 = (Module['_sqlite3_total_changes64'] =\n      function () {\n        return (_sqlite3_total_changes64 = Module['_sqlite3_total_changes64'] =\n          Module['asm']['sqlite3_total_changes64']).apply(null, arguments);\n      });\n\n    var _sqlite3_total_changes = (Module['_sqlite3_total_changes'] =\n      function () {\n        return (_sqlite3_total_changes = Module['_sqlite3_total_changes'] =\n          Module['asm']['sqlite3_total_changes']).apply(null, arguments);\n      });\n\n    var _sqlite3_txn_state = (Module['_sqlite3_txn_state'] = function () {\n      return (_sqlite3_txn_state = Module['_sqlite3_txn_state'] =\n        Module['asm']['sqlite3_txn_state']).apply(null, arguments);\n    });\n\n    var _sqlite3_close_v2 = (Module['_sqlite3_close_v2'] = function () {\n      return (_sqlite3_close_v2 = Module['_sqlite3_close_v2'] =\n        Module['asm']['sqlite3_close_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_busy_handler = (Module['_sqlite3_busy_handler'] = function () {\n      return (_sqlite3_busy_handler = Module['_sqlite3_busy_handler'] =\n        Module['asm']['sqlite3_busy_handler']).apply(null, arguments);\n    });\n\n    var _sqlite3_progress_handler = (Module['_sqlite3_progress_handler'] =\n      function () {\n        return (_sqlite3_progress_handler = Module[\n          '_sqlite3_progress_handler'\n        ] =\n          Module['asm']['sqlite3_progress_handler']).apply(null, arguments);\n      });\n\n    var _sqlite3_busy_timeout = (Module['_sqlite3_busy_timeout'] = function () {\n      return (_sqlite3_busy_timeout = Module['_sqlite3_busy_timeout'] =\n        Module['asm']['sqlite3_busy_timeout']).apply(null, arguments);\n    });\n\n    var _sqlite3_create_function = (Module['_sqlite3_create_function'] =\n      function () {\n        return (_sqlite3_create_function = Module['_sqlite3_create_function'] =\n          Module['asm']['sqlite3_create_function']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_function_v2 = (Module['_sqlite3_create_function_v2'] =\n      function () {\n        return (_sqlite3_create_function_v2 = Module[\n          '_sqlite3_create_function_v2'\n        ] =\n          Module['asm']['sqlite3_create_function_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_window_function = (Module[\n      '_sqlite3_create_window_function'\n    ] = function () {\n      return (_sqlite3_create_window_function = Module[\n        '_sqlite3_create_window_function'\n      ] =\n        Module['asm']['sqlite3_create_window_function']).apply(null, arguments);\n    });\n\n    var _sqlite3_overload_function = (Module['_sqlite3_overload_function'] =\n      function () {\n        return (_sqlite3_overload_function = Module[\n          '_sqlite3_overload_function'\n        ] =\n          Module['asm']['sqlite3_overload_function']).apply(null, arguments);\n      });\n\n    var _sqlite3_trace_v2 = (Module['_sqlite3_trace_v2'] = function () {\n      return (_sqlite3_trace_v2 = Module['_sqlite3_trace_v2'] =\n        Module['asm']['sqlite3_trace_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_commit_hook = (Module['_sqlite3_commit_hook'] = function () {\n      return (_sqlite3_commit_hook = Module['_sqlite3_commit_hook'] =\n        Module['asm']['sqlite3_commit_hook']).apply(null, arguments);\n    });\n\n    var _sqlite3_update_hook = (Module['_sqlite3_update_hook'] = function () {\n      return (_sqlite3_update_hook = Module['_sqlite3_update_hook'] =\n        Module['asm']['sqlite3_update_hook']).apply(null, arguments);\n    });\n\n    var _sqlite3_rollback_hook = (Module['_sqlite3_rollback_hook'] =\n      function () {\n        return (_sqlite3_rollback_hook = Module['_sqlite3_rollback_hook'] =\n          Module['asm']['sqlite3_rollback_hook']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_hook = (Module['_sqlite3_preupdate_hook'] =\n      function () {\n        return (_sqlite3_preupdate_hook = Module['_sqlite3_preupdate_hook'] =\n          Module['asm']['sqlite3_preupdate_hook']).apply(null, arguments);\n      });\n\n    var _sqlite3_error_offset = (Module['_sqlite3_error_offset'] = function () {\n      return (_sqlite3_error_offset = Module['_sqlite3_error_offset'] =\n        Module['asm']['sqlite3_error_offset']).apply(null, arguments);\n    });\n\n    var _sqlite3_errcode = (Module['_sqlite3_errcode'] = function () {\n      return (_sqlite3_errcode = Module['_sqlite3_errcode'] =\n        Module['asm']['sqlite3_errcode']).apply(null, arguments);\n    });\n\n    var _sqlite3_extended_errcode = (Module['_sqlite3_extended_errcode'] =\n      function () {\n        return (_sqlite3_extended_errcode = Module[\n          '_sqlite3_extended_errcode'\n        ] =\n          Module['asm']['sqlite3_extended_errcode']).apply(null, arguments);\n      });\n\n    var _sqlite3_errstr = (Module['_sqlite3_errstr'] = function () {\n      return (_sqlite3_errstr = Module['_sqlite3_errstr'] =\n        Module['asm']['sqlite3_errstr']).apply(null, arguments);\n    });\n\n    var _sqlite3_limit = (Module['_sqlite3_limit'] = function () {\n      return (_sqlite3_limit = Module['_sqlite3_limit'] =\n        Module['asm']['sqlite3_limit']).apply(null, arguments);\n    });\n\n    var _sqlite3_open = (Module['_sqlite3_open'] = function () {\n      return (_sqlite3_open = Module['_sqlite3_open'] =\n        Module['asm']['sqlite3_open']).apply(null, arguments);\n    });\n\n    var _sqlite3_open_v2 = (Module['_sqlite3_open_v2'] = function () {\n      return (_sqlite3_open_v2 = Module['_sqlite3_open_v2'] =\n        Module['asm']['sqlite3_open_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_create_collation = (Module['_sqlite3_create_collation'] =\n      function () {\n        return (_sqlite3_create_collation = Module[\n          '_sqlite3_create_collation'\n        ] =\n          Module['asm']['sqlite3_create_collation']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_collation_v2 = (Module['_sqlite3_create_collation_v2'] =\n      function () {\n        return (_sqlite3_create_collation_v2 = Module[\n          '_sqlite3_create_collation_v2'\n        ] =\n          Module['asm']['sqlite3_create_collation_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3_collation_needed = (Module['_sqlite3_collation_needed'] =\n      function () {\n        return (_sqlite3_collation_needed = Module[\n          '_sqlite3_collation_needed'\n        ] =\n          Module['asm']['sqlite3_collation_needed']).apply(null, arguments);\n      });\n\n    var _sqlite3_get_autocommit = (Module['_sqlite3_get_autocommit'] =\n      function () {\n        return (_sqlite3_get_autocommit = Module['_sqlite3_get_autocommit'] =\n          Module['asm']['sqlite3_get_autocommit']).apply(null, arguments);\n      });\n\n    var _sqlite3_table_column_metadata = (Module[\n      '_sqlite3_table_column_metadata'\n    ] = function () {\n      return (_sqlite3_table_column_metadata = Module[\n        '_sqlite3_table_column_metadata'\n      ] =\n        Module['asm']['sqlite3_table_column_metadata']).apply(null, arguments);\n    });\n\n    var _sqlite3_extended_result_codes = (Module[\n      '_sqlite3_extended_result_codes'\n    ] = function () {\n      return (_sqlite3_extended_result_codes = Module[\n        '_sqlite3_extended_result_codes'\n      ] =\n        Module['asm']['sqlite3_extended_result_codes']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_key = (Module['_sqlite3_uri_key'] = function () {\n      return (_sqlite3_uri_key = Module['_sqlite3_uri_key'] =\n        Module['asm']['sqlite3_uri_key']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_int64 = (Module['_sqlite3_uri_int64'] = function () {\n      return (_sqlite3_uri_int64 = Module['_sqlite3_uri_int64'] =\n        Module['asm']['sqlite3_uri_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_name = (Module['_sqlite3_db_name'] = function () {\n      return (_sqlite3_db_name = Module['_sqlite3_db_name'] =\n        Module['asm']['sqlite3_db_name']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_filename = (Module['_sqlite3_db_filename'] = function () {\n      return (_sqlite3_db_filename = Module['_sqlite3_db_filename'] =\n        Module['asm']['sqlite3_db_filename']).apply(null, arguments);\n    });\n\n    var _sqlite3_compileoption_used = (Module['_sqlite3_compileoption_used'] =\n      function () {\n        return (_sqlite3_compileoption_used = Module[\n          '_sqlite3_compileoption_used'\n        ] =\n          Module['asm']['sqlite3_compileoption_used']).apply(null, arguments);\n      });\n\n    var _sqlite3_compileoption_get = (Module['_sqlite3_compileoption_get'] =\n      function () {\n        return (_sqlite3_compileoption_get = Module[\n          '_sqlite3_compileoption_get'\n        ] =\n          Module['asm']['sqlite3_compileoption_get']).apply(null, arguments);\n      });\n\n    var _sqlite3session_diff = (Module['_sqlite3session_diff'] = function () {\n      return (_sqlite3session_diff = Module['_sqlite3session_diff'] =\n        Module['asm']['sqlite3session_diff']).apply(null, arguments);\n    });\n\n    var _sqlite3session_attach = (Module['_sqlite3session_attach'] =\n      function () {\n        return (_sqlite3session_attach = Module['_sqlite3session_attach'] =\n          Module['asm']['sqlite3session_attach']).apply(null, arguments);\n      });\n\n    var _sqlite3session_create = (Module['_sqlite3session_create'] =\n      function () {\n        return (_sqlite3session_create = Module['_sqlite3session_create'] =\n          Module['asm']['sqlite3session_create']).apply(null, arguments);\n      });\n\n    var _sqlite3session_delete = (Module['_sqlite3session_delete'] =\n      function () {\n        return (_sqlite3session_delete = Module['_sqlite3session_delete'] =\n          Module['asm']['sqlite3session_delete']).apply(null, arguments);\n      });\n\n    var _sqlite3session_table_filter = (Module['_sqlite3session_table_filter'] =\n      function () {\n        return (_sqlite3session_table_filter = Module[\n          '_sqlite3session_table_filter'\n        ] =\n          Module['asm']['sqlite3session_table_filter']).apply(null, arguments);\n      });\n\n    var _sqlite3session_changeset = (Module['_sqlite3session_changeset'] =\n      function () {\n        return (_sqlite3session_changeset = Module[\n          '_sqlite3session_changeset'\n        ] =\n          Module['asm']['sqlite3session_changeset']).apply(null, arguments);\n      });\n\n    var _sqlite3session_changeset_strm = (Module[\n      '_sqlite3session_changeset_strm'\n    ] = function () {\n      return (_sqlite3session_changeset_strm = Module[\n        '_sqlite3session_changeset_strm'\n      ] =\n        Module['asm']['sqlite3session_changeset_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3session_patchset_strm = (Module[\n      '_sqlite3session_patchset_strm'\n    ] = function () {\n      return (_sqlite3session_patchset_strm = Module[\n        '_sqlite3session_patchset_strm'\n      ] =\n        Module['asm']['sqlite3session_patchset_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3session_patchset = (Module['_sqlite3session_patchset'] =\n      function () {\n        return (_sqlite3session_patchset = Module['_sqlite3session_patchset'] =\n          Module['asm']['sqlite3session_patchset']).apply(null, arguments);\n      });\n\n    var _sqlite3session_enable = (Module['_sqlite3session_enable'] =\n      function () {\n        return (_sqlite3session_enable = Module['_sqlite3session_enable'] =\n          Module['asm']['sqlite3session_enable']).apply(null, arguments);\n      });\n\n    var _sqlite3session_indirect = (Module['_sqlite3session_indirect'] =\n      function () {\n        return (_sqlite3session_indirect = Module['_sqlite3session_indirect'] =\n          Module['asm']['sqlite3session_indirect']).apply(null, arguments);\n      });\n\n    var _sqlite3session_isempty = (Module['_sqlite3session_isempty'] =\n      function () {\n        return (_sqlite3session_isempty = Module['_sqlite3session_isempty'] =\n          Module['asm']['sqlite3session_isempty']).apply(null, arguments);\n      });\n\n    var _sqlite3session_memory_used = (Module['_sqlite3session_memory_used'] =\n      function () {\n        return (_sqlite3session_memory_used = Module[\n          '_sqlite3session_memory_used'\n        ] =\n          Module['asm']['sqlite3session_memory_used']).apply(null, arguments);\n      });\n\n    var _sqlite3session_object_config = (Module[\n      '_sqlite3session_object_config'\n    ] = function () {\n      return (_sqlite3session_object_config = Module[\n        '_sqlite3session_object_config'\n      ] =\n        Module['asm']['sqlite3session_object_config']).apply(null, arguments);\n    });\n\n    var _sqlite3session_changeset_size = (Module[\n      '_sqlite3session_changeset_size'\n    ] = function () {\n      return (_sqlite3session_changeset_size = Module[\n        '_sqlite3session_changeset_size'\n      ] =\n        Module['asm']['sqlite3session_changeset_size']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_start = (Module['_sqlite3changeset_start'] =\n      function () {\n        return (_sqlite3changeset_start = Module['_sqlite3changeset_start'] =\n          Module['asm']['sqlite3changeset_start']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_start_v2 = (Module['_sqlite3changeset_start_v2'] =\n      function () {\n        return (_sqlite3changeset_start_v2 = Module[\n          '_sqlite3changeset_start_v2'\n        ] =\n          Module['asm']['sqlite3changeset_start_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_start_strm = (Module['_sqlite3changeset_start_strm'] =\n      function () {\n        return (_sqlite3changeset_start_strm = Module[\n          '_sqlite3changeset_start_strm'\n        ] =\n          Module['asm']['sqlite3changeset_start_strm']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_start_v2_strm = (Module[\n      '_sqlite3changeset_start_v2_strm'\n    ] = function () {\n      return (_sqlite3changeset_start_v2_strm = Module[\n        '_sqlite3changeset_start_v2_strm'\n      ] =\n        Module['asm']['sqlite3changeset_start_v2_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_next = (Module['_sqlite3changeset_next'] =\n      function () {\n        return (_sqlite3changeset_next = Module['_sqlite3changeset_next'] =\n          Module['asm']['sqlite3changeset_next']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_op = (Module['_sqlite3changeset_op'] = function () {\n      return (_sqlite3changeset_op = Module['_sqlite3changeset_op'] =\n        Module['asm']['sqlite3changeset_op']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_pk = (Module['_sqlite3changeset_pk'] = function () {\n      return (_sqlite3changeset_pk = Module['_sqlite3changeset_pk'] =\n        Module['asm']['sqlite3changeset_pk']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_old = (Module['_sqlite3changeset_old'] = function () {\n      return (_sqlite3changeset_old = Module['_sqlite3changeset_old'] =\n        Module['asm']['sqlite3changeset_old']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_new = (Module['_sqlite3changeset_new'] = function () {\n      return (_sqlite3changeset_new = Module['_sqlite3changeset_new'] =\n        Module['asm']['sqlite3changeset_new']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_conflict = (Module['_sqlite3changeset_conflict'] =\n      function () {\n        return (_sqlite3changeset_conflict = Module[\n          '_sqlite3changeset_conflict'\n        ] =\n          Module['asm']['sqlite3changeset_conflict']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_fk_conflicts = (Module[\n      '_sqlite3changeset_fk_conflicts'\n    ] = function () {\n      return (_sqlite3changeset_fk_conflicts = Module[\n        '_sqlite3changeset_fk_conflicts'\n      ] =\n        Module['asm']['sqlite3changeset_fk_conflicts']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_finalize = (Module['_sqlite3changeset_finalize'] =\n      function () {\n        return (_sqlite3changeset_finalize = Module[\n          '_sqlite3changeset_finalize'\n        ] =\n          Module['asm']['sqlite3changeset_finalize']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_invert = (Module['_sqlite3changeset_invert'] =\n      function () {\n        return (_sqlite3changeset_invert = Module['_sqlite3changeset_invert'] =\n          Module['asm']['sqlite3changeset_invert']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_invert_strm = (Module[\n      '_sqlite3changeset_invert_strm'\n    ] = function () {\n      return (_sqlite3changeset_invert_strm = Module[\n        '_sqlite3changeset_invert_strm'\n      ] =\n        Module['asm']['sqlite3changeset_invert_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_apply_v2 = (Module['_sqlite3changeset_apply_v2'] =\n      function () {\n        return (_sqlite3changeset_apply_v2 = Module[\n          '_sqlite3changeset_apply_v2'\n        ] =\n          Module['asm']['sqlite3changeset_apply_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_apply = (Module['_sqlite3changeset_apply'] =\n      function () {\n        return (_sqlite3changeset_apply = Module['_sqlite3changeset_apply'] =\n          Module['asm']['sqlite3changeset_apply']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_apply_v2_strm = (Module[\n      '_sqlite3changeset_apply_v2_strm'\n    ] = function () {\n      return (_sqlite3changeset_apply_v2_strm = Module[\n        '_sqlite3changeset_apply_v2_strm'\n      ] =\n        Module['asm']['sqlite3changeset_apply_v2_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_apply_strm = (Module['_sqlite3changeset_apply_strm'] =\n      function () {\n        return (_sqlite3changeset_apply_strm = Module[\n          '_sqlite3changeset_apply_strm'\n        ] =\n          Module['asm']['sqlite3changeset_apply_strm']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_new = (Module['_sqlite3changegroup_new'] =\n      function () {\n        return (_sqlite3changegroup_new = Module['_sqlite3changegroup_new'] =\n          Module['asm']['sqlite3changegroup_new']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_add = (Module['_sqlite3changegroup_add'] =\n      function () {\n        return (_sqlite3changegroup_add = Module['_sqlite3changegroup_add'] =\n          Module['asm']['sqlite3changegroup_add']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_output = (Module['_sqlite3changegroup_output'] =\n      function () {\n        return (_sqlite3changegroup_output = Module[\n          '_sqlite3changegroup_output'\n        ] =\n          Module['asm']['sqlite3changegroup_output']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_add_strm = (Module['_sqlite3changegroup_add_strm'] =\n      function () {\n        return (_sqlite3changegroup_add_strm = Module[\n          '_sqlite3changegroup_add_strm'\n        ] =\n          Module['asm']['sqlite3changegroup_add_strm']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_output_strm = (Module[\n      '_sqlite3changegroup_output_strm'\n    ] = function () {\n      return (_sqlite3changegroup_output_strm = Module[\n        '_sqlite3changegroup_output_strm'\n      ] =\n        Module['asm']['sqlite3changegroup_output_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changegroup_delete = (Module['_sqlite3changegroup_delete'] =\n      function () {\n        return (_sqlite3changegroup_delete = Module[\n          '_sqlite3changegroup_delete'\n        ] =\n          Module['asm']['sqlite3changegroup_delete']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_concat = (Module['_sqlite3changeset_concat'] =\n      function () {\n        return (_sqlite3changeset_concat = Module['_sqlite3changeset_concat'] =\n          Module['asm']['sqlite3changeset_concat']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_concat_strm = (Module[\n      '_sqlite3changeset_concat_strm'\n    ] = function () {\n      return (_sqlite3changeset_concat_strm = Module[\n        '_sqlite3changeset_concat_strm'\n      ] =\n        Module['asm']['sqlite3changeset_concat_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3session_config = (Module['_sqlite3session_config'] =\n      function () {\n        return (_sqlite3session_config = Module['_sqlite3session_config'] =\n          Module['asm']['sqlite3session_config']).apply(null, arguments);\n      });\n\n    var _sqlite3_sourceid = (Module['_sqlite3_sourceid'] = function () {\n      return (_sqlite3_sourceid = Module['_sqlite3_sourceid'] =\n        Module['asm']['sqlite3_sourceid']).apply(null, arguments);\n    });\n\n    var _sqlite3__wasm_pstack_ptr = (Module['_sqlite3__wasm_pstack_ptr'] =\n      function () {\n        return (_sqlite3__wasm_pstack_ptr = Module[\n          '_sqlite3__wasm_pstack_ptr'\n        ] =\n          Module['asm']['sqlite3__wasm_pstack_ptr']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_pstack_restore = (Module[\n      '_sqlite3__wasm_pstack_restore'\n    ] = function () {\n      return (_sqlite3__wasm_pstack_restore = Module[\n        '_sqlite3__wasm_pstack_restore'\n      ] =\n        Module['asm']['sqlite3__wasm_pstack_restore']).apply(null, arguments);\n    });\n\n    var _sqlite3__wasm_pstack_alloc = (Module['_sqlite3__wasm_pstack_alloc'] =\n      function () {\n        return (_sqlite3__wasm_pstack_alloc = Module[\n          '_sqlite3__wasm_pstack_alloc'\n        ] =\n          Module['asm']['sqlite3__wasm_pstack_alloc']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_pstack_remaining = (Module[\n      '_sqlite3__wasm_pstack_remaining'\n    ] = function () {\n      return (_sqlite3__wasm_pstack_remaining = Module[\n        '_sqlite3__wasm_pstack_remaining'\n      ] =\n        Module['asm']['sqlite3__wasm_pstack_remaining']).apply(null, arguments);\n    });\n\n    var _sqlite3__wasm_pstack_quota = (Module['_sqlite3__wasm_pstack_quota'] =\n      function () {\n        return (_sqlite3__wasm_pstack_quota = Module[\n          '_sqlite3__wasm_pstack_quota'\n        ] =\n          Module['asm']['sqlite3__wasm_pstack_quota']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_db_error = (Module['_sqlite3__wasm_db_error'] =\n      function () {\n        return (_sqlite3__wasm_db_error = Module['_sqlite3__wasm_db_error'] =\n          Module['asm']['sqlite3__wasm_db_error']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_test_struct = (Module['_sqlite3__wasm_test_struct'] =\n      function () {\n        return (_sqlite3__wasm_test_struct = Module[\n          '_sqlite3__wasm_test_struct'\n        ] =\n          Module['asm']['sqlite3__wasm_test_struct']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_enum_json = (Module['_sqlite3__wasm_enum_json'] =\n      function () {\n        return (_sqlite3__wasm_enum_json = Module['_sqlite3__wasm_enum_json'] =\n          Module['asm']['sqlite3__wasm_enum_json']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_vfs_unlink = (Module['_sqlite3__wasm_vfs_unlink'] =\n      function () {\n        return (_sqlite3__wasm_vfs_unlink = Module[\n          '_sqlite3__wasm_vfs_unlink'\n        ] =\n          Module['asm']['sqlite3__wasm_vfs_unlink']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_db_vfs = (Module['_sqlite3__wasm_db_vfs'] = function () {\n      return (_sqlite3__wasm_db_vfs = Module['_sqlite3__wasm_db_vfs'] =\n        Module['asm']['sqlite3__wasm_db_vfs']).apply(null, arguments);\n    });\n\n    var _sqlite3__wasm_db_reset = (Module['_sqlite3__wasm_db_reset'] =\n      function () {\n        return (_sqlite3__wasm_db_reset = Module['_sqlite3__wasm_db_reset'] =\n          Module['asm']['sqlite3__wasm_db_reset']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_db_export_chunked = (Module[\n      '_sqlite3__wasm_db_export_chunked'\n    ] = function () {\n      return (_sqlite3__wasm_db_export_chunked = Module[\n        '_sqlite3__wasm_db_export_chunked'\n      ] =\n        Module['asm']['sqlite3__wasm_db_export_chunked']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3__wasm_db_serialize = (Module['_sqlite3__wasm_db_serialize'] =\n      function () {\n        return (_sqlite3__wasm_db_serialize = Module[\n          '_sqlite3__wasm_db_serialize'\n        ] =\n          Module['asm']['sqlite3__wasm_db_serialize']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_vfs_create_file = (Module[\n      '_sqlite3__wasm_vfs_create_file'\n    ] = function () {\n      return (_sqlite3__wasm_vfs_create_file = Module[\n        '_sqlite3__wasm_vfs_create_file'\n      ] =\n        Module['asm']['sqlite3__wasm_vfs_create_file']).apply(null, arguments);\n    });\n\n    var _sqlite3__wasm_posix_create_file = (Module[\n      '_sqlite3__wasm_posix_create_file'\n    ] = function () {\n      return (_sqlite3__wasm_posix_create_file = Module[\n        '_sqlite3__wasm_posix_create_file'\n      ] =\n        Module['asm']['sqlite3__wasm_posix_create_file']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3__wasm_kvvfsMakeKeyOnPstack = (Module[\n      '_sqlite3__wasm_kvvfsMakeKeyOnPstack'\n    ] = function () {\n      return (_sqlite3__wasm_kvvfsMakeKeyOnPstack = Module[\n        '_sqlite3__wasm_kvvfsMakeKeyOnPstack'\n      ] =\n        Module['asm']['sqlite3__wasm_kvvfsMakeKeyOnPstack']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3__wasm_kvvfs_methods = (Module['_sqlite3__wasm_kvvfs_methods'] =\n      function () {\n        return (_sqlite3__wasm_kvvfs_methods = Module[\n          '_sqlite3__wasm_kvvfs_methods'\n        ] =\n          Module['asm']['sqlite3__wasm_kvvfs_methods']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_vtab_config = (Module['_sqlite3__wasm_vtab_config'] =\n      function () {\n        return (_sqlite3__wasm_vtab_config = Module[\n          '_sqlite3__wasm_vtab_config'\n        ] =\n          Module['asm']['sqlite3__wasm_vtab_config']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_db_config_ip = (Module['_sqlite3__wasm_db_config_ip'] =\n      function () {\n        return (_sqlite3__wasm_db_config_ip = Module[\n          '_sqlite3__wasm_db_config_ip'\n        ] =\n          Module['asm']['sqlite3__wasm_db_config_ip']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_db_config_pii = (Module['_sqlite3__wasm_db_config_pii'] =\n      function () {\n        return (_sqlite3__wasm_db_config_pii = Module[\n          '_sqlite3__wasm_db_config_pii'\n        ] =\n          Module['asm']['sqlite3__wasm_db_config_pii']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_db_config_s = (Module['_sqlite3__wasm_db_config_s'] =\n      function () {\n        return (_sqlite3__wasm_db_config_s = Module[\n          '_sqlite3__wasm_db_config_s'\n        ] =\n          Module['asm']['sqlite3__wasm_db_config_s']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_config_i = (Module['_sqlite3__wasm_config_i'] =\n      function () {\n        return (_sqlite3__wasm_config_i = Module['_sqlite3__wasm_config_i'] =\n          Module['asm']['sqlite3__wasm_config_i']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_config_ii = (Module['_sqlite3__wasm_config_ii'] =\n      function () {\n        return (_sqlite3__wasm_config_ii = Module['_sqlite3__wasm_config_ii'] =\n          Module['asm']['sqlite3__wasm_config_ii']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_config_j = (Module['_sqlite3__wasm_config_j'] =\n      function () {\n        return (_sqlite3__wasm_config_j = Module['_sqlite3__wasm_config_j'] =\n          Module['asm']['sqlite3__wasm_config_j']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_qfmt_token = (Module['_sqlite3__wasm_qfmt_token'] =\n      function () {\n        return (_sqlite3__wasm_qfmt_token = Module[\n          '_sqlite3__wasm_qfmt_token'\n        ] =\n          Module['asm']['sqlite3__wasm_qfmt_token']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_init_wasmfs = (Module['_sqlite3__wasm_init_wasmfs'] =\n      function () {\n        return (_sqlite3__wasm_init_wasmfs = Module[\n          '_sqlite3__wasm_init_wasmfs'\n        ] =\n          Module['asm']['sqlite3__wasm_init_wasmfs']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_test_intptr = (Module['_sqlite3__wasm_test_intptr'] =\n      function () {\n        return (_sqlite3__wasm_test_intptr = Module[\n          '_sqlite3__wasm_test_intptr'\n        ] =\n          Module['asm']['sqlite3__wasm_test_intptr']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_test_voidptr = (Module['_sqlite3__wasm_test_voidptr'] =\n      function () {\n        return (_sqlite3__wasm_test_voidptr = Module[\n          '_sqlite3__wasm_test_voidptr'\n        ] =\n          Module['asm']['sqlite3__wasm_test_voidptr']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_test_int64_max = (Module[\n      '_sqlite3__wasm_test_int64_max'\n    ] = function () {\n      return (_sqlite3__wasm_test_int64_max = Module[\n        '_sqlite3__wasm_test_int64_max'\n      ] =\n        Module['asm']['sqlite3__wasm_test_int64_max']).apply(null, arguments);\n    });\n\n    var _sqlite3__wasm_test_int64_min = (Module[\n      '_sqlite3__wasm_test_int64_min'\n    ] = function () {\n      return (_sqlite3__wasm_test_int64_min = Module[\n        '_sqlite3__wasm_test_int64_min'\n      ] =\n        Module['asm']['sqlite3__wasm_test_int64_min']).apply(null, arguments);\n    });\n\n    var _sqlite3__wasm_test_int64_times2 = (Module[\n      '_sqlite3__wasm_test_int64_times2'\n    ] = function () {\n      return (_sqlite3__wasm_test_int64_times2 = Module[\n        '_sqlite3__wasm_test_int64_times2'\n      ] =\n        Module['asm']['sqlite3__wasm_test_int64_times2']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3__wasm_test_int64_minmax = (Module[\n      '_sqlite3__wasm_test_int64_minmax'\n    ] = function () {\n      return (_sqlite3__wasm_test_int64_minmax = Module[\n        '_sqlite3__wasm_test_int64_minmax'\n      ] =\n        Module['asm']['sqlite3__wasm_test_int64_minmax']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3__wasm_test_int64ptr = (Module['_sqlite3__wasm_test_int64ptr'] =\n      function () {\n        return (_sqlite3__wasm_test_int64ptr = Module[\n          '_sqlite3__wasm_test_int64ptr'\n        ] =\n          Module['asm']['sqlite3__wasm_test_int64ptr']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_test_stack_overflow = (Module[\n      '_sqlite3__wasm_test_stack_overflow'\n    ] = function () {\n      return (_sqlite3__wasm_test_stack_overflow = Module[\n        '_sqlite3__wasm_test_stack_overflow'\n      ] =\n        Module['asm']['sqlite3__wasm_test_stack_overflow']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3__wasm_test_str_hello = (Module[\n      '_sqlite3__wasm_test_str_hello'\n    ] = function () {\n      return (_sqlite3__wasm_test_str_hello = Module[\n        '_sqlite3__wasm_test_str_hello'\n      ] =\n        Module['asm']['sqlite3__wasm_test_str_hello']).apply(null, arguments);\n    });\n\n    var _sqlite3__wasm_SQLTester_strglob = (Module[\n      '_sqlite3__wasm_SQLTester_strglob'\n    ] = function () {\n      return (_sqlite3__wasm_SQLTester_strglob = Module[\n        '_sqlite3__wasm_SQLTester_strglob'\n      ] =\n        Module['asm']['sqlite3__wasm_SQLTester_strglob']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _malloc = (Module['_malloc'] = function () {\n      return (_malloc = Module['_malloc'] = Module['asm']['malloc']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _free = (Module['_free'] = function () {\n      return (_free = Module['_free'] = Module['asm']['free']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _realloc = (Module['_realloc'] = function () {\n      return (_realloc = Module['_realloc'] = Module['asm']['realloc']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _emscripten_builtin_memalign = (Module['_emscripten_builtin_memalign'] =\n      function () {\n        return (_emscripten_builtin_memalign = Module[\n          '_emscripten_builtin_memalign'\n        ] =\n          Module['asm']['emscripten_builtin_memalign']).apply(null, arguments);\n      });\n\n    var stackSave = (Module['stackSave'] = function () {\n      return (stackSave = Module['stackSave'] =\n        Module['asm']['stackSave']).apply(null, arguments);\n    });\n\n    var stackRestore = (Module['stackRestore'] = function () {\n      return (stackRestore = Module['stackRestore'] =\n        Module['asm']['stackRestore']).apply(null, arguments);\n    });\n\n    var stackAlloc = (Module['stackAlloc'] = function () {\n      return (stackAlloc = Module['stackAlloc'] =\n        Module['asm']['stackAlloc']).apply(null, arguments);\n    });\n\n    Module['wasmMemory'] = wasmMemory;\n\n    var calledRun;\n\n    dependenciesFulfilled = function runCaller() {\n      if (!calledRun) run();\n      if (!calledRun) dependenciesFulfilled = runCaller;\n    };\n\n    function run(args) {\n      args = args || arguments_;\n\n      if (runDependencies > 0) {\n        return;\n      }\n\n      preRun();\n\n      if (runDependencies > 0) {\n        return;\n      }\n\n      function doRun() {\n        if (calledRun) return;\n        calledRun = true;\n        Module['calledRun'] = true;\n\n        if (ABORT) return;\n\n        initRuntime();\n\n        readyPromiseResolve(Module);\n        if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n        postRun();\n      }\n\n      if (Module['setStatus']) {\n        Module['setStatus']('Running...');\n        setTimeout(function () {\n          setTimeout(function () {\n            Module['setStatus']('');\n          }, 1);\n          doRun();\n        }, 1);\n      } else {\n        doRun();\n      }\n    }\n\n    if (Module['preInit']) {\n      if (typeof Module['preInit'] == 'function')\n        Module['preInit'] = [Module['preInit']];\n      while (Module['preInit'].length > 0) {\n        Module['preInit'].pop()();\n      }\n    }\n\n    run();\n\n    if (!Module.postRun) Module.postRun = [];\n    Module.postRun.push(function (Module) {\n      'use strict';\n\n      'use strict';\n      globalThis.sqlite3ApiBootstrap = function sqlite3ApiBootstrap(\n        apiConfig = globalThis.sqlite3ApiConfig ||\n          sqlite3ApiBootstrap.defaultConfig,\n      ) {\n        if (sqlite3ApiBootstrap.sqlite3) {\n          (sqlite3ApiBootstrap.sqlite3.config || console).warn(\n            'sqlite3ApiBootstrap() called multiple times.',\n            'Config and external initializers are ignored on calls after the first.',\n          );\n          return sqlite3ApiBootstrap.sqlite3;\n        }\n        const config = Object.assign(\n          Object.create(null),\n          {\n            exports: undefined,\n            memory: undefined,\n            bigIntEnabled: (() => {\n              if ('undefined' !== typeof Module) {\n                if (!!Module.HEAPU64) return true;\n              }\n              return !!globalThis.BigInt64Array;\n            })(),\n            debug: console.debug.bind(console),\n            warn: console.warn.bind(console),\n            error: console.error.bind(console),\n            log: console.log.bind(console),\n            wasmfsOpfsDir: '/opfs',\n\n            useStdAlloc: false,\n          },\n          apiConfig || {},\n        );\n\n        Object.assign(\n          config,\n          {\n            allocExportName: config.useStdAlloc ? 'malloc' : 'sqlite3_malloc',\n            deallocExportName: config.useStdAlloc ? 'free' : 'sqlite3_free',\n            reallocExportName: config.useStdAlloc\n              ? 'realloc'\n              : 'sqlite3_realloc',\n          },\n          config,\n        );\n\n        ['exports', 'memory', 'wasmfsOpfsDir'].forEach((k) => {\n          if ('function' === typeof config[k]) {\n            config[k] = config[k]();\n          }\n        });\n\n        delete globalThis.sqlite3ApiConfig;\n        delete sqlite3ApiBootstrap.defaultConfig;\n\n        const capi = Object.create(null);\n\n        const wasm = Object.create(null);\n\n        const __rcStr = (rc) => {\n          return (\n            (capi.sqlite3_js_rc_str && capi.sqlite3_js_rc_str(rc)) ||\n            'Unknown result code #' + rc\n          );\n        };\n\n        const __isInt = (n) => 'number' === typeof n && n === (n | 0);\n\n        class SQLite3Error extends Error {\n          constructor(...args) {\n            let rc;\n            if (args.length) {\n              if (__isInt(args[0])) {\n                rc = args[0];\n                if (1 === args.length) {\n                  super(__rcStr(args[0]));\n                } else {\n                  const rcStr = __rcStr(rc);\n                  if ('object' === typeof args[1]) {\n                    super(rcStr, args[1]);\n                  } else {\n                    args[0] = rcStr + ':';\n                    super(args.join(' '));\n                  }\n                }\n              } else {\n                if (2 === args.length && 'object' === typeof args[1]) {\n                  super(...args);\n                } else {\n                  super(args.join(' '));\n                }\n              }\n            }\n            this.resultCode = rc || capi.SQLITE_ERROR;\n            this.name = 'SQLite3Error';\n          }\n        }\n\n        SQLite3Error.toss = (...args) => {\n          throw new SQLite3Error(...args);\n        };\n        const toss3 = SQLite3Error.toss;\n\n        if (config.wasmfsOpfsDir && !/^\\/[^/]+$/.test(config.wasmfsOpfsDir)) {\n          toss3(\n            \"config.wasmfsOpfsDir must be falsy or in the form '/dir-name'.\",\n          );\n        }\n\n        const isInt32 = (n) => {\n          return (\n            'bigint' !== typeof n &&\n            !!(n === (n | 0) && n <= 2147483647 && n >= -2147483648)\n          );\n        };\n\n        const bigIntFits64 = function f(b) {\n          if (!f._max) {\n            f._max = BigInt('0x7fffffffffffffff');\n            f._min = ~f._max;\n          }\n          return b >= f._min && b <= f._max;\n        };\n\n        const bigIntFits32 = (b) => b >= -0x7fffffffn - 1n && b <= 0x7fffffffn;\n\n        const bigIntFitsDouble = function f(b) {\n          if (!f._min) {\n            f._min = Number.MIN_SAFE_INTEGER;\n            f._max = Number.MAX_SAFE_INTEGER;\n          }\n          return b >= f._min && b <= f._max;\n        };\n\n        const isTypedArray = (v) => {\n          return v && v.constructor && isInt32(v.constructor.BYTES_PER_ELEMENT)\n            ? v\n            : false;\n        };\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n\n        const isSharedTypedArray = (aTypedArray) =>\n          aTypedArray.buffer instanceof __SAB;\n\n        const typedArrayPart = (aTypedArray, begin, end) => {\n          return isSharedTypedArray(aTypedArray)\n            ? aTypedArray.slice(begin, end)\n            : aTypedArray.subarray(begin, end);\n        };\n\n        const isBindableTypedArray = (v) => {\n          return (\n            v &&\n            (v instanceof Uint8Array ||\n              v instanceof Int8Array ||\n              v instanceof ArrayBuffer)\n          );\n        };\n\n        const isSQLableTypedArray = (v) => {\n          return (\n            v &&\n            (v instanceof Uint8Array ||\n              v instanceof Int8Array ||\n              v instanceof ArrayBuffer)\n          );\n        };\n\n        const affirmBindableTypedArray = (v) => {\n          return (\n            isBindableTypedArray(v) ||\n            toss3('Value is not of a supported TypedArray type.')\n          );\n        };\n\n        const utf8Decoder = new TextDecoder('utf-8');\n\n        const typedArrayToString = function (typedArray, begin, end) {\n          return utf8Decoder.decode(typedArrayPart(typedArray, begin, end));\n        };\n\n        const flexibleString = function (v) {\n          if (isSQLableTypedArray(v)) {\n            return typedArrayToString(\n              v instanceof ArrayBuffer ? new Uint8Array(v) : v,\n            );\n          } else if (Array.isArray(v)) return v.join('');\n          else if (wasm.isPtr(v)) v = wasm.cstrToJs(v);\n          return v;\n        };\n\n        class WasmAllocError extends Error {\n          constructor(...args) {\n            if (2 === args.length && 'object' === typeof args[1]) {\n              super(...args);\n            } else if (args.length) {\n              super(args.join(' '));\n            } else {\n              super('Allocation failed.');\n            }\n            this.resultCode = capi.SQLITE_NOMEM;\n            this.name = 'WasmAllocError';\n          }\n        }\n\n        WasmAllocError.toss = (...args) => {\n          throw new WasmAllocError(...args);\n        };\n\n        Object.assign(capi, {\n          sqlite3_bind_blob: undefined,\n\n          sqlite3_bind_text: undefined,\n\n          sqlite3_create_function_v2: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n            xDestroy,\n          ) => {},\n\n          sqlite3_create_function: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n          ) => {},\n\n          sqlite3_create_window_function: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xStep,\n            xFinal,\n            xValue,\n            xInverse,\n            xDestroy,\n          ) => {},\n\n          sqlite3_prepare_v3: (\n            dbPtr,\n            sql,\n            sqlByteLen,\n            prepFlags,\n            stmtPtrPtr,\n            strPtrPtr,\n          ) => {},\n\n          sqlite3_prepare_v2: (\n            dbPtr,\n            sql,\n            sqlByteLen,\n            stmtPtrPtr,\n            strPtrPtr,\n          ) => {},\n\n          sqlite3_exec: (pDb, sql, callback, pVoid, pErrMsg) => {},\n\n          sqlite3_randomness: (n, outPtr) => {},\n        });\n\n        const util = {\n          affirmBindableTypedArray,\n          flexibleString,\n          bigIntFits32,\n          bigIntFits64,\n          bigIntFitsDouble,\n          isBindableTypedArray,\n          isInt32,\n          isSQLableTypedArray,\n          isTypedArray,\n          typedArrayToString,\n          isUIThread: () =>\n            globalThis.window === globalThis && !!globalThis.document,\n\n          isSharedTypedArray,\n          toss: function (...args) {\n            throw new Error(args.join(' '));\n          },\n          toss3,\n          typedArrayPart,\n\n          affirmDbHeader: function (bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            const header = 'SQLite format 3';\n            if (header.length > bytes.byteLength) {\n              toss3('Input does not contain an SQLite3 database header.');\n            }\n            for (let i = 0; i < header.length; ++i) {\n              if (header.charCodeAt(i) !== bytes[i]) {\n                toss3('Input does not contain an SQLite3 database header.');\n              }\n            }\n          },\n\n          affirmIsDb: function (bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            const n = bytes.byteLength;\n            if (n < 512 || n % 512 !== 0) {\n              toss3('Byte array size', n, 'is invalid for an SQLite3 db.');\n            }\n            util.affirmDbHeader(bytes);\n          },\n        };\n\n        Object.assign(wasm, {\n          ptrSizeof: config.wasmPtrSizeof || 4,\n\n          ptrIR: config.wasmPtrIR || 'i32',\n\n          bigIntEnabled: !!config.bigIntEnabled,\n\n          exports:\n            config.exports ||\n            toss3('Missing API config.exports (WASM module exports).'),\n\n          memory:\n            config.memory ||\n            config.exports['memory'] ||\n            toss3(\n              'API config object requires a WebAssembly.Memory object',\n              'in either config.exports.memory (exported)',\n              'or config.memory (imported).',\n            ),\n\n          alloc: undefined,\n\n          realloc: undefined,\n\n          dealloc: undefined,\n        });\n\n        wasm.allocFromTypedArray = function (srcTypedArray) {\n          if (srcTypedArray instanceof ArrayBuffer) {\n            srcTypedArray = new Uint8Array(srcTypedArray);\n          }\n          affirmBindableTypedArray(srcTypedArray);\n          const pRet = wasm.alloc(srcTypedArray.byteLength || 1);\n          wasm\n            .heapForSize(srcTypedArray.constructor)\n            .set(srcTypedArray.byteLength ? srcTypedArray : [0], pRet);\n          return pRet;\n        };\n\n        {\n          const keyAlloc = config.allocExportName,\n            keyDealloc = config.deallocExportName,\n            keyRealloc = config.reallocExportName;\n          for (const key of [keyAlloc, keyDealloc, keyRealloc]) {\n            const f = wasm.exports[key];\n            if (!(f instanceof Function))\n              toss3('Missing required exports[', key, '] function.');\n          }\n\n          wasm.alloc = function f(n) {\n            return (\n              f.impl(n) ||\n              WasmAllocError.toss('Failed to allocate', n, ' bytes.')\n            );\n          };\n          wasm.alloc.impl = wasm.exports[keyAlloc];\n          wasm.realloc = function f(m, n) {\n            const m2 = f.impl(m, n);\n            return n\n              ? m2 || WasmAllocError.toss('Failed to reallocate', n, ' bytes.')\n              : 0;\n          };\n          wasm.realloc.impl = wasm.exports[keyRealloc];\n          wasm.dealloc = wasm.exports[keyDealloc];\n        }\n\n        wasm.compileOptionUsed = function f(optName) {\n          if (!arguments.length) {\n            if (f._result) return f._result;\n            else if (!f._opt) {\n              f._rx = /^([^=]+)=(.+)/;\n              f._rxInt = /^-?\\d+$/;\n              f._opt = function (opt, rv) {\n                const m = f._rx.exec(opt);\n                rv[0] = m ? m[1] : opt;\n                rv[1] = m ? (f._rxInt.test(m[2]) ? +m[2] : m[2]) : true;\n              };\n            }\n            const rc = {},\n              ov = [0, 0];\n            let i = 0,\n              k;\n            while ((k = capi.sqlite3_compileoption_get(i++))) {\n              f._opt(k, ov);\n              rc[ov[0]] = ov[1];\n            }\n            return (f._result = rc);\n          } else if (Array.isArray(optName)) {\n            const rc = {};\n            optName.forEach((v) => {\n              rc[v] = capi.sqlite3_compileoption_used(v);\n            });\n            return rc;\n          } else if ('object' === typeof optName) {\n            Object.keys(optName).forEach((k) => {\n              optName[k] = capi.sqlite3_compileoption_used(k);\n            });\n            return optName;\n          }\n          return 'string' === typeof optName\n            ? !!capi.sqlite3_compileoption_used(optName)\n            : false;\n        };\n\n        wasm.pstack = Object.assign(Object.create(null), {\n          restore: wasm.exports.sqlite3__wasm_pstack_restore,\n\n          alloc: function (n) {\n            if ('string' === typeof n && !(n = wasm.sizeofIR(n))) {\n              WasmAllocError.toss(\n                'Invalid value for pstack.alloc(',\n                arguments[0],\n                ')',\n              );\n            }\n            return (\n              wasm.exports.sqlite3__wasm_pstack_alloc(n) ||\n              WasmAllocError.toss(\n                'Could not allocate',\n                n,\n                'bytes from the pstack.',\n              )\n            );\n          },\n\n          allocChunks: function (n, sz) {\n            if ('string' === typeof sz && !(sz = wasm.sizeofIR(sz))) {\n              WasmAllocError.toss(\n                'Invalid size value for allocChunks(',\n                arguments[1],\n                ')',\n              );\n            }\n            const mem = wasm.pstack.alloc(n * sz);\n            const rc = [];\n            let i = 0,\n              offset = 0;\n            for (; i < n; ++i, offset += sz) rc.push(mem + offset);\n            return rc;\n          },\n\n          allocPtr: (n = 1, safePtrSize = true) => {\n            return 1 === n\n              ? wasm.pstack.alloc(safePtrSize ? 8 : wasm.ptrSizeof)\n              : wasm.pstack.allocChunks(n, safePtrSize ? 8 : wasm.ptrSizeof);\n          },\n\n          call: function (f) {\n            const stackPos = wasm.pstack.pointer;\n            try {\n              return f(sqlite3);\n            } finally {\n              wasm.pstack.restore(stackPos);\n            }\n          },\n        });\n        Object.defineProperties(wasm.pstack, {\n          pointer: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3__wasm_pstack_ptr,\n          },\n\n          quota: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3__wasm_pstack_quota,\n          },\n\n          remaining: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3__wasm_pstack_remaining,\n          },\n        });\n\n        capi.sqlite3_randomness = (...args) => {\n          if (\n            1 === args.length &&\n            util.isTypedArray(args[0]) &&\n            1 === args[0].BYTES_PER_ELEMENT\n          ) {\n            const ta = args[0];\n            if (0 === ta.byteLength) {\n              wasm.exports.sqlite3_randomness(0, 0);\n              return ta;\n            }\n            const stack = wasm.pstack.pointer;\n            try {\n              let n = ta.byteLength,\n                offset = 0;\n              const r = wasm.exports.sqlite3_randomness;\n              const heap = wasm.heap8u();\n              const nAlloc = n < 512 ? n : 512;\n              const ptr = wasm.pstack.alloc(nAlloc);\n              do {\n                const j = n > nAlloc ? nAlloc : n;\n                r(j, ptr);\n                ta.set(typedArrayPart(heap, ptr, ptr + j), offset);\n                n -= j;\n                offset += j;\n              } while (n > 0);\n            } catch (e) {\n              console.error(\n                'Highly unexpected (and ignored!) ' +\n                  'exception in sqlite3_randomness():',\n                e,\n              );\n            } finally {\n              wasm.pstack.restore(stack);\n            }\n            return ta;\n          }\n          wasm.exports.sqlite3_randomness(...args);\n        };\n\n        let __wasmfsOpfsDir = undefined;\n\n        capi.sqlite3_wasmfs_opfs_dir = function () {\n          if (undefined !== __wasmfsOpfsDir) return __wasmfsOpfsDir;\n\n          const pdir = config.wasmfsOpfsDir;\n          if (\n            !pdir ||\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle\n          ) {\n            return (__wasmfsOpfsDir = '');\n          }\n          try {\n            if (\n              pdir &&\n              0 ===\n                wasm.xCallWrapped(\n                  'sqlite3__wasm_init_wasmfs',\n                  'i32',\n                  ['string'],\n                  pdir,\n                )\n            ) {\n              return (__wasmfsOpfsDir = pdir);\n            } else {\n              return (__wasmfsOpfsDir = '');\n            }\n          } catch (e) {\n            return (__wasmfsOpfsDir = '');\n          }\n        };\n\n        capi.sqlite3_wasmfs_filename_is_persistent = function (name) {\n          const p = capi.sqlite3_wasmfs_opfs_dir();\n          return p && name ? name.startsWith(p + '/') : false;\n        };\n\n        capi.sqlite3_js_db_uses_vfs = function (pDb, vfsName, dbName = 0) {\n          try {\n            const pK = capi.sqlite3_vfs_find(vfsName);\n            if (!pK) return false;\n            else if (!pDb) {\n              return pK === capi.sqlite3_vfs_find(0) ? pK : false;\n            } else {\n              return pK === capi.sqlite3_js_db_vfs(pDb, dbName) ? pK : false;\n            }\n          } catch (e) {\n            return false;\n          }\n        };\n\n        capi.sqlite3_js_vfs_list = function () {\n          const rc = [];\n          let pVfs = capi.sqlite3_vfs_find(0);\n          while (pVfs) {\n            const oVfs = new capi.sqlite3_vfs(pVfs);\n            rc.push(wasm.cstrToJs(oVfs.$zName));\n            pVfs = oVfs.$pNext;\n            oVfs.dispose();\n          }\n          return rc;\n        };\n\n        capi.sqlite3_js_db_export = function (pDb, schema = 0) {\n          pDb = wasm.xWrap.testConvertArg('sqlite3*', pDb);\n          if (!pDb) toss3('Invalid sqlite3* argument.');\n          if (!wasm.bigIntEnabled) toss3('BigInt64 support is not enabled.');\n          const scope = wasm.scopedAllocPush();\n          let pOut;\n          try {\n            const pSize = wasm.scopedAlloc(8 + wasm.ptrSizeof);\n            const ppOut = pSize + 8;\n\n            const zSchema = schema\n              ? wasm.isPtr(schema)\n                ? schema\n                : wasm.scopedAllocCString('' + schema)\n              : 0;\n            let rc = wasm.exports.sqlite3__wasm_db_serialize(\n              pDb,\n              zSchema,\n              ppOut,\n              pSize,\n              0,\n            );\n            if (rc) {\n              toss3(\n                'Database serialization failed with code',\n                sqlite3.capi.sqlite3_js_rc_str(rc),\n              );\n            }\n            pOut = wasm.peekPtr(ppOut);\n            const nOut = wasm.peek(pSize, 'i64');\n            rc = nOut\n              ? wasm.heap8u().slice(pOut, pOut + Number(nOut))\n              : new Uint8Array();\n            return rc;\n          } finally {\n            if (pOut) wasm.exports.sqlite3_free(pOut);\n            wasm.scopedAllocPop(scope);\n          }\n        };\n\n        capi.sqlite3_js_db_vfs = (dbPointer, dbName = 0) =>\n          util.sqlite3__wasm_db_vfs(dbPointer, dbName);\n\n        capi.sqlite3_js_aggregate_context = (pCtx, n) => {\n          return (\n            capi.sqlite3_aggregate_context(pCtx, n) ||\n            (n\n              ? WasmAllocError.toss(\n                  'Cannot allocate',\n                  n,\n                  'bytes for sqlite3_aggregate_context()',\n                )\n              : 0)\n          );\n        };\n\n        capi.sqlite3_js_posix_create_file = function (filename, data, dataLen) {\n          let pData;\n          if (data && wasm.isPtr(data)) {\n            pData = data;\n          } else if (\n            data instanceof ArrayBuffer ||\n            data instanceof Uint8Array\n          ) {\n            pData = wasm.allocFromTypedArray(data);\n            if (arguments.length < 3 || !util.isInt32(dataLen) || dataLen < 0) {\n              dataLen = data.byteLength;\n            }\n          } else {\n            SQLite3Error.toss(\n              'Invalid 2nd argument for sqlite3_js_posix_create_file().',\n            );\n          }\n          try {\n            if (!util.isInt32(dataLen) || dataLen < 0) {\n              SQLite3Error.toss(\n                'Invalid 3rd argument for sqlite3_js_posix_create_file().',\n              );\n            }\n            const rc = util.sqlite3__wasm_posix_create_file(\n              filename,\n              pData,\n              dataLen,\n            );\n            if (rc)\n              SQLite3Error.toss(\n                'Creation of file failed with sqlite3 result code',\n                capi.sqlite3_js_rc_str(rc),\n              );\n          } finally {\n            wasm.dealloc(pData);\n          }\n        };\n\n        capi.sqlite3_js_vfs_create_file = function (\n          vfs,\n          filename,\n          data,\n          dataLen,\n        ) {\n          config.warn(\n            'sqlite3_js_vfs_create_file() is deprecated and',\n            'should be avoided because it can lead to C-level crashes.',\n            'See its documentation for alternative options.',\n          );\n          let pData;\n          if (data) {\n            if (wasm.isPtr(data)) {\n              pData = data;\n            } else if (data instanceof ArrayBuffer) {\n              data = new Uint8Array(data);\n            }\n            if (data instanceof Uint8Array) {\n              pData = wasm.allocFromTypedArray(data);\n              if (\n                arguments.length < 4 ||\n                !util.isInt32(dataLen) ||\n                dataLen < 0\n              ) {\n                dataLen = data.byteLength;\n              }\n            } else {\n              SQLite3Error.toss(\n                'Invalid 3rd argument type for sqlite3_js_vfs_create_file().',\n              );\n            }\n          } else {\n            pData = 0;\n          }\n          if (!util.isInt32(dataLen) || dataLen < 0) {\n            wasm.dealloc(pData);\n            SQLite3Error.toss(\n              'Invalid 4th argument for sqlite3_js_vfs_create_file().',\n            );\n          }\n          try {\n            const rc = util.sqlite3__wasm_vfs_create_file(\n              vfs,\n              filename,\n              pData,\n              dataLen,\n            );\n            if (rc)\n              SQLite3Error.toss(\n                'Creation of file failed with sqlite3 result code',\n                capi.sqlite3_js_rc_str(rc),\n              );\n          } finally {\n            wasm.dealloc(pData);\n          }\n        };\n\n        capi.sqlite3_js_sql_to_string = (sql) => {\n          if ('string' === typeof sql) {\n            return sql;\n          }\n          const x = flexibleString(v);\n          return x === v ? undefined : x;\n        };\n\n        if (util.isUIThread()) {\n          const __kvvfsInfo = function (which) {\n            const rc = Object.create(null);\n            rc.prefix = 'kvvfs-' + which;\n            rc.stores = [];\n            if ('session' === which || '' === which)\n              rc.stores.push(globalThis.sessionStorage);\n            if ('local' === which || '' === which)\n              rc.stores.push(globalThis.localStorage);\n            return rc;\n          };\n\n          capi.sqlite3_js_kvvfs_clear = function (which = '') {\n            let rc = 0;\n            const kvinfo = __kvvfsInfo(which);\n            kvinfo.stores.forEach((s) => {\n              const toRm = [];\n              let i;\n              for (i = 0; i < s.length; ++i) {\n                const k = s.key(i);\n                if (k.startsWith(kvinfo.prefix)) toRm.push(k);\n              }\n              toRm.forEach((kk) => s.removeItem(kk));\n              rc += toRm.length;\n            });\n            return rc;\n          };\n\n          capi.sqlite3_js_kvvfs_size = function (which = '') {\n            let sz = 0;\n            const kvinfo = __kvvfsInfo(which);\n            kvinfo.stores.forEach((s) => {\n              let i;\n              for (i = 0; i < s.length; ++i) {\n                const k = s.key(i);\n                if (k.startsWith(kvinfo.prefix)) {\n                  sz += k.length;\n                  sz += s.getItem(k).length;\n                }\n              }\n            });\n            return sz * 2;\n          };\n        }\n\n        capi.sqlite3_db_config = function (pDb, op, ...args) {\n          if (!this.s) {\n            this.s = wasm.xWrap('sqlite3__wasm_db_config_s', 'int', [\n              'sqlite3*',\n              'int',\n              'string:static',\n            ]);\n            this.pii = wasm.xWrap('sqlite3__wasm_db_config_pii', 'int', [\n              'sqlite3*',\n              'int',\n              '*',\n              'int',\n              'int',\n            ]);\n            this.ip = wasm.xWrap('sqlite3__wasm_db_config_ip', 'int', [\n              'sqlite3*',\n              'int',\n              'int',\n              '*',\n            ]);\n          }\n          switch (op) {\n            case capi.SQLITE_DBCONFIG_ENABLE_FKEY:\n            case capi.SQLITE_DBCONFIG_ENABLE_TRIGGER:\n            case capi.SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER:\n            case capi.SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION:\n            case capi.SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE:\n            case capi.SQLITE_DBCONFIG_ENABLE_QPSG:\n            case capi.SQLITE_DBCONFIG_TRIGGER_EQP:\n            case capi.SQLITE_DBCONFIG_RESET_DATABASE:\n            case capi.SQLITE_DBCONFIG_DEFENSIVE:\n            case capi.SQLITE_DBCONFIG_WRITABLE_SCHEMA:\n            case capi.SQLITE_DBCONFIG_LEGACY_ALTER_TABLE:\n            case capi.SQLITE_DBCONFIG_DQS_DML:\n            case capi.SQLITE_DBCONFIG_DQS_DDL:\n            case capi.SQLITE_DBCONFIG_ENABLE_VIEW:\n            case capi.SQLITE_DBCONFIG_LEGACY_FILE_FORMAT:\n            case capi.SQLITE_DBCONFIG_TRUSTED_SCHEMA:\n            case capi.SQLITE_DBCONFIG_STMT_SCANSTATUS:\n            case capi.SQLITE_DBCONFIG_REVERSE_SCANORDER:\n              return this.ip(pDb, op, args[0], args[1] || 0);\n            case capi.SQLITE_DBCONFIG_LOOKASIDE:\n              return this.pii(pDb, op, args[0], args[1], args[2]);\n            case capi.SQLITE_DBCONFIG_MAINDBNAME:\n              return this.s(pDb, op, args[0]);\n            default:\n              return capi.SQLITE_MISUSE;\n          }\n        }.bind(Object.create(null));\n\n        capi.sqlite3_value_to_js = function (\n          pVal,\n          throwIfCannotConvert = true,\n        ) {\n          let arg;\n          const valType = capi.sqlite3_value_type(pVal);\n          switch (valType) {\n            case capi.SQLITE_INTEGER:\n              if (wasm.bigIntEnabled) {\n                arg = capi.sqlite3_value_int64(pVal);\n                if (util.bigIntFitsDouble(arg)) arg = Number(arg);\n              } else arg = capi.sqlite3_value_double(pVal);\n              break;\n            case capi.SQLITE_FLOAT:\n              arg = capi.sqlite3_value_double(pVal);\n              break;\n            case capi.SQLITE_TEXT:\n              arg = capi.sqlite3_value_text(pVal);\n              break;\n            case capi.SQLITE_BLOB: {\n              const n = capi.sqlite3_value_bytes(pVal);\n              const pBlob = capi.sqlite3_value_blob(pVal);\n              if (n && !pBlob)\n                sqlite3.WasmAllocError.toss(\n                  'Cannot allocate memory for blob argument of',\n                  n,\n                  'byte(s)',\n                );\n              arg = n ? wasm.heap8u().slice(pBlob, pBlob + Number(n)) : null;\n              break;\n            }\n            case capi.SQLITE_NULL:\n              arg = null;\n              break;\n            default:\n              if (throwIfCannotConvert) {\n                toss3(\n                  capi.SQLITE_MISMATCH,\n                  'Unhandled sqlite3_value_type():',\n                  valType,\n                );\n              }\n              arg = undefined;\n          }\n          return arg;\n        };\n\n        capi.sqlite3_values_to_js = function (\n          argc,\n          pArgv,\n          throwIfCannotConvert = true,\n        ) {\n          let i;\n          const tgt = [];\n          for (i = 0; i < argc; ++i) {\n            tgt.push(\n              capi.sqlite3_value_to_js(\n                wasm.peekPtr(pArgv + wasm.ptrSizeof * i),\n                throwIfCannotConvert,\n              ),\n            );\n          }\n          return tgt;\n        };\n\n        capi.sqlite3_result_error_js = function (pCtx, e) {\n          if (e instanceof WasmAllocError) {\n            capi.sqlite3_result_error_nomem(pCtx);\n          } else {\n            capi.sqlite3_result_error(pCtx, '' + e, -1);\n          }\n        };\n\n        capi.sqlite3_result_js = function (pCtx, val) {\n          if (val instanceof Error) {\n            capi.sqlite3_result_error_js(pCtx, val);\n            return;\n          }\n          try {\n            switch (typeof val) {\n              case 'undefined':\n                break;\n              case 'boolean':\n                capi.sqlite3_result_int(pCtx, val ? 1 : 0);\n                break;\n              case 'bigint':\n                if (util.bigIntFits32(val)) {\n                  capi.sqlite3_result_int(pCtx, Number(val));\n                } else if (util.bigIntFitsDouble(val)) {\n                  capi.sqlite3_result_double(pCtx, Number(val));\n                } else if (wasm.bigIntEnabled) {\n                  if (util.bigIntFits64(val))\n                    capi.sqlite3_result_int64(pCtx, val);\n                  else\n                    toss3(\n                      'BigInt value',\n                      val.toString(),\n                      'is too BigInt for int64.',\n                    );\n                } else {\n                  toss3('BigInt value', val.toString(), 'is too BigInt.');\n                }\n                break;\n              case 'number': {\n                let f;\n                if (util.isInt32(val)) {\n                  f = capi.sqlite3_result_int;\n                } else if (\n                  wasm.bigIntEnabled &&\n                  Number.isInteger(val) &&\n                  util.bigIntFits64(BigInt(val))\n                ) {\n                  f = capi.sqlite3_result_int64;\n                } else {\n                  f = capi.sqlite3_result_double;\n                }\n                f(pCtx, val);\n                break;\n              }\n              case 'string': {\n                const [p, n] = wasm.allocCString(val, true);\n                capi.sqlite3_result_text(pCtx, p, n, capi.SQLITE_WASM_DEALLOC);\n                break;\n              }\n              case 'object':\n                if (null === val) {\n                  capi.sqlite3_result_null(pCtx);\n                  break;\n                } else if (util.isBindableTypedArray(val)) {\n                  const pBlob = wasm.allocFromTypedArray(val);\n                  capi.sqlite3_result_blob(\n                    pCtx,\n                    pBlob,\n                    val.byteLength,\n                    capi.SQLITE_WASM_DEALLOC,\n                  );\n                  break;\n                }\n\n              default:\n                toss3(\n                  \"Don't not how to handle this UDF result value:\",\n                  typeof val,\n                  val,\n                );\n            }\n          } catch (e) {\n            capi.sqlite3_result_error_js(pCtx, e);\n          }\n        };\n\n        capi.sqlite3_column_js = function (\n          pStmt,\n          iCol,\n          throwIfCannotConvert = true,\n        ) {\n          const v = capi.sqlite3_column_value(pStmt, iCol);\n          return 0 === v\n            ? undefined\n            : capi.sqlite3_value_to_js(v, throwIfCannotConvert);\n        };\n\n        const __newOldValue = function (pObj, iCol, impl) {\n          impl = capi[impl];\n          if (!this.ptr) this.ptr = wasm.allocPtr();\n          else wasm.pokePtr(this.ptr, 0);\n          const rc = impl(pObj, iCol, this.ptr);\n          if (rc)\n            return SQLite3Error.toss(\n              rc,\n              arguments[2] + '() failed with code ' + rc,\n            );\n          const pv = wasm.peekPtr(this.ptr);\n          return pv ? capi.sqlite3_value_to_js(pv, true) : undefined;\n        }.bind(Object.create(null));\n\n        capi.sqlite3_preupdate_new_js = (pDb, iCol) =>\n          __newOldValue(pDb, iCol, 'sqlite3_preupdate_new');\n\n        capi.sqlite3_preupdate_old_js = (pDb, iCol) =>\n          __newOldValue(pDb, iCol, 'sqlite3_preupdate_old');\n\n        capi.sqlite3changeset_new_js = (pChangesetIter, iCol) =>\n          __newOldValue(pChangesetIter, iCol, 'sqlite3changeset_new');\n\n        capi.sqlite3changeset_old_js = (pChangesetIter, iCol) =>\n          __newOldValue(pChangesetIter, iCol, 'sqlite3changeset_old');\n\n        const sqlite3 = {\n          WasmAllocError: WasmAllocError,\n          SQLite3Error: SQLite3Error,\n          capi,\n          util,\n          wasm,\n          config,\n\n          version: Object.create(null),\n\n          client: undefined,\n\n          asyncPostInit: async function ff() {\n            if (ff.isReady instanceof Promise) return ff.isReady;\n            let lia = sqlite3ApiBootstrap.initializersAsync;\n            delete sqlite3ApiBootstrap.initializersAsync;\n            const postInit = async () => {\n              if (!sqlite3.__isUnderTest) {\n                delete sqlite3.util;\n\n                delete sqlite3.StructBinder;\n              }\n              return sqlite3;\n            };\n            const catcher = (e) => {\n              config.error('an async sqlite3 initializer failed:', e);\n              throw e;\n            };\n            if (!lia || !lia.length) {\n              return (ff.isReady = postInit().catch(catcher));\n            }\n            lia = lia.map((f) => {\n              return f instanceof Function ? async (x) => f(sqlite3) : f;\n            });\n            lia.push(postInit);\n            let p = Promise.resolve(sqlite3);\n            while (lia.length) p = p.then(lia.shift());\n            return (ff.isReady = p.catch(catcher));\n          },\n\n          scriptInfo: undefined,\n        };\n        try {\n          sqlite3ApiBootstrap.initializers.forEach((f) => {\n            f(sqlite3);\n          });\n        } catch (e) {\n          console.error('sqlite3 bootstrap initializer threw:', e);\n          throw e;\n        }\n        delete sqlite3ApiBootstrap.initializers;\n        sqlite3ApiBootstrap.sqlite3 = sqlite3;\n        return sqlite3;\n      };\n\n      globalThis.sqlite3ApiBootstrap.initializers = [];\n\n      globalThis.sqlite3ApiBootstrap.initializersAsync = [];\n\n      globalThis.sqlite3ApiBootstrap.defaultConfig = Object.create(null);\n\n      globalThis.sqlite3ApiBootstrap.sqlite3 = undefined;\n\n      globalThis.WhWasmUtilInstaller = function (target) {\n        'use strict';\n        if (undefined === target.bigIntEnabled) {\n          target.bigIntEnabled = !!globalThis['BigInt64Array'];\n        }\n\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n\n        if (!target.exports) {\n          Object.defineProperty(target, 'exports', {\n            enumerable: true,\n            configurable: true,\n            get: () => target.instance && target.instance.exports,\n          });\n        }\n\n        const ptrIR = target.pointerIR || 'i32';\n        const ptrSizeof = (target.ptrSizeof =\n          'i32' === ptrIR\n            ? 4\n            : 'i64' === ptrIR\n              ? 8\n              : toss('Unhandled ptrSizeof:', ptrIR));\n\n        const cache = Object.create(null);\n\n        cache.heapSize = 0;\n\n        cache.memory = null;\n\n        cache.freeFuncIndexes = [];\n\n        cache.scopedAlloc = [];\n\n        cache.utf8Decoder = new TextDecoder();\n        cache.utf8Encoder = new TextEncoder('utf-8');\n\n        target.sizeofIR = (n) => {\n          switch (n) {\n            case 'i8':\n              return 1;\n            case 'i16':\n              return 2;\n            case 'i32':\n            case 'f32':\n            case 'float':\n              return 4;\n            case 'i64':\n            case 'f64':\n            case 'double':\n              return 8;\n            case '*':\n              return ptrSizeof;\n            default:\n              return ('' + n).endsWith('*') ? ptrSizeof : undefined;\n          }\n        };\n\n        const heapWrappers = function () {\n          if (!cache.memory) {\n            cache.memory =\n              target.memory instanceof WebAssembly.Memory\n                ? target.memory\n                : target.exports.memory;\n          } else if (cache.heapSize === cache.memory.buffer.byteLength) {\n            return cache;\n          }\n\n          const b = cache.memory.buffer;\n          cache.HEAP8 = new Int8Array(b);\n          cache.HEAP8U = new Uint8Array(b);\n          cache.HEAP16 = new Int16Array(b);\n          cache.HEAP16U = new Uint16Array(b);\n          cache.HEAP32 = new Int32Array(b);\n          cache.HEAP32U = new Uint32Array(b);\n          if (target.bigIntEnabled) {\n            cache.HEAP64 = new BigInt64Array(b);\n            cache.HEAP64U = new BigUint64Array(b);\n          }\n          cache.HEAP32F = new Float32Array(b);\n          cache.HEAP64F = new Float64Array(b);\n          cache.heapSize = b.byteLength;\n          return cache;\n        };\n\n        target.heap8 = () => heapWrappers().HEAP8;\n\n        target.heap8u = () => heapWrappers().HEAP8U;\n\n        target.heap16 = () => heapWrappers().HEAP16;\n\n        target.heap16u = () => heapWrappers().HEAP16U;\n\n        target.heap32 = () => heapWrappers().HEAP32;\n\n        target.heap32u = () => heapWrappers().HEAP32U;\n\n        target.heapForSize = function (n, unsigned = true) {\n          let ctor;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          switch (n) {\n            case Int8Array:\n              return c.HEAP8;\n            case Uint8Array:\n              return c.HEAP8U;\n            case Int16Array:\n              return c.HEAP16;\n            case Uint16Array:\n              return c.HEAP16U;\n            case Int32Array:\n              return c.HEAP32;\n            case Uint32Array:\n              return c.HEAP32U;\n            case 8:\n              return unsigned ? c.HEAP8U : c.HEAP8;\n            case 16:\n              return unsigned ? c.HEAP16U : c.HEAP16;\n            case 32:\n              return unsigned ? c.HEAP32U : c.HEAP32;\n            case 64:\n              if (c.HEAP64) return unsigned ? c.HEAP64U : c.HEAP64;\n              break;\n            default:\n              if (target.bigIntEnabled) {\n                if (n === globalThis['BigUint64Array']) return c.HEAP64U;\n                else if (n === globalThis['BigInt64Array']) return c.HEAP64;\n                break;\n              }\n          }\n          toss(\n            'Invalid heapForSize() size: expecting 8, 16, 32,',\n            'or (if BigInt is enabled) 64.',\n          );\n        };\n\n        target.functionTable = function () {\n          return target.exports.__indirect_function_table;\n        };\n\n        target.functionEntry = function (fptr) {\n          const ft = target.functionTable();\n          return fptr < ft.length ? ft.get(fptr) : undefined;\n        };\n\n        target.jsFuncToWasm = function f(func, sig) {\n          if (!f._) {\n            f._ = {\n              sigTypes: Object.assign(Object.create(null), {\n                i: 'i32',\n                p: 'i32',\n                P: 'i32',\n                s: 'i32',\n                j: 'i64',\n                f: 'f32',\n                d: 'f64',\n              }),\n\n              typeCodes: Object.assign(Object.create(null), {\n                f64: 0x7c,\n                f32: 0x7d,\n                i64: 0x7e,\n                i32: 0x7f,\n              }),\n\n              uleb128Encode: function (tgt, method, n) {\n                if (n < 128) tgt[method](n);\n                else tgt[method](n % 128 | 128, n >> 7);\n              },\n\n              rxJSig: /^(\\w)\\((\\w*)\\)$/,\n\n              sigParams: function (sig) {\n                const m = f._.rxJSig.exec(sig);\n                return m ? m[2] : sig.substr(1);\n              },\n\n              letterType: (x) =>\n                f._.sigTypes[x] || toss('Invalid signature letter:', x),\n\n              pushSigType: (dest, letter) =>\n                dest.push(f._.typeCodes[f._.letterType(letter)]),\n            };\n          }\n          if ('string' === typeof func) {\n            const x = sig;\n            sig = func;\n            func = x;\n          }\n          const sigParams = f._.sigParams(sig);\n          const wasmCode = [0x01, 0x60];\n          f._.uleb128Encode(wasmCode, 'push', sigParams.length);\n          for (const x of sigParams) f._.pushSigType(wasmCode, x);\n          if ('v' === sig[0]) wasmCode.push(0);\n          else {\n            wasmCode.push(1);\n            f._.pushSigType(wasmCode, sig[0]);\n          }\n          f._.uleb128Encode(wasmCode, 'unshift', wasmCode.length);\n          wasmCode.unshift(\n            0x00,\n            0x61,\n            0x73,\n            0x6d,\n            0x01,\n            0x00,\n            0x00,\n            0x00,\n            0x01,\n          );\n          wasmCode.push(\n            0x02,\n            0x07,\n\n            0x01,\n            0x01,\n            0x65,\n            0x01,\n            0x66,\n            0x00,\n            0x00,\n            0x07,\n            0x05,\n\n            0x01,\n            0x01,\n            0x66,\n            0x00,\n            0x00,\n          );\n          return new WebAssembly.Instance(\n            new WebAssembly.Module(new Uint8Array(wasmCode)),\n            {\n              e: { f: func },\n            },\n          ).exports['f'];\n        };\n\n        const __installFunction = function f(func, sig, scoped) {\n          if (scoped && !cache.scopedAlloc.length) {\n            toss('No scopedAllocPush() scope is active.');\n          }\n          if ('string' === typeof func) {\n            const x = sig;\n            sig = func;\n            func = x;\n          }\n          if ('string' !== typeof sig || !(func instanceof Function)) {\n            toss(\n              'Invalid arguments: expecting (function,signature) ' +\n                'or (signature,function).',\n            );\n          }\n          const ft = target.functionTable();\n          const oldLen = ft.length;\n          let ptr;\n          while (cache.freeFuncIndexes.length) {\n            ptr = cache.freeFuncIndexes.pop();\n            if (ft.get(ptr)) {\n              ptr = null;\n              continue;\n            } else {\n              break;\n            }\n          }\n          if (!ptr) {\n            ptr = oldLen;\n            ft.grow(1);\n          }\n          try {\n            ft.set(ptr, func);\n            if (scoped) {\n              cache.scopedAlloc[cache.scopedAlloc.length - 1].push(ptr);\n            }\n            return ptr;\n          } catch (e) {\n            if (!(e instanceof TypeError)) {\n              if (ptr === oldLen) cache.freeFuncIndexes.push(oldLen);\n              throw e;\n            }\n          }\n\n          try {\n            const fptr = target.jsFuncToWasm(func, sig);\n            ft.set(ptr, fptr);\n            if (scoped) {\n              cache.scopedAlloc[cache.scopedAlloc.length - 1].push(ptr);\n            }\n          } catch (e) {\n            if (ptr === oldLen) cache.freeFuncIndexes.push(oldLen);\n            throw e;\n          }\n          return ptr;\n        };\n\n        target.installFunction = (func, sig) =>\n          __installFunction(func, sig, false);\n\n        target.scopedInstallFunction = (func, sig) =>\n          __installFunction(func, sig, true);\n\n        target.uninstallFunction = function (ptr) {\n          if (!ptr && 0 !== ptr) return undefined;\n          const fi = cache.freeFuncIndexes;\n          const ft = target.functionTable();\n          fi.push(ptr);\n          const rc = ft.get(ptr);\n          ft.set(ptr, null);\n          return rc;\n        };\n\n        target.peek = function f(ptr, type = 'i8') {\n          if (type.endsWith('*')) type = ptrIR;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          const list = Array.isArray(ptr) ? [] : undefined;\n          let rc;\n          do {\n            if (list) ptr = arguments[0].shift();\n            switch (type) {\n              case 'i1':\n              case 'i8':\n                rc = c.HEAP8[ptr >> 0];\n                break;\n              case 'i16':\n                rc = c.HEAP16[ptr >> 1];\n                break;\n              case 'i32':\n                rc = c.HEAP32[ptr >> 2];\n                break;\n              case 'float':\n              case 'f32':\n                rc = c.HEAP32F[ptr >> 2];\n                break;\n              case 'double':\n              case 'f64':\n                rc = Number(c.HEAP64F[ptr >> 3]);\n                break;\n              case 'i64':\n                if (target.bigIntEnabled) {\n                  rc = BigInt(c.HEAP64[ptr >> 3]);\n                  break;\n                }\n\n              default:\n                toss('Invalid type for peek():', type);\n            }\n            if (list) list.push(rc);\n          } while (list && arguments[0].length);\n          return list || rc;\n        };\n\n        target.poke = function (ptr, value, type = 'i8') {\n          if (type.endsWith('*')) type = ptrIR;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          for (const p of Array.isArray(ptr) ? ptr : [ptr]) {\n            switch (type) {\n              case 'i1':\n              case 'i8':\n                c.HEAP8[p >> 0] = value;\n                continue;\n              case 'i16':\n                c.HEAP16[p >> 1] = value;\n                continue;\n              case 'i32':\n                c.HEAP32[p >> 2] = value;\n                continue;\n              case 'float':\n              case 'f32':\n                c.HEAP32F[p >> 2] = value;\n                continue;\n              case 'double':\n              case 'f64':\n                c.HEAP64F[p >> 3] = value;\n                continue;\n              case 'i64':\n                if (c.HEAP64) {\n                  c.HEAP64[p >> 3] = BigInt(value);\n                  continue;\n                }\n\n              default:\n                toss('Invalid type for poke(): ' + type);\n            }\n          }\n          return this;\n        };\n\n        target.peekPtr = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, ptrIR);\n\n        target.pokePtr = (ptr, value = 0) => target.poke(ptr, value, ptrIR);\n\n        target.peek8 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i8');\n\n        target.poke8 = (ptr, value) => target.poke(ptr, value, 'i8');\n\n        target.peek16 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i16');\n\n        target.poke16 = (ptr, value) => target.poke(ptr, value, 'i16');\n\n        target.peek32 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i32');\n\n        target.poke32 = (ptr, value) => target.poke(ptr, value, 'i32');\n\n        target.peek64 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i64');\n\n        target.poke64 = (ptr, value) => target.poke(ptr, value, 'i64');\n\n        target.peek32f = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'f32');\n\n        target.poke32f = (ptr, value) => target.poke(ptr, value, 'f32');\n\n        target.peek64f = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'f64');\n\n        target.poke64f = (ptr, value) => target.poke(ptr, value, 'f64');\n\n        target.getMemValue = target.peek;\n\n        target.getPtrValue = target.peekPtr;\n\n        target.setMemValue = target.poke;\n\n        target.setPtrValue = target.pokePtr;\n\n        target.isPtr32 = (ptr) =>\n          'number' === typeof ptr && ptr === (ptr | 0) && ptr >= 0;\n\n        target.isPtr = target.isPtr32;\n\n        target.cstrlen = function (ptr) {\n          if (!ptr || !target.isPtr(ptr)) return null;\n          const h = heapWrappers().HEAP8U;\n          let pos = ptr;\n          for (; h[pos] !== 0; ++pos) {}\n          return pos - ptr;\n        };\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n        const __utf8Decode = function (arrayBuffer, begin, end) {\n          return cache.utf8Decoder.decode(\n            arrayBuffer.buffer instanceof __SAB\n              ? arrayBuffer.slice(begin, end)\n              : arrayBuffer.subarray(begin, end),\n          );\n        };\n\n        target.cstrToJs = function (ptr) {\n          const n = target.cstrlen(ptr);\n          return n\n            ? __utf8Decode(heapWrappers().HEAP8U, ptr, ptr + n)\n            : null === n\n              ? n\n              : '';\n        };\n\n        target.jstrlen = function (str) {\n          if ('string' !== typeof str) return null;\n          const n = str.length;\n          let len = 0;\n          for (let i = 0; i < n; ++i) {\n            let u = str.charCodeAt(i);\n            if (u >= 0xd800 && u <= 0xdfff) {\n              u =\n                (0x10000 + ((u & 0x3ff) << 10)) | (str.charCodeAt(++i) & 0x3ff);\n            }\n            if (u <= 0x7f) ++len;\n            else if (u <= 0x7ff) len += 2;\n            else if (u <= 0xffff) len += 3;\n            else len += 4;\n          }\n          return len;\n        };\n\n        target.jstrcpy = function (\n          jstr,\n          tgt,\n          offset = 0,\n          maxBytes = -1,\n          addNul = true,\n        ) {\n          if (\n            !tgt ||\n            (!(tgt instanceof Int8Array) && !(tgt instanceof Uint8Array))\n          ) {\n            toss('jstrcpy() target must be an Int8Array or Uint8Array.');\n          }\n          if (maxBytes < 0) maxBytes = tgt.length - offset;\n          if (!(maxBytes > 0) || !(offset >= 0)) return 0;\n          let i = 0,\n            max = jstr.length;\n          const begin = offset,\n            end = offset + maxBytes - (addNul ? 1 : 0);\n          for (; i < max && offset < end; ++i) {\n            let u = jstr.charCodeAt(i);\n            if (u >= 0xd800 && u <= 0xdfff) {\n              u =\n                (0x10000 + ((u & 0x3ff) << 10)) |\n                (jstr.charCodeAt(++i) & 0x3ff);\n            }\n            if (u <= 0x7f) {\n              if (offset >= end) break;\n              tgt[offset++] = u;\n            } else if (u <= 0x7ff) {\n              if (offset + 1 >= end) break;\n              tgt[offset++] = 0xc0 | (u >> 6);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            } else if (u <= 0xffff) {\n              if (offset + 2 >= end) break;\n              tgt[offset++] = 0xe0 | (u >> 12);\n              tgt[offset++] = 0x80 | ((u >> 6) & 0x3f);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            } else {\n              if (offset + 3 >= end) break;\n              tgt[offset++] = 0xf0 | (u >> 18);\n              tgt[offset++] = 0x80 | ((u >> 12) & 0x3f);\n              tgt[offset++] = 0x80 | ((u >> 6) & 0x3f);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            }\n          }\n          if (addNul) tgt[offset++] = 0;\n          return offset - begin;\n        };\n\n        target.cstrncpy = function (tgtPtr, srcPtr, n) {\n          if (!tgtPtr || !srcPtr)\n            toss('cstrncpy() does not accept NULL strings.');\n          if (n < 0) n = target.cstrlen(strPtr) + 1;\n          else if (!(n > 0)) return 0;\n          const heap = target.heap8u();\n          let i = 0,\n            ch;\n          for (; i < n && (ch = heap[srcPtr + i]); ++i) {\n            heap[tgtPtr + i] = ch;\n          }\n          if (i < n) heap[tgtPtr + i++] = 0;\n          return i;\n        };\n\n        target.jstrToUintArray = (str, addNul = false) => {\n          return cache.utf8Encoder.encode(addNul ? str + '\\0' : str);\n        };\n\n        const __affirmAlloc = (obj, funcName) => {\n          if (\n            !(obj.alloc instanceof Function) ||\n            !(obj.dealloc instanceof Function)\n          ) {\n            toss(\n              'Object is missing alloc() and/or dealloc() function(s)',\n              'required by',\n              funcName + '().',\n            );\n          }\n        };\n\n        const __allocCStr = function (\n          jstr,\n          returnWithLength,\n          allocator,\n          funcName,\n        ) {\n          __affirmAlloc(target, funcName);\n          if ('string' !== typeof jstr) return null;\n          if (0) {\n            const n = target.jstrlen(jstr),\n              ptr = allocator(n + 1);\n            target.jstrcpy(jstr, target.heap8u(), ptr, n + 1, true);\n            return returnWithLength ? [ptr, n] : ptr;\n          } else {\n            const u = cache.utf8Encoder.encode(jstr),\n              ptr = allocator(u.length + 1),\n              heap = heapWrappers().HEAP8U;\n            heap.set(u, ptr);\n            heap[ptr + u.length] = 0;\n            return returnWithLength ? [ptr, u.length] : ptr;\n          }\n        };\n\n        target.allocCString = (jstr, returnWithLength = false) =>\n          __allocCStr(jstr, returnWithLength, target.alloc, 'allocCString()');\n\n        target.scopedAllocPush = function () {\n          __affirmAlloc(target, 'scopedAllocPush');\n          const a = [];\n          cache.scopedAlloc.push(a);\n          return a;\n        };\n\n        target.scopedAllocPop = function (state) {\n          __affirmAlloc(target, 'scopedAllocPop');\n          const n = arguments.length\n            ? cache.scopedAlloc.indexOf(state)\n            : cache.scopedAlloc.length - 1;\n          if (n < 0) toss('Invalid state object for scopedAllocPop().');\n          if (0 === arguments.length) state = cache.scopedAlloc[n];\n          cache.scopedAlloc.splice(n, 1);\n          for (let p; (p = state.pop()); ) {\n            if (target.functionEntry(p)) {\n              target.uninstallFunction(p);\n            } else target.dealloc(p);\n          }\n        };\n\n        target.scopedAlloc = function (n) {\n          if (!cache.scopedAlloc.length) {\n            toss('No scopedAllocPush() scope is active.');\n          }\n          const p = target.alloc(n);\n          cache.scopedAlloc[cache.scopedAlloc.length - 1].push(p);\n          return p;\n        };\n\n        Object.defineProperty(target.scopedAlloc, 'level', {\n          configurable: false,\n          enumerable: false,\n          get: () => cache.scopedAlloc.length,\n          set: () => toss(\"The 'active' property is read-only.\"),\n        });\n\n        target.scopedAllocCString = (jstr, returnWithLength = false) =>\n          __allocCStr(\n            jstr,\n            returnWithLength,\n            target.scopedAlloc,\n            'scopedAllocCString()',\n          );\n\n        const __allocMainArgv = function (isScoped, list) {\n          const pList = target[isScoped ? 'scopedAlloc' : 'alloc'](\n            (list.length + 1) * target.ptrSizeof,\n          );\n          let i = 0;\n          list.forEach((e) => {\n            target.pokePtr(\n              pList + target.ptrSizeof * i++,\n              target[isScoped ? 'scopedAllocCString' : 'allocCString']('' + e),\n            );\n          });\n          target.pokePtr(pList + target.ptrSizeof * i, 0);\n          return pList;\n        };\n\n        target.scopedAllocMainArgv = (list) => __allocMainArgv(true, list);\n\n        target.allocMainArgv = (list) => __allocMainArgv(false, list);\n\n        target.cArgvToJs = (argc, pArgv) => {\n          const list = [];\n          for (let i = 0; i < argc; ++i) {\n            const arg = target.peekPtr(pArgv + target.ptrSizeof * i);\n            list.push(arg ? target.cstrToJs(arg) : null);\n          }\n          return list;\n        };\n\n        target.scopedAllocCall = function (func) {\n          target.scopedAllocPush();\n          try {\n            return func();\n          } finally {\n            target.scopedAllocPop();\n          }\n        };\n\n        const __allocPtr = function (howMany, safePtrSize, method) {\n          __affirmAlloc(target, method);\n          const pIr = safePtrSize ? 'i64' : ptrIR;\n          let m = target[method](howMany * (safePtrSize ? 8 : ptrSizeof));\n          target.poke(m, 0, pIr);\n          if (1 === howMany) {\n            return m;\n          }\n          const a = [m];\n          for (let i = 1; i < howMany; ++i) {\n            m += safePtrSize ? 8 : ptrSizeof;\n            a[i] = m;\n            target.poke(m, 0, pIr);\n          }\n          return a;\n        };\n\n        target.allocPtr = (howMany = 1, safePtrSize = true) =>\n          __allocPtr(howMany, safePtrSize, 'alloc');\n\n        target.scopedAllocPtr = (howMany = 1, safePtrSize = true) =>\n          __allocPtr(howMany, safePtrSize, 'scopedAlloc');\n\n        target.xGet = function (name) {\n          return (\n            target.exports[name] || toss('Cannot find exported symbol:', name)\n          );\n        };\n\n        const __argcMismatch = (f, n) =>\n          toss(f + '() requires', n, 'argument(s).');\n\n        target.xCall = function (fname, ...args) {\n          const f = fname instanceof Function ? fname : target.xGet(fname);\n          if (!(f instanceof Function))\n            toss('Exported symbol', fname, 'is not a function.');\n          if (f.length !== args.length)\n            __argcMismatch(f === fname ? f.name : fname, f.length);\n          return 2 === arguments.length && Array.isArray(arguments[1])\n            ? f.apply(null, arguments[1])\n            : f.apply(null, args);\n        };\n\n        cache.xWrap = Object.create(null);\n        cache.xWrap.convert = Object.create(null);\n\n        cache.xWrap.convert.arg = new Map();\n\n        cache.xWrap.convert.result = new Map();\n        const xArg = cache.xWrap.convert.arg,\n          xResult = cache.xWrap.convert.result;\n\n        if (target.bigIntEnabled) {\n          xArg.set('i64', (i) => BigInt(i));\n        }\n        const __xArgPtr =\n          'i32' === ptrIR ? (i) => i | 0 : (i) => BigInt(i) | BigInt(0);\n        xArg\n          .set('i32', __xArgPtr)\n          .set('i16', (i) => (i | 0) & 0xffff)\n          .set('i8', (i) => (i | 0) & 0xff)\n          .set('f32', (i) => Number(i).valueOf())\n          .set('float', xArg.get('f32'))\n          .set('f64', xArg.get('f32'))\n          .set('double', xArg.get('f64'))\n          .set('int', xArg.get('i32'))\n          .set('null', (i) => i)\n          .set(null, xArg.get('null'))\n          .set('**', __xArgPtr)\n          .set('*', __xArgPtr);\n        xResult\n          .set('*', __xArgPtr)\n          .set('pointer', __xArgPtr)\n          .set('number', (v) => Number(v))\n          .set('void', (v) => undefined)\n          .set('null', (v) => v)\n          .set(null, xResult.get('null'));\n\n        {\n          const copyToResult = [\n            'i8',\n            'i16',\n            'i32',\n            'int',\n            'f32',\n            'float',\n            'f64',\n            'double',\n          ];\n          if (target.bigIntEnabled) copyToResult.push('i64');\n          const adaptPtr = xArg.get(ptrIR);\n          for (const t of copyToResult) {\n            xArg.set(t + '*', adaptPtr);\n            xResult.set(t + '*', adaptPtr);\n            xResult.set(t, xArg.get(t) || toss('Missing arg converter:', t));\n          }\n        }\n\n        const __xArgString = function (v) {\n          if ('string' === typeof v) return target.scopedAllocCString(v);\n          return v ? __xArgPtr(v) : null;\n        };\n        xArg\n          .set('string', __xArgString)\n          .set('utf8', __xArgString)\n          .set('pointer', __xArgString);\n\n        xResult\n          .set('string', (i) => target.cstrToJs(i))\n          .set('utf8', xResult.get('string'))\n          .set('string:dealloc', (i) => {\n            try {\n              return i ? target.cstrToJs(i) : null;\n            } finally {\n              target.dealloc(i);\n            }\n          })\n          .set('utf8:dealloc', xResult.get('string:dealloc'))\n          .set('json', (i) => JSON.parse(target.cstrToJs(i)))\n          .set('json:dealloc', (i) => {\n            try {\n              return i ? JSON.parse(target.cstrToJs(i)) : null;\n            } finally {\n              target.dealloc(i);\n            }\n          });\n\n        const AbstractArgAdapter = class {\n          constructor(opt) {\n            this.name = opt.name || 'unnamed adapter';\n          }\n\n          convertArg(v, argv, argIndex) {\n            toss('AbstractArgAdapter must be subclassed.');\n          }\n        };\n\n        xArg.FuncPtrAdapter = class FuncPtrAdapter extends AbstractArgAdapter {\n          constructor(opt) {\n            super(opt);\n            if (xArg.FuncPtrAdapter.warnOnUse) {\n              console.warn(\n                'xArg.FuncPtrAdapter is an internal-only API',\n                'and is not intended to be invoked from',\n                'client-level code. Invoked with:',\n                opt,\n              );\n            }\n            this.name = opt.name || 'unnamed';\n            this.signature = opt.signature;\n            if (opt.contextKey instanceof Function) {\n              this.contextKey = opt.contextKey;\n              if (!opt.bindScope) opt.bindScope = 'context';\n            }\n            this.bindScope =\n              opt.bindScope ||\n              toss(\n                'FuncPtrAdapter options requires a bindScope (explicit or implied).',\n              );\n            if (FuncPtrAdapter.bindScopes.indexOf(opt.bindScope) < 0) {\n              toss(\n                'Invalid options.bindScope (' +\n                  opt.bindMod +\n                  ') for FuncPtrAdapter. ' +\n                  'Expecting one of: (' +\n                  FuncPtrAdapter.bindScopes.join(', ') +\n                  ')',\n              );\n            }\n            this.isTransient = 'transient' === this.bindScope;\n            this.isContext = 'context' === this.bindScope;\n            this.isPermanent = 'permanent' === this.bindScope;\n            this.singleton = 'singleton' === this.bindScope ? [] : undefined;\n\n            this.callProxy =\n              opt.callProxy instanceof Function ? opt.callProxy : undefined;\n          }\n\n          contextKey(argv, argIndex) {\n            return this;\n          }\n\n          contextMap(key) {\n            const cm = this.__cmap || (this.__cmap = new Map());\n            let rc = cm.get(key);\n            if (undefined === rc) cm.set(key, (rc = []));\n            return rc;\n          }\n\n          convertArg(v, argv, argIndex) {\n            let pair = this.singleton;\n            if (!pair && this.isContext) {\n              pair = this.contextMap(this.contextKey(argv, argIndex));\n            }\n            if (pair && pair[0] === v) return pair[1];\n            if (v instanceof Function) {\n              if (this.callProxy) v = this.callProxy(v);\n              const fp = __installFunction(v, this.signature, this.isTransient);\n              if (FuncPtrAdapter.debugFuncInstall) {\n                FuncPtrAdapter.debugOut(\n                  'FuncPtrAdapter installed',\n                  this,\n                  this.contextKey(argv, argIndex),\n                  '@' + fp,\n                  v,\n                );\n              }\n              if (pair) {\n                if (pair[1]) {\n                  if (FuncPtrAdapter.debugFuncInstall) {\n                    FuncPtrAdapter.debugOut(\n                      'FuncPtrAdapter uninstalling',\n                      this,\n                      this.contextKey(argv, argIndex),\n                      '@' + pair[1],\n                      v,\n                    );\n                  }\n                  try {\n                    cache.scopedAlloc[cache.scopedAlloc.length - 1].push(\n                      pair[1],\n                    );\n                  } catch (e) {}\n                }\n                pair[0] = v;\n                pair[1] = fp;\n              }\n              return fp;\n            } else if (target.isPtr(v) || null === v || undefined === v) {\n              if (pair && pair[1] && pair[1] !== v) {\n                if (FuncPtrAdapter.debugFuncInstall) {\n                  FuncPtrAdapter.debugOut(\n                    'FuncPtrAdapter uninstalling',\n                    this,\n                    this.contextKey(argv, argIndex),\n                    '@' + pair[1],\n                    v,\n                  );\n                }\n                try {\n                  cache.scopedAlloc[cache.scopedAlloc.length - 1].push(pair[1]);\n                } catch (e) {}\n                pair[0] = pair[1] = v | 0;\n              }\n              return v || 0;\n            } else {\n              throw new TypeError(\n                'Invalid FuncPtrAdapter argument type. ' +\n                  'Expecting a function pointer or a ' +\n                  (this.name ? this.name + ' ' : '') +\n                  'function matching signature ' +\n                  this.signature +\n                  '.',\n              );\n            }\n          }\n        };\n\n        xArg.FuncPtrAdapter.warnOnUse = false;\n\n        xArg.FuncPtrAdapter.debugFuncInstall = false;\n\n        xArg.FuncPtrAdapter.debugOut = console.debug.bind(console);\n\n        xArg.FuncPtrAdapter.bindScopes = [\n          'transient',\n          'context',\n          'singleton',\n          'permanent',\n        ];\n\n        const __xArgAdapterCheck = (t) =>\n          xArg.get(t) || toss('Argument adapter not found:', t);\n\n        const __xResultAdapterCheck = (t) =>\n          xResult.get(t) || toss('Result adapter not found:', t);\n\n        cache.xWrap.convertArg = (t, ...args) => __xArgAdapterCheck(t)(...args);\n\n        cache.xWrap.convertArgNoCheck = (t, ...args) => xArg.get(t)(...args);\n\n        cache.xWrap.convertResult = (t, v) =>\n          null === t ? v : t ? __xResultAdapterCheck(t)(v) : undefined;\n\n        cache.xWrap.convertResultNoCheck = (t, v) =>\n          null === t ? v : t ? xResult.get(t)(v) : undefined;\n\n        target.xWrap = function (fArg, resultType, ...argTypes) {\n          if (3 === arguments.length && Array.isArray(arguments[2])) {\n            argTypes = arguments[2];\n          }\n          if (target.isPtr(fArg)) {\n            fArg =\n              target.functionEntry(fArg) ||\n              toss('Function pointer not found in WASM function table.');\n          }\n          const fIsFunc = fArg instanceof Function;\n          const xf = fIsFunc ? fArg : target.xGet(fArg);\n          if (fIsFunc) fArg = xf.name || 'unnamed function';\n          if (argTypes.length !== xf.length) __argcMismatch(fArg, xf.length);\n          if (null === resultType && 0 === xf.length) {\n            return xf;\n          }\n          if (undefined !== resultType && null !== resultType)\n            __xResultAdapterCheck(resultType);\n          for (const t of argTypes) {\n            if (t instanceof AbstractArgAdapter)\n              xArg.set(t, (...args) => t.convertArg(...args));\n            else __xArgAdapterCheck(t);\n          }\n          const cxw = cache.xWrap;\n          if (0 === xf.length) {\n            return (...args) =>\n              args.length\n                ? __argcMismatch(fArg, xf.length)\n                : cxw.convertResult(resultType, xf.call(null));\n          }\n          return function (...args) {\n            if (args.length !== xf.length) __argcMismatch(fArg, xf.length);\n            const scope = target.scopedAllocPush();\n            try {\n              let i = 0;\n              for (; i < args.length; ++i)\n                args[i] = cxw.convertArgNoCheck(argTypes[i], args[i], args, i);\n              return cxw.convertResultNoCheck(resultType, xf.apply(null, args));\n            } finally {\n              target.scopedAllocPop(scope);\n            }\n          };\n        };\n\n        const __xAdapter = function (\n          func,\n          argc,\n          typeName,\n          adapter,\n          modeName,\n          xcvPart,\n        ) {\n          if ('string' === typeof typeName) {\n            if (1 === argc) return xcvPart.get(typeName);\n            else if (2 === argc) {\n              if (!adapter) {\n                delete xcvPart.get(typeName);\n                return func;\n              } else if (!(adapter instanceof Function)) {\n                toss(modeName, 'requires a function argument.');\n              }\n              xcvPart.set(typeName, adapter);\n              return func;\n            }\n          }\n          toss('Invalid arguments to', modeName);\n        };\n\n        target.xWrap.resultAdapter = function f(typeName, adapter) {\n          return __xAdapter(\n            f,\n            arguments.length,\n            typeName,\n            adapter,\n            'resultAdapter()',\n            xResult,\n          );\n        };\n\n        target.xWrap.argAdapter = function f(typeName, adapter) {\n          return __xAdapter(\n            f,\n            arguments.length,\n            typeName,\n            adapter,\n            'argAdapter()',\n            xArg,\n          );\n        };\n\n        target.xWrap.FuncPtrAdapter = xArg.FuncPtrAdapter;\n\n        target.xCallWrapped = function (fArg, resultType, argTypes, ...args) {\n          if (Array.isArray(arguments[3])) args = arguments[3];\n          return target\n            .xWrap(fArg, resultType, argTypes || [])\n            .apply(null, args || []);\n        };\n\n        target.xWrap.testConvertArg = cache.xWrap.convertArg;\n\n        target.xWrap.testConvertResult = cache.xWrap.convertResult;\n\n        return target;\n      };\n\n      globalThis.WhWasmUtilInstaller.yawl = function (config) {\n        const wfetch = () => fetch(config.uri, { credentials: 'same-origin' });\n        const wui = this;\n        const finalThen = function (arg) {\n          if (config.wasmUtilTarget) {\n            const toss = (...args) => {\n              throw new Error(args.join(' '));\n            };\n            const tgt = config.wasmUtilTarget;\n            tgt.module = arg.module;\n            tgt.instance = arg.instance;\n\n            if (!tgt.instance.exports.memory) {\n              tgt.memory =\n                (config.imports &&\n                  config.imports.env &&\n                  config.imports.env.memory) ||\n                toss(\"Missing 'memory' object!\");\n            }\n            if (!tgt.alloc && arg.instance.exports.malloc) {\n              const exports = arg.instance.exports;\n              tgt.alloc = function (n) {\n                return (\n                  exports.malloc(n) || toss('Allocation of', n, 'bytes failed.')\n                );\n              };\n              tgt.dealloc = function (m) {\n                exports.free(m);\n              };\n            }\n            wui(tgt);\n          }\n          if (config.onload) config.onload(arg, config);\n          return arg;\n        };\n        const loadWasm = WebAssembly.instantiateStreaming\n          ? function loadWasmStreaming() {\n              return WebAssembly.instantiateStreaming(\n                wfetch(),\n                config.imports || {},\n              ).then(finalThen);\n            }\n          : function loadWasmOldSchool() {\n              return wfetch()\n                .then((response) => response.arrayBuffer())\n                .then((bytes) =>\n                  WebAssembly.instantiate(bytes, config.imports || {}),\n                )\n                .then(finalThen);\n            };\n        return loadWasm;\n      }.bind(globalThis.WhWasmUtilInstaller);\n\n      ('use strict');\n      globalThis.Jaccwabyt = function StructBinderFactory(config) {\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n\n        if (\n          !(config.heap instanceof WebAssembly.Memory) &&\n          !(config.heap instanceof Function)\n        ) {\n          toss(\n            'config.heap must be WebAssembly.Memory instance or a function.',\n          );\n        }\n        ['alloc', 'dealloc'].forEach(function (k) {\n          config[k] instanceof Function ||\n            toss(\"Config option '\" + k + \"' must be a function.\");\n        });\n        const SBF = StructBinderFactory;\n        const heap =\n            config.heap instanceof Function\n              ? config.heap\n              : () => new Uint8Array(config.heap.buffer),\n          alloc = config.alloc,\n          dealloc = config.dealloc,\n          log = config.log || console.log.bind(console),\n          memberPrefix = config.memberPrefix || '',\n          memberSuffix = config.memberSuffix || '',\n          bigIntEnabled =\n            undefined === config.bigIntEnabled\n              ? !!globalThis['BigInt64Array']\n              : !!config.bigIntEnabled,\n          BigInt = globalThis['BigInt'],\n          BigInt64Array = globalThis['BigInt64Array'],\n          ptrSizeof = config.ptrSizeof || 4,\n          ptrIR = config.ptrIR || 'i32';\n        if (!SBF.debugFlags) {\n          SBF.__makeDebugFlags = function (deriveFrom = null) {\n            if (deriveFrom && deriveFrom.__flags)\n              deriveFrom = deriveFrom.__flags;\n            const f = function f(flags) {\n              if (0 === arguments.length) {\n                return f.__flags;\n              }\n              if (flags < 0) {\n                delete f.__flags.getter;\n                delete f.__flags.setter;\n                delete f.__flags.alloc;\n                delete f.__flags.dealloc;\n              } else {\n                f.__flags.getter = 0 !== (0x01 & flags);\n                f.__flags.setter = 0 !== (0x02 & flags);\n                f.__flags.alloc = 0 !== (0x04 & flags);\n                f.__flags.dealloc = 0 !== (0x08 & flags);\n              }\n              return f._flags;\n            };\n            Object.defineProperty(f, '__flags', {\n              iterable: false,\n              writable: false,\n              value: Object.create(deriveFrom),\n            });\n            if (!deriveFrom) f(0);\n            return f;\n          };\n          SBF.debugFlags = SBF.__makeDebugFlags();\n        }\n\n        const isLittleEndian = (function () {\n          const buffer = new ArrayBuffer(2);\n          new DataView(buffer).setInt16(0, 256, true);\n\n          return new Int16Array(buffer)[0] === 256;\n        })();\n\n        const isFuncSig = (s) => '(' === s[1];\n\n        const isPtrSig = (s) => 'p' === s || 'P' === s;\n        const isAutoPtrSig = (s) => 'P' === s;\n        const sigLetter = (s) => (isFuncSig(s) ? 'p' : s[0]);\n\n        const sigIR = function (s) {\n          switch (sigLetter(s)) {\n            case 'c':\n            case 'C':\n              return 'i8';\n            case 'i':\n              return 'i32';\n            case 'p':\n            case 'P':\n            case 's':\n              return ptrIR;\n            case 'j':\n              return 'i64';\n            case 'f':\n              return 'float';\n            case 'd':\n              return 'double';\n          }\n          toss('Unhandled signature IR:', s);\n        };\n\n        const affirmBigIntArray = BigInt64Array\n          ? () => true\n          : () => toss('BigInt64Array is not available.');\n\n        const sigDVGetter = function (s) {\n          switch (sigLetter(s)) {\n            case 'p':\n            case 'P':\n            case 's': {\n              switch (ptrSizeof) {\n                case 4:\n                  return 'getInt32';\n                case 8:\n                  return affirmBigIntArray() && 'getBigInt64';\n              }\n              break;\n            }\n            case 'i':\n              return 'getInt32';\n            case 'c':\n              return 'getInt8';\n            case 'C':\n              return 'getUint8';\n            case 'j':\n              return affirmBigIntArray() && 'getBigInt64';\n            case 'f':\n              return 'getFloat32';\n            case 'd':\n              return 'getFloat64';\n          }\n          toss('Unhandled DataView getter for signature:', s);\n        };\n\n        const sigDVSetter = function (s) {\n          switch (sigLetter(s)) {\n            case 'p':\n            case 'P':\n            case 's': {\n              switch (ptrSizeof) {\n                case 4:\n                  return 'setInt32';\n                case 8:\n                  return affirmBigIntArray() && 'setBigInt64';\n              }\n              break;\n            }\n            case 'i':\n              return 'setInt32';\n            case 'c':\n              return 'setInt8';\n            case 'C':\n              return 'setUint8';\n            case 'j':\n              return affirmBigIntArray() && 'setBigInt64';\n            case 'f':\n              return 'setFloat32';\n            case 'd':\n              return 'setFloat64';\n          }\n          toss('Unhandled DataView setter for signature:', s);\n        };\n\n        const sigDVSetWrapper = function (s) {\n          switch (sigLetter(s)) {\n            case 'i':\n            case 'f':\n            case 'c':\n            case 'C':\n            case 'd':\n              return Number;\n            case 'j':\n              return affirmBigIntArray() && BigInt;\n            case 'p':\n            case 'P':\n            case 's':\n              switch (ptrSizeof) {\n                case 4:\n                  return Number;\n                case 8:\n                  return affirmBigIntArray() && BigInt;\n              }\n              break;\n          }\n          toss('Unhandled DataView set wrapper for signature:', s);\n        };\n\n        const sPropName = (s, k) => s + '::' + k;\n\n        const __propThrowOnSet = function (structName, propName) {\n          return () => toss(sPropName(structName, propName), 'is read-only.');\n        };\n\n        const __instancePointerMap = new WeakMap();\n\n        const xPtrPropName = '(pointer-is-external)';\n\n        const __freeStruct = function (ctor, obj, m) {\n          if (!m) m = __instancePointerMap.get(obj);\n          if (m) {\n            __instancePointerMap.delete(obj);\n            if (Array.isArray(obj.ondispose)) {\n              let x;\n              while ((x = obj.ondispose.shift())) {\n                try {\n                  if (x instanceof Function) x.call(obj);\n                  else if (x instanceof StructType) x.dispose();\n                  else if ('number' === typeof x) dealloc(x);\n                } catch (e) {\n                  console.warn(\n                    'ondispose() for',\n                    ctor.structName,\n                    '@',\n                    m,\n                    'threw. NOT propagating it.',\n                    e,\n                  );\n                }\n              }\n            } else if (obj.ondispose instanceof Function) {\n              try {\n                obj.ondispose();\n              } catch (e) {\n                console.warn(\n                  'ondispose() for',\n                  ctor.structName,\n                  '@',\n                  m,\n                  'threw. NOT propagating it.',\n                  e,\n                );\n              }\n            }\n            delete obj.ondispose;\n            if (ctor.debugFlags.__flags.dealloc) {\n              log(\n                'debug.dealloc:',\n                obj[xPtrPropName] ? 'EXTERNAL' : '',\n                ctor.structName,\n                'instance:',\n                ctor.structInfo.sizeof,\n                'bytes @' + m,\n              );\n            }\n            if (!obj[xPtrPropName]) dealloc(m);\n          }\n        };\n\n        const rop = (v) => {\n          return {\n            configurable: false,\n            writable: false,\n            iterable: false,\n            value: v,\n          };\n        };\n\n        const __allocStruct = function (ctor, obj, m) {\n          let fill = !m;\n          if (m) Object.defineProperty(obj, xPtrPropName, rop(m));\n          else {\n            m = alloc(ctor.structInfo.sizeof);\n            if (!m) toss('Allocation of', ctor.structName, 'structure failed.');\n          }\n          try {\n            if (ctor.debugFlags.__flags.alloc) {\n              log(\n                'debug.alloc:',\n                fill ? '' : 'EXTERNAL',\n                ctor.structName,\n                'instance:',\n                ctor.structInfo.sizeof,\n                'bytes @' + m,\n              );\n            }\n            if (fill) heap().fill(0, m, m + ctor.structInfo.sizeof);\n            __instancePointerMap.set(obj, m);\n          } catch (e) {\n            __freeStruct(ctor, obj, m);\n            throw e;\n          }\n        };\n\n        const __memoryDump = function () {\n          const p = this.pointer;\n          return p\n            ? new Uint8Array(heap().slice(p, p + this.structInfo.sizeof))\n            : null;\n        };\n\n        const __memberKey = (k) => memberPrefix + k + memberSuffix;\n        const __memberKeyProp = rop(__memberKey);\n\n        const __lookupMember = function (\n          structInfo,\n          memberName,\n          tossIfNotFound = true,\n        ) {\n          let m = structInfo.members[memberName];\n          if (!m && (memberPrefix || memberSuffix)) {\n            for (const v of Object.values(structInfo.members)) {\n              if (v.key === memberName) {\n                m = v;\n                break;\n              }\n            }\n            if (!m && tossIfNotFound) {\n              toss(\n                sPropName(structInfo.name, memberName),\n                'is not a mapped struct member.',\n              );\n            }\n          }\n          return m;\n        };\n\n        const __memberSignature = function f(\n          obj,\n          memberName,\n          emscriptenFormat = false,\n        ) {\n          if (!f._)\n            f._ = (x) =>\n              x.replace(/[^vipPsjrdcC]/g, '').replace(/[pPscC]/g, 'i');\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          return emscriptenFormat ? f._(m.signature) : m.signature;\n        };\n\n        const __ptrPropDescriptor = {\n          configurable: false,\n          enumerable: false,\n          get: function () {\n            return __instancePointerMap.get(this);\n          },\n          set: () => toss(\"Cannot assign the 'pointer' property of a struct.\"),\n        };\n\n        const __structMemberKeys = rop(function () {\n          const a = [];\n          for (const k of Object.keys(this.structInfo.members)) {\n            a.push(this.memberKey(k));\n          }\n          return a;\n        });\n\n        const __utf8Decoder = new TextDecoder('utf-8');\n        const __utf8Encoder = new TextEncoder();\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n        const __utf8Decode = function (arrayBuffer, begin, end) {\n          return __utf8Decoder.decode(\n            arrayBuffer.buffer instanceof __SAB\n              ? arrayBuffer.slice(begin, end)\n              : arrayBuffer.subarray(begin, end),\n          );\n        };\n\n        const __memberIsString = function (\n          obj,\n          memberName,\n          tossIfNotFound = false,\n        ) {\n          const m = __lookupMember(obj.structInfo, memberName, tossIfNotFound);\n          return m && 1 === m.signature.length && 's' === m.signature[0]\n            ? m\n            : false;\n        };\n\n        const __affirmCStringSignature = function (member) {\n          if ('s' === member.signature) return;\n          toss(\n            'Invalid member type signature for C-string value:',\n            JSON.stringify(member),\n          );\n        };\n\n        const __memberToJsString = function f(obj, memberName) {\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          __affirmCStringSignature(m);\n          const addr = obj[m.key];\n\n          if (!addr) return null;\n          let pos = addr;\n          const mem = heap();\n          for (; mem[pos] !== 0; ++pos) {}\n\n          return addr === pos ? '' : __utf8Decode(mem, addr, pos);\n        };\n\n        const __addOnDispose = function (obj, ...v) {\n          if (obj.ondispose) {\n            if (!Array.isArray(obj.ondispose)) {\n              obj.ondispose = [obj.ondispose];\n            }\n          } else {\n            obj.ondispose = [];\n          }\n          obj.ondispose.push(...v);\n        };\n\n        const __allocCString = function (str) {\n          const u = __utf8Encoder.encode(str);\n          const mem = alloc(u.length + 1);\n          if (!mem) toss('Allocation error while duplicating string:', str);\n          const h = heap();\n\n          h.set(u, mem);\n          h[mem + u.length] = 0;\n\n          return mem;\n        };\n\n        const __setMemberCString = function (obj, memberName, str) {\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          __affirmCStringSignature(m);\n\n          const mem = __allocCString(str);\n          obj[m.key] = mem;\n          __addOnDispose(obj, mem);\n          return obj;\n        };\n\n        const StructType = function ctor(structName, structInfo) {\n          if (arguments[2] !== rop) {\n            toss(\n              'Do not call the StructType constructor',\n              'from client-level code.',\n            );\n          }\n          Object.defineProperties(this, {\n            structName: rop(structName),\n            structInfo: rop(structInfo),\n          });\n        };\n\n        StructType.prototype = Object.create(null, {\n          dispose: rop(function () {\n            __freeStruct(this.constructor, this);\n          }),\n          lookupMember: rop(function (memberName, tossIfNotFound = true) {\n            return __lookupMember(this.structInfo, memberName, tossIfNotFound);\n          }),\n          memberToJsString: rop(function (memberName) {\n            return __memberToJsString(this, memberName);\n          }),\n          memberIsString: rop(function (memberName, tossIfNotFound = true) {\n            return __memberIsString(this, memberName, tossIfNotFound);\n          }),\n          memberKey: __memberKeyProp,\n          memberKeys: __structMemberKeys,\n          memberSignature: rop(function (memberName, emscriptenFormat = false) {\n            return __memberSignature(this, memberName, emscriptenFormat);\n          }),\n          memoryDump: rop(__memoryDump),\n          pointer: __ptrPropDescriptor,\n          setMemberCString: rop(function (memberName, str) {\n            return __setMemberCString(this, memberName, str);\n          }),\n        });\n\n        Object.assign(StructType.prototype, {\n          addOnDispose: function (...v) {\n            __addOnDispose(this, ...v);\n            return this;\n          },\n        });\n\n        Object.defineProperties(StructType, {\n          allocCString: rop(__allocCString),\n          isA: rop((v) => v instanceof StructType),\n          hasExternalPointer: rop(\n            (v) => v instanceof StructType && !!v[xPtrPropName],\n          ),\n          memberKey: __memberKeyProp,\n        });\n\n        const isNumericValue = (v) =>\n          Number.isFinite(v) || v instanceof (BigInt || Number);\n\n        const makeMemberWrapper = function f(ctor, name, descr) {\n          if (!f._) {\n            f._ = { getters: {}, setters: {}, sw: {} };\n            const a = ['i', 'c', 'C', 'p', 'P', 's', 'f', 'd', 'v()'];\n            if (bigIntEnabled) a.push('j');\n            a.forEach(function (v) {\n              f._.getters[v] = sigDVGetter(v);\n              f._.setters[v] = sigDVSetter(v);\n              f._.sw[v] = sigDVSetWrapper(v);\n            });\n            const rxSig1 = /^[ipPsjfdcC]$/,\n              rxSig2 = /^[vipPsjfdcC]\\([ipPsjfdcC]*\\)$/;\n            f.sigCheck = function (obj, name, key, sig) {\n              if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                toss(obj.structName, 'already has a property named', key + '.');\n              }\n              rxSig1.test(sig) ||\n                rxSig2.test(sig) ||\n                toss(\n                  'Malformed signature for',\n                  sPropName(obj.structName, name) + ':',\n                  sig,\n                );\n            };\n          }\n          const key = ctor.memberKey(name);\n          f.sigCheck(ctor.prototype, name, key, descr.signature);\n          descr.key = key;\n          descr.name = name;\n          const sigGlyph = sigLetter(descr.signature);\n          const xPropName = sPropName(ctor.prototype.structName, key);\n          const dbg = ctor.prototype.debugFlags.__flags;\n\n          const prop = Object.create(null);\n          prop.configurable = false;\n          prop.enumerable = false;\n          prop.get = function () {\n            if (dbg.getter) {\n              log(\n                'debug.getter:',\n                f._.getters[sigGlyph],\n                'for',\n                sigIR(sigGlyph),\n                xPropName,\n                '@',\n                this.pointer,\n                '+',\n                descr.offset,\n                'sz',\n                descr.sizeof,\n              );\n            }\n            let rc = new DataView(\n              heap().buffer,\n              this.pointer + descr.offset,\n              descr.sizeof,\n            )[f._.getters[sigGlyph]](0, isLittleEndian);\n            if (dbg.getter) log('debug.getter:', xPropName, 'result =', rc);\n            return rc;\n          };\n          if (descr.readOnly) {\n            prop.set = __propThrowOnSet(ctor.prototype.structName, key);\n          } else {\n            prop.set = function (v) {\n              if (dbg.setter) {\n                log(\n                  'debug.setter:',\n                  f._.setters[sigGlyph],\n                  'for',\n                  sigIR(sigGlyph),\n                  xPropName,\n                  '@',\n                  this.pointer,\n                  '+',\n                  descr.offset,\n                  'sz',\n                  descr.sizeof,\n                  v,\n                );\n              }\n              if (!this.pointer) {\n                toss('Cannot set struct property on disposed instance.');\n              }\n              if (null === v) v = 0;\n              else\n                while (!isNumericValue(v)) {\n                  if (\n                    isAutoPtrSig(descr.signature) &&\n                    v instanceof StructType\n                  ) {\n                    v = v.pointer || 0;\n                    if (dbg.setter)\n                      log('debug.setter:', xPropName, 'resolved to', v);\n                    break;\n                  }\n                  toss('Invalid value for pointer-type', xPropName + '.');\n                }\n              new DataView(\n                heap().buffer,\n                this.pointer + descr.offset,\n                descr.sizeof,\n              )[f._.setters[sigGlyph]](0, f._.sw[sigGlyph](v), isLittleEndian);\n            };\n          }\n          Object.defineProperty(ctor.prototype, key, prop);\n        };\n\n        const StructBinder = function StructBinder(structName, structInfo) {\n          if (1 === arguments.length) {\n            structInfo = structName;\n            structName = structInfo.name;\n          } else if (!structInfo.name) {\n            structInfo.name = structName;\n          }\n          if (!structName) toss('Struct name is required.');\n          let lastMember = false;\n          Object.keys(structInfo.members).forEach((k) => {\n            const m = structInfo.members[k];\n            if (!m.sizeof) toss(structName, 'member', k, 'is missing sizeof.');\n            else if (m.sizeof === 1) {\n              m.signature === 'c' ||\n                m.signature === 'C' ||\n                toss(\n                  'Unexpected sizeof==1 member',\n                  sPropName(structInfo.name, k),\n                  'with signature',\n                  m.signature,\n                );\n            } else {\n              if (0 !== m.sizeof % 4) {\n                console.warn(\n                  'Invalid struct member description =',\n                  m,\n                  'from',\n                  structInfo,\n                );\n                toss(\n                  structName,\n                  'member',\n                  k,\n                  'sizeof is not aligned. sizeof=' + m.sizeof,\n                );\n              }\n              if (0 !== m.offset % 4) {\n                console.warn(\n                  'Invalid struct member description =',\n                  m,\n                  'from',\n                  structInfo,\n                );\n                toss(\n                  structName,\n                  'member',\n                  k,\n                  'offset is not aligned. offset=' + m.offset,\n                );\n              }\n            }\n            if (!lastMember || lastMember.offset < m.offset) lastMember = m;\n          });\n          if (!lastMember) toss('No member property descriptions found.');\n          else if (structInfo.sizeof < lastMember.offset + lastMember.sizeof) {\n            toss(\n              'Invalid struct config:',\n              structName,\n              'max member offset (' + lastMember.offset + ') ',\n              'extends past end of struct (sizeof=' + structInfo.sizeof + ').',\n            );\n          }\n          const debugFlags = rop(SBF.__makeDebugFlags(StructBinder.debugFlags));\n\n          const StructCtor = function StructCtor(externalMemory) {\n            if (!(this instanceof StructCtor)) {\n              toss(\n                'The',\n                structName,\n                \"constructor may only be called via 'new'.\",\n              );\n            } else if (arguments.length) {\n              if (\n                externalMemory !== (externalMemory | 0) ||\n                externalMemory <= 0\n              ) {\n                toss('Invalid pointer value for', structName, 'constructor.');\n              }\n              __allocStruct(StructCtor, this, externalMemory);\n            } else {\n              __allocStruct(StructCtor, this);\n            }\n          };\n          Object.defineProperties(StructCtor, {\n            debugFlags: debugFlags,\n            isA: rop((v) => v instanceof StructCtor),\n            memberKey: __memberKeyProp,\n            memberKeys: __structMemberKeys,\n            methodInfoForKey: rop(function (mKey) {}),\n            structInfo: rop(structInfo),\n            structName: rop(structName),\n          });\n          StructCtor.prototype = new StructType(structName, structInfo, rop);\n          Object.defineProperties(StructCtor.prototype, {\n            debugFlags: debugFlags,\n            constructor: rop(StructCtor),\n          });\n          Object.keys(structInfo.members).forEach((name) =>\n            makeMemberWrapper(StructCtor, name, structInfo.members[name]),\n          );\n          return StructCtor;\n        };\n        StructBinder.StructType = StructType;\n        StructBinder.config = config;\n        StructBinder.allocCString = __allocCString;\n        if (!StructBinder.debugFlags) {\n          StructBinder.debugFlags = SBF.__makeDebugFlags(SBF.debugFlags);\n        }\n        return StructBinder;\n      };\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        'use strict';\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n        const toss3 = sqlite3.SQLite3Error.toss;\n        const capi = sqlite3.capi,\n          wasm = sqlite3.wasm,\n          util = sqlite3.util;\n        globalThis.WhWasmUtilInstaller(wasm);\n        delete globalThis.WhWasmUtilInstaller;\n\n        if (0) {\n          const dealloc = wasm.exports[sqlite3.config.deallocExportName];\n          const nFunc = wasm.functionTable().length;\n          let i;\n          for (i = 0; i < nFunc; ++i) {\n            const e = wasm.functionEntry(i);\n            if (dealloc === e) {\n              capi.SQLITE_WASM_DEALLOC = i;\n              break;\n            }\n          }\n          if (dealloc !== wasm.functionEntry(capi.SQLITE_WASM_DEALLOC)) {\n            toss(\n              'Internal error: cannot find function pointer for SQLITE_WASM_DEALLOC.',\n            );\n          }\n        }\n\n        wasm.bindingSignatures = [\n          ['sqlite3_aggregate_context', 'void*', 'sqlite3_context*', 'int'],\n\n          ['sqlite3_bind_double', 'int', 'sqlite3_stmt*', 'int', 'f64'],\n          ['sqlite3_bind_int', 'int', 'sqlite3_stmt*', 'int', 'int'],\n          ['sqlite3_bind_null', undefined, 'sqlite3_stmt*', 'int'],\n          ['sqlite3_bind_parameter_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_bind_parameter_index', 'int', 'sqlite3_stmt*', 'string'],\n          [\n            'sqlite3_bind_pointer',\n            'int',\n            'sqlite3_stmt*',\n            'int',\n            '*',\n            'string:static',\n            '*',\n          ],\n          [\n            'sqlite3_busy_handler',\n            'int',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                signature: 'i(pi)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_busy_timeout', 'int', 'sqlite3*', 'int'],\n\n          ['sqlite3_changes', 'int', 'sqlite3*'],\n          ['sqlite3_clear_bindings', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_collation_needed', 'int', 'sqlite3*', '*', '*'],\n          ['sqlite3_column_blob', '*', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_bytes', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_column_double', 'f64', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_int', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_name', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_text', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_type', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_value', 'sqlite3_value*', 'sqlite3_stmt*', 'int'],\n          [\n            'sqlite3_commit_hook',\n            'void*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_commit_hook',\n                signature: 'i(p)',\n                contextKey: (argv) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_compileoption_get', 'string', 'int'],\n          ['sqlite3_compileoption_used', 'int', 'string'],\n          ['sqlite3_complete', 'int', 'string:flexible'],\n          ['sqlite3_context_db_handle', 'sqlite3*', 'sqlite3_context*'],\n\n          ['sqlite3_data_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_db_filename', 'string', 'sqlite3*', 'string'],\n          ['sqlite3_db_handle', 'sqlite3*', 'sqlite3_stmt*'],\n          ['sqlite3_db_name', 'string', 'sqlite3*', 'int'],\n          ['sqlite3_db_status', 'int', 'sqlite3*', 'int', '*', '*', 'int'],\n          ['sqlite3_errcode', 'int', 'sqlite3*'],\n          ['sqlite3_errmsg', 'string', 'sqlite3*'],\n          ['sqlite3_error_offset', 'int', 'sqlite3*'],\n          ['sqlite3_errstr', 'string', 'int'],\n          [\n            'sqlite3_exec',\n            'int',\n            [\n              'sqlite3*',\n              'string:flexible',\n              new wasm.xWrap.FuncPtrAdapter({\n                signature: 'i(pipp)',\n                bindScope: 'transient',\n                callProxy: (callback) => {\n                  let aNames;\n                  return (pVoid, nCols, pColVals, pColNames) => {\n                    try {\n                      const aVals = wasm.cArgvToJs(nCols, pColVals);\n                      if (!aNames) aNames = wasm.cArgvToJs(nCols, pColNames);\n                      return callback(aVals, aNames) | 0;\n                    } catch (e) {\n                      return e.resultCode || capi.SQLITE_ERROR;\n                    }\n                  };\n                },\n              }),\n              '*',\n              '**',\n            ],\n          ],\n          ['sqlite3_expanded_sql', 'string', 'sqlite3_stmt*'],\n          ['sqlite3_extended_errcode', 'int', 'sqlite3*'],\n          ['sqlite3_extended_result_codes', 'int', 'sqlite3*', 'int'],\n          ['sqlite3_file_control', 'int', 'sqlite3*', 'string', 'int', '*'],\n          ['sqlite3_finalize', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_free', undefined, '*'],\n          ['sqlite3_get_autocommit', 'int', 'sqlite3*'],\n          ['sqlite3_get_auxdata', '*', 'sqlite3_context*', 'int'],\n          ['sqlite3_initialize', undefined],\n\n          ['sqlite3_keyword_count', 'int'],\n          ['sqlite3_keyword_name', 'int', ['int', '**', '*']],\n          ['sqlite3_keyword_check', 'int', ['string', 'int']],\n          ['sqlite3_libversion', 'string'],\n          ['sqlite3_libversion_number', 'int'],\n          ['sqlite3_limit', 'int', ['sqlite3*', 'int', 'int']],\n          ['sqlite3_malloc', '*', 'int'],\n          ['sqlite3_open', 'int', 'string', '*'],\n          ['sqlite3_open_v2', 'int', 'string', '*', 'int', 'string'],\n\n          [\n            'sqlite3_progress_handler',\n            undefined,\n            [\n              'sqlite3*',\n              'int',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xProgressHandler',\n                signature: 'i(p)',\n                bindScope: 'context',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_realloc', '*', '*', 'int'],\n          ['sqlite3_reset', 'int', 'sqlite3_stmt*'],\n\n          [\n            'sqlite3_result_blob',\n            undefined,\n            'sqlite3_context*',\n            '*',\n            'int',\n            '*',\n          ],\n          ['sqlite3_result_double', undefined, 'sqlite3_context*', 'f64'],\n          [\n            'sqlite3_result_error',\n            undefined,\n            'sqlite3_context*',\n            'string',\n            'int',\n          ],\n          ['sqlite3_result_error_code', undefined, 'sqlite3_context*', 'int'],\n          ['sqlite3_result_error_nomem', undefined, 'sqlite3_context*'],\n          ['sqlite3_result_error_toobig', undefined, 'sqlite3_context*'],\n          ['sqlite3_result_int', undefined, 'sqlite3_context*', 'int'],\n          ['sqlite3_result_null', undefined, 'sqlite3_context*'],\n          [\n            'sqlite3_result_pointer',\n            undefined,\n            'sqlite3_context*',\n            '*',\n            'string:static',\n            '*',\n          ],\n          ['sqlite3_result_subtype', undefined, 'sqlite3_value*', 'int'],\n          [\n            'sqlite3_result_text',\n            undefined,\n            'sqlite3_context*',\n            'string',\n            'int',\n            '*',\n          ],\n          ['sqlite3_result_zeroblob', undefined, 'sqlite3_context*', 'int'],\n          [\n            'sqlite3_rollback_hook',\n            'void*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_rollback_hook',\n                signature: 'v(p)',\n                contextKey: (argv) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          [\n            'sqlite3_set_authorizer',\n            'int',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_set_authorizer::xAuth',\n                signature: 'i(pi' + 'ssss)',\n                contextKey: (argv, argIndex) => argv[0],\n                callProxy: (callback) => {\n                  return (pV, iCode, s0, s1, s2, s3) => {\n                    try {\n                      s0 = s0 && wasm.cstrToJs(s0);\n                      s1 = s1 && wasm.cstrToJs(s1);\n                      s2 = s2 && wasm.cstrToJs(s2);\n                      s3 = s3 && wasm.cstrToJs(s3);\n                      return callback(pV, iCode, s0, s1, s2, s3) || 0;\n                    } catch (e) {\n                      return e.resultCode || capi.SQLITE_ERROR;\n                    }\n                  };\n                },\n              }),\n              '*',\n            ],\n          ],\n          [\n            'sqlite3_set_auxdata',\n            undefined,\n            [\n              'sqlite3_context*',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroyAuxData',\n                signature: 'v(*)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n            ],\n          ],\n          ['sqlite3_shutdown', undefined],\n          ['sqlite3_sourceid', 'string'],\n          ['sqlite3_sql', 'string', 'sqlite3_stmt*'],\n          ['sqlite3_status', 'int', 'int', '*', '*', 'int'],\n          ['sqlite3_step', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_stmt_isexplain', 'int', ['sqlite3_stmt*']],\n          ['sqlite3_stmt_readonly', 'int', ['sqlite3_stmt*']],\n          ['sqlite3_stmt_status', 'int', 'sqlite3_stmt*', 'int', 'int'],\n          ['sqlite3_strglob', 'int', 'string', 'string'],\n          ['sqlite3_stricmp', 'int', 'string', 'string'],\n          ['sqlite3_strlike', 'int', 'string', 'string', 'int'],\n          ['sqlite3_strnicmp', 'int', 'string', 'string', 'int'],\n          [\n            'sqlite3_table_column_metadata',\n            'int',\n            'sqlite3*',\n            'string',\n            'string',\n            'string',\n            '**',\n            '**',\n            '*',\n            '*',\n            '*',\n          ],\n          ['sqlite3_total_changes', 'int', 'sqlite3*'],\n          [\n            'sqlite3_trace_v2',\n            'int',\n            [\n              'sqlite3*',\n              'int',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_trace_v2::callback',\n                signature: 'i(ippp)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_txn_state', 'int', ['sqlite3*', 'string']],\n\n          ['sqlite3_uri_boolean', 'int', 'sqlite3_filename', 'string', 'int'],\n          ['sqlite3_uri_key', 'string', 'sqlite3_filename', 'int'],\n          ['sqlite3_uri_parameter', 'string', 'sqlite3_filename', 'string'],\n          ['sqlite3_user_data', 'void*', 'sqlite3_context*'],\n          ['sqlite3_value_blob', '*', 'sqlite3_value*'],\n          ['sqlite3_value_bytes', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_double', 'f64', 'sqlite3_value*'],\n          ['sqlite3_value_dup', 'sqlite3_value*', 'sqlite3_value*'],\n          ['sqlite3_value_free', undefined, 'sqlite3_value*'],\n          ['sqlite3_value_frombind', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_int', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_nochange', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_numeric_type', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_pointer', '*', 'sqlite3_value*', 'string:static'],\n          ['sqlite3_value_subtype', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_text', 'string', 'sqlite3_value*'],\n          ['sqlite3_value_type', 'int', 'sqlite3_value*'],\n          ['sqlite3_vfs_find', '*', 'string'],\n          ['sqlite3_vfs_register', 'int', 'sqlite3_vfs*', 'int'],\n          ['sqlite3_vfs_unregister', 'int', 'sqlite3_vfs*'],\n        ];\n\n        if (false && wasm.compileOptionUsed('SQLITE_ENABLE_NORMALIZE')) {\n          wasm.bindingSignatures.push([\n            'sqlite3_normalized_sql',\n            'string',\n            'sqlite3_stmt*',\n          ]);\n        }\n\n        wasm.bindingSignatures.int64 = [\n          ['sqlite3_bind_int64', 'int', ['sqlite3_stmt*', 'int', 'i64']],\n          ['sqlite3_changes64', 'i64', ['sqlite3*']],\n          ['sqlite3_column_int64', 'i64', ['sqlite3_stmt*', 'int']],\n          [\n            'sqlite3_create_module',\n            'int',\n            ['sqlite3*', 'string', 'sqlite3_module*', '*'],\n          ],\n          [\n            'sqlite3_create_module_v2',\n            'int',\n            ['sqlite3*', 'string', 'sqlite3_module*', '*', '*'],\n          ],\n          ['sqlite3_declare_vtab', 'int', ['sqlite3*', 'string:flexible']],\n          [\n            'sqlite3_deserialize',\n            'int',\n            'sqlite3*',\n            'string',\n            '*',\n            'i64',\n            'i64',\n            'int',\n          ],\n          ['sqlite3_drop_modules', 'int', ['sqlite3*', '**']],\n          ['sqlite3_last_insert_rowid', 'i64', ['sqlite3*']],\n          ['sqlite3_malloc64', '*', 'i64'],\n          ['sqlite3_msize', 'i64', '*'],\n          ['sqlite3_overload_function', 'int', ['sqlite3*', 'string', 'int']],\n          ['sqlite3_preupdate_blobwrite', 'int', 'sqlite3*'],\n          ['sqlite3_preupdate_count', 'int', 'sqlite3*'],\n          ['sqlite3_preupdate_depth', 'int', 'sqlite3*'],\n          [\n            'sqlite3_preupdate_hook',\n            '*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_preupdate_hook',\n                signature: 'v(ppippjj)',\n                contextKey: (argv) => argv[0],\n                callProxy: (callback) => {\n                  return (p, db, op, zDb, zTbl, iKey1, iKey2) => {\n                    callback(\n                      p,\n                      db,\n                      op,\n                      wasm.cstrToJs(zDb),\n                      wasm.cstrToJs(zTbl),\n                      iKey1,\n                      iKey2,\n                    );\n                  };\n                },\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_preupdate_new', 'int', ['sqlite3*', 'int', '**']],\n          ['sqlite3_preupdate_old', 'int', ['sqlite3*', 'int', '**']],\n          ['sqlite3_realloc64', '*', '*', 'i64'],\n          ['sqlite3_result_int64', undefined, '*', 'i64'],\n          ['sqlite3_result_zeroblob64', 'int', '*', 'i64'],\n          ['sqlite3_serialize', '*', 'sqlite3*', 'string', '*', 'int'],\n          ['sqlite3_set_last_insert_rowid', undefined, ['sqlite3*', 'i64']],\n          ['sqlite3_status64', 'int', 'int', '*', '*', 'int'],\n          ['sqlite3_total_changes64', 'i64', ['sqlite3*']],\n          [\n            'sqlite3_update_hook',\n            '*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_update_hook',\n                signature: 'v(iippj)',\n                contextKey: (argv) => argv[0],\n                callProxy: (callback) => {\n                  return (p, op, z0, z1, rowid) => {\n                    callback(\n                      p,\n                      op,\n                      wasm.cstrToJs(z0),\n                      wasm.cstrToJs(z1),\n                      rowid,\n                    );\n                  };\n                },\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_uri_int64', 'i64', ['sqlite3_filename', 'string', 'i64']],\n          ['sqlite3_value_int64', 'i64', 'sqlite3_value*'],\n          ['sqlite3_vtab_collation', 'string', 'sqlite3_index_info*', 'int'],\n          ['sqlite3_vtab_distinct', 'int', 'sqlite3_index_info*'],\n          ['sqlite3_vtab_in', 'int', 'sqlite3_index_info*', 'int', 'int'],\n          ['sqlite3_vtab_in_first', 'int', 'sqlite3_value*', '**'],\n          ['sqlite3_vtab_in_next', 'int', 'sqlite3_value*', '**'],\n\n          ['sqlite3_vtab_nochange', 'int', 'sqlite3_context*'],\n          ['sqlite3_vtab_on_conflict', 'int', 'sqlite3*'],\n          ['sqlite3_vtab_rhs_value', 'int', 'sqlite3_index_info*', 'int', '**'],\n        ];\n\n        if (wasm.bigIntEnabled && !!wasm.exports.sqlite3changegroup_add) {\n          const __ipsProxy = {\n            signature: 'i(ps)',\n            callProxy: (callback) => {\n              return (p, s) => {\n                try {\n                  return callback(p, wasm.cstrToJs(s)) | 0;\n                } catch (e) {\n                  return e.resultCode || capi.SQLITE_ERROR;\n                }\n              };\n            },\n          };\n\n          wasm.bindingSignatures.int64.push(\n            ...[\n              [\n                'sqlite3changegroup_add',\n                'int',\n                ['sqlite3_changegroup*', 'int', 'void*'],\n              ],\n              [\n                'sqlite3changegroup_add_strm',\n                'int',\n                [\n                  'sqlite3_changegroup*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changegroup_delete',\n                undefined,\n                ['sqlite3_changegroup*'],\n              ],\n              ['sqlite3changegroup_new', 'int', ['**']],\n              [\n                'sqlite3changegroup_output',\n                'int',\n                ['sqlite3_changegroup*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changegroup_output_strm',\n                'int',\n                [\n                  'sqlite3_changegroup*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply',\n                'int',\n                [\n                  'sqlite3*',\n                  'int',\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_strm',\n                'int',\n                [\n                  'sqlite3*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_v2',\n                'int',\n                [\n                  'sqlite3*',\n                  'int',\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  '**',\n                  'int*',\n                  'int',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_v2_strm',\n                'int',\n                [\n                  'sqlite3*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  '**',\n                  'int*',\n                  'int',\n                ],\n              ],\n              [\n                'sqlite3changeset_concat',\n                'int',\n                ['int', 'void*', 'int', 'void*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changeset_concat_strm',\n                'int',\n                [\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInputA',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInputB',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_conflict',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              ['sqlite3changeset_finalize', 'int', ['sqlite3_changeset_iter*']],\n              [\n                'sqlite3changeset_fk_conflicts',\n                'int',\n                ['sqlite3_changeset_iter*', 'int*'],\n              ],\n              [\n                'sqlite3changeset_invert',\n                'int',\n                ['int', 'void*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changeset_invert_strm',\n                'int',\n                [\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_new',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              ['sqlite3changeset_next', 'int', ['sqlite3_changeset_iter*']],\n              [\n                'sqlite3changeset_old',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              [\n                'sqlite3changeset_op',\n                'int',\n                ['sqlite3_changeset_iter*', '**', 'int*', 'int*', 'int*'],\n              ],\n              [\n                'sqlite3changeset_pk',\n                'int',\n                ['sqlite3_changeset_iter*', '**', 'int*'],\n              ],\n              ['sqlite3changeset_start', 'int', ['**', 'int', '*']],\n              [\n                'sqlite3changeset_start_strm',\n                'int',\n                [\n                  '**',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              ['sqlite3changeset_start_v2', 'int', ['**', 'int', '*', 'int']],\n              [\n                'sqlite3changeset_start_v2_strm',\n                'int',\n                [\n                  '**',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  'int',\n                ],\n              ],\n              ['sqlite3session_attach', 'int', ['sqlite3_session*', 'string']],\n              [\n                'sqlite3session_changeset',\n                'int',\n                ['sqlite3_session*', 'int*', '**'],\n              ],\n              ['sqlite3session_changeset_size', 'i64', ['sqlite3_session*']],\n              [\n                'sqlite3session_changeset_strm',\n                'int',\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              ['sqlite3session_config', 'int', ['int', 'void*']],\n              ['sqlite3session_create', 'int', ['sqlite3*', 'string', '**']],\n\n              [\n                'sqlite3session_diff',\n                'int',\n                ['sqlite3_session*', 'string', 'string', '**'],\n              ],\n              ['sqlite3session_enable', 'int', ['sqlite3_session*', 'int']],\n              ['sqlite3session_indirect', 'int', ['sqlite3_session*', 'int']],\n              ['sqlite3session_isempty', 'int', ['sqlite3_session*']],\n              ['sqlite3session_memory_used', 'i64', ['sqlite3_session*']],\n              [\n                'sqlite3session_object_config',\n                'int',\n                ['sqlite3_session*', 'int', 'void*'],\n              ],\n              [\n                'sqlite3session_patchset',\n                'int',\n                ['sqlite3_session*', '*', '**'],\n              ],\n              [\n                'sqlite3session_patchset_strm',\n                'int',\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3session_table_filter',\n                undefined,\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    ...__ipsProxy,\n                    contextKey: (argv, argIndex) => argv[0],\n                  }),\n                  '*',\n                ],\n              ],\n            ],\n          );\n        }\n\n        wasm.bindingSignatures.wasmInternal = [\n          ['sqlite3__wasm_db_reset', 'int', 'sqlite3*'],\n          ['sqlite3__wasm_db_vfs', 'sqlite3_vfs*', 'sqlite3*', 'string'],\n          [\n            'sqlite3__wasm_vfs_create_file',\n            'int',\n            'sqlite3_vfs*',\n            'string',\n            '*',\n            'int',\n          ],\n          ['sqlite3__wasm_posix_create_file', 'int', 'string', '*', 'int'],\n          ['sqlite3__wasm_vfs_unlink', 'int', 'sqlite3_vfs*', 'string'],\n          ['sqlite3__wasm_qfmt_token', 'string:dealloc', 'string', 'int'],\n        ];\n\n        sqlite3.StructBinder = globalThis.Jaccwabyt({\n          heap: 0 ? wasm.memory : wasm.heap8u,\n          alloc: wasm.alloc,\n          dealloc: wasm.dealloc,\n          bigIntEnabled: wasm.bigIntEnabled,\n          memberPrefix: '$',\n        });\n        delete globalThis.Jaccwabyt;\n\n        {\n          const __xString = wasm.xWrap.argAdapter('string');\n          wasm.xWrap.argAdapter('string:flexible', (v) =>\n            __xString(util.flexibleString(v)),\n          );\n\n          wasm.xWrap.argAdapter(\n            'string:static',\n            function (v) {\n              if (wasm.isPtr(v)) return v;\n              v = '' + v;\n              let rc = this[v];\n              return rc || (this[v] = wasm.allocCString(v));\n            }.bind(Object.create(null)),\n          );\n\n          const __xArgPtr = wasm.xWrap.argAdapter('*');\n          const nilType = function () {};\n          wasm.xWrap.argAdapter('sqlite3_filename', __xArgPtr)(\n            'sqlite3_context*',\n            __xArgPtr,\n          )('sqlite3_value*', __xArgPtr)('void*', __xArgPtr)(\n            'sqlite3_changegroup*',\n            __xArgPtr,\n          )('sqlite3_changeset_iter*', __xArgPtr)(\n            'sqlite3_session*',\n            __xArgPtr,\n          )('sqlite3_stmt*', (v) =>\n            __xArgPtr(\n              v instanceof (sqlite3?.oo1?.Stmt || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3*', (v) =>\n            __xArgPtr(\n              v instanceof (sqlite3?.oo1?.DB || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3_index_info*', (v) =>\n            __xArgPtr(\n              v instanceof (capi.sqlite3_index_info || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3_module*', (v) =>\n            __xArgPtr(\n              v instanceof (capi.sqlite3_module || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3_vfs*', (v) => {\n            if ('string' === typeof v) {\n              return (\n                capi.sqlite3_vfs_find(v) ||\n                sqlite3.SQLite3Error.toss(\n                  capi.SQLITE_NOTFOUND,\n                  'Unknown sqlite3_vfs name:',\n                  v,\n                )\n              );\n            }\n            return __xArgPtr(\n              v instanceof (capi.sqlite3_vfs || nilType) ? v.pointer : v,\n            );\n          });\n\n          const __xRcPtr = wasm.xWrap.resultAdapter('*');\n          wasm.xWrap.resultAdapter('sqlite3*', __xRcPtr)(\n            'sqlite3_context*',\n            __xRcPtr,\n          )('sqlite3_stmt*', __xRcPtr)('sqlite3_value*', __xRcPtr)(\n            'sqlite3_vfs*',\n            __xRcPtr,\n          )('void*', __xRcPtr);\n\n          if (0 === wasm.exports.sqlite3_step.length) {\n            wasm.xWrap.doArgcCheck = false;\n            sqlite3.config.warn(\n              'Disabling sqlite3.wasm.xWrap.doArgcCheck due to environmental quirks.',\n            );\n          }\n          for (const e of wasm.bindingSignatures) {\n            capi[e[0]] = wasm.xWrap.apply(null, e);\n          }\n          for (const e of wasm.bindingSignatures.wasmInternal) {\n            util[e[0]] = wasm.xWrap.apply(null, e);\n          }\n\n          const fI64Disabled = function (fname) {\n            return () =>\n              toss(\n                fname + '() is unavailable due to lack',\n                'of BigInt support in this build.',\n              );\n          };\n          for (const e of wasm.bindingSignatures.int64) {\n            capi[e[0]] = wasm.bigIntEnabled\n              ? wasm.xWrap.apply(null, e)\n              : fI64Disabled(e[0]);\n          }\n\n          delete wasm.bindingSignatures;\n\n          if (wasm.exports.sqlite3__wasm_db_error) {\n            const __db_err = wasm.xWrap(\n              'sqlite3__wasm_db_error',\n              'int',\n              'sqlite3*',\n              'int',\n              'string',\n            );\n\n            util.sqlite3__wasm_db_error = function (pDb, resultCode, message) {\n              if (resultCode instanceof sqlite3.WasmAllocError) {\n                resultCode = capi.SQLITE_NOMEM;\n                message = 0;\n              } else if (resultCode instanceof Error) {\n                message = message || '' + resultCode;\n                resultCode = resultCode.resultCode || capi.SQLITE_ERROR;\n              }\n              return pDb ? __db_err(pDb, resultCode, message) : resultCode;\n            };\n          } else {\n            util.sqlite3__wasm_db_error = function (pDb, errCode, msg) {\n              console.warn(\n                'sqlite3__wasm_db_error() is not exported.',\n                arguments,\n              );\n              return errCode;\n            };\n          }\n        }\n\n        {\n          const cJson = wasm.xCall('sqlite3__wasm_enum_json');\n          if (!cJson) {\n            toss(\n              \"Maintenance required: increase sqlite3__wasm_enum_json()'s\",\n              'static buffer size!',\n            );\n          }\n\n          wasm.ctype = JSON.parse(wasm.cstrToJs(cJson));\n\n          const defineGroups = [\n            'access',\n            'authorizer',\n            'blobFinalizers',\n            'changeset',\n            'config',\n            'dataTypes',\n            'dbConfig',\n            'dbStatus',\n            'encodings',\n            'fcntl',\n            'flock',\n            'ioCap',\n            'limits',\n            'openFlags',\n            'prepareFlags',\n            'resultCodes',\n            'sqlite3Status',\n            'stmtStatus',\n            'syncFlags',\n            'trace',\n            'txnState',\n            'udfFlags',\n            'version',\n          ];\n          if (wasm.bigIntEnabled) {\n            defineGroups.push('serialize', 'session', 'vtab');\n          }\n          for (const t of defineGroups) {\n            for (const e of Object.entries(wasm.ctype[t])) {\n              capi[e[0]] = e[1];\n            }\n          }\n          if (!wasm.functionEntry(capi.SQLITE_WASM_DEALLOC)) {\n            toss(\n              'Internal error: cannot resolve exported function',\n              'entry SQLITE_WASM_DEALLOC (==' + capi.SQLITE_WASM_DEALLOC + ').',\n            );\n          }\n          const __rcMap = Object.create(null);\n          for (const t of ['resultCodes']) {\n            for (const e of Object.entries(wasm.ctype[t])) {\n              __rcMap[e[1]] = e[0];\n            }\n          }\n\n          capi.sqlite3_js_rc_str = (rc) => __rcMap[rc];\n\n          const notThese = Object.assign(Object.create(null), {\n            WasmTestStruct: true,\n\n            sqlite3_kvvfs_methods: !util.isUIThread(),\n\n            sqlite3_index_info: !wasm.bigIntEnabled,\n            sqlite3_index_constraint: !wasm.bigIntEnabled,\n            sqlite3_index_orderby: !wasm.bigIntEnabled,\n            sqlite3_index_constraint_usage: !wasm.bigIntEnabled,\n          });\n          for (const s of wasm.ctype.structs) {\n            if (!notThese[s.name]) {\n              capi[s.name] = sqlite3.StructBinder(s);\n            }\n          }\n          if (capi.sqlite3_index_info) {\n            for (const k of [\n              'sqlite3_index_constraint',\n              'sqlite3_index_orderby',\n              'sqlite3_index_constraint_usage',\n            ]) {\n              capi.sqlite3_index_info[k] = capi[k];\n              delete capi[k];\n            }\n            capi.sqlite3_vtab_config = wasm.xWrap(\n              'sqlite3__wasm_vtab_config',\n              'int',\n              ['sqlite3*', 'int', 'int'],\n            );\n          }\n        }\n\n        const __dbArgcMismatch = (pDb, f, n) => {\n          return util.sqlite3__wasm_db_error(\n            pDb,\n            capi.SQLITE_MISUSE,\n            f + '() requires ' + n + ' argument' + (1 === n ? '' : 's') + '.',\n          );\n        };\n\n        const __errEncoding = (pDb) => {\n          return util.sqlite3__wasm_db_error(\n            pDb,\n            capi.SQLITE_FORMAT,\n            'SQLITE_UTF8 is the only supported encoding.',\n          );\n        };\n\n        const __argPDb = (pDb) => wasm.xWrap.argAdapter('sqlite3*')(pDb);\n        const __argStr = (str) => (wasm.isPtr(str) ? wasm.cstrToJs(str) : str);\n        const __dbCleanupMap = function (pDb, mode) {\n          pDb = __argPDb(pDb);\n          let m = this.dbMap.get(pDb);\n          if (!mode) {\n            this.dbMap.delete(pDb);\n            return m;\n          } else if (!m && mode > 0) {\n            this.dbMap.set(pDb, (m = Object.create(null)));\n          }\n          return m;\n        }.bind(\n          Object.assign(Object.create(null), {\n            dbMap: new Map(),\n          }),\n        );\n\n        __dbCleanupMap.addCollation = function (pDb, name) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.collation) m.collation = new Set();\n          m.collation.add(__argStr(name).toLowerCase());\n        };\n\n        __dbCleanupMap._addUDF = function (pDb, name, arity, map) {\n          name = __argStr(name).toLowerCase();\n          let u = map.get(name);\n          if (!u) map.set(name, (u = new Set()));\n          u.add(arity < 0 ? -1 : arity);\n        };\n\n        __dbCleanupMap.addFunction = function (pDb, name, arity) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.udf) m.udf = new Map();\n          this._addUDF(pDb, name, arity, m.udf);\n        };\n\n        __dbCleanupMap.addWindowFunc = function (pDb, name, arity) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.wudf) m.wudf = new Map();\n          this._addUDF(pDb, name, arity, m.wudf);\n        };\n\n        __dbCleanupMap.cleanup = function (pDb) {\n          pDb = __argPDb(pDb);\n\n          const closeArgs = [pDb];\n          for (const name of [\n            'sqlite3_busy_handler',\n            'sqlite3_commit_hook',\n            'sqlite3_preupdate_hook',\n            'sqlite3_progress_handler',\n            'sqlite3_rollback_hook',\n            'sqlite3_set_authorizer',\n            'sqlite3_trace_v2',\n            'sqlite3_update_hook',\n          ]) {\n            const x = wasm.exports[name];\n            closeArgs.length = x.length;\n            try {\n              capi[name](...closeArgs);\n            } catch (e) {\n              console.warn(\n                'close-time call of',\n                name + '(',\n                closeArgs,\n                ') threw:',\n                e,\n              );\n            }\n          }\n          const m = __dbCleanupMap(pDb, 0);\n          if (!m) return;\n          if (m.collation) {\n            for (const name of m.collation) {\n              try {\n                capi.sqlite3_create_collation_v2(\n                  pDb,\n                  name,\n                  capi.SQLITE_UTF8,\n                  0,\n                  0,\n                  0,\n                );\n              } catch (e) {}\n            }\n            delete m.collation;\n          }\n          let i;\n          for (i = 0; i < 2; ++i) {\n            const fmap = i ? m.wudf : m.udf;\n            if (!fmap) continue;\n            const func = i\n              ? capi.sqlite3_create_window_function\n              : capi.sqlite3_create_function_v2;\n            for (const e of fmap) {\n              const name = e[0],\n                arities = e[1];\n              const fargs = [pDb, name, 0, capi.SQLITE_UTF8, 0, 0, 0, 0, 0];\n              if (i) fargs.push(0);\n              for (const arity of arities) {\n                try {\n                  fargs[2] = arity;\n                  func.apply(null, fargs);\n                } catch (e) {}\n              }\n              arities.clear();\n            }\n            fmap.clear();\n          }\n          delete m.udf;\n          delete m.wudf;\n        };\n\n        {\n          const __sqlite3CloseV2 = wasm.xWrap(\n            'sqlite3_close_v2',\n            'int',\n            'sqlite3*',\n          );\n          capi.sqlite3_close_v2 = function (pDb) {\n            if (1 !== arguments.length)\n              return __dbArgcMismatch(pDb, 'sqlite3_close_v2', 1);\n            if (pDb) {\n              try {\n                __dbCleanupMap.cleanup(pDb);\n              } catch (e) {}\n            }\n            return __sqlite3CloseV2(pDb);\n          };\n        }\n\n        if (capi.sqlite3session_table_filter) {\n          const __sqlite3SessionDelete = wasm.xWrap(\n            'sqlite3session_delete',\n            undefined,\n            ['sqlite3_session*'],\n          );\n          capi.sqlite3session_delete = function (pSession) {\n            if (1 !== arguments.length) {\n              return __dbArgcMismatch(pDb, 'sqlite3session_delete', 1);\n            } else if (pSession) {\n              capi.sqlite3session_table_filter(pSession, 0, 0);\n            }\n            __sqlite3SessionDelete(pSession);\n          };\n        }\n\n        {\n          const contextKey = (argv, argIndex) => {\n            return (\n              'argv[' +\n              argIndex +\n              ']:' +\n              argv[0] +\n              ':' +\n              wasm.cstrToJs(argv[1]).toLowerCase()\n            );\n          };\n          const __sqlite3CreateCollationV2 = wasm.xWrap(\n            'sqlite3_create_collation_v2',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xCompare',\n                signature: 'i(pipip)',\n                contextKey,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                signature: 'v(p)',\n                contextKey,\n              }),\n            ],\n          );\n\n          capi.sqlite3_create_collation_v2 = function (\n            pDb,\n            zName,\n            eTextRep,\n            pArg,\n            xCompare,\n            xDestroy,\n          ) {\n            if (6 !== arguments.length)\n              return __dbArgcMismatch(pDb, 'sqlite3_create_collation_v2', 6);\n            else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateCollationV2(\n                pDb,\n                zName,\n                eTextRep,\n                pArg,\n                xCompare,\n                xDestroy,\n              );\n              if (0 === rc && xCompare instanceof Function) {\n                __dbCleanupMap.addCollation(pDb, zName);\n              }\n              return rc;\n            } catch (e) {\n              return util.sqlite3__wasm_db_error(pDb, e);\n            }\n          };\n\n          capi.sqlite3_create_collation = (\n            pDb,\n            zName,\n            eTextRep,\n            pArg,\n            xCompare,\n          ) => {\n            return 5 === arguments.length\n              ? capi.sqlite3_create_collation_v2(\n                  pDb,\n                  zName,\n                  eTextRep,\n                  pArg,\n                  xCompare,\n                  0,\n                )\n              : __dbArgcMismatch(pDb, 'sqlite3_create_collation', 5);\n          };\n        }\n\n        {\n          const contextKey = function (argv, argIndex) {\n            return (\n              argv[0] +\n              ':' +\n              (argv[2] < 0 ? -1 : argv[2]) +\n              ':' +\n              argIndex +\n              ':' +\n              wasm.cstrToJs(argv[1]).toLowerCase()\n            );\n          };\n\n          const __cfProxy = Object.assign(Object.create(null), {\n            xInverseAndStep: {\n              signature: 'v(pip)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx, argc, pArgv) => {\n                  try {\n                    callback(pCtx, ...capi.sqlite3_values_to_js(argc, pArgv));\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xFinalAndValue: {\n              signature: 'v(p)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx) => {\n                  try {\n                    capi.sqlite3_result_js(pCtx, callback(pCtx));\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xFunc: {\n              signature: 'v(pip)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx, argc, pArgv) => {\n                  try {\n                    capi.sqlite3_result_js(\n                      pCtx,\n                      callback(pCtx, ...capi.sqlite3_values_to_js(argc, pArgv)),\n                    );\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xDestroy: {\n              signature: 'v(p)',\n              contextKey,\n\n              callProxy: (callback) => {\n                return (pVoid) => {\n                  try {\n                    callback(pVoid);\n                  } catch (e) {\n                    console.error('UDF xDestroy method threw:', e);\n                  }\n                };\n              },\n            },\n          });\n\n          const __sqlite3CreateFunction = wasm.xWrap(\n            'sqlite3_create_function_v2',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFunc',\n                ...__cfProxy.xFunc,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xStep',\n                ...__cfProxy.xInverseAndStep,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFinal',\n                ...__cfProxy.xFinalAndValue,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                ...__cfProxy.xDestroy,\n              }),\n            ],\n          );\n\n          const __sqlite3CreateWindowFunction = wasm.xWrap(\n            'sqlite3_create_window_function',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xStep',\n                ...__cfProxy.xInverseAndStep,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFinal',\n                ...__cfProxy.xFinalAndValue,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xValue',\n                ...__cfProxy.xFinalAndValue,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xInverse',\n                ...__cfProxy.xInverseAndStep,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                ...__cfProxy.xDestroy,\n              }),\n            ],\n          );\n\n          capi.sqlite3_create_function_v2 = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                pDb,\n                'sqlite3_create_function_v2',\n                f.length,\n              );\n            } else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateFunction(\n                pDb,\n                funcName,\n                nArg,\n                eTextRep,\n                pApp,\n                xFunc,\n                xStep,\n                xFinal,\n                xDestroy,\n              );\n              if (\n                0 === rc &&\n                (xFunc instanceof Function ||\n                  xStep instanceof Function ||\n                  xFinal instanceof Function ||\n                  xDestroy instanceof Function)\n              ) {\n                __dbCleanupMap.addFunction(pDb, funcName, nArg);\n              }\n              return rc;\n            } catch (e) {\n              console.error('sqlite3_create_function_v2() setup threw:', e);\n              return util.sqlite3__wasm_db_error(\n                pDb,\n                e,\n                'Creation of UDF threw: ' + e,\n              );\n            }\n          };\n\n          capi.sqlite3_create_function = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n          ) {\n            return f.length === arguments.length\n              ? capi.sqlite3_create_function_v2(\n                  pDb,\n                  funcName,\n                  nArg,\n                  eTextRep,\n                  pApp,\n                  xFunc,\n                  xStep,\n                  xFinal,\n                  0,\n                )\n              : __dbArgcMismatch(pDb, 'sqlite3_create_function', f.length);\n          };\n\n          capi.sqlite3_create_window_function = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xStep,\n            xFinal,\n            xValue,\n            xInverse,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                pDb,\n                'sqlite3_create_window_function',\n                f.length,\n              );\n            } else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateWindowFunction(\n                pDb,\n                funcName,\n                nArg,\n                eTextRep,\n                pApp,\n                xStep,\n                xFinal,\n                xValue,\n                xInverse,\n                xDestroy,\n              );\n              if (\n                0 === rc &&\n                (xStep instanceof Function ||\n                  xFinal instanceof Function ||\n                  xValue instanceof Function ||\n                  xInverse instanceof Function ||\n                  xDestroy instanceof Function)\n              ) {\n                __dbCleanupMap.addWindowFunc(pDb, funcName, nArg);\n              }\n              return rc;\n            } catch (e) {\n              console.error('sqlite3_create_window_function() setup threw:', e);\n              return util.sqlite3__wasm_db_error(\n                pDb,\n                e,\n                'Creation of UDF threw: ' + e,\n              );\n            }\n          };\n\n          capi.sqlite3_create_function_v2.udfSetResult =\n            capi.sqlite3_create_function.udfSetResult =\n            capi.sqlite3_create_window_function.udfSetResult =\n              capi.sqlite3_result_js;\n\n          capi.sqlite3_create_function_v2.udfConvertArgs =\n            capi.sqlite3_create_function.udfConvertArgs =\n            capi.sqlite3_create_window_function.udfConvertArgs =\n              capi.sqlite3_values_to_js;\n\n          capi.sqlite3_create_function_v2.udfSetError =\n            capi.sqlite3_create_function.udfSetError =\n            capi.sqlite3_create_window_function.udfSetError =\n              capi.sqlite3_result_error_js;\n        }\n\n        {\n          const __flexiString = (v, n) => {\n            if ('string' === typeof v) {\n              n = -1;\n            } else if (util.isSQLableTypedArray(v)) {\n              n = v.byteLength;\n              v = util.typedArrayToString(\n                v instanceof ArrayBuffer ? new Uint8Array(v) : v,\n              );\n            } else if (Array.isArray(v)) {\n              v = v.join('');\n              n = -1;\n            }\n            return [v, n];\n          };\n\n          const __prepare = {\n            basic: wasm.xWrap('sqlite3_prepare_v3', 'int', [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '**',\n              '**',\n            ]),\n\n            full: wasm.xWrap('sqlite3_prepare_v3', 'int', [\n              'sqlite3*',\n              '*',\n              'int',\n              'int',\n              '**',\n              '**',\n            ]),\n          };\n\n          capi.sqlite3_prepare_v3 = function f(\n            pDb,\n            sql,\n            sqlLen,\n            prepFlags,\n            ppStmt,\n            pzTail,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(pDb, 'sqlite3_prepare_v3', f.length);\n            }\n            const [xSql, xSqlLen] = __flexiString(sql, sqlLen);\n            switch (typeof xSql) {\n              case 'string':\n                return __prepare.basic(\n                  pDb,\n                  xSql,\n                  xSqlLen,\n                  prepFlags,\n                  ppStmt,\n                  null,\n                );\n              case 'number':\n                return __prepare.full(\n                  pDb,\n                  xSql,\n                  xSqlLen,\n                  prepFlags,\n                  ppStmt,\n                  pzTail,\n                );\n              default:\n                return util.sqlite3__wasm_db_error(\n                  pDb,\n                  capi.SQLITE_MISUSE,\n                  'Invalid SQL argument type for sqlite3_prepare_v2/v3().',\n                );\n            }\n          };\n\n          capi.sqlite3_prepare_v2 = function f(\n            pDb,\n            sql,\n            sqlLen,\n            ppStmt,\n            pzTail,\n          ) {\n            return f.length === arguments.length\n              ? capi.sqlite3_prepare_v3(pDb, sql, sqlLen, 0, ppStmt, pzTail)\n              : __dbArgcMismatch(pDb, 'sqlite3_prepare_v2', f.length);\n          };\n        }\n\n        {\n          const __bindText = wasm.xWrap('sqlite3_bind_text', 'int', [\n            'sqlite3_stmt*',\n            'int',\n            'string',\n            'int',\n            '*',\n          ]);\n          const __bindBlob = wasm.xWrap('sqlite3_bind_blob', 'int', [\n            'sqlite3_stmt*',\n            'int',\n            '*',\n            'int',\n            '*',\n          ]);\n\n          capi.sqlite3_bind_text = function f(\n            pStmt,\n            iCol,\n            text,\n            nText,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                capi.sqlite3_db_handle(pStmt),\n                'sqlite3_bind_text',\n                f.length,\n              );\n            } else if (wasm.isPtr(text) || null === text) {\n              return __bindText(pStmt, iCol, text, nText, xDestroy);\n            } else if (text instanceof ArrayBuffer) {\n              text = new Uint8Array(text);\n            } else if (Array.isArray(pMem)) {\n              text = pMem.join('');\n            }\n            let p, n;\n            try {\n              if (util.isSQLableTypedArray(text)) {\n                p = wasm.allocFromTypedArray(text);\n                n = text.byteLength;\n              } else if ('string' === typeof text) {\n                [p, n] = wasm.allocCString(text);\n              } else {\n                return util.sqlite3__wasm_db_error(\n                  capi.sqlite3_db_handle(pStmt),\n                  capi.SQLITE_MISUSE,\n                  'Invalid 3rd argument type for sqlite3_bind_text().',\n                );\n              }\n              return __bindText(pStmt, iCol, p, n, capi.SQLITE_WASM_DEALLOC);\n            } catch (e) {\n              wasm.dealloc(p);\n              return util.sqlite3__wasm_db_error(\n                capi.sqlite3_db_handle(pStmt),\n                e,\n              );\n            }\n          };\n\n          capi.sqlite3_bind_blob = function f(\n            pStmt,\n            iCol,\n            pMem,\n            nMem,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                capi.sqlite3_db_handle(pStmt),\n                'sqlite3_bind_blob',\n                f.length,\n              );\n            } else if (wasm.isPtr(pMem) || null === pMem) {\n              return __bindBlob(pStmt, iCol, pMem, nMem, xDestroy);\n            } else if (pMem instanceof ArrayBuffer) {\n              pMem = new Uint8Array(pMem);\n            } else if (Array.isArray(pMem)) {\n              pMem = pMem.join('');\n            }\n            let p, n;\n            try {\n              if (util.isBindableTypedArray(pMem)) {\n                p = wasm.allocFromTypedArray(pMem);\n                n = nMem >= 0 ? nMem : pMem.byteLength;\n              } else if ('string' === typeof pMem) {\n                [p, n] = wasm.allocCString(pMem);\n              } else {\n                return util.sqlite3__wasm_db_error(\n                  capi.sqlite3_db_handle(pStmt),\n                  capi.SQLITE_MISUSE,\n                  'Invalid 3rd argument type for sqlite3_bind_blob().',\n                );\n              }\n              return __bindBlob(pStmt, iCol, p, n, capi.SQLITE_WASM_DEALLOC);\n            } catch (e) {\n              wasm.dealloc(p);\n              return util.sqlite3__wasm_db_error(\n                capi.sqlite3_db_handle(pStmt),\n                e,\n              );\n            }\n          };\n        }\n\n        {\n          capi.sqlite3_config = function (op, ...args) {\n            if (arguments.length < 2) return capi.SQLITE_MISUSE;\n            switch (op) {\n              case capi.SQLITE_CONFIG_COVERING_INDEX_SCAN:\n              case capi.SQLITE_CONFIG_MEMSTATUS:\n              case capi.SQLITE_CONFIG_SMALL_MALLOC:\n              case capi.SQLITE_CONFIG_SORTERREF_SIZE:\n              case capi.SQLITE_CONFIG_STMTJRNL_SPILL:\n              case capi.SQLITE_CONFIG_URI:\n                return wasm.exports.sqlite3__wasm_config_i(op, args[0]);\n              case capi.SQLITE_CONFIG_LOOKASIDE:\n                return wasm.exports.sqlite3__wasm_config_ii(\n                  op,\n                  args[0],\n                  args[1],\n                );\n              case capi.SQLITE_CONFIG_MEMDB_MAXSIZE:\n                return wasm.exports.sqlite3__wasm_config_j(op, args[0]);\n              case capi.SQLITE_CONFIG_GETMALLOC:\n              case capi.SQLITE_CONFIG_GETMUTEX:\n              case capi.SQLITE_CONFIG_GETPCACHE2:\n              case capi.SQLITE_CONFIG_GETPCACHE:\n              case capi.SQLITE_CONFIG_HEAP:\n              case capi.SQLITE_CONFIG_LOG:\n              case capi.SQLITE_CONFIG_MALLOC:\n              case capi.SQLITE_CONFIG_MMAP_SIZE:\n              case capi.SQLITE_CONFIG_MULTITHREAD:\n              case capi.SQLITE_CONFIG_MUTEX:\n              case capi.SQLITE_CONFIG_PAGECACHE:\n              case capi.SQLITE_CONFIG_PCACHE2:\n              case capi.SQLITE_CONFIG_PCACHE:\n              case capi.SQLITE_CONFIG_PCACHE_HDRSZ:\n              case capi.SQLITE_CONFIG_PMASZ:\n              case capi.SQLITE_CONFIG_SERIALIZED:\n              case capi.SQLITE_CONFIG_SINGLETHREAD:\n              case capi.SQLITE_CONFIG_SQLLOG:\n              case capi.SQLITE_CONFIG_WIN32_HEAPSIZE:\n              default:\n                return capi.SQLITE_NOTFOUND;\n            }\n          };\n        }\n\n        {\n          const __autoExtFptr = new Set();\n\n          capi.sqlite3_auto_extension = function (fPtr) {\n            if (fPtr instanceof Function) {\n              fPtr = wasm.installFunction('i(ppp)', fPtr);\n            } else if (1 !== arguments.length || !wasm.isPtr(fPtr)) {\n              return capi.SQLITE_MISUSE;\n            }\n            const rc = wasm.exports.sqlite3_auto_extension(fPtr);\n            if (fPtr !== arguments[0]) {\n              if (0 === rc) __autoExtFptr.add(fPtr);\n              else wasm.uninstallFunction(fPtr);\n            }\n            return rc;\n          };\n\n          capi.sqlite3_cancel_auto_extension = function (fPtr) {\n            if (!fPtr || 1 !== arguments.length || !wasm.isPtr(fPtr)) return 0;\n            return wasm.exports.sqlite3_cancel_auto_extension(fPtr);\n          };\n\n          capi.sqlite3_reset_auto_extension = function () {\n            wasm.exports.sqlite3_reset_auto_extension();\n            for (const fp of __autoExtFptr) wasm.uninstallFunction(fp);\n            __autoExtFptr.clear();\n          };\n        }\n\n        const pKvvfs = capi.sqlite3_vfs_find('kvvfs');\n        if (pKvvfs) {\n          if (util.isUIThread()) {\n            const kvvfsMethods = new capi.sqlite3_kvvfs_methods(\n              wasm.exports.sqlite3__wasm_kvvfs_methods(),\n            );\n            delete capi.sqlite3_kvvfs_methods;\n\n            const kvvfsMakeKey =\n                wasm.exports.sqlite3__wasm_kvvfsMakeKeyOnPstack,\n              pstack = wasm.pstack;\n\n            const kvvfsStorage = (zClass) =>\n              115 === wasm.peek(zClass) ? sessionStorage : localStorage;\n\n            const kvvfsImpls = {\n              xRead: (zClass, zKey, zBuf, nBuf) => {\n                const stack = pstack.pointer,\n                  astack = wasm.scopedAllocPush();\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return -3;\n                  const jKey = wasm.cstrToJs(zXKey);\n                  const jV = kvvfsStorage(zClass).getItem(jKey);\n                  if (!jV) return -1;\n                  const nV = jV.length;\n                  if (nBuf <= 0) return nV;\n                  else if (1 === nBuf) {\n                    wasm.poke(zBuf, 0);\n                    return nV;\n                  }\n                  const zV = wasm.scopedAllocCString(jV);\n                  if (nBuf > nV + 1) nBuf = nV + 1;\n                  wasm.heap8u().copyWithin(zBuf, zV, zV + nBuf - 1);\n                  wasm.poke(zBuf + nBuf - 1, 0);\n                  return nBuf - 1;\n                } catch (e) {\n                  console.error('kvstorageRead()', e);\n                  return -2;\n                } finally {\n                  pstack.restore(stack);\n                  wasm.scopedAllocPop(astack);\n                }\n              },\n              xWrite: (zClass, zKey, zData) => {\n                const stack = pstack.pointer;\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return 1;\n                  const jKey = wasm.cstrToJs(zXKey);\n                  kvvfsStorage(zClass).setItem(jKey, wasm.cstrToJs(zData));\n                  return 0;\n                } catch (e) {\n                  console.error('kvstorageWrite()', e);\n                  return capi.SQLITE_IOERR;\n                } finally {\n                  pstack.restore(stack);\n                }\n              },\n              xDelete: (zClass, zKey) => {\n                const stack = pstack.pointer;\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return 1;\n                  kvvfsStorage(zClass).removeItem(wasm.cstrToJs(zXKey));\n                  return 0;\n                } catch (e) {\n                  console.error('kvstorageDelete()', e);\n                  return capi.SQLITE_IOERR;\n                } finally {\n                  pstack.restore(stack);\n                }\n              },\n            };\n            for (const k of Object.keys(kvvfsImpls)) {\n              kvvfsMethods[kvvfsMethods.memberKey(k)] = wasm.installFunction(\n                kvvfsMethods.memberSignature(k),\n                kvvfsImpls[k],\n              );\n            }\n          } else {\n            capi.sqlite3_vfs_unregister(pKvvfs);\n          }\n        }\n\n        wasm.xWrap.FuncPtrAdapter.warnOnUse = true;\n\n        const StructBinder = sqlite3.StructBinder;\n        const installMethod = function callee(\n          tgt,\n          name,\n          func,\n          applyArgcCheck = callee.installMethodArgcCheck,\n        ) {\n          if (!(tgt instanceof StructBinder.StructType)) {\n            toss('Usage error: target object is-not-a StructType.');\n          } else if (!(func instanceof Function) && !wasm.isPtr(func)) {\n            toss('Usage errror: expecting a Function or WASM pointer to one.');\n          }\n          if (1 === arguments.length) {\n            return (n, f) => callee(tgt, n, f, applyArgcCheck);\n          }\n          if (!callee.argcProxy) {\n            callee.argcProxy = function (tgt, funcName, func, sig) {\n              return function (...args) {\n                if (func.length !== arguments.length) {\n                  toss(\n                    'Argument mismatch for',\n                    tgt.structInfo.name +\n                      '::' +\n                      funcName +\n                      ': Native signature is:',\n                    sig,\n                  );\n                }\n                return func.apply(this, args);\n              };\n            };\n\n            callee.removeFuncList = function () {\n              if (this.ondispose.__removeFuncList) {\n                this.ondispose.__removeFuncList.forEach((v, ndx) => {\n                  if ('number' === typeof v) {\n                    try {\n                      wasm.uninstallFunction(v);\n                    } catch (e) {}\n                  }\n                });\n                delete this.ondispose.__removeFuncList;\n              }\n            };\n          }\n          const sigN = tgt.memberSignature(name);\n          if (sigN.length < 2) {\n            toss(\n              'Member',\n              name,\n              'does not have a function pointer signature:',\n              sigN,\n            );\n          }\n          const memKey = tgt.memberKey(name);\n          const fProxy =\n            applyArgcCheck && !wasm.isPtr(func)\n              ? callee.argcProxy(tgt, memKey, func, sigN)\n              : func;\n          if (wasm.isPtr(fProxy)) {\n            if (fProxy && !wasm.functionEntry(fProxy)) {\n              toss('Pointer', fProxy, 'is not a WASM function table entry.');\n            }\n            tgt[memKey] = fProxy;\n          } else {\n            const pFunc = wasm.installFunction(\n              fProxy,\n              tgt.memberSignature(name, true),\n            );\n            tgt[memKey] = pFunc;\n            if (!tgt.ondispose || !tgt.ondispose.__removeFuncList) {\n              tgt.addOnDispose(\n                'ondispose.__removeFuncList handler',\n                callee.removeFuncList,\n              );\n              tgt.ondispose.__removeFuncList = [];\n            }\n            tgt.ondispose.__removeFuncList.push(memKey, pFunc);\n          }\n          return (n, f) => callee(tgt, n, f, applyArgcCheck);\n        };\n        installMethod.installMethodArgcCheck = false;\n\n        const installMethods = function (\n          structInstance,\n          methods,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          const seen = new Map();\n          for (const k of Object.keys(methods)) {\n            const m = methods[k];\n            const prior = seen.get(m);\n            if (prior) {\n              const mkey = structInstance.memberKey(k);\n              structInstance[mkey] =\n                structInstance[structInstance.memberKey(prior)];\n            } else {\n              installMethod(structInstance, k, m, applyArgcCheck);\n              seen.set(m, k);\n            }\n          }\n          return structInstance;\n        };\n\n        StructBinder.StructType.prototype.installMethod = function callee(\n          name,\n          func,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          return arguments.length < 3 && name && 'object' === typeof name\n            ? installMethods(this, ...arguments)\n            : installMethod(this, ...arguments);\n        };\n\n        StructBinder.StructType.prototype.installMethods = function (\n          methods,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          return installMethods(this, methods, applyArgcCheck);\n        };\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        sqlite3.version = {\n          libVersion: '3.46.1',\n          libVersionNumber: 3046001,\n          sourceId:\n            '2024-08-13 09:16:08 c9c2ab54ba1f5f46360f1b4f35d849cd3f080e6fc2b6c60e91b16c63f69a1e33',\n          downloadVersion: 3460100,\n        };\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n        const toss3 = (...args) => {\n          throw new sqlite3.SQLite3Error(...args);\n        };\n\n        const capi = sqlite3.capi,\n          wasm = sqlite3.wasm,\n          util = sqlite3.util;\n\n        const __ptrMap = new WeakMap();\n\n        const __stmtMap = new WeakMap();\n\n        const getOwnOption = (opts, p, dflt) => {\n          const d = Object.getOwnPropertyDescriptor(opts, p);\n          return d ? d.value : dflt;\n        };\n\n        const checkSqlite3Rc = function (dbPtr, sqliteResultCode) {\n          if (sqliteResultCode) {\n            if (dbPtr instanceof DB) dbPtr = dbPtr.pointer;\n            toss3(\n              sqliteResultCode,\n              'sqlite3 result code',\n              sqliteResultCode + ':',\n              dbPtr\n                ? capi.sqlite3_errmsg(dbPtr)\n                : capi.sqlite3_errstr(sqliteResultCode),\n            );\n          }\n          return arguments[0];\n        };\n\n        const __dbTraceToConsole = wasm.installFunction(\n          'i(ippp)',\n          function (t, c, p, x) {\n            if (capi.SQLITE_TRACE_STMT === t) {\n              console.log(\n                'SQL TRACE #' + ++this.counter + ' via sqlite3@' + c + ':',\n                wasm.cstrToJs(x),\n              );\n            }\n          }.bind({ counter: 0 }),\n        );\n\n        const __vfsPostOpenSql = Object.create(null);\n\n        const dbCtorHelper = function ctor(...args) {\n          if (!ctor._name2vfs) {\n            ctor._name2vfs = Object.create(null);\n            const isWorkerThread =\n              'function' === typeof importScripts\n                ? (n) =>\n                    toss3(\n                      'The VFS for',\n                      n,\n                      'is only available in the main window thread.',\n                    )\n                : false;\n            ctor._name2vfs[':localStorage:'] = {\n              vfs: 'kvvfs',\n              filename: isWorkerThread || (() => 'local'),\n            };\n            ctor._name2vfs[':sessionStorage:'] = {\n              vfs: 'kvvfs',\n              filename: isWorkerThread || (() => 'session'),\n            };\n          }\n          const opt = ctor.normalizeArgs(...args);\n          let fn = opt.filename,\n            vfsName = opt.vfs,\n            flagsStr = opt.flags;\n          if (\n            ('string' !== typeof fn && 'number' !== typeof fn) ||\n            'string' !== typeof flagsStr ||\n            (vfsName &&\n              'string' !== typeof vfsName &&\n              'number' !== typeof vfsName)\n          ) {\n            sqlite3.config.error('Invalid DB ctor args', opt, arguments);\n            toss3('Invalid arguments for DB constructor.');\n          }\n          let fnJs = 'number' === typeof fn ? wasm.cstrToJs(fn) : fn;\n          const vfsCheck = ctor._name2vfs[fnJs];\n          if (vfsCheck) {\n            vfsName = vfsCheck.vfs;\n            fn = fnJs = vfsCheck.filename(fnJs);\n          }\n          let pDb,\n            oflags = 0;\n          if (flagsStr.indexOf('c') >= 0) {\n            oflags |= capi.SQLITE_OPEN_CREATE | capi.SQLITE_OPEN_READWRITE;\n          }\n          if (flagsStr.indexOf('w') >= 0) oflags |= capi.SQLITE_OPEN_READWRITE;\n          if (0 === oflags) oflags |= capi.SQLITE_OPEN_READONLY;\n          oflags |= capi.SQLITE_OPEN_EXRESCODE;\n          const stack = wasm.pstack.pointer;\n          try {\n            const pPtr = wasm.pstack.allocPtr();\n            let rc = capi.sqlite3_open_v2(fn, pPtr, oflags, vfsName || 0);\n            pDb = wasm.peekPtr(pPtr);\n            checkSqlite3Rc(pDb, rc);\n            capi.sqlite3_extended_result_codes(pDb, 1);\n            if (flagsStr.indexOf('t') >= 0) {\n              capi.sqlite3_trace_v2(\n                pDb,\n                capi.SQLITE_TRACE_STMT,\n                __dbTraceToConsole,\n                pDb,\n              );\n            }\n          } catch (e) {\n            if (pDb) capi.sqlite3_close_v2(pDb);\n            throw e;\n          } finally {\n            wasm.pstack.restore(stack);\n          }\n          this.filename = fnJs;\n          __ptrMap.set(this, pDb);\n          __stmtMap.set(this, Object.create(null));\n          try {\n            const pVfs =\n              capi.sqlite3_js_db_vfs(pDb) ||\n              toss3('Internal error: cannot get VFS for new db handle.');\n            const postInitSql = __vfsPostOpenSql[pVfs];\n            if (postInitSql) {\n              if (postInitSql instanceof Function) {\n                postInitSql(this, sqlite3);\n              } else {\n                checkSqlite3Rc(\n                  pDb,\n                  capi.sqlite3_exec(pDb, postInitSql, 0, 0, 0),\n                );\n              }\n            }\n          } catch (e) {\n            this.close();\n            throw e;\n          }\n        };\n\n        dbCtorHelper.setVfsPostOpenSql = function (pVfs, sql) {\n          __vfsPostOpenSql[pVfs] = sql;\n        };\n\n        dbCtorHelper.normalizeArgs = function (\n          filename = ':memory:',\n          flags = 'c',\n          vfs = null,\n        ) {\n          const arg = {};\n          if (\n            1 === arguments.length &&\n            arguments[0] &&\n            'object' === typeof arguments[0]\n          ) {\n            Object.assign(arg, arguments[0]);\n            if (undefined === arg.flags) arg.flags = 'c';\n            if (undefined === arg.vfs) arg.vfs = null;\n            if (undefined === arg.filename) arg.filename = ':memory:';\n          } else {\n            arg.filename = filename;\n            arg.flags = flags;\n            arg.vfs = vfs;\n          }\n          return arg;\n        };\n\n        const DB = function (...args) {\n          dbCtorHelper.apply(this, args);\n        };\n        DB.dbCtorHelper = dbCtorHelper;\n\n        const BindTypes = {\n          null: 1,\n          number: 2,\n          string: 3,\n          boolean: 4,\n          blob: 5,\n        };\n        BindTypes['undefined'] == BindTypes.null;\n        if (wasm.bigIntEnabled) {\n          BindTypes.bigint = BindTypes.number;\n        }\n\n        const Stmt = function () {\n          if (BindTypes !== arguments[2]) {\n            toss3(\n              capi.SQLITE_MISUSE,\n              'Do not call the Stmt constructor directly. Use DB.prepare().',\n            );\n          }\n          this.db = arguments[0];\n          __ptrMap.set(this, arguments[1]);\n          this.parameterCount = capi.sqlite3_bind_parameter_count(this.pointer);\n        };\n\n        const affirmDbOpen = function (db) {\n          if (!db.pointer) toss3('DB has been closed.');\n          return db;\n        };\n\n        const affirmColIndex = function (stmt, ndx) {\n          if (ndx !== (ndx | 0) || ndx < 0 || ndx >= stmt.columnCount) {\n            toss3('Column index', ndx, 'is out of range.');\n          }\n          return stmt;\n        };\n\n        const parseExecArgs = function (db, args) {\n          const out = Object.create(null);\n          out.opt = Object.create(null);\n          switch (args.length) {\n            case 1:\n              if (\n                'string' === typeof args[0] ||\n                util.isSQLableTypedArray(args[0])\n              ) {\n                out.sql = args[0];\n              } else if (Array.isArray(args[0])) {\n                out.sql = args[0];\n              } else if (args[0] && 'object' === typeof args[0]) {\n                out.opt = args[0];\n                out.sql = out.opt.sql;\n              }\n              break;\n            case 2:\n              out.sql = args[0];\n              out.opt = args[1];\n              break;\n            default:\n              toss3('Invalid argument count for exec().');\n          }\n          out.sql = util.flexibleString(out.sql);\n          if ('string' !== typeof out.sql) {\n            toss3('Missing SQL argument or unsupported SQL value type.');\n          }\n          const opt = out.opt;\n          switch (opt.returnValue) {\n            case 'resultRows':\n              if (!opt.resultRows) opt.resultRows = [];\n              out.returnVal = () => opt.resultRows;\n              break;\n            case 'saveSql':\n              if (!opt.saveSql) opt.saveSql = [];\n              out.returnVal = () => opt.saveSql;\n              break;\n            case undefined:\n            case 'this':\n              out.returnVal = () => db;\n              break;\n            default:\n              toss3('Invalid returnValue value:', opt.returnValue);\n          }\n          if (!opt.callback && !opt.returnValue && undefined !== opt.rowMode) {\n            if (!opt.resultRows) opt.resultRows = [];\n            out.returnVal = () => opt.resultRows;\n          }\n          if (opt.callback || opt.resultRows) {\n            switch (undefined === opt.rowMode ? 'array' : opt.rowMode) {\n              case 'object':\n                out.cbArg = (stmt, cache) => {\n                  if (!cache.columnNames)\n                    cache.columnNames = stmt.getColumnNames([]);\n\n                  const row = stmt.get([]);\n                  const rv = Object.create(null);\n                  for (const i in cache.columnNames)\n                    rv[cache.columnNames[i]] = row[i];\n                  return rv;\n                };\n                break;\n              case 'array':\n                out.cbArg = (stmt) => stmt.get([]);\n                break;\n              case 'stmt':\n                if (Array.isArray(opt.resultRows)) {\n                  toss3(\n                    'exec(): invalid rowMode for a resultRows array: must',\n                    \"be one of 'array', 'object',\",\n                    'a result column number, or column name reference.',\n                  );\n                }\n                out.cbArg = (stmt) => stmt;\n                break;\n              default:\n                if (util.isInt32(opt.rowMode)) {\n                  out.cbArg = (stmt) => stmt.get(opt.rowMode);\n                  break;\n                } else if (\n                  'string' === typeof opt.rowMode &&\n                  opt.rowMode.length > 1 &&\n                  '$' === opt.rowMode[0]\n                ) {\n                  const $colName = opt.rowMode.substr(1);\n                  out.cbArg = (stmt) => {\n                    const rc = stmt.get(Object.create(null))[$colName];\n                    return undefined === rc\n                      ? toss3(\n                          capi.SQLITE_NOTFOUND,\n                          'exec(): unknown result column:',\n                          $colName,\n                        )\n                      : rc;\n                  };\n                  break;\n                }\n                toss3('Invalid rowMode:', opt.rowMode);\n            }\n          }\n          return out;\n        };\n\n        const __selectFirstRow = (db, sql, bind, ...getArgs) => {\n          const stmt = db.prepare(sql);\n          try {\n            const rc = stmt.bind(bind).step()\n              ? stmt.get(...getArgs)\n              : undefined;\n            stmt.reset();\n            return rc;\n          } finally {\n            stmt.finalize();\n          }\n        };\n\n        const __selectAll = (db, sql, bind, rowMode) =>\n          db.exec({\n            sql,\n            bind,\n            rowMode,\n            returnValue: 'resultRows',\n          });\n\n        DB.checkRc = (db, resultCode) => checkSqlite3Rc(db, resultCode);\n\n        DB.prototype = {\n          isOpen: function () {\n            return !!this.pointer;\n          },\n\n          affirmOpen: function () {\n            return affirmDbOpen(this);\n          },\n\n          close: function () {\n            if (this.pointer) {\n              if (this.onclose && this.onclose.before instanceof Function) {\n                try {\n                  this.onclose.before(this);\n                } catch (e) {}\n              }\n              const pDb = this.pointer;\n              Object.keys(__stmtMap.get(this)).forEach((k, s) => {\n                if (s && s.pointer) {\n                  try {\n                    s.finalize();\n                  } catch (e) {}\n                }\n              });\n              __ptrMap.delete(this);\n              __stmtMap.delete(this);\n              capi.sqlite3_close_v2(pDb);\n              if (this.onclose && this.onclose.after instanceof Function) {\n                try {\n                  this.onclose.after(this);\n                } catch (e) {}\n              }\n              delete this.filename;\n            }\n          },\n\n          changes: function (total = false, sixtyFour = false) {\n            const p = affirmDbOpen(this).pointer;\n            if (total) {\n              return sixtyFour\n                ? capi.sqlite3_total_changes64(p)\n                : capi.sqlite3_total_changes(p);\n            } else {\n              return sixtyFour\n                ? capi.sqlite3_changes64(p)\n                : capi.sqlite3_changes(p);\n            }\n          },\n\n          dbFilename: function (dbName = 'main') {\n            return capi.sqlite3_db_filename(affirmDbOpen(this).pointer, dbName);\n          },\n\n          dbName: function (dbNumber = 0) {\n            return capi.sqlite3_db_name(affirmDbOpen(this).pointer, dbNumber);\n          },\n\n          dbVfsName: function (dbName = 0) {\n            let rc;\n            const pVfs = capi.sqlite3_js_db_vfs(\n              affirmDbOpen(this).pointer,\n              dbName,\n            );\n            if (pVfs) {\n              const v = new capi.sqlite3_vfs(pVfs);\n              try {\n                rc = wasm.cstrToJs(v.$zName);\n              } finally {\n                v.dispose();\n              }\n            }\n            return rc;\n          },\n\n          prepare: function (sql) {\n            affirmDbOpen(this);\n            const stack = wasm.pstack.pointer;\n            let ppStmt, pStmt;\n            try {\n              ppStmt = wasm.pstack.alloc(8);\n              DB.checkRc(\n                this,\n                capi.sqlite3_prepare_v2(this.pointer, sql, -1, ppStmt, null),\n              );\n              pStmt = wasm.peekPtr(ppStmt);\n            } finally {\n              wasm.pstack.restore(stack);\n            }\n            if (!pStmt) toss3('Cannot prepare empty SQL.');\n            const stmt = new Stmt(this, pStmt, BindTypes);\n            __stmtMap.get(this)[pStmt] = stmt;\n            return stmt;\n          },\n\n          exec: function () {\n            affirmDbOpen(this);\n            const arg = parseExecArgs(this, arguments);\n            if (!arg.sql) {\n              return toss3('exec() requires an SQL string.');\n            }\n            const opt = arg.opt;\n            const callback = opt.callback;\n            const resultRows = Array.isArray(opt.resultRows)\n              ? opt.resultRows\n              : undefined;\n            let stmt;\n            let bind = opt.bind;\n            let evalFirstResult = !!(\n              arg.cbArg ||\n              opt.columnNames ||\n              resultRows\n            );\n            const stack = wasm.scopedAllocPush();\n            const saveSql = Array.isArray(opt.saveSql)\n              ? opt.saveSql\n              : undefined;\n            try {\n              const isTA = util.isSQLableTypedArray(arg.sql);\n              let sqlByteLen = isTA\n                ? arg.sql.byteLength\n                : wasm.jstrlen(arg.sql);\n              const ppStmt = wasm.scopedAlloc(\n                2 * wasm.ptrSizeof + (sqlByteLen + 1),\n              );\n              const pzTail = ppStmt + wasm.ptrSizeof;\n              let pSql = pzTail + wasm.ptrSizeof;\n              const pSqlEnd = pSql + sqlByteLen;\n              if (isTA) wasm.heap8().set(arg.sql, pSql);\n              else wasm.jstrcpy(arg.sql, wasm.heap8(), pSql, sqlByteLen, false);\n              wasm.poke(pSql + sqlByteLen, 0);\n              while (pSql && wasm.peek(pSql, 'i8')) {\n                wasm.pokePtr([ppStmt, pzTail], 0);\n                DB.checkRc(\n                  this,\n                  capi.sqlite3_prepare_v3(\n                    this.pointer,\n                    pSql,\n                    sqlByteLen,\n                    0,\n                    ppStmt,\n                    pzTail,\n                  ),\n                );\n                const pStmt = wasm.peekPtr(ppStmt);\n                pSql = wasm.peekPtr(pzTail);\n                sqlByteLen = pSqlEnd - pSql;\n                if (!pStmt) continue;\n                if (saveSql) saveSql.push(capi.sqlite3_sql(pStmt).trim());\n                stmt = new Stmt(this, pStmt, BindTypes);\n                if (bind && stmt.parameterCount) {\n                  stmt.bind(bind);\n                  bind = null;\n                }\n                if (evalFirstResult && stmt.columnCount) {\n                  let gotColNames = Array.isArray(opt.columnNames) ? 0 : 1;\n                  evalFirstResult = false;\n                  if (arg.cbArg || resultRows) {\n                    const cbArgCache = Object.create(null);\n                    for (; stmt.step(); stmt._lockedByExec = false) {\n                      if (0 === gotColNames++) {\n                        stmt.getColumnNames(\n                          (cbArgCache.columnNames = opt.columnNames || []),\n                        );\n                      }\n                      stmt._lockedByExec = true;\n                      const row = arg.cbArg(stmt, cbArgCache);\n                      if (resultRows) resultRows.push(row);\n                      if (callback && false === callback.call(opt, row, stmt)) {\n                        break;\n                      }\n                    }\n                    stmt._lockedByExec = false;\n                  }\n                  if (0 === gotColNames) {\n                    stmt.getColumnNames(opt.columnNames);\n                  }\n                } else {\n                  stmt.step();\n                }\n                stmt.reset().finalize();\n                stmt = null;\n              }\n            } finally {\n              wasm.scopedAllocPop(stack);\n              if (stmt) {\n                delete stmt._lockedByExec;\n                stmt.finalize();\n              }\n            }\n            return arg.returnVal();\n          },\n\n          createFunction: function f(name, xFunc, opt) {\n            const isFunc = (f) => f instanceof Function;\n            switch (arguments.length) {\n              case 1:\n                opt = name;\n                name = opt.name;\n                xFunc = opt.xFunc || 0;\n                break;\n              case 2:\n                if (!isFunc(xFunc)) {\n                  opt = xFunc;\n                  xFunc = opt.xFunc || 0;\n                }\n                break;\n              case 3:\n                break;\n              default:\n                break;\n            }\n            if (!opt) opt = {};\n            if ('string' !== typeof name) {\n              toss3('Invalid arguments: missing function name.');\n            }\n            let xStep = opt.xStep || 0;\n            let xFinal = opt.xFinal || 0;\n            const xValue = opt.xValue || 0;\n            const xInverse = opt.xInverse || 0;\n            let isWindow = undefined;\n            if (isFunc(xFunc)) {\n              isWindow = false;\n              if (isFunc(xStep) || isFunc(xFinal)) {\n                toss3('Ambiguous arguments: scalar or aggregate?');\n              }\n              xStep = xFinal = null;\n            } else if (isFunc(xStep)) {\n              if (!isFunc(xFinal)) {\n                toss3('Missing xFinal() callback for aggregate or window UDF.');\n              }\n              xFunc = null;\n            } else if (isFunc(xFinal)) {\n              toss3('Missing xStep() callback for aggregate or window UDF.');\n            } else {\n              toss3('Missing function-type properties.');\n            }\n            if (false === isWindow) {\n              if (isFunc(xValue) || isFunc(xInverse)) {\n                toss3(\n                  'xValue and xInverse are not permitted for non-window UDFs.',\n                );\n              }\n            } else if (isFunc(xValue)) {\n              if (!isFunc(xInverse)) {\n                toss3('xInverse must be provided if xValue is.');\n              }\n              isWindow = true;\n            } else if (isFunc(xInverse)) {\n              toss3('xValue must be provided if xInverse is.');\n            }\n            const pApp = opt.pApp;\n            if (\n              undefined !== pApp &&\n              null !== pApp &&\n              ('number' !== typeof pApp || !util.isInt32(pApp))\n            ) {\n              toss3(\n                'Invalid value for pApp property. Must be a legal WASM pointer value.',\n              );\n            }\n            const xDestroy = opt.xDestroy || 0;\n            if (xDestroy && !isFunc(xDestroy)) {\n              toss3('xDestroy property must be a function.');\n            }\n            let fFlags = 0;\n            if (getOwnOption(opt, 'deterministic'))\n              fFlags |= capi.SQLITE_DETERMINISTIC;\n            if (getOwnOption(opt, 'directOnly'))\n              fFlags |= capi.SQLITE_DIRECTONLY;\n            if (getOwnOption(opt, 'innocuous')) fFlags |= capi.SQLITE_INNOCUOUS;\n            name = name.toLowerCase();\n            const xArity = xFunc || xStep;\n            const arity = getOwnOption(opt, 'arity');\n            const arityArg =\n              'number' === typeof arity\n                ? arity\n                : xArity.length\n                  ? xArity.length - 1\n                  : 0;\n            let rc;\n            if (isWindow) {\n              rc = capi.sqlite3_create_window_function(\n                this.pointer,\n                name,\n                arityArg,\n                capi.SQLITE_UTF8 | fFlags,\n                pApp || 0,\n                xStep,\n                xFinal,\n                xValue,\n                xInverse,\n                xDestroy,\n              );\n            } else {\n              rc = capi.sqlite3_create_function_v2(\n                this.pointer,\n                name,\n                arityArg,\n                capi.SQLITE_UTF8 | fFlags,\n                pApp || 0,\n                xFunc,\n                xStep,\n                xFinal,\n                xDestroy,\n              );\n            }\n            DB.checkRc(this, rc);\n            return this;\n          },\n\n          selectValue: function (sql, bind, asType) {\n            return __selectFirstRow(this, sql, bind, 0, asType);\n          },\n\n          selectValues: function (sql, bind, asType) {\n            const stmt = this.prepare(sql),\n              rc = [];\n            try {\n              stmt.bind(bind);\n              while (stmt.step()) rc.push(stmt.get(0, asType));\n              stmt.reset();\n            } finally {\n              stmt.finalize();\n            }\n            return rc;\n          },\n\n          selectArray: function (sql, bind) {\n            return __selectFirstRow(this, sql, bind, []);\n          },\n\n          selectObject: function (sql, bind) {\n            return __selectFirstRow(this, sql, bind, {});\n          },\n\n          selectArrays: function (sql, bind) {\n            return __selectAll(this, sql, bind, 'array');\n          },\n\n          selectObjects: function (sql, bind) {\n            return __selectAll(this, sql, bind, 'object');\n          },\n\n          openStatementCount: function () {\n            return this.pointer ? Object.keys(__stmtMap.get(this)).length : 0;\n          },\n\n          transaction: function (callback) {\n            let opener = 'BEGIN';\n            if (arguments.length > 1) {\n              if (/[^a-zA-Z]/.test(arguments[0])) {\n                toss3(\n                  capi.SQLITE_MISUSE,\n                  'Invalid argument for BEGIN qualifier.',\n                );\n              }\n              opener += ' ' + arguments[0];\n              callback = arguments[1];\n            }\n            affirmDbOpen(this).exec(opener);\n            try {\n              const rc = callback(this);\n              this.exec('COMMIT');\n              return rc;\n            } catch (e) {\n              this.exec('ROLLBACK');\n              throw e;\n            }\n          },\n\n          savepoint: function (callback) {\n            affirmDbOpen(this).exec('SAVEPOINT oo1');\n            try {\n              const rc = callback(this);\n              this.exec('RELEASE oo1');\n              return rc;\n            } catch (e) {\n              this.exec('ROLLBACK to SAVEPOINT oo1; RELEASE SAVEPOINT oo1');\n              throw e;\n            }\n          },\n\n          checkRc: function (resultCode) {\n            return checkSqlite3Rc(this, resultCode);\n          },\n        };\n\n        const affirmStmtOpen = function (stmt) {\n          if (!stmt.pointer) toss3('Stmt has been closed.');\n          return stmt;\n        };\n\n        const isSupportedBindType = function (v) {\n          let t = BindTypes[null === v || undefined === v ? 'null' : typeof v];\n          switch (t) {\n            case BindTypes.boolean:\n            case BindTypes.null:\n            case BindTypes.number:\n            case BindTypes.string:\n              return t;\n            case BindTypes.bigint:\n              if (wasm.bigIntEnabled) return t;\n\n            default:\n              return util.isBindableTypedArray(v) ? BindTypes.blob : undefined;\n          }\n        };\n\n        const affirmSupportedBindType = function (v) {\n          return (\n            isSupportedBindType(v) ||\n            toss3('Unsupported bind() argument type:', typeof v)\n          );\n        };\n\n        const affirmParamIndex = function (stmt, key) {\n          const n =\n            'number' === typeof key\n              ? key\n              : capi.sqlite3_bind_parameter_index(stmt.pointer, key);\n          if (0 === n || !util.isInt32(n)) {\n            toss3('Invalid bind() parameter name: ' + key);\n          } else if (n < 1 || n > stmt.parameterCount)\n            toss3('Bind index', key, 'is out of range.');\n          return n;\n        };\n\n        const affirmNotLockedByExec = function (stmt, currentOpName) {\n          if (stmt._lockedByExec) {\n            toss3(\n              'Operation is illegal when statement is locked:',\n              currentOpName,\n            );\n          }\n          return stmt;\n        };\n\n        const bindOne = function f(stmt, ndx, bindType, val) {\n          affirmNotLockedByExec(affirmStmtOpen(stmt), 'bind()');\n          if (!f._) {\n            f._tooBigInt = (v) =>\n              toss3(\n                'BigInt value is too big to store without precision loss:',\n                v,\n              );\n            f._ = {\n              string: function (stmt, ndx, val, asBlob) {\n                const [pStr, n] = wasm.allocCString(val, true);\n                const f = asBlob\n                  ? capi.sqlite3_bind_blob\n                  : capi.sqlite3_bind_text;\n                return f(stmt.pointer, ndx, pStr, n, capi.SQLITE_WASM_DEALLOC);\n              },\n            };\n          }\n          affirmSupportedBindType(val);\n          ndx = affirmParamIndex(stmt, ndx);\n          let rc = 0;\n          switch (\n            null === val || undefined === val ? BindTypes.null : bindType\n          ) {\n            case BindTypes.null:\n              rc = capi.sqlite3_bind_null(stmt.pointer, ndx);\n              break;\n            case BindTypes.string:\n              rc = f._.string(stmt, ndx, val, false);\n              break;\n            case BindTypes.number: {\n              let m;\n              if (util.isInt32(val)) m = capi.sqlite3_bind_int;\n              else if ('bigint' === typeof val) {\n                if (!util.bigIntFits64(val)) {\n                  f._tooBigInt(val);\n                } else if (wasm.bigIntEnabled) {\n                  m = capi.sqlite3_bind_int64;\n                } else if (util.bigIntFitsDouble(val)) {\n                  val = Number(val);\n                  m = capi.sqlite3_bind_double;\n                } else {\n                  f._tooBigInt(val);\n                }\n              } else {\n                val = Number(val);\n                if (wasm.bigIntEnabled && Number.isInteger(val)) {\n                  m = capi.sqlite3_bind_int64;\n                } else {\n                  m = capi.sqlite3_bind_double;\n                }\n              }\n              rc = m(stmt.pointer, ndx, val);\n              break;\n            }\n            case BindTypes.boolean:\n              rc = capi.sqlite3_bind_int(stmt.pointer, ndx, val ? 1 : 0);\n              break;\n            case BindTypes.blob: {\n              if ('string' === typeof val) {\n                rc = f._.string(stmt, ndx, val, true);\n                break;\n              } else if (val instanceof ArrayBuffer) {\n                val = new Uint8Array(val);\n              } else if (!util.isBindableTypedArray(val)) {\n                toss3(\n                  'Binding a value as a blob requires',\n                  'that it be a string, Uint8Array, Int8Array, or ArrayBuffer.',\n                );\n              }\n              const pBlob = wasm.alloc(val.byteLength || 1);\n              wasm.heap8().set(val.byteLength ? val : [0], pBlob);\n              rc = capi.sqlite3_bind_blob(\n                stmt.pointer,\n                ndx,\n                pBlob,\n                val.byteLength,\n                capi.SQLITE_WASM_DEALLOC,\n              );\n              break;\n            }\n            default:\n              sqlite3.config.warn('Unsupported bind() argument type:', val);\n              toss3('Unsupported bind() argument type: ' + typeof val);\n          }\n          if (rc) DB.checkRc(stmt.db.pointer, rc);\n          stmt._mayGet = false;\n          return stmt;\n        };\n\n        Stmt.prototype = {\n          finalize: function () {\n            if (this.pointer) {\n              affirmNotLockedByExec(this, 'finalize()');\n              const rc = capi.sqlite3_finalize(this.pointer);\n              delete __stmtMap.get(this.db)[this.pointer];\n              __ptrMap.delete(this);\n              delete this._mayGet;\n              delete this.parameterCount;\n              delete this._lockedByExec;\n              delete this.db;\n              return rc;\n            }\n          },\n\n          clearBindings: function () {\n            affirmNotLockedByExec(affirmStmtOpen(this), 'clearBindings()');\n            capi.sqlite3_clear_bindings(this.pointer);\n            this._mayGet = false;\n            return this;\n          },\n\n          reset: function (alsoClearBinds) {\n            affirmNotLockedByExec(this, 'reset()');\n            if (alsoClearBinds) this.clearBindings();\n            const rc = capi.sqlite3_reset(affirmStmtOpen(this).pointer);\n            this._mayGet = false;\n            checkSqlite3Rc(this.db, rc);\n            return this;\n          },\n\n          bind: function () {\n            affirmStmtOpen(this);\n            let ndx, arg;\n            switch (arguments.length) {\n              case 1:\n                ndx = 1;\n                arg = arguments[0];\n                break;\n              case 2:\n                ndx = arguments[0];\n                arg = arguments[1];\n                break;\n              default:\n                toss3('Invalid bind() arguments.');\n            }\n            if (undefined === arg) {\n              return this;\n            } else if (!this.parameterCount) {\n              toss3('This statement has no bindable parameters.');\n            }\n            this._mayGet = false;\n            if (null === arg) {\n              return bindOne(this, ndx, BindTypes.null, arg);\n            } else if (Array.isArray(arg)) {\n              if (1 !== arguments.length) {\n                toss3(\n                  'When binding an array, an index argument is not permitted.',\n                );\n              }\n              arg.forEach((v, i) =>\n                bindOne(this, i + 1, affirmSupportedBindType(v), v),\n              );\n              return this;\n            } else if (arg instanceof ArrayBuffer) {\n              arg = new Uint8Array(arg);\n            }\n            if ('object' === typeof arg && !util.isBindableTypedArray(arg)) {\n              if (1 !== arguments.length) {\n                toss3(\n                  'When binding an object, an index argument is not permitted.',\n                );\n              }\n              Object.keys(arg).forEach((k) =>\n                bindOne(this, k, affirmSupportedBindType(arg[k]), arg[k]),\n              );\n              return this;\n            } else {\n              return bindOne(this, ndx, affirmSupportedBindType(arg), arg);\n            }\n            toss3('Should not reach this point.');\n          },\n\n          bindAsBlob: function (ndx, arg) {\n            affirmStmtOpen(this);\n            if (1 === arguments.length) {\n              arg = ndx;\n              ndx = 1;\n            }\n            const t = affirmSupportedBindType(arg);\n            if (\n              BindTypes.string !== t &&\n              BindTypes.blob !== t &&\n              BindTypes.null !== t\n            ) {\n              toss3('Invalid value type for bindAsBlob()');\n            }\n            return bindOne(this, ndx, BindTypes.blob, arg);\n          },\n\n          step: function () {\n            affirmNotLockedByExec(this, 'step()');\n            const rc = capi.sqlite3_step(affirmStmtOpen(this).pointer);\n            switch (rc) {\n              case capi.SQLITE_DONE:\n                return (this._mayGet = false);\n              case capi.SQLITE_ROW:\n                return (this._mayGet = true);\n              default:\n                this._mayGet = false;\n                sqlite3.config.warn(\n                  'sqlite3_step() rc=',\n                  rc,\n                  capi.sqlite3_js_rc_str(rc),\n                  'SQL =',\n                  capi.sqlite3_sql(this.pointer),\n                );\n                DB.checkRc(this.db.pointer, rc);\n            }\n          },\n\n          stepReset: function () {\n            this.step();\n            return this.reset();\n          },\n\n          stepFinalize: function () {\n            try {\n              const rc = this.step();\n              this.reset();\n              return rc;\n            } finally {\n              try {\n                this.finalize();\n              } catch (e) {}\n            }\n          },\n\n          get: function (ndx, asType) {\n            if (!affirmStmtOpen(this)._mayGet) {\n              toss3('Stmt.step() has not (recently) returned true.');\n            }\n            if (Array.isArray(ndx)) {\n              let i = 0;\n              const n = this.columnCount;\n              while (i < n) {\n                ndx[i] = this.get(i++);\n              }\n              return ndx;\n            } else if (ndx && 'object' === typeof ndx) {\n              let i = 0;\n              const n = this.columnCount;\n              while (i < n) {\n                ndx[capi.sqlite3_column_name(this.pointer, i)] = this.get(i++);\n              }\n              return ndx;\n            }\n            affirmColIndex(this, ndx);\n            switch (\n              undefined === asType\n                ? capi.sqlite3_column_type(this.pointer, ndx)\n                : asType\n            ) {\n              case capi.SQLITE_NULL:\n                return null;\n              case capi.SQLITE_INTEGER: {\n                if (wasm.bigIntEnabled) {\n                  const rc = capi.sqlite3_column_int64(this.pointer, ndx);\n                  if (\n                    rc >= Number.MIN_SAFE_INTEGER &&\n                    rc <= Number.MAX_SAFE_INTEGER\n                  ) {\n                    return Number(rc).valueOf();\n                  }\n                  return rc;\n                } else {\n                  const rc = capi.sqlite3_column_double(this.pointer, ndx);\n                  if (\n                    rc > Number.MAX_SAFE_INTEGER ||\n                    rc < Number.MIN_SAFE_INTEGER\n                  ) {\n                    toss3(\n                      'Integer is out of range for JS integer range: ' + rc,\n                    );\n                  }\n\n                  return util.isInt32(rc) ? rc | 0 : rc;\n                }\n              }\n              case capi.SQLITE_FLOAT:\n                return capi.sqlite3_column_double(this.pointer, ndx);\n              case capi.SQLITE_TEXT:\n                return capi.sqlite3_column_text(this.pointer, ndx);\n              case capi.SQLITE_BLOB: {\n                const n = capi.sqlite3_column_bytes(this.pointer, ndx),\n                  ptr = capi.sqlite3_column_blob(this.pointer, ndx),\n                  rc = new Uint8Array(n);\n\n                if (n) rc.set(wasm.heap8u().slice(ptr, ptr + n), 0);\n\n                if (n && this.db._blobXfer instanceof Array) {\n                  this.db._blobXfer.push(rc.buffer);\n                }\n                return rc;\n              }\n              default:\n                toss3(\n                  \"Don't know how to translate\",\n                  'type of result column #' + ndx + '.',\n                );\n            }\n            toss3('Not reached.');\n          },\n\n          getInt: function (ndx) {\n            return this.get(ndx, capi.SQLITE_INTEGER);\n          },\n\n          getFloat: function (ndx) {\n            return this.get(ndx, capi.SQLITE_FLOAT);\n          },\n\n          getString: function (ndx) {\n            return this.get(ndx, capi.SQLITE_TEXT);\n          },\n\n          getBlob: function (ndx) {\n            return this.get(ndx, capi.SQLITE_BLOB);\n          },\n\n          getJSON: function (ndx) {\n            const s = this.get(ndx, capi.SQLITE_STRING);\n            return null === s ? s : JSON.parse(s);\n          },\n\n          getColumnName: function (ndx) {\n            return capi.sqlite3_column_name(\n              affirmColIndex(affirmStmtOpen(this), ndx).pointer,\n              ndx,\n            );\n          },\n\n          getColumnNames: function (tgt = []) {\n            affirmColIndex(affirmStmtOpen(this), 0);\n            const n = this.columnCount;\n            for (let i = 0; i < n; ++i) {\n              tgt.push(capi.sqlite3_column_name(this.pointer, i));\n            }\n            return tgt;\n          },\n\n          getParamIndex: function (name) {\n            return affirmStmtOpen(this).parameterCount\n              ? capi.sqlite3_bind_parameter_index(this.pointer, name)\n              : undefined;\n          },\n        };\n\n        {\n          const prop = {\n            enumerable: true,\n            get: function () {\n              return __ptrMap.get(this);\n            },\n            set: () => toss3('The pointer property is read-only.'),\n          };\n          Object.defineProperty(Stmt.prototype, 'pointer', prop);\n          Object.defineProperty(DB.prototype, 'pointer', prop);\n        }\n\n        Object.defineProperty(Stmt.prototype, 'columnCount', {\n          enumerable: false,\n          get: function () {\n            return capi.sqlite3_column_count(this.pointer);\n          },\n          set: () => toss3('The columnCount property is read-only.'),\n        });\n\n        sqlite3.oo1 = {\n          DB,\n          Stmt,\n        };\n\n        if (util.isUIThread()) {\n          sqlite3.oo1.JsStorageDb = function (storageName = 'session') {\n            const opt = dbCtorHelper.normalizeArgs(...arguments);\n            storageName = opt.filename;\n            if ('session' !== storageName && 'local' !== storageName) {\n              toss3(\"JsStorageDb db name must be one of 'session' or 'local'.\");\n            }\n            opt.vfs = 'kvvfs';\n            dbCtorHelper.call(this, opt);\n          };\n          const jdb = sqlite3.oo1.JsStorageDb;\n          jdb.prototype = Object.create(DB.prototype);\n\n          jdb.clearStorage = capi.sqlite3_js_kvvfs_clear;\n\n          jdb.prototype.clearStorage = function () {\n            return jdb.clearStorage(affirmDbOpen(this).filename);\n          };\n\n          jdb.storageSize = capi.sqlite3_js_kvvfs_size;\n\n          jdb.prototype.storageSize = function () {\n            return jdb.storageSize(affirmDbOpen(this).filename);\n          };\n        }\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const util = sqlite3.util;\n        sqlite3.initWorker1API = function () {\n          'use strict';\n          const toss = (...args) => {\n            throw new Error(args.join(' '));\n          };\n          if (!(globalThis.WorkerGlobalScope instanceof Function)) {\n            toss('initWorker1API() must be run from a Worker thread.');\n          }\n          const sqlite3 = this.sqlite3 || toss('Missing this.sqlite3 object.');\n          const DB = sqlite3.oo1.DB;\n\n          const getDbId = function (db) {\n            let id = wState.idMap.get(db);\n            if (id) return id;\n            id = 'db#' + ++wState.idSeq + '@' + db.pointer;\n\n            wState.idMap.set(db, id);\n            return id;\n          };\n\n          const wState = {\n            dbList: [],\n\n            idSeq: 0,\n\n            idMap: new WeakMap(),\n\n            xfer: [],\n            open: function (opt) {\n              const db = new DB(opt);\n              this.dbs[getDbId(db)] = db;\n              if (this.dbList.indexOf(db) < 0) this.dbList.push(db);\n              return db;\n            },\n            close: function (db, alsoUnlink) {\n              if (db) {\n                delete this.dbs[getDbId(db)];\n                const filename = db.filename;\n                const pVfs = util.sqlite3__wasm_db_vfs(db.pointer, 0);\n                db.close();\n                const ddNdx = this.dbList.indexOf(db);\n                if (ddNdx >= 0) this.dbList.splice(ddNdx, 1);\n                if (alsoUnlink && filename && pVfs) {\n                  util.sqlite3__wasm_vfs_unlink(pVfs, filename);\n                }\n              }\n            },\n\n            post: function (msg, xferList) {\n              if (xferList && xferList.length) {\n                globalThis.postMessage(msg, Array.from(xferList));\n                xferList.length = 0;\n              } else {\n                globalThis.postMessage(msg);\n              }\n            },\n\n            dbs: Object.create(null),\n\n            getDb: function (id, require = true) {\n              return (\n                this.dbs[id] ||\n                (require ? toss('Unknown (or closed) DB ID:', id) : undefined)\n              );\n            },\n          };\n\n          const affirmDbOpen = function (db = wState.dbList[0]) {\n            return db && db.pointer ? db : toss('DB is not opened.');\n          };\n\n          const getMsgDb = function (msgData, affirmExists = true) {\n            const db = wState.getDb(msgData.dbId, false) || wState.dbList[0];\n            return affirmExists ? affirmDbOpen(db) : db;\n          };\n\n          const getDefaultDbId = function () {\n            return wState.dbList[0] && getDbId(wState.dbList[0]);\n          };\n\n          const isSpecialDbFilename = (n) => {\n            return '' === n || ':' === n[0];\n          };\n\n          const wMsgHandler = {\n            open: function (ev) {\n              const oargs = Object.create(null),\n                args = ev.args || Object.create(null);\n              if (args.simulateError) {\n                toss('Throwing because of simulateError flag.');\n              }\n              const rc = Object.create(null);\n              oargs.vfs = args.vfs;\n              oargs.filename = args.filename || '';\n              const db = wState.open(oargs);\n              rc.filename = db.filename;\n              rc.persistent = !!sqlite3.capi.sqlite3_js_db_uses_vfs(\n                db.pointer,\n                'opfs',\n              );\n              rc.dbId = getDbId(db);\n              rc.vfs = db.dbVfsName();\n              return rc;\n            },\n\n            close: function (ev) {\n              const db = getMsgDb(ev, false);\n              const response = {\n                filename: db && db.filename,\n              };\n              if (db) {\n                const doUnlink =\n                  ev.args && 'object' === typeof ev.args\n                    ? !!ev.args.unlink\n                    : false;\n                wState.close(db, doUnlink);\n              }\n              return response;\n            },\n\n            exec: function (ev) {\n              const rc =\n                'string' === typeof ev.args\n                  ? { sql: ev.args }\n                  : ev.args || Object.create(null);\n              if ('stmt' === rc.rowMode) {\n                toss(\n                  \"Invalid rowMode for 'exec': stmt mode\",\n                  'does not work in the Worker API.',\n                );\n              } else if (!rc.sql) {\n                toss(\"'exec' requires input SQL.\");\n              }\n              const db = getMsgDb(ev);\n              if (rc.callback || Array.isArray(rc.resultRows)) {\n                db._blobXfer = wState.xfer;\n              }\n              const theCallback = rc.callback;\n              let rowNumber = 0;\n              const hadColNames = !!rc.columnNames;\n              if ('string' === typeof theCallback) {\n                if (!hadColNames) rc.columnNames = [];\n\n                rc.callback = function (row, stmt) {\n                  wState.post(\n                    {\n                      type: theCallback,\n                      columnNames: rc.columnNames,\n                      rowNumber: ++rowNumber,\n                      row: row,\n                    },\n                    wState.xfer,\n                  );\n                };\n              }\n              try {\n                const changeCount = !!rc.countChanges\n                  ? db.changes(true, 64 === rc.countChanges)\n                  : undefined;\n                db.exec(rc);\n                if (undefined !== changeCount) {\n                  rc.changeCount =\n                    db.changes(true, 64 === rc.countChanges) - changeCount;\n                }\n                if (rc.callback instanceof Function) {\n                  rc.callback = theCallback;\n\n                  wState.post({\n                    type: theCallback,\n                    columnNames: rc.columnNames,\n                    rowNumber: null,\n                    row: undefined,\n                  });\n                }\n              } finally {\n                delete db._blobXfer;\n                if (rc.callback) rc.callback = theCallback;\n              }\n              return rc;\n            },\n\n            'config-get': function () {\n              const rc = Object.create(null),\n                src = sqlite3.config;\n              ['bigIntEnabled'].forEach(function (k) {\n                if (Object.getOwnPropertyDescriptor(src, k)) rc[k] = src[k];\n              });\n              rc.version = sqlite3.version;\n              rc.vfsList = sqlite3.capi.sqlite3_js_vfs_list();\n              rc.opfsEnabled = !!sqlite3.opfs;\n              return rc;\n            },\n\n            export: function (ev) {\n              const db = getMsgDb(ev);\n              const response = {\n                byteArray: sqlite3.capi.sqlite3_js_db_export(db.pointer),\n                filename: db.filename,\n                mimetype: 'application/x-sqlite3',\n              };\n              wState.xfer.push(response.byteArray.buffer);\n              return response;\n            },\n\n            toss: function (ev) {\n              toss('Testing worker exception');\n            },\n\n            'opfs-tree': async function (ev) {\n              if (!sqlite3.opfs) toss('OPFS support is unavailable.');\n              const response = await sqlite3.opfs.treeList();\n              return response;\n            },\n          };\n\n          globalThis.onmessage = async function (ev) {\n            ev = ev.data;\n            let result,\n              dbId = ev.dbId,\n              evType = ev.type;\n            const arrivalTime = performance.now();\n            try {\n              if (\n                wMsgHandler.hasOwnProperty(evType) &&\n                wMsgHandler[evType] instanceof Function\n              ) {\n                result = await wMsgHandler[evType](ev);\n              } else {\n                toss('Unknown db worker message type:', ev.type);\n              }\n            } catch (err) {\n              evType = 'error';\n              result = {\n                operation: ev.type,\n                message: err.message,\n                errorClass: err.name,\n                input: ev,\n              };\n              if (err.stack) {\n                result.stack =\n                  'string' === typeof err.stack\n                    ? err.stack.split(/\\n\\s*/)\n                    : err.stack;\n              }\n              if (0)\n                sqlite3.config.warn(\n                  'Worker is propagating an exception to main thread.',\n                  'Reporting it _here_ for the stack trace:',\n                  err,\n                  result,\n                );\n            }\n            if (!dbId) {\n              dbId = result.dbId || getDefaultDbId();\n            }\n\n            wState.post(\n              {\n                type: evType,\n                dbId: dbId,\n                messageId: ev.messageId,\n                workerReceivedTime: arrivalTime,\n                workerRespondTime: performance.now(),\n                departureTime: ev.departureTime,\n\n                result: result,\n              },\n              wState.xfer,\n            );\n          };\n          globalThis.postMessage({\n            type: 'sqlite3-api',\n            result: 'worker1-ready',\n          });\n        }.bind({ sqlite3 });\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const wasm = sqlite3.wasm,\n          capi = sqlite3.capi,\n          toss = sqlite3.util.toss3;\n        const vfs = Object.create(null);\n        sqlite3.vfs = vfs;\n\n        capi.sqlite3_vfs.prototype.registerVfs = function (asDefault = false) {\n          if (!(this instanceof sqlite3.capi.sqlite3_vfs)) {\n            toss('Expecting a sqlite3_vfs-type argument.');\n          }\n          const rc = capi.sqlite3_vfs_register(this, asDefault ? 1 : 0);\n          if (rc) {\n            toss('sqlite3_vfs_register(', this, ') failed with rc', rc);\n          }\n          if (this.pointer !== capi.sqlite3_vfs_find(this.$zName)) {\n            toss(\n              'BUG: sqlite3_vfs_find(vfs.$zName) failed for just-installed VFS',\n              this,\n            );\n          }\n          return this;\n        };\n\n        vfs.installVfs = function (opt) {\n          let count = 0;\n          const propList = ['io', 'vfs'];\n          for (const key of propList) {\n            const o = opt[key];\n            if (o) {\n              ++count;\n              o.struct.installMethods(o.methods, !!o.applyArgcCheck);\n              if ('vfs' === key) {\n                if (!o.struct.$zName && 'string' === typeof o.name) {\n                  o.struct.addOnDispose(\n                    (o.struct.$zName = wasm.allocCString(o.name)),\n                  );\n                }\n                o.struct.registerVfs(!!o.asDefault);\n              }\n            }\n          }\n          if (!count)\n            toss(\n              'Misuse: installVfs() options object requires at least',\n              'one of:',\n              propList,\n            );\n          return this;\n        };\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const wasm = sqlite3.wasm,\n          capi = sqlite3.capi,\n          toss = sqlite3.util.toss3;\n        const vtab = Object.create(null);\n        sqlite3.vtab = vtab;\n\n        const sii = capi.sqlite3_index_info;\n\n        sii.prototype.nthConstraint = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nConstraint) return false;\n          const ptr =\n            this.$aConstraint +\n            sii.sqlite3_index_constraint.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_constraint(ptr);\n        };\n\n        sii.prototype.nthConstraintUsage = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nConstraint) return false;\n          const ptr =\n            this.$aConstraintUsage +\n            sii.sqlite3_index_constraint_usage.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_constraint_usage(ptr);\n        };\n\n        sii.prototype.nthOrderBy = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nOrderBy) return false;\n          const ptr =\n            this.$aOrderBy + sii.sqlite3_index_orderby.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_orderby(ptr);\n        };\n\n        const __xWrapFactory = function (methodName, StructType) {\n          return function (ptr, removeMapping = false) {\n            if (0 === arguments.length) ptr = new StructType();\n            if (ptr instanceof StructType) {\n              this.set(ptr.pointer, ptr);\n              return ptr;\n            } else if (!wasm.isPtr(ptr)) {\n              sqlite3.SQLite3Error.toss(\n                'Invalid argument to',\n                methodName + '()',\n              );\n            }\n            let rc = this.get(ptr);\n            if (removeMapping) this.delete(ptr);\n            return rc;\n          }.bind(new Map());\n        };\n\n        const StructPtrMapper = function (name, StructType) {\n          const __xWrap = __xWrapFactory(name, StructType);\n\n          return Object.assign(Object.create(null), {\n            StructType,\n\n            create: (ppOut) => {\n              const rc = __xWrap();\n              wasm.pokePtr(ppOut, rc.pointer);\n              return rc;\n            },\n\n            get: (pCObj) => __xWrap(pCObj),\n\n            unget: (pCObj) => __xWrap(pCObj, true),\n\n            dispose: (pCObj) => {\n              const o = __xWrap(pCObj, true);\n              if (o) o.dispose();\n            },\n          });\n        };\n\n        vtab.xVtab = StructPtrMapper('xVtab', capi.sqlite3_vtab);\n\n        vtab.xCursor = StructPtrMapper('xCursor', capi.sqlite3_vtab_cursor);\n\n        vtab.xIndexInfo = (pIdxInfo) => new capi.sqlite3_index_info(pIdxInfo);\n\n        vtab.xError = function f(methodName, err, defaultRc) {\n          if (f.errorReporter instanceof Function) {\n            try {\n              f.errorReporter(\n                'sqlite3_module::' + methodName + '(): ' + err.message,\n              );\n            } catch (e) {}\n          }\n          let rc;\n          if (err instanceof sqlite3.WasmAllocError) rc = capi.SQLITE_NOMEM;\n          else if (arguments.length > 2) rc = defaultRc;\n          else if (err instanceof sqlite3.SQLite3Error) rc = err.resultCode;\n          return rc || capi.SQLITE_ERROR;\n        };\n        vtab.xError.errorReporter = 1 ? console.error.bind(console) : false;\n\n        vtab.xRowid = (ppRowid64, value) => wasm.poke(ppRowid64, value, 'i64');\n\n        vtab.setupModule = function (opt) {\n          let createdMod = false;\n          const mod =\n            this instanceof capi.sqlite3_module\n              ? this\n              : opt.struct || (createdMod = new capi.sqlite3_module());\n          try {\n            const methods = opt.methods || toss(\"Missing 'methods' object.\");\n            for (const e of Object.entries({\n              xConnect: 'xCreate',\n              xDisconnect: 'xDestroy',\n            })) {\n              const k = e[0],\n                v = e[1];\n              if (true === methods[k]) methods[k] = methods[v];\n              else if (true === methods[v]) methods[v] = methods[k];\n            }\n            if (opt.catchExceptions) {\n              const fwrap = function (methodName, func) {\n                if (['xConnect', 'xCreate'].indexOf(methodName) >= 0) {\n                  return function (pDb, pAux, argc, argv, ppVtab, pzErr) {\n                    try {\n                      return func(...arguments) || 0;\n                    } catch (e) {\n                      if (!(e instanceof sqlite3.WasmAllocError)) {\n                        wasm.dealloc(wasm.peekPtr(pzErr));\n                        wasm.pokePtr(pzErr, wasm.allocCString(e.message));\n                      }\n                      return vtab.xError(methodName, e);\n                    }\n                  };\n                } else {\n                  return function (...args) {\n                    try {\n                      return func(...args) || 0;\n                    } catch (e) {\n                      return vtab.xError(methodName, e);\n                    }\n                  };\n                }\n              };\n              const mnames = [\n                'xCreate',\n                'xConnect',\n                'xBestIndex',\n                'xDisconnect',\n                'xDestroy',\n                'xOpen',\n                'xClose',\n                'xFilter',\n                'xNext',\n                'xEof',\n                'xColumn',\n                'xRowid',\n                'xUpdate',\n                'xBegin',\n                'xSync',\n                'xCommit',\n                'xRollback',\n                'xFindFunction',\n                'xRename',\n                'xSavepoint',\n                'xRelease',\n                'xRollbackTo',\n                'xShadowName',\n              ];\n              const remethods = Object.create(null);\n              for (const k of mnames) {\n                const m = methods[k];\n                if (!(m instanceof Function)) continue;\n                else if ('xConnect' === k && methods.xCreate === m) {\n                  remethods[k] = methods.xCreate;\n                } else if ('xCreate' === k && methods.xConnect === m) {\n                  remethods[k] = methods.xConnect;\n                } else {\n                  remethods[k] = fwrap(k, m);\n                }\n              }\n              mod.installMethods(remethods, false);\n            } else {\n              mod.installMethods(methods, !!opt.applyArgcCheck);\n            }\n            if (0 === mod.$iVersion) {\n              let v;\n              if ('number' === typeof opt.iVersion) v = opt.iVersion;\n              else if (mod.$xShadowName) v = 3;\n              else if (mod.$xSavePoint || mod.$xRelease || mod.$xRollbackTo)\n                v = 2;\n              else v = 1;\n              mod.$iVersion = v;\n            }\n          } catch (e) {\n            if (createdMod) createdMod.dispose();\n            throw e;\n          }\n          return mod;\n        };\n\n        capi.sqlite3_module.prototype.setupModule = function (opt) {\n          return vtab.setupModule.call(this, opt);\n        };\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const installOpfsVfs = function callee(options) {\n          if (!globalThis.SharedArrayBuffer || !globalThis.Atomics) {\n            return Promise.reject(\n              new Error(\n                'Cannot install OPFS: Missing SharedArrayBuffer and/or Atomics. ' +\n                  'The server must emit the COOP/COEP response headers to enable those. ' +\n                  'See https://sqlite.org/wasm/doc/trunk/persistence.md#coop-coep',\n              ),\n            );\n          } else if ('undefined' === typeof WorkerGlobalScope) {\n            return Promise.reject(\n              new Error(\n                'The OPFS sqlite3_vfs cannot run in the main thread ' +\n                  'because it requires Atomics.wait().',\n              ),\n            );\n          } else if (\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle ||\n            !globalThis.FileSystemFileHandle.prototype.createSyncAccessHandle ||\n            !navigator?.storage?.getDirectory\n          ) {\n            return Promise.reject(new Error('Missing required OPFS APIs.'));\n          }\n          if (!options || 'object' !== typeof options) {\n            options = Object.create(null);\n          }\n          const urlParams = new URL(globalThis.location.href).searchParams;\n          if (urlParams.has('opfs-disable')) {\n            return Promise.resolve(sqlite3);\n          }\n          if (undefined === options.verbose) {\n            options.verbose = urlParams.has('opfs-verbose')\n              ? +urlParams.get('opfs-verbose') || 2\n              : 1;\n          }\n          if (undefined === options.sanityChecks) {\n            options.sanityChecks = urlParams.has('opfs-sanity-check');\n          }\n          if (undefined === options.proxyUri) {\n            options.proxyUri = callee.defaultProxyUri;\n          }\n\n          if ('function' === typeof options.proxyUri) {\n            options.proxyUri = options.proxyUri();\n          }\n          const thePromise = new Promise(function (\n            promiseResolve_,\n            promiseReject_,\n          ) {\n            const loggers = [\n              sqlite3.config.error,\n              sqlite3.config.warn,\n              sqlite3.config.log,\n            ];\n            const logImpl = (level, ...args) => {\n              if (options.verbose > level)\n                loggers[level]('OPFS syncer:', ...args);\n            };\n            const log = (...args) => logImpl(2, ...args);\n            const warn = (...args) => logImpl(1, ...args);\n            const error = (...args) => logImpl(0, ...args);\n            const toss = sqlite3.util.toss;\n            const capi = sqlite3.capi;\n            const util = sqlite3.util;\n            const wasm = sqlite3.wasm;\n            const sqlite3_vfs = capi.sqlite3_vfs;\n            const sqlite3_file = capi.sqlite3_file;\n            const sqlite3_io_methods = capi.sqlite3_io_methods;\n\n            const opfsUtil = Object.create(null);\n\n            const thisThreadHasOPFS = () => {\n              return (\n                globalThis.FileSystemHandle &&\n                globalThis.FileSystemDirectoryHandle &&\n                globalThis.FileSystemFileHandle &&\n                globalThis.FileSystemFileHandle.prototype\n                  .createSyncAccessHandle &&\n                navigator?.storage?.getDirectory\n              );\n            };\n\n            opfsUtil.metrics = {\n              dump: function () {\n                let k,\n                  n = 0,\n                  t = 0,\n                  w = 0;\n                for (k in state.opIds) {\n                  const m = metrics[k];\n                  n += m.count;\n                  t += m.time;\n                  w += m.wait;\n                  m.avgTime = m.count && m.time ? m.time / m.count : 0;\n                  m.avgWait = m.count && m.wait ? m.wait / m.count : 0;\n                }\n                sqlite3.config.log(\n                  globalThis.location.href,\n                  'metrics for',\n                  globalThis.location.href,\n                  ':',\n                  metrics,\n                  '\\nTotal of',\n                  n,\n                  'op(s) for',\n                  t,\n                  'ms (incl. ' + w + ' ms of waiting on the async side)',\n                );\n                sqlite3.config.log('Serialization metrics:', metrics.s11n);\n                W.postMessage({ type: 'opfs-async-metrics' });\n              },\n              reset: function () {\n                let k;\n                const r = (m) => (m.count = m.time = m.wait = 0);\n                for (k in state.opIds) {\n                  r((metrics[k] = Object.create(null)));\n                }\n                let s = (metrics.s11n = Object.create(null));\n                s = s.serialize = Object.create(null);\n                s.count = s.time = 0;\n                s = metrics.s11n.deserialize = Object.create(null);\n                s.count = s.time = 0;\n              },\n            };\n            const opfsIoMethods = new sqlite3_io_methods();\n            const opfsVfs = new sqlite3_vfs().addOnDispose(() =>\n              opfsIoMethods.dispose(),\n            );\n            let promiseWasRejected = undefined;\n            const promiseReject = (err) => {\n              promiseWasRejected = true;\n              opfsVfs.dispose();\n              return promiseReject_(err);\n            };\n            const promiseResolve = () => {\n              promiseWasRejected = false;\n              return promiseResolve_(sqlite3);\n            };\n            const W = new Worker(\n              new URL('sqlite3-opfs-async-proxy.js', import.meta.url),\n            );\n            setTimeout(() => {\n              if (undefined === promiseWasRejected) {\n                promiseReject(\n                  new Error(\n                    'Timeout while waiting for OPFS async proxy worker.',\n                  ),\n                );\n              }\n            }, 4000);\n            W._originalOnError = W.onerror;\n            W.onerror = function (err) {\n              error('Error initializing OPFS asyncer:', err);\n              promiseReject(\n                new Error(\n                  'Loading OPFS async Worker failed for unknown reasons.',\n                ),\n              );\n            };\n            const pDVfs = capi.sqlite3_vfs_find(null);\n            const dVfs = pDVfs ? new sqlite3_vfs(pDVfs) : null;\n            opfsIoMethods.$iVersion = 1;\n            opfsVfs.$iVersion = 2;\n            opfsVfs.$szOsFile = capi.sqlite3_file.structInfo.sizeof;\n            opfsVfs.$mxPathname = 1024;\n            opfsVfs.$zName = wasm.allocCString('opfs');\n\n            opfsVfs.$xDlOpen =\n              opfsVfs.$xDlError =\n              opfsVfs.$xDlSym =\n              opfsVfs.$xDlClose =\n                null;\n            opfsVfs.addOnDispose(\n              '$zName',\n              opfsVfs.$zName,\n              'cleanup default VFS wrapper',\n              () => (dVfs ? dVfs.dispose() : null),\n            );\n\n            const state = Object.create(null);\n            state.verbose = options.verbose;\n            state.littleEndian = (() => {\n              const buffer = new ArrayBuffer(2);\n              new DataView(buffer).setInt16(0, 256, true);\n\n              return new Int16Array(buffer)[0] === 256;\n            })();\n\n            state.asyncIdleWaitTime = 150;\n\n            state.asyncS11nExceptions = 1;\n\n            state.fileBufferSize = 1024 * 64;\n            state.sabS11nOffset = state.fileBufferSize;\n\n            state.sabS11nSize = opfsVfs.$mxPathname * 2;\n\n            state.sabIO = new SharedArrayBuffer(\n              state.fileBufferSize + state.sabS11nSize,\n            );\n            state.opIds = Object.create(null);\n            const metrics = Object.create(null);\n            {\n              let i = 0;\n\n              state.opIds.whichOp = i++;\n\n              state.opIds.rc = i++;\n\n              state.opIds.xAccess = i++;\n              state.opIds.xClose = i++;\n              state.opIds.xDelete = i++;\n              state.opIds.xDeleteNoWait = i++;\n              state.opIds.xFileSize = i++;\n              state.opIds.xLock = i++;\n              state.opIds.xOpen = i++;\n              state.opIds.xRead = i++;\n              state.opIds.xSleep = i++;\n              state.opIds.xSync = i++;\n              state.opIds.xTruncate = i++;\n              state.opIds.xUnlock = i++;\n              state.opIds.xWrite = i++;\n              state.opIds.mkdir = i++;\n              state.opIds['opfs-async-metrics'] = i++;\n              state.opIds['opfs-async-shutdown'] = i++;\n\n              state.opIds.retry = i++;\n              state.sabOP = new SharedArrayBuffer(i * 4);\n              opfsUtil.metrics.reset();\n            }\n\n            state.sq3Codes = Object.create(null);\n            [\n              'SQLITE_ACCESS_EXISTS',\n              'SQLITE_ACCESS_READWRITE',\n              'SQLITE_BUSY',\n              'SQLITE_CANTOPEN',\n              'SQLITE_ERROR',\n              'SQLITE_IOERR',\n              'SQLITE_IOERR_ACCESS',\n              'SQLITE_IOERR_CLOSE',\n              'SQLITE_IOERR_DELETE',\n              'SQLITE_IOERR_FSYNC',\n              'SQLITE_IOERR_LOCK',\n              'SQLITE_IOERR_READ',\n              'SQLITE_IOERR_SHORT_READ',\n              'SQLITE_IOERR_TRUNCATE',\n              'SQLITE_IOERR_UNLOCK',\n              'SQLITE_IOERR_WRITE',\n              'SQLITE_LOCK_EXCLUSIVE',\n              'SQLITE_LOCK_NONE',\n              'SQLITE_LOCK_PENDING',\n              'SQLITE_LOCK_RESERVED',\n              'SQLITE_LOCK_SHARED',\n              'SQLITE_LOCKED',\n              'SQLITE_MISUSE',\n              'SQLITE_NOTFOUND',\n              'SQLITE_OPEN_CREATE',\n              'SQLITE_OPEN_DELETEONCLOSE',\n              'SQLITE_OPEN_MAIN_DB',\n              'SQLITE_OPEN_READONLY',\n            ].forEach((k) => {\n              if (undefined === (state.sq3Codes[k] = capi[k])) {\n                toss('Maintenance required: not found:', k);\n              }\n            });\n            state.opfsFlags = Object.assign(Object.create(null), {\n              OPFS_UNLOCK_ASAP: 0x01,\n\n              OPFS_UNLINK_BEFORE_OPEN: 0x02,\n\n              defaultUnlockAsap: false,\n            });\n\n            const opRun = (op, ...args) => {\n              const opNdx = state.opIds[op] || toss('Invalid op ID:', op);\n              state.s11n.serialize(...args);\n              Atomics.store(state.sabOPView, state.opIds.rc, -1);\n              Atomics.store(state.sabOPView, state.opIds.whichOp, opNdx);\n              Atomics.notify(state.sabOPView, state.opIds.whichOp);\n              const t = performance.now();\n              while (\n                'not-equal' !==\n                Atomics.wait(state.sabOPView, state.opIds.rc, -1)\n              ) {}\n\n              const rc = Atomics.load(state.sabOPView, state.opIds.rc);\n              metrics[op].wait += performance.now() - t;\n              if (rc && state.asyncS11nExceptions) {\n                const err = state.s11n.deserialize();\n                if (err) error(op + '() async error:', ...err);\n              }\n              return rc;\n            };\n\n            opfsUtil.debug = {\n              asyncShutdown: () => {\n                warn(\n                  'Shutting down OPFS async listener. The OPFS VFS will no longer work.',\n                );\n                opRun('opfs-async-shutdown');\n              },\n              asyncRestart: () => {\n                warn(\n                  'Attempting to restart OPFS VFS async listener. Might work, might not.',\n                );\n                W.postMessage({ type: 'opfs-async-restart' });\n              },\n            };\n\n            const initS11n = () => {\n              if (state.s11n) return state.s11n;\n              const textDecoder = new TextDecoder(),\n                textEncoder = new TextEncoder('utf-8'),\n                viewU8 = new Uint8Array(\n                  state.sabIO,\n                  state.sabS11nOffset,\n                  state.sabS11nSize,\n                ),\n                viewDV = new DataView(\n                  state.sabIO,\n                  state.sabS11nOffset,\n                  state.sabS11nSize,\n                );\n              state.s11n = Object.create(null);\n\n              const TypeIds = Object.create(null);\n              TypeIds.number = {\n                id: 1,\n                size: 8,\n                getter: 'getFloat64',\n                setter: 'setFloat64',\n              };\n              TypeIds.bigint = {\n                id: 2,\n                size: 8,\n                getter: 'getBigInt64',\n                setter: 'setBigInt64',\n              };\n              TypeIds.boolean = {\n                id: 3,\n                size: 4,\n                getter: 'getInt32',\n                setter: 'setInt32',\n              };\n              TypeIds.string = { id: 4 };\n\n              const getTypeId = (v) =>\n                TypeIds[typeof v] ||\n                toss(\n                  'Maintenance required: this value type cannot be serialized.',\n                  v,\n                );\n              const getTypeIdById = (tid) => {\n                switch (tid) {\n                  case TypeIds.number.id:\n                    return TypeIds.number;\n                  case TypeIds.bigint.id:\n                    return TypeIds.bigint;\n                  case TypeIds.boolean.id:\n                    return TypeIds.boolean;\n                  case TypeIds.string.id:\n                    return TypeIds.string;\n                  default:\n                    toss('Invalid type ID:', tid);\n                }\n              };\n\n              state.s11n.deserialize = function (clear = false) {\n                ++metrics.s11n.deserialize.count;\n                const t = performance.now();\n                const argc = viewU8[0];\n                const rc = argc ? [] : null;\n                if (argc) {\n                  const typeIds = [];\n                  let offset = 1,\n                    i,\n                    n,\n                    v;\n                  for (i = 0; i < argc; ++i, ++offset) {\n                    typeIds.push(getTypeIdById(viewU8[offset]));\n                  }\n                  for (i = 0; i < argc; ++i) {\n                    const t = typeIds[i];\n                    if (t.getter) {\n                      v = viewDV[t.getter](offset, state.littleEndian);\n                      offset += t.size;\n                    } else {\n                      n = viewDV.getInt32(offset, state.littleEndian);\n                      offset += 4;\n                      v = textDecoder.decode(viewU8.slice(offset, offset + n));\n                      offset += n;\n                    }\n                    rc.push(v);\n                  }\n                }\n                if (clear) viewU8[0] = 0;\n\n                metrics.s11n.deserialize.time += performance.now() - t;\n                return rc;\n              };\n\n              state.s11n.serialize = function (...args) {\n                const t = performance.now();\n                ++metrics.s11n.serialize.count;\n                if (args.length) {\n                  const typeIds = [];\n                  let i = 0,\n                    offset = 1;\n                  viewU8[0] = args.length & 0xff;\n                  for (; i < args.length; ++i, ++offset) {\n                    typeIds.push(getTypeId(args[i]));\n                    viewU8[offset] = typeIds[i].id;\n                  }\n                  for (i = 0; i < args.length; ++i) {\n                    const t = typeIds[i];\n                    if (t.setter) {\n                      viewDV[t.setter](offset, args[i], state.littleEndian);\n                      offset += t.size;\n                    } else {\n                      const s = textEncoder.encode(args[i]);\n                      viewDV.setInt32(offset, s.byteLength, state.littleEndian);\n                      offset += 4;\n                      viewU8.set(s, offset);\n                      offset += s.byteLength;\n                    }\n                  }\n                } else {\n                  viewU8[0] = 0;\n                }\n                metrics.s11n.serialize.time += performance.now() - t;\n              };\n              return state.s11n;\n            };\n\n            const randomFilename = function f(len = 16) {\n              if (!f._chars) {\n                f._chars =\n                  'abcdefghijklmnopqrstuvwxyz' +\n                  'ABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n                  '012346789';\n                f._n = f._chars.length;\n              }\n              const a = [];\n              let i = 0;\n              for (; i < len; ++i) {\n                const ndx = (Math.random() * (f._n * 64)) % f._n | 0;\n                a[i] = f._chars[ndx];\n              }\n              return a.join('');\n            };\n\n            const __openFiles = Object.create(null);\n\n            const opTimer = Object.create(null);\n            opTimer.op = undefined;\n            opTimer.start = undefined;\n            const mTimeStart = (op) => {\n              opTimer.start = performance.now();\n              opTimer.op = op;\n              ++metrics[op].count;\n            };\n            const mTimeEnd = () =>\n              (metrics[opTimer.op].time += performance.now() - opTimer.start);\n\n            const ioSyncWrappers = {\n              xCheckReservedLock: function (pFile, pOut) {\n                if (1) {\n                  wasm.poke(pOut, 0, 'i32');\n                } else {\n                  const f = __openFiles[pFile];\n                  wasm.poke(pOut, f.lockType ? 1 : 0, 'i32');\n                }\n                return 0;\n              },\n              xClose: function (pFile) {\n                mTimeStart('xClose');\n                let rc = 0;\n                const f = __openFiles[pFile];\n                if (f) {\n                  delete __openFiles[pFile];\n                  rc = opRun('xClose', pFile);\n                  if (f.sq3File) f.sq3File.dispose();\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xDeviceCharacteristics: function (pFile) {\n                return capi.SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN;\n              },\n              xFileControl: function (pFile, opId, pArg) {\n                return capi.SQLITE_NOTFOUND;\n              },\n              xFileSize: function (pFile, pSz64) {\n                mTimeStart('xFileSize');\n                let rc = opRun('xFileSize', pFile);\n                if (0 == rc) {\n                  try {\n                    const sz = state.s11n.deserialize()[0];\n                    wasm.poke(pSz64, sz, 'i64');\n                  } catch (e) {\n                    error('Unexpected error reading xFileSize() result:', e);\n                    rc = state.sq3Codes.SQLITE_IOERR;\n                  }\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xLock: function (pFile, lockType) {\n                mTimeStart('xLock');\n                const f = __openFiles[pFile];\n                let rc = 0;\n\n                if (!f.lockType) {\n                  rc = opRun('xLock', pFile, lockType);\n                  if (0 === rc) f.lockType = lockType;\n                } else {\n                  f.lockType = lockType;\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xRead: function (pFile, pDest, n, offset64) {\n                mTimeStart('xRead');\n                const f = __openFiles[pFile];\n                let rc;\n                try {\n                  rc = opRun('xRead', pFile, n, Number(offset64));\n                  if (0 === rc || capi.SQLITE_IOERR_SHORT_READ === rc) {\n                    wasm.heap8u().set(f.sabView.subarray(0, n), pDest);\n                  }\n                } catch (e) {\n                  error('xRead(', arguments, ') failed:', e, f);\n                  rc = capi.SQLITE_IOERR_READ;\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xSync: function (pFile, flags) {\n                mTimeStart('xSync');\n                ++metrics.xSync.count;\n                const rc = opRun('xSync', pFile, flags);\n                mTimeEnd();\n                return rc;\n              },\n              xTruncate: function (pFile, sz64) {\n                mTimeStart('xTruncate');\n                const rc = opRun('xTruncate', pFile, Number(sz64));\n                mTimeEnd();\n                return rc;\n              },\n              xUnlock: function (pFile, lockType) {\n                mTimeStart('xUnlock');\n                const f = __openFiles[pFile];\n                let rc = 0;\n                if (capi.SQLITE_LOCK_NONE === lockType && f.lockType) {\n                  rc = opRun('xUnlock', pFile, lockType);\n                }\n                if (0 === rc) f.lockType = lockType;\n                mTimeEnd();\n                return rc;\n              },\n              xWrite: function (pFile, pSrc, n, offset64) {\n                mTimeStart('xWrite');\n                const f = __openFiles[pFile];\n                let rc;\n                try {\n                  f.sabView.set(wasm.heap8u().subarray(pSrc, pSrc + n));\n                  rc = opRun('xWrite', pFile, n, Number(offset64));\n                } catch (e) {\n                  error('xWrite(', arguments, ') failed:', e, f);\n                  rc = capi.SQLITE_IOERR_WRITE;\n                }\n                mTimeEnd();\n                return rc;\n              },\n            };\n\n            const vfsSyncWrappers = {\n              xAccess: function (pVfs, zName, flags, pOut) {\n                mTimeStart('xAccess');\n                const rc = opRun('xAccess', wasm.cstrToJs(zName));\n                wasm.poke(pOut, rc ? 0 : 1, 'i32');\n                mTimeEnd();\n                return 0;\n              },\n              xCurrentTime: function (pVfs, pOut) {\n                wasm.poke(\n                  pOut,\n                  2440587.5 + new Date().getTime() / 86400000,\n                  'double',\n                );\n                return 0;\n              },\n              xCurrentTimeInt64: function (pVfs, pOut) {\n                wasm.poke(\n                  pOut,\n                  2440587.5 * 86400000 + new Date().getTime(),\n                  'i64',\n                );\n                return 0;\n              },\n              xDelete: function (pVfs, zName, doSyncDir) {\n                mTimeStart('xDelete');\n                const rc = opRun(\n                  'xDelete',\n                  wasm.cstrToJs(zName),\n                  doSyncDir,\n                  false,\n                );\n                mTimeEnd();\n                return rc;\n              },\n              xFullPathname: function (pVfs, zName, nOut, pOut) {\n                const i = wasm.cstrncpy(pOut, zName, nOut);\n                return i < nOut ? 0 : capi.SQLITE_CANTOPEN;\n              },\n              xGetLastError: function (pVfs, nOut, pOut) {\n                warn('OPFS xGetLastError() has nothing sensible to return.');\n                return 0;\n              },\n\n              xOpen: function f(pVfs, zName, pFile, flags, pOutFlags) {\n                mTimeStart('xOpen');\n                let opfsFlags = 0;\n                if (0 === zName) {\n                  zName = randomFilename();\n                } else if (wasm.isPtr(zName)) {\n                  if (capi.sqlite3_uri_boolean(zName, 'opfs-unlock-asap', 0)) {\n                    opfsFlags |= state.opfsFlags.OPFS_UNLOCK_ASAP;\n                  }\n                  if (\n                    capi.sqlite3_uri_boolean(zName, 'delete-before-open', 0)\n                  ) {\n                    opfsFlags |= state.opfsFlags.OPFS_UNLINK_BEFORE_OPEN;\n                  }\n                  zName = wasm.cstrToJs(zName);\n                }\n                const fh = Object.create(null);\n                fh.fid = pFile;\n                fh.filename = zName;\n                fh.sab = new SharedArrayBuffer(state.fileBufferSize);\n                fh.flags = flags;\n                const rc = opRun('xOpen', pFile, zName, flags, opfsFlags);\n                if (!rc) {\n                  if (fh.readOnly) {\n                    wasm.poke(pOutFlags, capi.SQLITE_OPEN_READONLY, 'i32');\n                  }\n                  __openFiles[pFile] = fh;\n                  fh.sabView = state.sabFileBufView;\n                  fh.sq3File = new sqlite3_file(pFile);\n                  fh.sq3File.$pMethods = opfsIoMethods.pointer;\n                  fh.lockType = capi.SQLITE_LOCK_NONE;\n                }\n                mTimeEnd();\n                return rc;\n              },\n            };\n\n            if (dVfs) {\n              opfsVfs.$xRandomness = dVfs.$xRandomness;\n              opfsVfs.$xSleep = dVfs.$xSleep;\n            }\n            if (!opfsVfs.$xRandomness) {\n              vfsSyncWrappers.xRandomness = function (pVfs, nOut, pOut) {\n                const heap = wasm.heap8u();\n                let i = 0;\n                for (; i < nOut; ++i)\n                  heap[pOut + i] = (Math.random() * 255000) & 0xff;\n                return i;\n              };\n            }\n            if (!opfsVfs.$xSleep) {\n              vfsSyncWrappers.xSleep = function (pVfs, ms) {\n                Atomics.wait(state.sabOPView, state.opIds.xSleep, 0, ms);\n                return 0;\n              };\n            }\n\n            opfsUtil.getResolvedPath = function (filename, splitIt) {\n              const p = new URL(filename, 'file://irrelevant').pathname;\n              return splitIt ? p.split('/').filter((v) => !!v) : p;\n            };\n\n            opfsUtil.getDirForFilename = async function f(\n              absFilename,\n              createDirs = false,\n            ) {\n              const path = opfsUtil.getResolvedPath(absFilename, true);\n              const filename = path.pop();\n              let dh = opfsUtil.rootDirectory;\n              for (const dirName of path) {\n                if (dirName) {\n                  dh = await dh.getDirectoryHandle(dirName, {\n                    create: !!createDirs,\n                  });\n                }\n              }\n              return [dh, filename];\n            };\n\n            opfsUtil.mkdir = async function (absDirName) {\n              try {\n                await opfsUtil.getDirForFilename(\n                  absDirName + '/filepart',\n                  true,\n                );\n                return true;\n              } catch (e) {\n                return false;\n              }\n            };\n\n            opfsUtil.entryExists = async function (fsEntryName) {\n              try {\n                const [dh, fn] = await opfsUtil.getDirForFilename(fsEntryName);\n                await dh.getFileHandle(fn);\n                return true;\n              } catch (e) {\n                return false;\n              }\n            };\n\n            opfsUtil.randomFilename = randomFilename;\n\n            opfsUtil.treeList = async function () {\n              const doDir = async function callee(dirHandle, tgt) {\n                tgt.name = dirHandle.name;\n                tgt.dirs = [];\n                tgt.files = [];\n                for await (const handle of dirHandle.values()) {\n                  if ('directory' === handle.kind) {\n                    const subDir = Object.create(null);\n                    tgt.dirs.push(subDir);\n                    await callee(handle, subDir);\n                  } else {\n                    tgt.files.push(handle.name);\n                  }\n                }\n              };\n              const root = Object.create(null);\n              await doDir(opfsUtil.rootDirectory, root);\n              return root;\n            };\n\n            opfsUtil.rmfr = async function () {\n              const dir = opfsUtil.rootDirectory,\n                opt = { recurse: true };\n              for await (const handle of dir.values()) {\n                dir.removeEntry(handle.name, opt);\n              }\n            };\n\n            opfsUtil.unlink = async function (\n              fsEntryName,\n              recursive = false,\n              throwOnError = false,\n            ) {\n              try {\n                const [hDir, filenamePart] = await opfsUtil.getDirForFilename(\n                  fsEntryName,\n                  false,\n                );\n                await hDir.removeEntry(filenamePart, { recursive });\n                return true;\n              } catch (e) {\n                if (throwOnError) {\n                  throw new Error(\n                    'unlink(',\n                    arguments[0],\n                    ') failed: ' + e.message,\n                    {\n                      cause: e,\n                    },\n                  );\n                }\n                return false;\n              }\n            };\n\n            opfsUtil.traverse = async function (opt) {\n              const defaultOpt = {\n                recursive: true,\n                directory: opfsUtil.rootDirectory,\n              };\n              if ('function' === typeof opt) {\n                opt = { callback: opt };\n              }\n              opt = Object.assign(defaultOpt, opt || {});\n              const doDir = async function callee(dirHandle, depth) {\n                for await (const handle of dirHandle.values()) {\n                  if (false === opt.callback(handle, dirHandle, depth))\n                    return false;\n                  else if (opt.recursive && 'directory' === handle.kind) {\n                    if (false === (await callee(handle, depth + 1))) break;\n                  }\n                }\n              };\n              doDir(opt.directory, 0);\n            };\n\n            const importDbChunked = async function (filename, callback) {\n              const [hDir, fnamePart] = await opfsUtil.getDirForFilename(\n                filename,\n                true,\n              );\n              const hFile = await hDir.getFileHandle(fnamePart, {\n                create: true,\n              });\n              let sah = await hFile.createSyncAccessHandle();\n              let nWrote = 0,\n                chunk,\n                checkedHeader = false,\n                err = false;\n              try {\n                sah.truncate(0);\n                while (undefined !== (chunk = await callback())) {\n                  if (chunk instanceof ArrayBuffer)\n                    chunk = new Uint8Array(chunk);\n                  if (0 === nWrote && chunk.byteLength >= 15) {\n                    util.affirmDbHeader(chunk);\n                    checkedHeader = true;\n                  }\n                  sah.write(chunk, { at: nWrote });\n                  nWrote += chunk.byteLength;\n                }\n                if (nWrote < 512 || 0 !== nWrote % 512) {\n                  toss(\n                    'Input size',\n                    nWrote,\n                    'is not correct for an SQLite database.',\n                  );\n                }\n                if (!checkedHeader) {\n                  const header = new Uint8Array(20);\n                  sah.read(header, { at: 0 });\n                  util.affirmDbHeader(header);\n                }\n                sah.write(new Uint8Array([1, 1]), { at: 18 });\n                return nWrote;\n              } catch (e) {\n                await sah.close();\n                sah = undefined;\n                await hDir.removeEntry(fnamePart).catch(() => {});\n                throw e;\n              } finally {\n                if (sah) await sah.close();\n              }\n            };\n\n            opfsUtil.importDb = async function (filename, bytes) {\n              if (bytes instanceof Function) {\n                return importDbChunked(filename, bytes);\n              }\n              if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n              util.affirmIsDb(bytes);\n              const n = bytes.byteLength;\n              const [hDir, fnamePart] = await opfsUtil.getDirForFilename(\n                filename,\n                true,\n              );\n              let sah,\n                err,\n                nWrote = 0;\n              try {\n                const hFile = await hDir.getFileHandle(fnamePart, {\n                  create: true,\n                });\n                sah = await hFile.createSyncAccessHandle();\n                sah.truncate(0);\n                nWrote = sah.write(bytes, { at: 0 });\n                if (nWrote != n) {\n                  toss(\n                    'Expected to write ' +\n                      n +\n                      ' bytes but wrote ' +\n                      nWrote +\n                      '.',\n                  );\n                }\n                sah.write(new Uint8Array([1, 1]), { at: 18 });\n                return nWrote;\n              } catch (e) {\n                if (sah) {\n                  await sah.close();\n                  sah = undefined;\n                }\n                await hDir.removeEntry(fnamePart).catch(() => {});\n                throw e;\n              } finally {\n                if (sah) await sah.close();\n              }\n            };\n\n            if (sqlite3.oo1) {\n              const OpfsDb = function (...args) {\n                const opt = sqlite3.oo1.DB.dbCtorHelper.normalizeArgs(...args);\n                opt.vfs = opfsVfs.$zName;\n                sqlite3.oo1.DB.dbCtorHelper.call(this, opt);\n              };\n              OpfsDb.prototype = Object.create(sqlite3.oo1.DB.prototype);\n              sqlite3.oo1.OpfsDb = OpfsDb;\n              OpfsDb.importDb = opfsUtil.importDb;\n              sqlite3.oo1.DB.dbCtorHelper.setVfsPostOpenSql(\n                opfsVfs.pointer,\n                function (oo1Db, sqlite3) {\n                  sqlite3.capi.sqlite3_busy_timeout(oo1Db, 10000);\n                  sqlite3.capi.sqlite3_exec(\n                    oo1Db,\n                    [\n                      'pragma journal_mode=DELETE;',\n\n                      'pragma cache_size=-16384;',\n                    ],\n                    0,\n                    0,\n                    0,\n                  );\n                },\n              );\n            }\n\n            const sanityCheck = function () {\n              const scope = wasm.scopedAllocPush();\n              const sq3File = new sqlite3_file();\n              try {\n                const fid = sq3File.pointer;\n                const openFlags =\n                  capi.SQLITE_OPEN_CREATE |\n                  capi.SQLITE_OPEN_READWRITE |\n                  capi.SQLITE_OPEN_MAIN_DB;\n                const pOut = wasm.scopedAlloc(8);\n                const dbFile = '/sanity/check/file' + randomFilename(8);\n                const zDbFile = wasm.scopedAllocCString(dbFile);\n                let rc;\n                state.s11n.serialize('This is ä string.');\n                rc = state.s11n.deserialize();\n                log('deserialize() says:', rc);\n                if ('This is ä string.' !== rc[0]) toss('String d13n error.');\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                log('xAccess(', dbFile, ') exists ?=', rc);\n                rc = vfsSyncWrappers.xOpen(\n                  opfsVfs.pointer,\n                  zDbFile,\n                  fid,\n                  openFlags,\n                  pOut,\n                );\n                log(\n                  'open rc =',\n                  rc,\n                  'state.sabOPView[xOpen] =',\n                  state.sabOPView[state.opIds.xOpen],\n                );\n                if (0 !== rc) {\n                  error('open failed with code', rc);\n                  return;\n                }\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                if (!rc) toss('xAccess() failed to detect file.');\n                rc = ioSyncWrappers.xSync(sq3File.pointer, 0);\n                if (rc) toss('sync failed w/ rc', rc);\n                rc = ioSyncWrappers.xTruncate(sq3File.pointer, 1024);\n                if (rc) toss('truncate failed w/ rc', rc);\n                wasm.poke(pOut, 0, 'i64');\n                rc = ioSyncWrappers.xFileSize(sq3File.pointer, pOut);\n                if (rc) toss('xFileSize failed w/ rc', rc);\n                log('xFileSize says:', wasm.peek(pOut, 'i64'));\n                rc = ioSyncWrappers.xWrite(sq3File.pointer, zDbFile, 10, 1);\n                if (rc) toss('xWrite() failed!');\n                const readBuf = wasm.scopedAlloc(16);\n                rc = ioSyncWrappers.xRead(sq3File.pointer, readBuf, 6, 2);\n                wasm.poke(readBuf + 6, 0);\n                let jRead = wasm.cstrToJs(readBuf);\n                log('xRead() got:', jRead);\n                if ('sanity' !== jRead) toss('Unexpected xRead() value.');\n                if (vfsSyncWrappers.xSleep) {\n                  log('xSleep()ing before close()ing...');\n                  vfsSyncWrappers.xSleep(opfsVfs.pointer, 2000);\n                  log('waking up from xSleep()');\n                }\n                rc = ioSyncWrappers.xClose(fid);\n                log('xClose rc =', rc, 'sabOPView =', state.sabOPView);\n                log('Deleting file:', dbFile);\n                vfsSyncWrappers.xDelete(opfsVfs.pointer, zDbFile, 0x1234);\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                if (rc)\n                  toss(\n                    'Expecting 0 from xAccess(',\n                    dbFile,\n                    ') after xDelete().',\n                  );\n                warn('End of OPFS sanity checks.');\n              } finally {\n                sq3File.dispose();\n                wasm.scopedAllocPop(scope);\n              }\n            };\n\n            W.onmessage = function ({ data }) {\n              switch (data.type) {\n                case 'opfs-unavailable':\n                  promiseReject(new Error(data.payload.join(' ')));\n                  break;\n                case 'opfs-async-loaded':\n                  W.postMessage({ type: 'opfs-async-init', args: state });\n                  break;\n                case 'opfs-async-inited': {\n                  if (true === promiseWasRejected) {\n                    break;\n                  }\n                  try {\n                    sqlite3.vfs.installVfs({\n                      io: { struct: opfsIoMethods, methods: ioSyncWrappers },\n                      vfs: { struct: opfsVfs, methods: vfsSyncWrappers },\n                    });\n                    state.sabOPView = new Int32Array(state.sabOP);\n                    state.sabFileBufView = new Uint8Array(\n                      state.sabIO,\n                      0,\n                      state.fileBufferSize,\n                    );\n                    state.sabS11nView = new Uint8Array(\n                      state.sabIO,\n                      state.sabS11nOffset,\n                      state.sabS11nSize,\n                    );\n                    initS11n();\n                    if (options.sanityChecks) {\n                      warn(\n                        'Running sanity checks because of opfs-sanity-check URL arg...',\n                      );\n                      sanityCheck();\n                    }\n                    if (thisThreadHasOPFS()) {\n                      navigator.storage\n                        .getDirectory()\n                        .then((d) => {\n                          W.onerror = W._originalOnError;\n                          delete W._originalOnError;\n                          sqlite3.opfs = opfsUtil;\n                          opfsUtil.rootDirectory = d;\n                          log('End of OPFS sqlite3_vfs setup.', opfsVfs);\n                          promiseResolve();\n                        })\n                        .catch(promiseReject);\n                    } else {\n                      promiseResolve();\n                    }\n                  } catch (e) {\n                    error(e);\n                    promiseReject(e);\n                  }\n                  break;\n                }\n                default: {\n                  const errMsg =\n                    'Unexpected message from the OPFS async worker: ' +\n                    JSON.stringify(data);\n                  error(errMsg);\n                  promiseReject(new Error(errMsg));\n                  break;\n                }\n              }\n            };\n          });\n          return thePromise;\n        };\n        installOpfsVfs.defaultProxyUri = 'sqlite3-opfs-async-proxy.js';\n        globalThis.sqlite3ApiBootstrap.initializersAsync.push(\n          async (sqlite3) => {\n            try {\n              let proxyJs = installOpfsVfs.defaultProxyUri;\n              if (sqlite3.scriptInfo.sqlite3Dir) {\n                installOpfsVfs.defaultProxyUri =\n                  sqlite3.scriptInfo.sqlite3Dir + proxyJs;\n              }\n              return installOpfsVfs().catch((e) => {\n                sqlite3.config.warn(\n                  'Ignoring inability to install OPFS sqlite3_vfs:',\n                  e.message,\n                );\n              });\n            } catch (e) {\n              sqlite3.config.error('installOpfsVfs() exception:', e);\n              return Promise.reject(e);\n            }\n          },\n        );\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        'use strict';\n        const toss = sqlite3.util.toss;\n        const toss3 = sqlite3.util.toss3;\n        const initPromises = Object.create(null);\n        const capi = sqlite3.capi;\n        const util = sqlite3.util;\n        const wasm = sqlite3.wasm;\n\n        const SECTOR_SIZE = 4096;\n        const HEADER_MAX_PATH_SIZE = 512;\n        const HEADER_FLAGS_SIZE = 4;\n        const HEADER_DIGEST_SIZE = 8;\n        const HEADER_CORPUS_SIZE = HEADER_MAX_PATH_SIZE + HEADER_FLAGS_SIZE;\n        const HEADER_OFFSET_FLAGS = HEADER_MAX_PATH_SIZE;\n        const HEADER_OFFSET_DIGEST = HEADER_CORPUS_SIZE;\n        const HEADER_OFFSET_DATA = SECTOR_SIZE;\n\n        const PERSISTENT_FILE_TYPES =\n          capi.SQLITE_OPEN_MAIN_DB |\n          capi.SQLITE_OPEN_MAIN_JOURNAL |\n          capi.SQLITE_OPEN_SUPER_JOURNAL |\n          capi.SQLITE_OPEN_WAL;\n\n        const OPAQUE_DIR_NAME = '.opaque';\n\n        const getRandomName = () => Math.random().toString(36).slice(2);\n\n        const textDecoder = new TextDecoder();\n        const textEncoder = new TextEncoder();\n\n        const optionDefaults = Object.assign(Object.create(null), {\n          name: 'opfs-sahpool',\n          directory: undefined,\n          initialCapacity: 6,\n          clearOnInit: false,\n\n          verbosity: 2,\n        });\n\n        const loggers = [\n          sqlite3.config.error,\n          sqlite3.config.warn,\n          sqlite3.config.log,\n        ];\n        const log = sqlite3.config.log;\n        const warn = sqlite3.config.warn;\n        const error = sqlite3.config.error;\n\n        const __mapVfsToPool = new Map();\n        const getPoolForVfs = (pVfs) => __mapVfsToPool.get(pVfs);\n        const setPoolForVfs = (pVfs, pool) => {\n          if (pool) __mapVfsToPool.set(pVfs, pool);\n          else __mapVfsToPool.delete(pVfs);\n        };\n\n        const __mapSqlite3File = new Map();\n        const getPoolForPFile = (pFile) => __mapSqlite3File.get(pFile);\n        const setPoolForPFile = (pFile, pool) => {\n          if (pool) __mapSqlite3File.set(pFile, pool);\n          else __mapSqlite3File.delete(pFile);\n        };\n\n        const ioMethods = {\n          xCheckReservedLock: function (pFile, pOut) {\n            const pool = getPoolForPFile(pFile);\n            pool.log('xCheckReservedLock');\n            pool.storeErr();\n            wasm.poke32(pOut, 1);\n            return 0;\n          },\n          xClose: function (pFile) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            if (file) {\n              try {\n                pool.log(`xClose ${file.path}`);\n                pool.mapS3FileToOFile(pFile, false);\n                file.sah.flush();\n                if (file.flags & capi.SQLITE_OPEN_DELETEONCLOSE) {\n                  pool.deletePath(file.path);\n                }\n              } catch (e) {\n                return pool.storeErr(e, capi.SQLITE_IOERR);\n              }\n            }\n            return 0;\n          },\n          xDeviceCharacteristics: function (pFile) {\n            return capi.SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN;\n          },\n          xFileControl: function (pFile, opId, pArg) {\n            return capi.SQLITE_NOTFOUND;\n          },\n          xFileSize: function (pFile, pSz64) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xFileSize`);\n            const file = pool.getOFileForS3File(pFile);\n            const size = file.sah.getSize() - HEADER_OFFSET_DATA;\n\n            wasm.poke64(pSz64, BigInt(size));\n            return 0;\n          },\n          xLock: function (pFile, lockType) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xLock ${lockType}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            file.lockType = lockType;\n            return 0;\n          },\n          xRead: function (pFile, pDest, n, offset64) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            pool.log(`xRead ${file.path} ${n} @ ${offset64}`);\n            try {\n              const nRead = file.sah.read(\n                wasm.heap8u().subarray(pDest, pDest + n),\n                { at: HEADER_OFFSET_DATA + Number(offset64) },\n              );\n              if (nRead < n) {\n                wasm.heap8u().fill(0, pDest + nRead, pDest + n);\n                return capi.SQLITE_IOERR_SHORT_READ;\n              }\n              return 0;\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n          xSectorSize: function (pFile) {\n            return SECTOR_SIZE;\n          },\n          xSync: function (pFile, flags) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xSync ${flags}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n\n            try {\n              file.sah.flush();\n              return 0;\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n          xTruncate: function (pFile, sz64) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xTruncate ${sz64}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n\n            try {\n              file.sah.truncate(HEADER_OFFSET_DATA + Number(sz64));\n              return 0;\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n          xUnlock: function (pFile, lockType) {\n            const pool = getPoolForPFile(pFile);\n            pool.log('xUnlock');\n            const file = pool.getOFileForS3File(pFile);\n            file.lockType = lockType;\n            return 0;\n          },\n          xWrite: function (pFile, pSrc, n, offset64) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            pool.log(`xWrite ${file.path} ${n} ${offset64}`);\n            try {\n              const nBytes = file.sah.write(\n                wasm.heap8u().subarray(pSrc, pSrc + n),\n                { at: HEADER_OFFSET_DATA + Number(offset64) },\n              );\n              return n === nBytes ? 0 : toss('Unknown write() failure.');\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n        };\n\n        const opfsIoMethods = new capi.sqlite3_io_methods();\n        opfsIoMethods.$iVersion = 1;\n        sqlite3.vfs.installVfs({\n          io: { struct: opfsIoMethods, methods: ioMethods },\n        });\n\n        const vfsMethods = {\n          xAccess: function (pVfs, zName, flags, pOut) {\n            const pool = getPoolForVfs(pVfs);\n            pool.storeErr();\n            try {\n              const name = pool.getPath(zName);\n              wasm.poke32(pOut, pool.hasFilename(name) ? 1 : 0);\n            } catch (e) {\n              wasm.poke32(pOut, 0);\n            }\n            return 0;\n          },\n          xCurrentTime: function (pVfs, pOut) {\n            wasm.poke(\n              pOut,\n              2440587.5 + new Date().getTime() / 86400000,\n              'double',\n            );\n            return 0;\n          },\n          xCurrentTimeInt64: function (pVfs, pOut) {\n            wasm.poke(pOut, 2440587.5 * 86400000 + new Date().getTime(), 'i64');\n            return 0;\n          },\n          xDelete: function (pVfs, zName, doSyncDir) {\n            const pool = getPoolForVfs(pVfs);\n            pool.log(`xDelete ${wasm.cstrToJs(zName)}`);\n            pool.storeErr();\n            try {\n              pool.deletePath(pool.getPath(zName));\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_IOERR_DELETE;\n            }\n          },\n          xFullPathname: function (pVfs, zName, nOut, pOut) {\n            const i = wasm.cstrncpy(pOut, zName, nOut);\n            return i < nOut ? 0 : capi.SQLITE_CANTOPEN;\n          },\n          xGetLastError: function (pVfs, nOut, pOut) {\n            const pool = getPoolForVfs(pVfs);\n            const e = pool.popErr();\n            pool.log(`xGetLastError ${nOut} e =`, e);\n            if (e) {\n              const scope = wasm.scopedAllocPush();\n              try {\n                const [cMsg, n] = wasm.scopedAllocCString(e.message, true);\n                wasm.cstrncpy(pOut, cMsg, nOut);\n                if (n > nOut) wasm.poke8(pOut + nOut - 1, 0);\n              } catch (e) {\n                return capi.SQLITE_NOMEM;\n              } finally {\n                wasm.scopedAllocPop(scope);\n              }\n            }\n            return e ? e.sqlite3Rc || capi.SQLITE_IOERR : 0;\n          },\n\n          xOpen: function f(pVfs, zName, pFile, flags, pOutFlags) {\n            const pool = getPoolForVfs(pVfs);\n            try {\n              pool.log(`xOpen ${wasm.cstrToJs(zName)} ${flags}`);\n\n              const path =\n                zName && wasm.peek8(zName)\n                  ? pool.getPath(zName)\n                  : getRandomName();\n              let sah = pool.getSAHForPath(path);\n              if (!sah && flags & capi.SQLITE_OPEN_CREATE) {\n                if (pool.getFileCount() < pool.getCapacity()) {\n                  sah = pool.nextAvailableSAH();\n                  pool.setAssociatedPath(sah, path, flags);\n                } else {\n                  toss('SAH pool is full. Cannot create file', path);\n                }\n              }\n              if (!sah) {\n                toss('file not found:', path);\n              }\n\n              const file = { path, flags, sah };\n              pool.mapS3FileToOFile(pFile, file);\n              file.lockType = capi.SQLITE_LOCK_NONE;\n              const sq3File = new capi.sqlite3_file(pFile);\n              sq3File.$pMethods = opfsIoMethods.pointer;\n              sq3File.dispose();\n              wasm.poke32(pOutFlags, flags);\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_CANTOPEN;\n            }\n          },\n        };\n\n        const createOpfsVfs = function (vfsName) {\n          if (sqlite3.capi.sqlite3_vfs_find(vfsName)) {\n            toss3('VFS name is already registered:', vfsName);\n          }\n          const opfsVfs = new capi.sqlite3_vfs();\n\n          const pDVfs = capi.sqlite3_vfs_find(null);\n          const dVfs = pDVfs ? new capi.sqlite3_vfs(pDVfs) : null;\n          opfsVfs.$iVersion = 2;\n          opfsVfs.$szOsFile = capi.sqlite3_file.structInfo.sizeof;\n          opfsVfs.$mxPathname = HEADER_MAX_PATH_SIZE;\n          opfsVfs.addOnDispose(\n            (opfsVfs.$zName = wasm.allocCString(vfsName)),\n            () => setPoolForVfs(opfsVfs.pointer, 0),\n          );\n\n          if (dVfs) {\n            opfsVfs.$xRandomness = dVfs.$xRandomness;\n            opfsVfs.$xSleep = dVfs.$xSleep;\n            dVfs.dispose();\n          }\n          if (!opfsVfs.$xRandomness && !vfsMethods.xRandomness) {\n            vfsMethods.xRandomness = function (pVfs, nOut, pOut) {\n              const heap = wasm.heap8u();\n              let i = 0;\n              for (; i < nOut; ++i)\n                heap[pOut + i] = (Math.random() * 255000) & 0xff;\n              return i;\n            };\n          }\n          if (!opfsVfs.$xSleep && !vfsMethods.xSleep) {\n            vfsMethods.xSleep = (pVfs, ms) => 0;\n          }\n          sqlite3.vfs.installVfs({\n            vfs: { struct: opfsVfs, methods: vfsMethods },\n          });\n          return opfsVfs;\n        };\n\n        class OpfsSAHPool {\n          vfsDir;\n\n          #dhVfsRoot;\n\n          #dhOpaque;\n\n          #dhVfsParent;\n\n          #mapSAHToName = new Map();\n\n          #mapFilenameToSAH = new Map();\n\n          #availableSAH = new Set();\n\n          #mapS3FileToOFile_ = new Map();\n\n          #apBody = new Uint8Array(HEADER_CORPUS_SIZE);\n\n          #dvBody;\n\n          #cVfs;\n\n          #verbosity;\n\n          constructor(options = Object.create(null)) {\n            this.#verbosity = options.verbosity ?? optionDefaults.verbosity;\n            this.vfsName = options.name || optionDefaults.name;\n            this.#cVfs = createOpfsVfs(this.vfsName);\n            setPoolForVfs(this.#cVfs.pointer, this);\n            this.vfsDir = options.directory || '.' + this.vfsName;\n            this.#dvBody = new DataView(\n              this.#apBody.buffer,\n              this.#apBody.byteOffset,\n            );\n            this.isReady = this.reset(\n              !!(options.clearOnInit ?? optionDefaults.clearOnInit),\n            ).then(() => {\n              if (this.$error) throw this.$error;\n              return this.getCapacity()\n                ? Promise.resolve(undefined)\n                : this.addCapacity(\n                    options.initialCapacity || optionDefaults.initialCapacity,\n                  );\n            });\n          }\n\n          #logImpl(level, ...args) {\n            if (this.#verbosity > level)\n              loggers[level](this.vfsName + ':', ...args);\n          }\n          log(...args) {\n            this.#logImpl(2, ...args);\n          }\n          warn(...args) {\n            this.#logImpl(1, ...args);\n          }\n          error(...args) {\n            this.#logImpl(0, ...args);\n          }\n\n          getVfs() {\n            return this.#cVfs;\n          }\n\n          getCapacity() {\n            return this.#mapSAHToName.size;\n          }\n\n          getFileCount() {\n            return this.#mapFilenameToSAH.size;\n          }\n\n          getFileNames() {\n            const rc = [];\n            const iter = this.#mapFilenameToSAH.keys();\n            for (const n of iter) rc.push(n);\n            return rc;\n          }\n\n          async addCapacity(n) {\n            for (let i = 0; i < n; ++i) {\n              const name = getRandomName();\n              const h = await this.#dhOpaque.getFileHandle(name, {\n                create: true,\n              });\n              const ah = await h.createSyncAccessHandle();\n              this.#mapSAHToName.set(ah, name);\n              this.setAssociatedPath(ah, '', 0);\n            }\n            return this.getCapacity();\n          }\n\n          async reduceCapacity(n) {\n            let nRm = 0;\n            for (const ah of Array.from(this.#availableSAH)) {\n              if (nRm === n || this.getFileCount() === this.getCapacity()) {\n                break;\n              }\n              const name = this.#mapSAHToName.get(ah);\n\n              ah.close();\n              await this.#dhOpaque.removeEntry(name);\n              this.#mapSAHToName.delete(ah);\n              this.#availableSAH.delete(ah);\n              ++nRm;\n            }\n            return nRm;\n          }\n\n          releaseAccessHandles() {\n            for (const ah of this.#mapSAHToName.keys()) ah.close();\n            this.#mapSAHToName.clear();\n            this.#mapFilenameToSAH.clear();\n            this.#availableSAH.clear();\n          }\n\n          async acquireAccessHandles(clearFiles) {\n            const files = [];\n            for await (const [name, h] of this.#dhOpaque) {\n              if ('file' === h.kind) {\n                files.push([name, h]);\n              }\n            }\n            return Promise.all(\n              files.map(async ([name, h]) => {\n                try {\n                  const ah = await h.createSyncAccessHandle();\n                  this.#mapSAHToName.set(ah, name);\n                  if (clearFiles) {\n                    ah.truncate(HEADER_OFFSET_DATA);\n                    this.setAssociatedPath(ah, '', 0);\n                  } else {\n                    const path = this.getAssociatedPath(ah);\n                    if (path) {\n                      this.#mapFilenameToSAH.set(path, ah);\n                    } else {\n                      this.#availableSAH.add(ah);\n                    }\n                  }\n                } catch (e) {\n                  this.storeErr(e);\n                  this.releaseAccessHandles();\n                  throw e;\n                }\n              }),\n            );\n          }\n\n          getAssociatedPath(sah) {\n            sah.read(this.#apBody, { at: 0 });\n\n            const flags = this.#dvBody.getUint32(HEADER_OFFSET_FLAGS);\n            if (\n              this.#apBody[0] &&\n              (flags & capi.SQLITE_OPEN_DELETEONCLOSE ||\n                (flags & PERSISTENT_FILE_TYPES) === 0)\n            ) {\n              warn(\n                `Removing file with unexpected flags ${flags.toString(16)}`,\n                this.#apBody,\n              );\n              this.setAssociatedPath(sah, '', 0);\n              return '';\n            }\n\n            const fileDigest = new Uint32Array(HEADER_DIGEST_SIZE / 4);\n            sah.read(fileDigest, { at: HEADER_OFFSET_DIGEST });\n            const compDigest = this.computeDigest(this.#apBody);\n            if (fileDigest.every((v, i) => v === compDigest[i])) {\n              const pathBytes = this.#apBody.findIndex((v) => 0 === v);\n              if (0 === pathBytes) {\n                sah.truncate(HEADER_OFFSET_DATA);\n              }\n              return pathBytes\n                ? textDecoder.decode(this.#apBody.subarray(0, pathBytes))\n                : '';\n            } else {\n              warn('Disassociating file with bad digest.');\n              this.setAssociatedPath(sah, '', 0);\n              return '';\n            }\n          }\n\n          setAssociatedPath(sah, path, flags) {\n            const enc = textEncoder.encodeInto(path, this.#apBody);\n            if (HEADER_MAX_PATH_SIZE <= enc.written + 1) {\n              toss('Path too long:', path);\n            }\n            this.#apBody.fill(0, enc.written, HEADER_MAX_PATH_SIZE);\n            this.#dvBody.setUint32(HEADER_OFFSET_FLAGS, flags);\n\n            const digest = this.computeDigest(this.#apBody);\n            sah.write(this.#apBody, { at: 0 });\n            sah.write(digest, { at: HEADER_OFFSET_DIGEST });\n            sah.flush();\n\n            if (path) {\n              this.#mapFilenameToSAH.set(path, sah);\n              this.#availableSAH.delete(sah);\n            } else {\n              sah.truncate(HEADER_OFFSET_DATA);\n              this.#availableSAH.add(sah);\n            }\n          }\n\n          computeDigest(byteArray) {\n            let h1 = 0xdeadbeef;\n            let h2 = 0x41c6ce57;\n            for (const v of byteArray) {\n              h1 = 31 * h1 + v * 307;\n              h2 = 31 * h2 + v * 307;\n            }\n            return new Uint32Array([h1 >>> 0, h2 >>> 0]);\n          }\n\n          async reset(clearFiles) {\n            await this.isReady;\n            let h = await navigator.storage.getDirectory();\n            let prev, prevName;\n            for (const d of this.vfsDir.split('/')) {\n              if (d) {\n                prev = h;\n                h = await h.getDirectoryHandle(d, { create: true });\n              }\n            }\n            this.#dhVfsRoot = h;\n            this.#dhVfsParent = prev;\n            this.#dhOpaque = await this.#dhVfsRoot.getDirectoryHandle(\n              OPAQUE_DIR_NAME,\n              { create: true },\n            );\n            this.releaseAccessHandles();\n            return this.acquireAccessHandles(clearFiles);\n          }\n\n          getPath(arg) {\n            if (wasm.isPtr(arg)) arg = wasm.cstrToJs(arg);\n            return (\n              arg instanceof URL ? arg : new URL(arg, 'file://localhost/')\n            ).pathname;\n          }\n\n          deletePath(path) {\n            const sah = this.#mapFilenameToSAH.get(path);\n            if (sah) {\n              this.#mapFilenameToSAH.delete(path);\n              this.setAssociatedPath(sah, '', 0);\n            }\n            return !!sah;\n          }\n\n          storeErr(e, code) {\n            if (e) {\n              e.sqlite3Rc = code || capi.SQLITE_IOERR;\n              this.error(e);\n            }\n            this.$error = e;\n            return code;\n          }\n\n          popErr() {\n            const rc = this.$error;\n            this.$error = undefined;\n            return rc;\n          }\n\n          nextAvailableSAH() {\n            const [rc] = this.#availableSAH.keys();\n            return rc;\n          }\n\n          getOFileForS3File(pFile) {\n            return this.#mapS3FileToOFile_.get(pFile);\n          }\n\n          mapS3FileToOFile(pFile, file) {\n            if (file) {\n              this.#mapS3FileToOFile_.set(pFile, file);\n              setPoolForPFile(pFile, this);\n            } else {\n              this.#mapS3FileToOFile_.delete(pFile);\n              setPoolForPFile(pFile, false);\n            }\n          }\n\n          hasFilename(name) {\n            return this.#mapFilenameToSAH.has(name);\n          }\n\n          getSAHForPath(path) {\n            return this.#mapFilenameToSAH.get(path);\n          }\n\n          async removeVfs() {\n            if (!this.#cVfs.pointer || !this.#dhOpaque) return false;\n            capi.sqlite3_vfs_unregister(this.#cVfs.pointer);\n            this.#cVfs.dispose();\n            try {\n              this.releaseAccessHandles();\n              await this.#dhVfsRoot.removeEntry(OPAQUE_DIR_NAME, {\n                recursive: true,\n              });\n              this.#dhOpaque = undefined;\n              await this.#dhVfsParent.removeEntry(this.#dhVfsRoot.name, {\n                recursive: true,\n              });\n              this.#dhVfsRoot = this.#dhVfsParent = undefined;\n            } catch (e) {\n              sqlite3.config.error(this.vfsName, 'removeVfs() failed:', e);\n            }\n            return true;\n          }\n\n          exportFile(name) {\n            const sah =\n              this.#mapFilenameToSAH.get(name) || toss('File not found:', name);\n            const n = sah.getSize() - HEADER_OFFSET_DATA;\n            const b = new Uint8Array(n > 0 ? n : 0);\n            if (n > 0) {\n              const nRead = sah.read(b, { at: HEADER_OFFSET_DATA });\n              if (nRead != n) {\n                toss(\n                  'Expected to read ' + n + ' bytes but read ' + nRead + '.',\n                );\n              }\n            }\n            return b;\n          }\n\n          async importDbChunked(name, callback) {\n            const sah =\n              this.#mapFilenameToSAH.get(name) ||\n              this.nextAvailableSAH() ||\n              toss('No available handles to import to.');\n            sah.truncate(0);\n            let nWrote = 0,\n              chunk,\n              checkedHeader = false,\n              err = false;\n            try {\n              while (undefined !== (chunk = await callback())) {\n                if (chunk instanceof ArrayBuffer) chunk = new Uint8Array(chunk);\n                if (0 === nWrote && chunk.byteLength >= 15) {\n                  util.affirmDbHeader(chunk);\n                  checkedHeader = true;\n                }\n                sah.write(chunk, { at: HEADER_OFFSET_DATA + nWrote });\n                nWrote += chunk.byteLength;\n              }\n              if (nWrote < 512 || 0 !== nWrote % 512) {\n                toss(\n                  'Input size',\n                  nWrote,\n                  'is not correct for an SQLite database.',\n                );\n              }\n              if (!checkedHeader) {\n                const header = new Uint8Array(20);\n                sah.read(header, { at: 0 });\n                util.affirmDbHeader(header);\n              }\n              sah.write(new Uint8Array([1, 1]), {\n                at: HEADER_OFFSET_DATA + 18,\n              });\n            } catch (e) {\n              this.setAssociatedPath(sah, '', 0);\n              throw e;\n            }\n            this.setAssociatedPath(sah, name, capi.SQLITE_OPEN_MAIN_DB);\n            return nWrote;\n          }\n\n          importDb(name, bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            else if (bytes instanceof Function)\n              return this.importDbChunked(name, bytes);\n            const sah =\n              this.#mapFilenameToSAH.get(name) ||\n              this.nextAvailableSAH() ||\n              toss('No available handles to import to.');\n            const n = bytes.byteLength;\n            if (n < 512 || n % 512 != 0) {\n              toss('Byte array size is invalid for an SQLite db.');\n            }\n            const header = 'SQLite format 3';\n            for (let i = 0; i < header.length; ++i) {\n              if (header.charCodeAt(i) !== bytes[i]) {\n                toss('Input does not contain an SQLite database header.');\n              }\n            }\n            const nWrote = sah.write(bytes, { at: HEADER_OFFSET_DATA });\n            if (nWrote != n) {\n              this.setAssociatedPath(sah, '', 0);\n              toss(\n                'Expected to write ' + n + ' bytes but wrote ' + nWrote + '.',\n              );\n            } else {\n              sah.write(new Uint8Array([1, 1]), {\n                at: HEADER_OFFSET_DATA + 18,\n              });\n              this.setAssociatedPath(sah, name, capi.SQLITE_OPEN_MAIN_DB);\n            }\n            return nWrote;\n          }\n        }\n\n        class OpfsSAHPoolUtil {\n          #p;\n\n          constructor(sahPool) {\n            this.#p = sahPool;\n            this.vfsName = sahPool.vfsName;\n          }\n\n          async addCapacity(n) {\n            return this.#p.addCapacity(n);\n          }\n\n          async reduceCapacity(n) {\n            return this.#p.reduceCapacity(n);\n          }\n\n          getCapacity() {\n            return this.#p.getCapacity(this.#p);\n          }\n\n          getFileCount() {\n            return this.#p.getFileCount();\n          }\n          getFileNames() {\n            return this.#p.getFileNames();\n          }\n\n          async reserveMinimumCapacity(min) {\n            const c = this.#p.getCapacity();\n            return c < min ? this.#p.addCapacity(min - c) : c;\n          }\n\n          exportFile(name) {\n            return this.#p.exportFile(name);\n          }\n\n          importDb(name, bytes) {\n            return this.#p.importDb(name, bytes);\n          }\n\n          async wipeFiles() {\n            return this.#p.reset(true);\n          }\n\n          unlink(filename) {\n            return this.#p.deletePath(filename);\n          }\n\n          async removeVfs() {\n            return this.#p.removeVfs();\n          }\n        }\n\n        const apiVersionCheck = async () => {\n          const dh = await navigator.storage.getDirectory();\n          const fn = '.opfs-sahpool-sync-check-' + getRandomName();\n          const fh = await dh.getFileHandle(fn, { create: true });\n          const ah = await fh.createSyncAccessHandle();\n          const close = ah.close();\n          await close;\n          await dh.removeEntry(fn);\n          if (close?.then) {\n            toss(\n              'The local OPFS API is too old for opfs-sahpool:',\n              'it has an async FileSystemSyncAccessHandle.close() method.',\n            );\n          }\n          return true;\n        };\n\n        let instanceCounter = 0;\n\n        sqlite3.installOpfsSAHPoolVfs = async function (\n          options = Object.create(null),\n        ) {\n          const vfsName = options.name || optionDefaults.name;\n          if (0 && 2 === ++instanceCounter) {\n            throw new Error('Just testing rejection.');\n          }\n          if (initPromises[vfsName]) {\n            return initPromises[vfsName];\n          }\n          if (\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle ||\n            !globalThis.FileSystemFileHandle.prototype.createSyncAccessHandle ||\n            !navigator?.storage?.getDirectory\n          ) {\n            return (initPromises[vfsName] = Promise.reject(\n              new Error('Missing required OPFS APIs.'),\n            ));\n          }\n\n          return (initPromises[vfsName] = apiVersionCheck()\n            .then(async function () {\n              if (options.$testThrowInInit) {\n                throw options.$testThrowInInit;\n              }\n              const thePool = new OpfsSAHPool(options);\n              return thePool.isReady\n                .then(async () => {\n                  const poolUtil = new OpfsSAHPoolUtil(thePool);\n                  if (sqlite3.oo1) {\n                    const oo1 = sqlite3.oo1;\n                    const theVfs = thePool.getVfs();\n                    const OpfsSAHPoolDb = function (...args) {\n                      const opt = oo1.DB.dbCtorHelper.normalizeArgs(...args);\n                      opt.vfs = theVfs.$zName;\n                      oo1.DB.dbCtorHelper.call(this, opt);\n                    };\n                    OpfsSAHPoolDb.prototype = Object.create(oo1.DB.prototype);\n\n                    poolUtil.OpfsSAHPoolDb = OpfsSAHPoolDb;\n                    oo1.DB.dbCtorHelper.setVfsPostOpenSql(\n                      theVfs.pointer,\n                      function (oo1Db, sqlite3) {\n                        sqlite3.capi.sqlite3_exec(\n                          oo1Db,\n                          [\n                            'pragma journal_mode=DELETE;',\n                            'pragma cache_size=-16384;',\n                          ],\n                          0,\n                          0,\n                          0,\n                        );\n                      },\n                    );\n                  }\n                  thePool.log('VFS initialized.');\n                  return poolUtil;\n                })\n                .catch(async (e) => {\n                  await thePool.removeVfs().catch(() => {});\n                  throw e;\n                });\n            })\n            .catch((err) => {\n              return (initPromises[vfsName] = Promise.reject(err));\n            }));\n        };\n      });\n\n      ('use strict');\n      if ('undefined' !== typeof Module) {\n        const SABC = Object.assign(\n          Object.create(null),\n          {\n            exports:\n              'undefined' === typeof wasmExports ? Module['asm'] : wasmExports,\n            memory: Module.wasmMemory,\n          },\n          globalThis.sqlite3ApiConfig || {},\n        );\n\n        globalThis.sqlite3ApiConfig = SABC;\n        let sqlite3;\n        try {\n          sqlite3 = globalThis.sqlite3ApiBootstrap();\n        } catch (e) {\n          console.error('sqlite3ApiBootstrap() error:', e);\n          throw e;\n        } finally {\n          delete globalThis.sqlite3ApiBootstrap;\n          delete globalThis.sqlite3ApiConfig;\n        }\n\n        Module.sqlite3 = sqlite3;\n      } else {\n        console.warn(\n          'This is not running in an Emscripten module context, so',\n          'globalThis.sqlite3ApiBootstrap() is _not_ being called due to lack',\n          'of config info for the WASM environment.',\n          'It must be called manually.',\n        );\n      }\n    });\n\n    return sqlite3InitModule.ready;\n  };\n})();\n\nconst toExportForESM = (function () {\n  const originalInit = sqlite3InitModule;\n  if (!originalInit) {\n    throw new Error(\n      'Expecting globalThis.sqlite3InitModule to be defined by the Emscripten build.',\n    );\n  }\n\n  const initModuleState = (globalThis.sqlite3InitModuleState = Object.assign(\n    Object.create(null),\n    {\n      moduleScript: globalThis?.document?.currentScript,\n      isWorker: 'undefined' !== typeof WorkerGlobalScope,\n      location: globalThis.location,\n      urlParams: globalThis?.location?.href\n        ? new URL(globalThis.location.href).searchParams\n        : new URLSearchParams(),\n    },\n  ));\n  initModuleState.debugModule = initModuleState.urlParams.has(\n    'sqlite3.debugModule',\n  )\n    ? (...args) => console.warn('sqlite3.debugModule:', ...args)\n    : () => {};\n\n  if (initModuleState.urlParams.has('sqlite3.dir')) {\n    initModuleState.sqlite3Dir =\n      initModuleState.urlParams.get('sqlite3.dir') + '/';\n  } else if (initModuleState.moduleScript) {\n    const li = initModuleState.moduleScript.src.split('/');\n    li.pop();\n    initModuleState.sqlite3Dir = li.join('/') + '/';\n  }\n\n  globalThis.sqlite3InitModule = function ff(...args) {\n    return originalInit(...args)\n      .then((EmscriptenModule) => {\n        const s = EmscriptenModule.sqlite3;\n        s.scriptInfo = initModuleState;\n\n        if (ff.__isUnderTest) s.__isUnderTest = true;\n        const f = s.asyncPostInit;\n        delete s.asyncPostInit;\n        return f();\n      })\n      .catch((e) => {\n        console.error('Exception loading sqlite3 module:', e);\n        throw e;\n      });\n  };\n  globalThis.sqlite3InitModule.ready = originalInit.ready;\n\n  if (globalThis.sqlite3InitModuleState.moduleScript) {\n    const sim = globalThis.sqlite3InitModuleState;\n    let src = sim.moduleScript.src.split('/');\n    src.pop();\n    sim.scriptDir = src.join('/') + '/';\n  }\n  initModuleState.debugModule('sqlite3InitModuleState =', initModuleState);\n  if (0) {\n    console.warn('Replaced sqlite3InitModule()');\n    console.warn('globalThis.location.href =', globalThis.location.href);\n    if ('undefined' !== typeof document) {\n      console.warn(\n        'document.currentScript.src =',\n        document?.currentScript?.src,\n      );\n    }\n  }\n  return globalThis.sqlite3InitModule;\n})();\nsqlite3InitModule = toExportForESM;\nexport default sqlite3InitModule;\n","/*\n  2022-05-23\n\n  The author disclaims copyright to this source code.  In place of a\n  legal notice, here is a blessing:\n\n  *   May you do good and not evil.\n  *   May you find forgiveness for yourself and forgive others.\n  *   May you share freely, never taking more than you give.\n\n  ***********************************************************************\n\n  This is a JS Worker file for the main sqlite3 api. It loads\n  sqlite3.js, initializes the module, and postMessage()'s a message\n  after the module is initialized:\n\n  {type: 'sqlite3-api', result: 'worker1-ready'}\n\n  This seemingly superfluous level of indirection is necessary when\n  loading sqlite3.js via a Worker. Instantiating a worker with new\n  Worker(\"sqlite.js\") will not (cannot) call sqlite3InitModule() to\n  initialize the module due to a timing/order-of-operations conflict\n  (and that symbol is not exported in a way that a Worker loading it\n  that way can see it).  Thus JS code wanting to load the sqlite3\n  Worker-specific API needs to pass _this_ file (or equivalent) to the\n  Worker constructor and then listen for an event in the form shown\n  above in order to know when the module has completed initialization.\n\n  This file accepts a URL arguments to adjust how it loads sqlite3.js:\n\n  - `sqlite3.dir`, if set, treats the given directory name as the\n    directory from which `sqlite3.js` will be loaded.\n*/\nimport { default as sqlite3InitModule } from './sqlite3-bundler-friendly.mjs';\nsqlite3InitModule().then((sqlite3) => sqlite3.initWorker1API());\n"],"names":["sqlite3InitModule","_scriptDir","config","Module","readyPromiseResolve","readyPromiseReject","resolve","reject","sqlite3InitModuleState","xNameOfInstantiateWasm","callee","imports","onSuccess","uri","scriptDirectory","wfetch","arg","response","bytes","moduleOverrides","thisProgram","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","locateFile","path","read_","readAsync","readBinary","url","xhr","onload","onerror","out","err","wasmBinary","abort","wasmMemory","ABORT","assert","condition","text","UTF8Decoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","str","u0","u1","u2","ch","UTF8ToString","ptr","HEAPU8","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","i","u","stringToUTF8","outPtr","lengthBytesUTF8","len","c","HEAP8","HEAP16","HEAP32","HEAPU32","updateMemoryViews","b","INITIAL_MEMORY","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","preRun","addOnPreRun","callRuntimeCallbacks","initRuntime","FS","postRun","addOnPostRun","cb","addOnInit","runDependencies","dependenciesFulfilled","getUniqueRunDependency","id","addRunDependency","removeRunDependency","callback","what","dataURIPrefix","isDataURI","filename","wasmBinaryFile","getBinary","file","getBinaryPromise","createWasm","info","asmLibraryArg","receiveInstance","instance","module","exports","receiveInstantiationResult","result","instantiateArrayBuffer","receiver","binary","reason","instantiateAsync","e","tempDouble","tempI64","callbacks","PATH","splitPathRe","parts","allowAboveRoot","up","last","isAbsolute","trailingSlash","p","root","dir","lastSlash","paths","l","r","getRandomDevice","randomBuffer","PATH_FS","resolvedPath","resolvedAbsolute","from","to","trim","arr","start","end","fromParts","toParts","length","samePartsLength","outputParts","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","TTY","dev","ops","stream","tty","buffer","offset","pos","bytesRead","val","zeroMemory","address","size","alignMemory","alignment","mmapAlloc","_emscripten_builtin_memalign","MEMFS","mount","parent","name","mode","node","newCapacity","prevCapacity","CAPACITY_DOUBLING_MAX","oldContents","newSize","attr","old_node","new_dir","new_name","new_node","entries","key","newname","oldpath","position","contents","canOwn","whence","prot","flags","allocated","mmapFlags","asyncLoad","noRunDep","dep","arrayBuffer","event","opts","defaults","current","current_path","islast","count","link","lookup","parentid","hash","errCode","nodeName","rdev","flag","perms","isdir","fd_start","fd_end","fd","device","ma","mi","mounts","check","m","populate","completed","doCallback","done","type","mountpoint","pseudo","mountRoot","next","dirs","d","newpath","old_path","new_path","old_dirname","new_dirname","old_name","old_dir","relative","dontFollow","uid","gid","atime","mtime","created","seeking","bytesWritten","cmd","ret","stat","buf","data","actualNumBytes","random_device","proc_self","errno","code","input","output","error","canRead","canWrite","dontResolveLastLink","part","properties","obj","LazyUint8Array","chunkOffset","chunkNum","getter","datalength","header","hasByteServing","usesGzip","chunkSize","doXHR","lazyArray","stream_ops","keys","fn","writeChunks","dontCreateFile","preFinish","fullname","processData","byteArray","finish","indexedDB","openRequest","db","transaction","files","ok","fail","total","putRequest","getRequest","SYSCALLS","dirfd","allowEmpty","dirstream","func","ctime","addr","___syscall_chmod","___syscall_faccessat","amode","___syscall_fchmod","___syscall_fchown32","owner","group","setErrNo","value","___errno_location","___syscall_fcntl64","varargs","newStream","___syscall_fstat64","MAX_INT53","MIN_INT53","bigintToI53Checked","num","___syscall_ftruncate64","___syscall_getcwd","cwd","cwdLengthInBytes","___syscall_ioctl","op","argp","___syscall_lstat64","___syscall_mkdirat","___syscall_newfstatat","nofollow","___syscall_openat","___syscall_readlinkat","bufsize","endChar","___syscall_rmdir","___syscall_stat64","___syscall_unlinkat","readI53FromI64","___syscall_utimensat","times","seconds","nanoseconds","nowIsMonotonic","__emscripten_get_now_is_monotonic","__isLeapYear","year","__MONTH_DAYS_LEAP_CUMULATIVE","__MONTH_DAYS_REGULAR_CUMULATIVE","__yday_from_date","date","isLeapYear","monthDaysCumulative","yday","__localtime_js","time","tmPtr","summerOffset","winterOffset","dst","__mmap_js","off","res","__munmap_js","allocateUTF8","_malloc","__tzset_js","timezone","daylight","tzname","currentYear","winter","summer","stdTimezoneOffset","extractZone","match","winterName","summerName","winterNamePtr","summerNamePtr","_emscripten_date_now","_emscripten_get_now","getHeapMax","emscripten_realloc_buffer","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","alignUp","x","multiple","cutDown","overGrownHeapSize","replacement","ENV","getExecutableName","getEnvStrings","lang","env","strings","writeAsciiToMemory","_environ_get","__environ","environ_buf","bufSize","string","_environ_sizes_get","penviron_count","penviron_buf_size","_fd_close","_fd_fdstat_get","pbuf","doReadv","iov","iovcnt","curr","_fd_read","pnum","_fd_seek","newOffset","_fd_sync","doWritev","_fd_write","FSNode","readMode","writeMode","calledRun","runCaller","run","args","doRun","sqlite3ApiBootstrap","apiConfig","k","capi","wasm","__rcStr","rc","__isInt","n","SQLite3Error","rcStr","toss3","isInt32","bigIntFits64","f","bigIntFits32","bigIntFitsDouble","isTypedArray","v","__SAB","isSharedTypedArray","aTypedArray","typedArrayPart","begin","isBindableTypedArray","isSQLableTypedArray","affirmBindableTypedArray","utf8Decoder","typedArrayToString","typedArray","flexibleString","WasmAllocError","pDb","funcName","nArg","eTextRep","pApp","xFunc","xStep","xFinal","xDestroy","xValue","xInverse","dbPtr","sql","sqlByteLen","prepFlags","stmtPtrPtr","strPtrPtr","pVoid","pErrMsg","util","srcTypedArray","pRet","keyAlloc","keyDealloc","keyRealloc","m2","optName","opt","rv","ov","sz","mem","safePtrSize","stackPos","sqlite3","ta","stack","nAlloc","j","__wasmfsOpfsDir","pdir","vfsName","dbName","pK","pVfs","oVfs","schema","scope","pOut","pSize","ppOut","zSchema","nOut","dbPointer","pCtx","dataLen","pData","vfs","__kvvfsInfo","which","kvinfo","s","toRm","kk","pVal","throwIfCannotConvert","valType","pBlob","argc","pArgv","tgt","pStmt","iCol","__newOldValue","pObj","impl","pv","pChangesetIter","ff","lia","postInit","catcher","target","toss","ptrIR","ptrSizeof","cache","heapWrappers","unsigned","fptr","ft","sig","method","dest","letter","sigParams","wasmCode","__installFunction","scoped","oldLen","fi","list","h","__utf8Decode","jstr","maxBytes","addNul","max","tgtPtr","srcPtr","__affirmAlloc","__allocCStr","returnWithLength","allocator","a","state","__allocMainArgv","isScoped","pList","__allocPtr","howMany","pIr","__argcMismatch","fname","xArg","xResult","__xArgPtr","copyToResult","adaptPtr","t","__xArgString","AbstractArgAdapter","argv","argIndex","FuncPtrAdapter","cm","pair","fp","__xArgAdapterCheck","__xResultAdapterCheck","fArg","resultType","argTypes","fIsFunc","xf","cxw","__xAdapter","typeName","adapter","modeName","xcvPart","wui","finalThen","StructBinderFactory","SBF","alloc","dealloc","log","memberPrefix","memberSuffix","bigIntEnabled","BigInt","BigInt64Array","deriveFrom","isLittleEndian","isFuncSig","isAutoPtrSig","sigLetter","sigIR","affirmBigIntArray","sigDVGetter","sigDVSetter","sigDVSetWrapper","sPropName","__propThrowOnSet","structName","propName","__instancePointerMap","xPtrPropName","__freeStruct","ctor","StructType","rop","__allocStruct","fill","__memoryDump","__memberKeyProp","__lookupMember","structInfo","memberName","tossIfNotFound","__memberSignature","emscriptenFormat","__ptrPropDescriptor","__structMemberKeys","__utf8Decoder","__utf8Encoder","__memberIsString","__affirmCStringSignature","member","__memberToJsString","__addOnDispose","__allocCString","__setMemberCString","isNumericValue","makeMemberWrapper","descr","rxSig1","rxSig2","sigGlyph","xPropName","dbg","prop","StructBinder","lastMember","debugFlags","StructCtor","externalMemory","mKey","aNames","nCols","pColVals","pColNames","aVals","pV","iCode","s0","s1","s2","s3","zDb","zTbl","iKey1","iKey2","z0","z1","rowid","__ipsProxy","__xString","nilType","_a","__xRcPtr","fI64Disabled","__db_err","resultCode","message","msg","cJson","defineGroups","__rcMap","notThese","__dbArgcMismatch","__errEncoding","__argPDb","__argStr","__dbCleanupMap","arity","map","closeArgs","fmap","arities","fargs","__sqlite3CloseV2","__sqlite3SessionDelete","pSession","contextKey","__sqlite3CreateCollationV2","zName","pArg","xCompare","__cfProxy","__sqlite3CreateFunction","__sqlite3CreateWindowFunction","__flexiString","__prepare","sqlLen","ppStmt","pzTail","xSql","xSqlLen","__bindText","__bindBlob","nText","pMem","nMem","__autoExtFptr","fPtr","pKvvfs","kvvfsMethods","kvvfsMakeKey","pstack","kvvfsStorage","zClass","kvvfsImpls","zKey","zBuf","nBuf","astack","zXKey","jKey","jV","nV","zV","zData","installMethod","applyArgcCheck","ndx","sigN","memKey","fProxy","pFunc","installMethods","structInstance","methods","seen","prior","mkey","__ptrMap","__stmtMap","getOwnOption","dflt","checkSqlite3Rc","sqliteResultCode","DB","__dbTraceToConsole","__vfsPostOpenSql","dbCtorHelper","isWorkerThread","flagsStr","fnJs","vfsCheck","oflags","pPtr","postInitSql","BindTypes","Stmt","affirmDbOpen","affirmColIndex","stmt","parseExecArgs","row","$colName","__selectFirstRow","bind","getArgs","__selectAll","rowMode","sixtyFour","dbNumber","resultRows","evalFirstResult","saveSql","isTA","pSql","pSqlEnd","gotColNames","cbArgCache","isFunc","isWindow","fFlags","xArity","arityArg","asType","opener","affirmStmtOpen","isSupportedBindType","affirmSupportedBindType","affirmParamIndex","affirmNotLockedByExec","currentOpName","bindOne","bindType","asBlob","pStr","alsoClearBinds","storageName","jdb","getDbId","wState","alsoUnlink","ddNdx","xferList","require","getMsgDb","msgData","affirmExists","getDefaultDbId","wMsgHandler","ev","oargs","doUnlink","theCallback","rowNumber","hadColNames","changeCount","src","dbId","evType","arrivalTime","asDefault","propList","o","vtab","sii","asPtr","__xWrapFactory","methodName","removeMapping","StructPtrMapper","__xWrap","pCObj","pIdxInfo","defaultRc","ppRowid64","createdMod","mod","fwrap","pAux","ppVtab","pzErr","mnames","remethods","installOpfsVfs","options","urlParams","promiseResolve_","promiseReject_","loggers","logImpl","level","warn","sqlite3_vfs","sqlite3_file","sqlite3_io_methods","opfsUtil","thisThreadHasOPFS","w","metrics","W","opfsIoMethods","opfsVfs","promiseWasRejected","promiseReject","promiseResolve","pDVfs","dVfs","opRun","opNdx","initS11n","textDecoder","textEncoder","viewU8","viewDV","TypeIds","getTypeId","getTypeIdById","tid","clear","typeIds","randomFilename","__openFiles","opTimer","mTimeStart","mTimeEnd","ioSyncWrappers","pFile","opId","pSz64","lockType","pDest","offset64","sz64","pSrc","vfsSyncWrappers","doSyncDir","pOutFlags","opfsFlags","fh","ms","splitIt","absFilename","createDirs","dh","dirName","absDirName","fsEntryName","doDir","dirHandle","handle","subDir","recursive","throwOnError","hDir","filenamePart","defaultOpt","depth","importDbChunked","fnamePart","sah","nWrote","chunk","checkedHeader","OpfsDb","oo1Db","sanityCheck","sq3File","fid","openFlags","dbFile","zDbFile","readBuf","jRead","errMsg","proxyJs","initPromises","SECTOR_SIZE","HEADER_MAX_PATH_SIZE","HEADER_FLAGS_SIZE","HEADER_DIGEST_SIZE","HEADER_CORPUS_SIZE","HEADER_OFFSET_FLAGS","HEADER_OFFSET_DIGEST","HEADER_OFFSET_DATA","PERSISTENT_FILE_TYPES","OPAQUE_DIR_NAME","getRandomName","optionDefaults","__mapVfsToPool","getPoolForVfs","setPoolForVfs","pool","__mapSqlite3File","getPoolForPFile","setPoolForPFile","ioMethods","nRead","nBytes","vfsMethods","cMsg","createOpfsVfs","OpfsSAHPool","__privateAdd","_OpfsSAHPool_instances","__publicField","_dhVfsRoot","_dhOpaque","_dhVfsParent","_mapSAHToName","_mapFilenameToSAH","_availableSAH","_mapS3FileToOFile_","_apBody","_dvBody","_cVfs","_verbosity","__privateSet","__privateGet","__privateMethod","logImpl_fn","iter","ah","nRm","clearFiles","fileDigest","compDigest","pathBytes","enc","digest","h1","h2","prev","OpfsSAHPoolUtil","sahPool","_p","min","apiVersionCheck","close","thePool","poolUtil","oo1","theVfs","OpfsSAHPoolDb","SABC","originalInit","initModuleState","_b","li","EmscriptenModule","sim","sqlite3InitModule$1"],"mappings":"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","x_google_ignoreList":[0,1]}