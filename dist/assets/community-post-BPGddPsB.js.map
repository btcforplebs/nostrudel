{"version":3,"file":"community-post-BPGddPsB.js","sources":["../../src/views/community/components/community-post-menu.tsx","../../src/views/community/components/community-post.tsx"],"sourcesContent":["import { MenuItem, useToast } from \"@chakra-ui/react\";\nimport { nip19 } from \"nostr-tools\";\n\nimport { DotsMenuButton, MenuIconButtonProps } from \"../../../components/dots-menu-button\";\nimport { NostrEvent } from \"../../../types/nostr-event\";\nimport { CopyToClipboardIcon } from \"../../../components/icons\";\nimport ShareLinkMenuItem from \"../../../components/common-menu-items/share-link\";\nimport OpenInAppMenuItem from \"../../../components/common-menu-items/open-in-app\";\nimport DeleteEventMenuItem from \"../../../components/common-menu-items/delete-event\";\nimport DebugEventMenuItem from \"../../../components/debug-modal/debug-event-menu-item\";\n\nexport default function CommunityPostMenu({\n  event,\n  approvals,\n  ...props\n}: Omit<MenuIconButtonProps, \"children\"> & { event: NostrEvent; approvals: NostrEvent[] }) {\n  const toast = useToast();\n\n  return (\n    <>\n      <DotsMenuButton {...props}>\n        <OpenInAppMenuItem event={event} />\n        <ShareLinkMenuItem event={event} />\n        <MenuItem\n          onClick={() => {\n            const text = nip19.noteEncode(event.id);\n            if (navigator.clipboard) navigator.clipboard.writeText(text);\n            else toast({ description: text, isClosable: true, duration: null });\n          }}\n          icon={<CopyToClipboardIcon />}\n        >\n          Copy Note ID\n        </MenuItem>\n        <DeleteEventMenuItem event={event} label=\"Delete Post\" />\n        <DebugEventMenuItem event={event} />\n      </DotsMenuButton>\n    </>\n  );\n}\n","import { MouseEventHandler, useCallback } from \"react\";\nimport {\n  AvatarGroup,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardProps,\n  Flex,\n  Heading,\n  Link,\n  LinkBox,\n  Text,\n} from \"@chakra-ui/react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\nimport { kinds } from \"nostr-tools\";\n\nimport { NostrEvent, isETag } from \"../../../types/nostr-event\";\nimport { getEventCommunityPointer, getPostSubject } from \"../../../helpers/nostr/communities\";\nimport { useNavigateInDrawer } from \"../../../providers/drawer-sub-view-provider\";\nimport HoverLinkOverlay from \"../../../components/hover-link-overlay\";\nimport { CompactNoteContent } from \"../../../components/compact-note-content\";\nimport { parseHardcodedNoteContent } from \"../../../helpers/nostr/event\";\nimport UserLink from \"../../../components/user/user-link\";\nimport UserAvatarLink from \"../../../components/user/user-avatar-link\";\nimport useUserMuteFilter from \"../../../hooks/use-user-mute-filter\";\nimport { useReadRelays } from \"../../../hooks/use-client-relays\";\nimport useSingleEvent from \"../../../hooks/use-single-event\";\nimport CommunityPostMenu from \"./community-post-menu\";\nimport useEventIntersectionRef from \"../../../hooks/use-event-intersection-ref\";\nimport useShareableEventAddress from \"../../../hooks/use-shareable-event-address\";\n\nexport function ApprovalIcon({ approval }: { approval: NostrEvent }) {\n  const ref = useEventIntersectionRef<HTMLAnchorElement>(approval);\n\n  return <UserAvatarLink pubkey={approval.pubkey} ref={ref} size=\"xs\" />;\n}\n\nexport type CommunityPostPropTypes = {\n  event: NostrEvent;\n  approvals: NostrEvent[];\n  showCommunity?: boolean;\n};\n\nfunction PostSubject({ event }: { event: NostrEvent }) {\n  const subject = getPostSubject(event);\n  const address = useShareableEventAddress(event);\n\n  const navigate = useNavigateInDrawer();\n  const to = `/n/${address}`;\n  const handleClick = useCallback<MouseEventHandler>(\n    (e) => {\n      e.preventDefault();\n      navigate(to);\n    },\n    [navigate, to],\n  );\n\n  return subject ? (\n    <CardHeader px=\"2\" pt=\"4\" pb=\"0\" overflow=\"hidden\">\n      <Heading size=\"md\" overflow=\"hidden\" isTruncated>\n        <HoverLinkOverlay as={RouterLink} to={to} onClick={handleClick}>\n          {getPostSubject(event)}\n        </HoverLinkOverlay>\n      </Heading>\n    </CardHeader>\n  ) : (\n    <HoverLinkOverlay as={RouterLink} to={to} onClick={handleClick} />\n  );\n}\nfunction Approvals({ approvals }: { approvals: NostrEvent[] }) {\n  return (\n    <>\n      <Text fontSize=\"sm\">Approved by</Text>\n      <AvatarGroup>\n        {approvals.map((approval) => (\n          <ApprovalIcon key={approval.id} approval={approval} />\n        ))}\n      </AvatarGroup>\n    </>\n  );\n}\n\nexport function CommunityTextPost({\n  event,\n  approvals,\n  showCommunity,\n  ...props\n}: Omit<CardProps, \"children\"> & CommunityPostPropTypes) {\n  const ref = useEventIntersectionRef(event);\n\n  const communityPointer = getEventCommunityPointer(event);\n\n  return (\n    <Card as={LinkBox} ref={ref} {...props}>\n      <PostSubject event={event} />\n      <CardBody p=\"2\">\n        <CompactNoteContent event={event} maxLength={96} />\n      </CardBody>\n      <CardFooter display=\"flex\" gap=\"2\" alignItems=\"center\" p=\"2\" flexWrap=\"wrap\">\n        <Text>\n          Posted {dayjs.unix(event.created_at).fromNow()} by <UserLink pubkey={event.pubkey} fontWeight=\"bold\" />\n        </Text>\n        {showCommunity && communityPointer && (\n          <Text>\n            to{\" \"}\n            <Link as={RouterLink} to={`/c/${communityPointer.identifier}/${communityPointer.pubkey}`} fontWeight=\"bold\">\n              {communityPointer.identifier}\n            </Link>\n          </Text>\n        )}\n        <Flex gap=\"2\" alignItems=\"center\" ml=\"auto\">\n          {approvals.length > 0 && <Approvals approvals={approvals} />}\n          <CommunityPostMenu event={event} approvals={approvals} aria-label=\"More Options\" size=\"xs\" variant=\"ghost\" />\n        </Flex>\n      </CardFooter>\n    </Card>\n  );\n}\n\nexport function CommunityRepostPost({\n  event,\n  approvals,\n  showCommunity,\n  ...props\n}: Omit<CardProps, \"children\"> & CommunityPostPropTypes) {\n  const encodedRepost = parseHardcodedNoteContent(event);\n\n  const [_, eventId, relay] = event.tags.find(isETag) ?? [];\n  const readRelays = useReadRelays(relay ? [relay] : []);\n\n  const loadedRepost = useSingleEvent(eventId, readRelays);\n  const repost = encodedRepost || loadedRepost;\n\n  const ref = useEventIntersectionRef(repost);\n\n  const muteFilter = useUserMuteFilter();\n  if (repost && muteFilter(repost)) return;\n\n  const communityPointer = getEventCommunityPointer(event);\n\n  return (\n    <Card as={LinkBox} ref={ref} {...props}>\n      {repost && (\n        <>\n          <PostSubject event={repost} />\n          <CardBody p=\"2\">\n            <CompactNoteContent event={repost} maxLength={96} />\n          </CardBody>\n        </>\n      )}\n      <CardFooter display=\"flex\" gap=\"2\" alignItems=\"center\" p=\"2\" flexWrap=\"wrap\">\n        <Text>\n          Shared {dayjs.unix(event.created_at).fromNow()} by <UserLink pubkey={event.pubkey} fontWeight=\"bold\" />\n        </Text>\n        {showCommunity && communityPointer && (\n          <Text>\n            to{\" \"}\n            <Link as={RouterLink} to={`/c/${communityPointer.identifier}/${communityPointer.pubkey}`} fontWeight=\"bold\">\n              {communityPointer.identifier}\n            </Link>\n          </Text>\n        )}\n        <Flex gap=\"2\" alignItems=\"center\" ml=\"auto\">\n          {approvals.length > 0 && <Approvals approvals={approvals} />}\n          <CommunityPostMenu event={event} approvals={approvals} aria-label=\"More Options\" size=\"xs\" variant=\"ghost\" />\n        </Flex>\n      </CardFooter>\n    </Card>\n  );\n}\n\nexport default function CommunityPost({ event, ...props }: Omit<CardProps, \"children\"> & CommunityPostPropTypes) {\n  switch (event.kind) {\n    case kinds.ShortTextNote:\n      return <CommunityTextPost event={event} {...props} />;\n    case kinds.Repost:\n      return <CommunityRepostPost event={event} {...props} />;\n    case kinds.GenericRepost:\n      return <CommunityRepostPost event={event} {...props} />;\n  }\n  return null;\n}\n"],"names":["CommunityPostMenu","event","approvals","props","toast","useToast","jsx","Fragment","jsxs","DotsMenuButton","OpenInAppMenuItem","ShareLinkMenuItem","MenuItem","text","nip19","CopyToClipboardIcon","DeleteEventMenuItem","DebugEventMenuItem","ApprovalIcon","approval","ref","useEventIntersectionRef","UserAvatarLink","PostSubject","subject","getPostSubject","address","useShareableEventAddress","navigate","useNavigateInDrawer","to","handleClick","useCallback","e","CardHeader","Heading","HoverLinkOverlay","RouterLink","Approvals","Text","AvatarGroup","CommunityTextPost","showCommunity","communityPointer","getEventCommunityPointer","Card","LinkBox","CardBody","CompactNoteContent","CardFooter","dayjs","UserLink","Link","Flex","CommunityRepostPost","encodedRepost","parseHardcodedNoteContent","_","eventId","relay","isETag","readRelays","useReadRelays","loadedRepost","useSingleEvent","repost","muteFilter","useUserMuteFilter","CommunityPost","kinds"],"mappings":"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"}