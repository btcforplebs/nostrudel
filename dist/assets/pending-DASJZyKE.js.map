{"version":3,"file":"pending-DASJZyKE.js","sources":["../../src/views/community/views/pending.tsx"],"sourcesContent":["import { useCallback, useState } from \"react\";\nimport { Button, Flex } from \"@chakra-ui/react\";\nimport { useOutletContext } from \"react-router-dom\";\nimport { useObservable } from \"applesauce-react\";\nimport dayjs from \"dayjs\";\n\nimport { DraftNostrEvent, NostrEvent } from \"../../../types/nostr-event\";\nimport { getEventCoordinate, getEventUID } from \"../../../helpers/nostr/event\";\nimport {\n  COMMUNITY_APPROVAL_KIND,\n  buildApprovalMap,\n  getCommunityMods,\n  getCommunityRelays,\n} from \"../../../helpers/nostr/communities\";\nimport IntersectionObserverProvider from \"../../../providers/local/intersection-observer\";\nimport { useTimelineCurserIntersectionCallback } from \"../../../hooks/use-timeline-cursor-intersection-callback\";\nimport TimelineActionAndStatus from \"../../../components/timeline/timeline-action-and-status\";\nimport { CheckIcon } from \"../../../components/icons\";\nimport useCurrentAccount from \"../../../hooks/use-current-account\";\nimport CommunityPost from \"../components/community-post\";\nimport { RouterContext } from \"../community-home\";\nimport useUserMuteFilter from \"../../../hooks/use-user-mute-filter\";\nimport { usePublishEvent } from \"../../../providers/global/publish-provider\";\nimport useEventIntersectionRef from \"../../../hooks/use-event-intersection-ref\";\n\ntype PendingProps = {\n  event: NostrEvent;\n  approvals: NostrEvent[];\n  community: NostrEvent;\n};\n\nfunction ModPendingPost({ event, community, approvals }: PendingProps) {\n  const publish = usePublishEvent();\n\n  const ref = useEventIntersectionRef(event);\n\n  const communityRelays = getCommunityRelays(community);\n  const [loading, setLoading] = useState(false);\n  const approve = useCallback(async () => {\n    setLoading(true);\n    const relay = communityRelays[0];\n    const draft: DraftNostrEvent = {\n      kind: COMMUNITY_APPROVAL_KIND,\n      content: JSON.stringify(event),\n      created_at: dayjs().unix(),\n      tags: [\n        relay ? [\"a\", getEventCoordinate(community), relay] : [\"a\", getEventCoordinate(community)],\n        [\"e\", event.id],\n        [\"p\", event.pubkey],\n        [\"k\", String(event.kind)],\n      ],\n    };\n\n    await publish(\"Approve\", draft);\n    setLoading(false);\n  }, [event, publish, setLoading, community]);\n\n  return (\n    <Flex direction=\"column\" gap=\"2\" ref={ref}>\n      <CommunityPost event={event} approvals={approvals} />\n      <Flex gap=\"2\">\n        <Button\n          colorScheme=\"primary\"\n          leftIcon={<CheckIcon />}\n          size=\"sm\"\n          ml=\"auto\"\n          onClick={approve}\n          isLoading={loading}\n        >\n          Approve\n        </Button>\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default function CommunityPendingView() {\n  const account = useCurrentAccount();\n  const muteFilter = useUserMuteFilter();\n  const { community, timeline } = useOutletContext<RouterContext>();\n\n  const events = useObservable(timeline.timeline) ?? [];\n\n  const mods = getCommunityMods(community);\n  const approvals = buildApprovalMap(events, mods);\n  const pending = events.filter((e) => e.kind !== COMMUNITY_APPROVAL_KIND && !approvals.has(e.id) && !muteFilter(e));\n\n  const callback = useTimelineCurserIntersectionCallback(timeline);\n\n  const isMod = !!account && mods.includes(account?.pubkey);\n  const PostComponent = isMod ? ModPendingPost : CommunityPost;\n\n  return (\n    <>\n      <IntersectionObserverProvider callback={callback}>\n        {pending.map((event) => (\n          <PostComponent key={getEventUID(event)} event={event} community={community} approvals={[]} />\n        ))}\n      </IntersectionObserverProvider>\n      <TimelineActionAndStatus timeline={timeline} />\n    </>\n  );\n}\n"],"names":["ModPendingPost","event","community","approvals","publish","usePublishEvent","ref","useEventIntersectionRef","communityRelays","getCommunityRelays","loading","setLoading","useState","approve","useCallback","relay","draft","COMMUNITY_APPROVAL_KIND","dayjs","getEventCoordinate","Flex","jsx","CommunityPost","Button","CheckIcon","CommunityPendingView","account","useCurrentAccount","muteFilter","useUserMuteFilter","timeline","useOutletContext","events","useObservable","mods","getCommunityMods","buildApprovalMap","pending","e","callback","useTimelineCurserIntersectionCallback","PostComponent","jsxs","Fragment","IntersectionObserverProvider","getEventUID","TimelineActionAndStatus"],"mappings":"4OA+BA,SAASA,EAAe,CAAE,MAAAC,EAAO,UAAAC,EAAW,UAAAC,GAA2B,CACrE,MAAMC,EAAUC,IAEVC,EAAMC,EAAwBN,CAAK,EAEnCO,EAAkBC,EAAmBP,CAAS,EAC9C,CAACQ,EAASC,CAAU,EAAIC,WAAS,EAAK,EACtCC,EAAUC,EAAAA,YAAY,SAAY,CACtCH,EAAW,EAAI,EACT,MAAAI,EAAQP,EAAgB,CAAC,EACzBQ,EAAyB,CAC7B,KAAMC,EACN,QAAS,KAAK,UAAUhB,CAAK,EAC7B,WAAYiB,EAAM,EAAE,KAAK,EACzB,KAAM,CACJH,EAAQ,CAAC,IAAKI,EAAmBjB,CAAS,EAAGa,CAAK,EAAI,CAAC,IAAKI,EAAmBjB,CAAS,CAAC,EACzF,CAAC,IAAKD,EAAM,EAAE,EACd,CAAC,IAAKA,EAAM,MAAM,EAClB,CAAC,IAAK,OAAOA,EAAM,IAAI,CAAC,CAC1B,CAAA,EAGI,MAAAG,EAAQ,UAAWY,CAAK,EAC9BL,EAAW,EAAK,GACf,CAACV,EAAOG,EAASO,EAAYT,CAAS,CAAC,EAE1C,cACGkB,EAAK,CAAA,UAAU,SAAS,IAAI,IAAI,IAAAd,EAC/B,SAAA,CAACe,EAAAA,IAAAC,EAAA,CAAc,MAAArB,EAAc,UAAAE,CAAsB,CAAA,EACnDkB,EAAAA,IAACD,EAAK,CAAA,IAAI,IACR,SAAAC,EAAA,IAACE,EAAA,CACC,YAAY,UACZ,eAAWC,EAAU,EAAA,EACrB,KAAK,KACL,GAAG,OACH,QAASX,EACT,UAAWH,EACZ,SAAA,SAAA,CAAA,EAGH,CACF,CAAA,CAAA,CAEJ,CAEA,SAAwBe,GAAuB,CAC7C,MAAMC,EAAUC,IACVC,EAAaC,IACb,CAAE,UAAA3B,EAAW,SAAA4B,CAAS,EAAIC,EAAgC,EAE1DC,EAASC,EAAcH,EAAS,QAAQ,GAAK,CAAA,EAE7CI,EAAOC,EAAiBjC,CAAS,EACjCC,EAAYiC,EAAiBJ,EAAQE,CAAI,EACzCG,EAAUL,EAAO,OAAQM,GAAMA,EAAE,OAASrB,GAA2B,CAACd,EAAU,IAAImC,EAAE,EAAE,GAAK,CAACV,EAAWU,CAAC,CAAC,EAE3GC,EAAWC,EAAsCV,CAAQ,EAGzDW,EADQ,CAAC,CAACf,GAAWQ,EAAK,SAASR,GAAA,YAAAA,EAAS,MAAM,EAC1B1B,EAAiBsB,EAE/C,OAEIoB,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAtB,MAACuB,GAA6B,SAAAL,EAC3B,SAAAF,EAAQ,IAAKpC,GACXoB,EAAA,IAAAoB,EAAA,CAAuC,MAAAxC,EAAc,UAAAC,EAAsB,UAAW,CAAA,CAAC,EAApE2C,EAAY5C,CAAK,CAAsD,CAC5F,EACH,EACAoB,MAACyB,GAAwB,SAAAhB,EAAoB,CAC/C,CAAA,CAAA,CAEJ"}