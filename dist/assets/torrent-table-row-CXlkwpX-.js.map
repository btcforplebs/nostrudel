{"version":3,"file":"torrent-table-row-CXlkwpX-.js","sources":["../../src/views/torrents/components/torrent-table-row.tsx"],"sourcesContent":["import { memo, useMemo } from \"react\";\nimport { ButtonGroup, IconButton, Link, Td, Tr } from \"@chakra-ui/react\";\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\n\nimport { getTorrentMagnetLink, getTorrentSize, getTorrentTitle } from \"../../../helpers/nostr/torrents\";\nimport { NostrEvent } from \"../../../types/nostr-event\";\nimport Timestamp from \"../../../components/timestamp\";\nimport UserLink from \"../../../components/user/user-link\";\nimport Magnet from \"../../../components/icons/magnet\";\nimport { formatBytes } from \"../../../helpers/number\";\nimport TorrentMenu from \"./torrent-menu\";\nimport NoteZapButton from \"../../../components/note/note-zap-button\";\nimport useEventIntersectionRef from \"../../../hooks/use-event-intersection-ref\";\nimport useShareableEventAddress from \"../../../hooks/use-shareable-event-address\";\n\ntype DisplayCategory = { name: string; tags: string[] };\n\nfunction TorrentTableRow({ torrent }: { torrent: NostrEvent }) {\n  const ref = useEventIntersectionRef<HTMLTableRowElement>(torrent);\n\n  const magnetLink = useMemo(() => getTorrentMagnetLink(torrent), [torrent]);\n  const address = useShareableEventAddress(torrent);\n\n  const categories: DisplayCategory[] = [];\n  const chain: string[] = [];\n  for (const tag of torrent.tags) {\n    if (tag[0] !== \"t\") continue;\n    const name = tag[1];\n    chain.push(tag[1]);\n    categories.push({ name, tags: Array.from(chain) });\n  }\n\n  const location = useLocation();\n  const createTagLink = (c: DisplayCategory) => {\n    if (location.pathname.startsWith(\"/torrents\")) {\n      const params = new URLSearchParams(location.search);\n      params.set(\"tags\", c.tags.join(\",\"));\n      return `/torrents?` + params.toString();\n    }\n    return `/torrents?tags=${c.tags.join(\",\")}`;\n  };\n\n  return (\n    <Tr ref={ref}>\n      <Td>\n        {categories\n          .map((c) => (\n            <Link as={RouterLink} to={createTagLink(c)}>\n              {c.name}\n            </Link>\n          ))\n          .map((el, i, arr) => (\n            <>\n              {el}\n              {i !== arr.length - 1 && <span key={String(i) + \"-div\"}>{\" > \"}</span>}\n            </>\n          ))}\n      </Td>\n      <Td maxW=\"lg\" overflow=\"hidden\" isTruncated>\n        <Link as={RouterLink} to={`/torrents/${address}`}>\n          {getTorrentTitle(torrent)}\n        </Link>\n      </Td>\n      <Td>\n        <Timestamp timestamp={torrent.created_at} />\n      </Td>\n      <Td>{formatBytes(getTorrentSize(torrent))}</Td>\n      <Td>\n        <UserLink pubkey={torrent.pubkey} tab=\"torrents\" />\n      </Td>\n      <Td isNumeric>\n        <ButtonGroup variant=\"ghost\" size=\"xs\">\n          <NoteZapButton event={torrent} />\n          <IconButton as={Link} icon={<Magnet />} aria-label=\"Magnet URI\" isExternal href={magnetLink} />\n          <TorrentMenu torrent={torrent} aria-label=\"More Options\" ml=\"auto\" />\n        </ButtonGroup>\n      </Td>\n    </Tr>\n  );\n}\nexport default memo(TorrentTableRow);\n"],"names":["TorrentTableRow","torrent","ref","useEventIntersectionRef","magnetLink","useMemo","getTorrentMagnetLink","address","useShareableEventAddress","categories","chain","tag","name","location","useLocation","createTagLink","c","params","jsxs","Tr","jsx","Td","Link","RouterLink","el","i","arr","Fragment","getTorrentTitle","Timestamp","formatBytes","getTorrentSize","UserLink","ButtonGroup","NoteZapButton","IconButton","Magnet","TorrentMenu","memo"],"mappings":"iQAiBA,SAASA,EAAgB,CAAE,QAAAC,GAAoC,CACvD,MAAAC,EAAMC,EAA6CF,CAAO,EAE1DG,EAAaC,EAAAA,QAAQ,IAAMC,EAAqBL,CAAO,EAAG,CAACA,CAAO,CAAC,EACnEM,EAAUC,EAAyBP,CAAO,EAE1CQ,EAAgC,CAAA,EAChCC,EAAkB,CAAA,EACb,UAAAC,KAAOV,EAAQ,KAAM,CAC1B,GAAAU,EAAI,CAAC,IAAM,IAAK,SACd,MAAAC,EAAOD,EAAI,CAAC,EACZD,EAAA,KAAKC,EAAI,CAAC,CAAC,EACNF,EAAA,KAAK,CAAE,KAAAG,EAAM,KAAM,MAAM,KAAKF,CAAK,EAAG,CACnD,CAEA,MAAMG,EAAWC,IACXC,EAAiBC,GAAuB,CAC5C,GAAIH,EAAS,SAAS,WAAW,WAAW,EAAG,CAC7C,MAAMI,EAAS,IAAI,gBAAgBJ,EAAS,MAAM,EAClD,OAAAI,EAAO,IAAI,OAAQD,EAAE,KAAK,KAAK,GAAG,CAAC,EAC5B,aAAeC,EAAO,SAAS,CACxC,CACA,MAAO,kBAAkBD,EAAE,KAAK,KAAK,GAAG,CAAC,EAAA,EAIzC,OAAAE,OAACC,GAAG,IAAAjB,EACF,SAAA,CAACkB,EAAAA,IAAAC,EAAA,CACE,WACE,IAAKL,GACHI,EAAAA,IAAAE,EAAA,CAAK,GAAIC,EAAY,GAAIR,EAAcC,CAAC,EACtC,SAAAA,EAAE,IACL,CAAA,CACD,EACA,IAAI,CAACQ,EAAIC,EAAGC,IAERR,EAAA,KAAAS,EAAA,SAAA,CAAA,SAAA,CAAAH,EACAC,IAAMC,EAAI,OAAS,GAAKN,EAAA,IAAC,QAA+B,SAArB,KAAA,EAAA,OAAOK,CAAC,EAAI,MAAe,CAAA,CACjE,CAAA,CACD,CACL,CAAA,QACCJ,EAAG,CAAA,KAAK,KAAK,SAAS,SAAS,YAAW,GACzC,SAAAD,EAAA,IAACE,GAAK,GAAIC,EAAY,GAAI,aAAahB,CAAO,GAC3C,SAAgBqB,EAAA3B,CAAO,EAC1B,CACF,CAAA,QACCoB,EACC,CAAA,SAAAD,MAACS,GAAU,UAAW5B,EAAQ,UAAY,CAAA,EAC5C,QACCoB,EAAI,CAAA,SAAAS,EAAYC,EAAe9B,CAAO,CAAC,EAAE,EAC1CmB,EAAAA,IAACC,GACC,SAACD,EAAAA,IAAAY,EAAA,CAAS,OAAQ/B,EAAQ,OAAQ,IAAI,UAAA,CAAW,CACnD,CAAA,EACAmB,EAAAA,IAACC,GAAG,UAAS,GACX,gBAACY,EAAY,CAAA,QAAQ,QAAQ,KAAK,KAChC,SAAA,CAACb,EAAAA,IAAAc,EAAA,CAAc,MAAOjC,CAAS,CAAA,EAC9BmB,EAAA,IAAAe,EAAA,CAAW,GAAIb,EAAM,KAAMF,EAAAA,IAACgB,EAAO,CAAA,CAAA,EAAI,aAAW,aAAa,WAAU,GAAC,KAAMhC,EAAY,QAC5FiC,EAAY,CAAA,QAAApC,EAAkB,aAAW,eAAe,GAAG,OAAO,CAAA,CAAA,CACrE,CACF,CAAA,CACF,CAAA,CAAA,CAEJ,CACA,MAAeqC,EAAAA,EAAAA,KAAKtC,CAAe"}