{"version":3,"file":"index-CLzdn4j4.js","sources":["../../node_modules/.pnpm/memoize-one@5.2.1/node_modules/memoize-one/dist/memoize-one.esm.js","../../node_modules/.pnpm/react-window@1.8.10_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-window/dist/index.esm.js","../../src/views/discovery/relays/selected-context.ts","../../src/views/discovery/relays/components/relay-status-card.tsx","../../src/views/discovery/relays/components/relay-list.tsx","../../src/views/discovery/relays/components/relay-map.tsx","../../src/views/discovery/relays/components/relay-details.tsx","../../node_modules/.pnpm/diacritics@1.3.0/node_modules/diacritics/index.js","../../node_modules/.pnpm/i18n-iso-countries@7.12.0/node_modules/i18n-iso-countries/index.js","../../src/components/county-picker.tsx","../../src/views/discovery/relays/index.tsx"],"sourcesContent":["var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\nexport default memoizeOne;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\n// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\nvar hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\nvar now = hasNativePerformanceNow ? function () {\n  return performance.now();\n} : function () {\n  return Date.now();\n};\nfunction cancelTimeout(timeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\nfunction requestTimeout(callback, delay) {\n  var start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  var timeoutID = {\n    id: requestAnimationFrame(tick)\n  };\n  return timeoutID;\n}\n\nvar size = -1; // This utility copied from \"dom-helpers\" package.\n\nfunction getScrollbarSize(recalculate) {\n  if (recalculate === void 0) {\n    recalculate = false;\n  }\n\n  if (size === -1 || recalculate) {\n    var div = document.createElement('div');\n    var style = div.style;\n    style.width = '50px';\n    style.height = '50px';\n    style.overflow = 'scroll';\n    document.body.appendChild(div);\n    size = div.offsetWidth - div.clientWidth;\n    document.body.removeChild(div);\n  }\n\n  return size;\n}\nvar cachedRTLResult = null; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\n\nfunction getRTLOffsetType(recalculate) {\n  if (recalculate === void 0) {\n    recalculate = false;\n  }\n\n  if (cachedRTLResult === null || recalculate) {\n    var outerDiv = document.createElement('div');\n    var outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n    var innerDiv = document.createElement('div');\n    var innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n    outerDiv.appendChild(innerDiv);\n    document.body.appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    document.body.removeChild(outerDiv);\n    return cachedRTLResult;\n  }\n\n  return cachedRTLResult;\n}\n\nvar IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nvar defaultItemKey = function defaultItemKey(_ref) {\n  var columnIndex = _ref.columnIndex,\n      data = _ref.data,\n      rowIndex = _ref.rowIndex;\n  return rowIndex + \":\" + columnIndex;\n}; // In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\n\n\nvar devWarningsOverscanCount = null;\nvar devWarningsOverscanRowsColumnsCount = null;\nvar devWarningsTagName = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsOverscanCount = /*#__PURE__*/new WeakSet();\n    devWarningsOverscanRowsColumnsCount = /*#__PURE__*/new WeakSet();\n    devWarningsTagName = /*#__PURE__*/new WeakSet();\n  }\n}\n\nfunction createGridComponent(_ref2) {\n  var _class;\n\n  var getColumnOffset = _ref2.getColumnOffset,\n      getColumnStartIndexForOffset = _ref2.getColumnStartIndexForOffset,\n      getColumnStopIndexForStartIndex = _ref2.getColumnStopIndexForStartIndex,\n      getColumnWidth = _ref2.getColumnWidth,\n      getEstimatedTotalHeight = _ref2.getEstimatedTotalHeight,\n      getEstimatedTotalWidth = _ref2.getEstimatedTotalWidth,\n      getOffsetForColumnAndAlignment = _ref2.getOffsetForColumnAndAlignment,\n      getOffsetForRowAndAlignment = _ref2.getOffsetForRowAndAlignment,\n      getRowHeight = _ref2.getRowHeight,\n      getRowOffset = _ref2.getRowOffset,\n      getRowStartIndexForOffset = _ref2.getRowStartIndexForOffset,\n      getRowStopIndexForStartIndex = _ref2.getRowStopIndexForStartIndex,\n      initInstanceProps = _ref2.initInstanceProps,\n      shouldResetStyleCacheOnItemSizeChange = _ref2.shouldResetStyleCacheOnItemSizeChange,\n      validateProps = _ref2.validateProps;\n  return _class = /*#__PURE__*/function (_PureComponent) {\n    _inheritsLoose(Grid, _PureComponent);\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    function Grid(props) {\n      var _this;\n\n      _this = _PureComponent.call(this, props) || this;\n      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_this));\n      _this._resetIsScrollingTimeoutId = null;\n      _this._outerRef = void 0;\n      _this.state = {\n        instance: _assertThisInitialized(_this),\n        isScrolling: false,\n        horizontalScrollDirection: 'forward',\n        scrollLeft: typeof _this.props.initialScrollLeft === 'number' ? _this.props.initialScrollLeft : 0,\n        scrollTop: typeof _this.props.initialScrollTop === 'number' ? _this.props.initialScrollTop : 0,\n        scrollUpdateWasRequested: false,\n        verticalScrollDirection: 'forward'\n      };\n      _this._callOnItemsRendered = void 0;\n      _this._callOnItemsRendered = memoizeOne(function (overscanColumnStartIndex, overscanColumnStopIndex, overscanRowStartIndex, overscanRowStopIndex, visibleColumnStartIndex, visibleColumnStopIndex, visibleRowStartIndex, visibleRowStopIndex) {\n        return _this.props.onItemsRendered({\n          overscanColumnStartIndex: overscanColumnStartIndex,\n          overscanColumnStopIndex: overscanColumnStopIndex,\n          overscanRowStartIndex: overscanRowStartIndex,\n          overscanRowStopIndex: overscanRowStopIndex,\n          visibleColumnStartIndex: visibleColumnStartIndex,\n          visibleColumnStopIndex: visibleColumnStopIndex,\n          visibleRowStartIndex: visibleRowStartIndex,\n          visibleRowStopIndex: visibleRowStopIndex\n        });\n      });\n      _this._callOnScroll = void 0;\n      _this._callOnScroll = memoizeOne(function (scrollLeft, scrollTop, horizontalScrollDirection, verticalScrollDirection, scrollUpdateWasRequested) {\n        return _this.props.onScroll({\n          horizontalScrollDirection: horizontalScrollDirection,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          verticalScrollDirection: verticalScrollDirection,\n          scrollUpdateWasRequested: scrollUpdateWasRequested\n        });\n      });\n      _this._getItemStyle = void 0;\n\n      _this._getItemStyle = function (rowIndex, columnIndex) {\n        var _this$props = _this.props,\n            columnWidth = _this$props.columnWidth,\n            direction = _this$props.direction,\n            rowHeight = _this$props.rowHeight;\n\n        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && columnWidth, shouldResetStyleCacheOnItemSizeChange && direction, shouldResetStyleCacheOnItemSizeChange && rowHeight);\n\n        var key = rowIndex + \":\" + columnIndex;\n        var style;\n\n        if (itemStyleCache.hasOwnProperty(key)) {\n          style = itemStyleCache[key];\n        } else {\n          var _offset = getColumnOffset(_this.props, columnIndex, _this._instanceProps);\n\n          var isRtl = direction === 'rtl';\n          itemStyleCache[key] = style = {\n            position: 'absolute',\n            left: isRtl ? undefined : _offset,\n            right: isRtl ? _offset : undefined,\n            top: getRowOffset(_this.props, rowIndex, _this._instanceProps),\n            height: getRowHeight(_this.props, rowIndex, _this._instanceProps),\n            width: getColumnWidth(_this.props, columnIndex, _this._instanceProps)\n          };\n        }\n\n        return style;\n      };\n\n      _this._getItemStyleCache = void 0;\n      _this._getItemStyleCache = memoizeOne(function (_, __, ___) {\n        return {};\n      });\n\n      _this._onScroll = function (event) {\n        var _event$currentTarget = event.currentTarget,\n            clientHeight = _event$currentTarget.clientHeight,\n            clientWidth = _event$currentTarget.clientWidth,\n            scrollLeft = _event$currentTarget.scrollLeft,\n            scrollTop = _event$currentTarget.scrollTop,\n            scrollHeight = _event$currentTarget.scrollHeight,\n            scrollWidth = _event$currentTarget.scrollWidth;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          }\n\n          var direction = _this.props.direction; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n\n          var calculatedScrollLeft = scrollLeft;\n\n          if (direction === 'rtl') {\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                calculatedScrollLeft = -scrollLeft;\n                break;\n\n              case 'positive-descending':\n                calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;\n                break;\n            }\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          calculatedScrollLeft = Math.max(0, Math.min(calculatedScrollLeft, scrollWidth - clientWidth));\n          var calculatedScrollTop = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n          return {\n            isScrolling: true,\n            horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n            scrollLeft: calculatedScrollLeft,\n            scrollTop: calculatedScrollTop,\n            verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._outerRefSetter = function (ref) {\n        var outerRef = _this.props.outerRef;\n        _this._outerRef = ref;\n\n        if (typeof outerRef === 'function') {\n          outerRef(ref);\n        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {\n          outerRef.current = ref;\n        }\n      };\n\n      _this._resetIsScrollingDebounced = function () {\n        if (_this._resetIsScrollingTimeoutId !== null) {\n          cancelTimeout(_this._resetIsScrollingTimeoutId);\n        }\n\n        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL);\n      };\n\n      _this._resetIsScrolling = function () {\n        _this._resetIsScrollingTimeoutId = null;\n\n        _this.setState({\n          isScrolling: false\n        }, function () {\n          // Clear style cache after state update has been committed.\n          // This way we don't break pure sCU for items that don't use isScrolling param.\n          _this._getItemStyleCache(-1);\n        });\n      };\n\n      return _this;\n    }\n\n    Grid.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    };\n\n    var _proto = Grid.prototype;\n\n    _proto.scrollTo = function scrollTo(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n\n      if (scrollLeft !== undefined) {\n        scrollLeft = Math.max(0, scrollLeft);\n      }\n\n      if (scrollTop !== undefined) {\n        scrollTop = Math.max(0, scrollTop);\n      }\n\n      this.setState(function (prevState) {\n        if (scrollLeft === undefined) {\n          scrollLeft = prevState.scrollLeft;\n        }\n\n        if (scrollTop === undefined) {\n          scrollTop = prevState.scrollTop;\n        }\n\n        if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {\n          return null;\n        }\n\n        return {\n          horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          scrollUpdateWasRequested: true,\n          verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward'\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _proto.scrollToItem = function scrollToItem(_ref4) {\n      var _ref4$align = _ref4.align,\n          align = _ref4$align === void 0 ? 'auto' : _ref4$align,\n          columnIndex = _ref4.columnIndex,\n          rowIndex = _ref4.rowIndex;\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          height = _this$props2.height,\n          rowCount = _this$props2.rowCount,\n          width = _this$props2.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n      var scrollbarSize = getScrollbarSize();\n\n      if (columnIndex !== undefined) {\n        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));\n      }\n\n      if (rowIndex !== undefined) {\n        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));\n      }\n\n      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);\n      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps); // The scrollbar size should be considered when scrolling an item into view,\n      // to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n\n      var horizontalScrollbarSize = estimatedTotalWidth > width ? scrollbarSize : 0;\n      var verticalScrollbarSize = estimatedTotalHeight > height ? scrollbarSize : 0;\n      this.scrollTo({\n        scrollLeft: columnIndex !== undefined ? getOffsetForColumnAndAlignment(this.props, columnIndex, align, scrollLeft, this._instanceProps, verticalScrollbarSize) : scrollLeft,\n        scrollTop: rowIndex !== undefined ? getOffsetForRowAndAlignment(this.props, rowIndex, align, scrollTop, this._instanceProps, horizontalScrollbarSize) : scrollTop\n      });\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this$props3 = this.props,\n          initialScrollLeft = _this$props3.initialScrollLeft,\n          initialScrollTop = _this$props3.initialScrollTop;\n\n      if (this._outerRef != null) {\n        var outerRef = this._outerRef;\n\n        if (typeof initialScrollLeft === 'number') {\n          outerRef.scrollLeft = initialScrollLeft;\n        }\n\n        if (typeof initialScrollTop === 'number') {\n          outerRef.scrollTop = initialScrollTop;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      var direction = this.props.direction;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollTop = _this$state2.scrollTop,\n          scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // So we need to determine which browser behavior we're dealing with, and mimic it.\n        var outerRef = this._outerRef;\n\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              outerRef.scrollLeft = -scrollLeft;\n              break;\n\n            case 'positive-ascending':\n              outerRef.scrollLeft = scrollLeft;\n              break;\n\n            default:\n              var clientWidth = outerRef.clientWidth,\n                  scrollWidth = outerRef.scrollWidth;\n              outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        } else {\n          outerRef.scrollLeft = Math.max(0, scrollLeft);\n        }\n\n        outerRef.scrollTop = Math.max(0, scrollTop);\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          className = _this$props4.className,\n          columnCount = _this$props4.columnCount,\n          direction = _this$props4.direction,\n          height = _this$props4.height,\n          innerRef = _this$props4.innerRef,\n          innerElementType = _this$props4.innerElementType,\n          innerTagName = _this$props4.innerTagName,\n          itemData = _this$props4.itemData,\n          _this$props4$itemKey = _this$props4.itemKey,\n          itemKey = _this$props4$itemKey === void 0 ? defaultItemKey : _this$props4$itemKey,\n          outerElementType = _this$props4.outerElementType,\n          outerTagName = _this$props4.outerTagName,\n          rowCount = _this$props4.rowCount,\n          style = _this$props4.style,\n          useIsScrolling = _this$props4.useIsScrolling,\n          width = _this$props4.width;\n      var isScrolling = this.state.isScrolling;\n\n      var _this$_getHorizontalR = this._getHorizontalRangeToRender(),\n          columnStartIndex = _this$_getHorizontalR[0],\n          columnStopIndex = _this$_getHorizontalR[1];\n\n      var _this$_getVerticalRan = this._getVerticalRangeToRender(),\n          rowStartIndex = _this$_getVerticalRan[0],\n          rowStopIndex = _this$_getVerticalRan[1];\n\n      var items = [];\n\n      if (columnCount > 0 && rowCount) {\n        for (var _rowIndex = rowStartIndex; _rowIndex <= rowStopIndex; _rowIndex++) {\n          for (var _columnIndex = columnStartIndex; _columnIndex <= columnStopIndex; _columnIndex++) {\n            items.push(createElement(children, {\n              columnIndex: _columnIndex,\n              data: itemData,\n              isScrolling: useIsScrolling ? isScrolling : undefined,\n              key: itemKey({\n                columnIndex: _columnIndex,\n                data: itemData,\n                rowIndex: _rowIndex\n              }),\n              rowIndex: _rowIndex,\n              style: this._getItemStyle(_rowIndex, _columnIndex)\n            }));\n          }\n        }\n      } // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n\n\n      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);\n      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps);\n      return createElement(outerElementType || outerTagName || 'div', {\n        className: className,\n        onScroll: this._onScroll,\n        ref: this._outerRefSetter,\n        style: _extends({\n          position: 'relative',\n          height: height,\n          width: width,\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n          direction: direction\n        }, style)\n      }, createElement(innerElementType || innerTagName || 'div', {\n        children: items,\n        ref: innerRef,\n        style: {\n          height: estimatedTotalHeight,\n          pointerEvents: isScrolling ? 'none' : undefined,\n          width: estimatedTotalWidth\n        }\n      }));\n    };\n\n    _proto._callPropsCallbacks = function _callPropsCallbacks() {\n      var _this$props5 = this.props,\n          columnCount = _this$props5.columnCount,\n          onItemsRendered = _this$props5.onItemsRendered,\n          onScroll = _this$props5.onScroll,\n          rowCount = _this$props5.rowCount;\n\n      if (typeof onItemsRendered === 'function') {\n        if (columnCount > 0 && rowCount > 0) {\n          var _this$_getHorizontalR2 = this._getHorizontalRangeToRender(),\n              _overscanColumnStartIndex = _this$_getHorizontalR2[0],\n              _overscanColumnStopIndex = _this$_getHorizontalR2[1],\n              _visibleColumnStartIndex = _this$_getHorizontalR2[2],\n              _visibleColumnStopIndex = _this$_getHorizontalR2[3];\n\n          var _this$_getVerticalRan2 = this._getVerticalRangeToRender(),\n              _overscanRowStartIndex = _this$_getVerticalRan2[0],\n              _overscanRowStopIndex = _this$_getVerticalRan2[1],\n              _visibleRowStartIndex = _this$_getVerticalRan2[2],\n              _visibleRowStopIndex = _this$_getVerticalRan2[3];\n\n          this._callOnItemsRendered(_overscanColumnStartIndex, _overscanColumnStopIndex, _overscanRowStartIndex, _overscanRowStopIndex, _visibleColumnStartIndex, _visibleColumnStopIndex, _visibleRowStartIndex, _visibleRowStopIndex);\n        }\n      }\n\n      if (typeof onScroll === 'function') {\n        var _this$state3 = this.state,\n            _horizontalScrollDirection = _this$state3.horizontalScrollDirection,\n            _scrollLeft = _this$state3.scrollLeft,\n            _scrollTop = _this$state3.scrollTop,\n            _scrollUpdateWasRequested = _this$state3.scrollUpdateWasRequested,\n            _verticalScrollDirection = _this$state3.verticalScrollDirection;\n\n        this._callOnScroll(_scrollLeft, _scrollTop, _horizontalScrollDirection, _verticalScrollDirection, _scrollUpdateWasRequested);\n      }\n    } // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    ;\n\n    _proto._getHorizontalRangeToRender = function _getHorizontalRangeToRender() {\n      var _this$props6 = this.props,\n          columnCount = _this$props6.columnCount,\n          overscanColumnCount = _this$props6.overscanColumnCount,\n          overscanColumnsCount = _this$props6.overscanColumnsCount,\n          overscanCount = _this$props6.overscanCount,\n          rowCount = _this$props6.rowCount;\n      var _this$state4 = this.state,\n          horizontalScrollDirection = _this$state4.horizontalScrollDirection,\n          isScrolling = _this$state4.isScrolling,\n          scrollLeft = _this$state4.scrollLeft;\n      var overscanCountResolved = overscanColumnCount || overscanColumnsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getColumnStartIndexForOffset(this.props, scrollLeft, this._instanceProps);\n      var stopIndex = getColumnStopIndexForStartIndex(this.props, startIndex, scrollLeft, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || horizontalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;\n      var overscanForward = !isScrolling || horizontalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    _proto._getVerticalRangeToRender = function _getVerticalRangeToRender() {\n      var _this$props7 = this.props,\n          columnCount = _this$props7.columnCount,\n          overscanCount = _this$props7.overscanCount,\n          overscanRowCount = _this$props7.overscanRowCount,\n          overscanRowsCount = _this$props7.overscanRowsCount,\n          rowCount = _this$props7.rowCount;\n      var _this$state5 = this.state,\n          isScrolling = _this$state5.isScrolling,\n          verticalScrollDirection = _this$state5.verticalScrollDirection,\n          scrollTop = _this$state5.scrollTop;\n      var overscanCountResolved = overscanRowCount || overscanRowsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getRowStartIndexForOffset(this.props, scrollTop, this._instanceProps);\n      var stopIndex = getRowStopIndexForStartIndex(this.props, startIndex, scrollTop, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || verticalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;\n      var overscanForward = !isScrolling || verticalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    return Grid;\n  }(PureComponent), _class.defaultProps = {\n    direction: 'ltr',\n    itemData: undefined,\n    useIsScrolling: false\n  }, _class;\n}\n\nvar validateSharedProps = function validateSharedProps(_ref5, _ref6) {\n  var children = _ref5.children,\n      direction = _ref5.direction,\n      height = _ref5.height,\n      innerTagName = _ref5.innerTagName,\n      outerTagName = _ref5.outerTagName,\n      overscanColumnsCount = _ref5.overscanColumnsCount,\n      overscanCount = _ref5.overscanCount,\n      overscanRowsCount = _ref5.overscanRowsCount,\n      width = _ref5.width;\n  var instance = _ref6.instance;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof overscanCount === 'number') {\n      if (devWarningsOverscanCount && !devWarningsOverscanCount.has(instance)) {\n        devWarningsOverscanCount.add(instance);\n        console.warn('The overscanCount prop has been deprecated. ' + 'Please use the overscanColumnCount and overscanRowCount props instead.');\n      }\n    }\n\n    if (typeof overscanColumnsCount === 'number' || typeof overscanRowsCount === 'number') {\n      if (devWarningsOverscanRowsColumnsCount && !devWarningsOverscanRowsColumnsCount.has(instance)) {\n        devWarningsOverscanRowsColumnsCount.add(instance);\n        console.warn('The overscanColumnsCount and overscanRowsCount props have been deprecated. ' + 'Please use the overscanColumnCount and overscanRowCount props instead.');\n      }\n    }\n\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn('The innerTagName and outerTagName props have been deprecated. ' + 'Please use the innerElementType and outerElementType props instead.');\n      }\n    }\n\n    if (children == null) {\n      throw Error('An invalid \"children\" prop has been specified. ' + 'Value should be a React component. ' + (\"\\\"\" + (children === null ? 'null' : typeof children) + \"\\\" was specified.\"));\n    }\n\n    switch (direction) {\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"direction\" prop has been specified. ' + 'Value should be either \"ltr\" or \"rtl\". ' + (\"\\\"\" + direction + \"\\\" was specified.\"));\n    }\n\n    if (typeof width !== 'number') {\n      throw Error('An invalid \"width\" prop has been specified. ' + 'Grids must specify a number for width. ' + (\"\\\"\" + (width === null ? 'null' : typeof width) + \"\\\" was specified.\"));\n    }\n\n    if (typeof height !== 'number') {\n      throw Error('An invalid \"height\" prop has been specified. ' + 'Grids must specify a number for height. ' + (\"\\\"\" + (height === null ? 'null' : typeof height) + \"\\\" was specified.\"));\n    }\n  }\n};\n\nvar DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\nvar getEstimatedTotalHeight = function getEstimatedTotalHeight(_ref, _ref2) {\n  var rowCount = _ref.rowCount;\n  var rowMetadataMap = _ref2.rowMetadataMap,\n      estimatedRowHeight = _ref2.estimatedRowHeight,\n      lastMeasuredRowIndex = _ref2.lastMeasuredRowIndex;\n  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredRowIndex >= rowCount) {\n    lastMeasuredRowIndex = rowCount - 1;\n  }\n\n  if (lastMeasuredRowIndex >= 0) {\n    var itemMetadata = rowMetadataMap[lastMeasuredRowIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = rowCount - lastMeasuredRowIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedRowHeight;\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nvar getEstimatedTotalWidth = function getEstimatedTotalWidth(_ref3, _ref4) {\n  var columnCount = _ref3.columnCount;\n  var columnMetadataMap = _ref4.columnMetadataMap,\n      estimatedColumnWidth = _ref4.estimatedColumnWidth,\n      lastMeasuredColumnIndex = _ref4.lastMeasuredColumnIndex;\n  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredColumnIndex >= columnCount) {\n    lastMeasuredColumnIndex = columnCount - 1;\n  }\n\n  if (lastMeasuredColumnIndex >= 0) {\n    var itemMetadata = columnMetadataMap[lastMeasuredColumnIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = columnCount - lastMeasuredColumnIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedColumnWidth;\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nvar getItemMetadata = function getItemMetadata(itemType, props, index, instanceProps) {\n  var itemMetadataMap, itemSize, lastMeasuredIndex;\n\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    itemSize = props.columnWidth;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    itemSize = props.rowHeight;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  if (index > lastMeasuredIndex) {\n    var offset = 0;\n\n    if (lastMeasuredIndex >= 0) {\n      var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (var i = lastMeasuredIndex + 1; i <= index; i++) {\n      var size = itemSize(i);\n      itemMetadataMap[i] = {\n        offset: offset,\n        size: size\n      };\n      offset += size;\n    }\n\n    if (itemType === 'column') {\n      instanceProps.lastMeasuredColumnIndex = index;\n    } else {\n      instanceProps.lastMeasuredRowIndex = index;\n    }\n  }\n\n  return itemMetadataMap[index];\n};\n\nvar findNearestItem = function findNearestItem(itemType, props, instanceProps, offset) {\n  var itemMetadataMap, lastMeasuredIndex;\n\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(itemType, props, instanceProps, lastMeasuredIndex, 0, offset);\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(itemType, props, instanceProps, Math.max(0, lastMeasuredIndex), offset);\n  }\n};\n\nvar findNearestItemBinarySearch = function findNearestItemBinarySearch(itemType, props, instanceProps, high, low, offset) {\n  while (low <= high) {\n    var middle = low + Math.floor((high - low) / 2);\n    var currentOffset = getItemMetadata(itemType, props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nvar findNearestItemExponentialSearch = function findNearestItemExponentialSearch(itemType, props, instanceProps, index, offset) {\n  var itemCount = itemType === 'column' ? props.columnCount : props.rowCount;\n  var interval = 1;\n\n  while (index < itemCount && getItemMetadata(itemType, props, index, instanceProps).offset < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch(itemType, props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);\n};\n\nvar getOffsetForIndexAndAlignment = function getOffsetForIndexAndAlignment(itemType, props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n  var size = itemType === 'column' ? props.width : props.height;\n  var itemMetadata = getItemMetadata(itemType, props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,\n  // To ensure it reflects actual measurements instead of just estimates.\n\n  var estimatedTotalSize = itemType === 'column' ? getEstimatedTotalWidth(props, instanceProps) : getEstimatedTotalHeight(props, instanceProps);\n  var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));\n  var minOffset = Math.max(0, itemMetadata.offset - size + scrollbarSize + itemMetadata.size);\n\n  if (align === 'smart') {\n    if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n      align = 'auto';\n    } else {\n      align = 'center';\n    }\n  }\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n    case 'auto':\n    default:\n      if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n        return scrollOffset;\n      } else if (minOffset > maxOffset) {\n        // Because we only take into account the scrollbar size when calculating minOffset\n        // this value can be larger than maxOffset when at the end of the list\n        return minOffset;\n      } else if (scrollOffset < minOffset) {\n        return minOffset;\n      } else {\n        return maxOffset;\n      }\n\n  }\n};\n\nvar VariableSizeGrid = /*#__PURE__*/createGridComponent({\n  getColumnOffset: function getColumnOffset(props, index, instanceProps) {\n    return getItemMetadata('column', props, index, instanceProps).offset;\n  },\n  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(props, scrollLeft, instanceProps) {\n    return findNearestItem('column', props, instanceProps, scrollLeft);\n  },\n  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(props, startIndex, scrollLeft, instanceProps) {\n    var columnCount = props.columnCount,\n        width = props.width;\n    var itemMetadata = getItemMetadata('column', props, startIndex, instanceProps);\n    var maxOffset = scrollLeft + width;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < columnCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('column', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  getColumnWidth: function getColumnWidth(props, index, instanceProps) {\n    return instanceProps.columnMetadataMap[index].size;\n  },\n  getEstimatedTotalHeight: getEstimatedTotalHeight,\n  getEstimatedTotalWidth: getEstimatedTotalWidth,\n  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    return getOffsetForIndexAndAlignment('column', props, index, align, scrollOffset, instanceProps, scrollbarSize);\n  },\n  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    return getOffsetForIndexAndAlignment('row', props, index, align, scrollOffset, instanceProps, scrollbarSize);\n  },\n  getRowOffset: function getRowOffset(props, index, instanceProps) {\n    return getItemMetadata('row', props, index, instanceProps).offset;\n  },\n  getRowHeight: function getRowHeight(props, index, instanceProps) {\n    return instanceProps.rowMetadataMap[index].size;\n  },\n  getRowStartIndexForOffset: function getRowStartIndexForOffset(props, scrollTop, instanceProps) {\n    return findNearestItem('row', props, instanceProps, scrollTop);\n  },\n  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(props, startIndex, scrollTop, instanceProps) {\n    var rowCount = props.rowCount,\n        height = props.height;\n    var itemMetadata = getItemMetadata('row', props, startIndex, instanceProps);\n    var maxOffset = scrollTop + height;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < rowCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('row', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  initInstanceProps: function initInstanceProps(props, instance) {\n    var _ref5 = props,\n        estimatedColumnWidth = _ref5.estimatedColumnWidth,\n        estimatedRowHeight = _ref5.estimatedRowHeight;\n    var instanceProps = {\n      columnMetadataMap: {},\n      estimatedColumnWidth: estimatedColumnWidth || DEFAULT_ESTIMATED_ITEM_SIZE,\n      estimatedRowHeight: estimatedRowHeight || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredColumnIndex: -1,\n      lastMeasuredRowIndex: -1,\n      rowMetadataMap: {}\n    };\n\n    instance.resetAfterColumnIndex = function (columnIndex, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instance.resetAfterIndices({\n        columnIndex: columnIndex,\n        shouldForceUpdate: shouldForceUpdate\n      });\n    };\n\n    instance.resetAfterRowIndex = function (rowIndex, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instance.resetAfterIndices({\n        rowIndex: rowIndex,\n        shouldForceUpdate: shouldForceUpdate\n      });\n    };\n\n    instance.resetAfterIndices = function (_ref6) {\n      var columnIndex = _ref6.columnIndex,\n          rowIndex = _ref6.rowIndex,\n          _ref6$shouldForceUpda = _ref6.shouldForceUpdate,\n          shouldForceUpdate = _ref6$shouldForceUpda === void 0 ? true : _ref6$shouldForceUpda;\n\n      if (typeof columnIndex === 'number') {\n        instanceProps.lastMeasuredColumnIndex = Math.min(instanceProps.lastMeasuredColumnIndex, columnIndex - 1);\n      }\n\n      if (typeof rowIndex === 'number') {\n        instanceProps.lastMeasuredRowIndex = Math.min(instanceProps.lastMeasuredRowIndex, rowIndex - 1);\n      } // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n\n\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n  shouldResetStyleCacheOnItemSizeChange: false,\n  validateProps: function validateProps(_ref7) {\n    var columnWidth = _ref7.columnWidth,\n        rowHeight = _ref7.rowHeight;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'function') {\n        throw Error('An invalid \"columnWidth\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (columnWidth === null ? 'null' : typeof columnWidth) + \"\\\" was specified.\"));\n      } else if (typeof rowHeight !== 'function') {\n        throw Error('An invalid \"rowHeight\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (rowHeight === null ? 'null' : typeof rowHeight) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar IS_SCROLLING_DEBOUNCE_INTERVAL$1 = 150;\n\nvar defaultItemKey$1 = function defaultItemKey(index, data) {\n  return index;\n}; // In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\n\n\nvar devWarningsDirection = null;\nvar devWarningsTagName$1 = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsDirection = /*#__PURE__*/new WeakSet();\n    devWarningsTagName$1 = /*#__PURE__*/new WeakSet();\n  }\n}\n\nfunction createListComponent(_ref) {\n  var _class;\n\n  var getItemOffset = _ref.getItemOffset,\n      getEstimatedTotalSize = _ref.getEstimatedTotalSize,\n      getItemSize = _ref.getItemSize,\n      getOffsetForIndexAndAlignment = _ref.getOffsetForIndexAndAlignment,\n      getStartIndexForOffset = _ref.getStartIndexForOffset,\n      getStopIndexForStartIndex = _ref.getStopIndexForStartIndex,\n      initInstanceProps = _ref.initInstanceProps,\n      shouldResetStyleCacheOnItemSizeChange = _ref.shouldResetStyleCacheOnItemSizeChange,\n      validateProps = _ref.validateProps;\n  return _class = /*#__PURE__*/function (_PureComponent) {\n    _inheritsLoose(List, _PureComponent);\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    function List(props) {\n      var _this;\n\n      _this = _PureComponent.call(this, props) || this;\n      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_this));\n      _this._outerRef = void 0;\n      _this._resetIsScrollingTimeoutId = null;\n      _this.state = {\n        instance: _assertThisInitialized(_this),\n        isScrolling: false,\n        scrollDirection: 'forward',\n        scrollOffset: typeof _this.props.initialScrollOffset === 'number' ? _this.props.initialScrollOffset : 0,\n        scrollUpdateWasRequested: false\n      };\n      _this._callOnItemsRendered = void 0;\n      _this._callOnItemsRendered = memoizeOne(function (overscanStartIndex, overscanStopIndex, visibleStartIndex, visibleStopIndex) {\n        return _this.props.onItemsRendered({\n          overscanStartIndex: overscanStartIndex,\n          overscanStopIndex: overscanStopIndex,\n          visibleStartIndex: visibleStartIndex,\n          visibleStopIndex: visibleStopIndex\n        });\n      });\n      _this._callOnScroll = void 0;\n      _this._callOnScroll = memoizeOne(function (scrollDirection, scrollOffset, scrollUpdateWasRequested) {\n        return _this.props.onScroll({\n          scrollDirection: scrollDirection,\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: scrollUpdateWasRequested\n        });\n      });\n      _this._getItemStyle = void 0;\n\n      _this._getItemStyle = function (index) {\n        var _this$props = _this.props,\n            direction = _this$props.direction,\n            itemSize = _this$props.itemSize,\n            layout = _this$props.layout;\n\n        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && itemSize, shouldResetStyleCacheOnItemSizeChange && layout, shouldResetStyleCacheOnItemSizeChange && direction);\n\n        var style;\n\n        if (itemStyleCache.hasOwnProperty(index)) {\n          style = itemStyleCache[index];\n        } else {\n          var _offset = getItemOffset(_this.props, index, _this._instanceProps);\n\n          var size = getItemSize(_this.props, index, _this._instanceProps); // TODO Deprecate direction \"horizontal\"\n\n          var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n          var isRtl = direction === 'rtl';\n          var offsetHorizontal = isHorizontal ? _offset : 0;\n          itemStyleCache[index] = style = {\n            position: 'absolute',\n            left: isRtl ? undefined : offsetHorizontal,\n            right: isRtl ? offsetHorizontal : undefined,\n            top: !isHorizontal ? _offset : 0,\n            height: !isHorizontal ? size : '100%',\n            width: isHorizontal ? size : '100%'\n          };\n        }\n\n        return style;\n      };\n\n      _this._getItemStyleCache = void 0;\n      _this._getItemStyleCache = memoizeOne(function (_, __, ___) {\n        return {};\n      });\n\n      _this._onScrollHorizontal = function (event) {\n        var _event$currentTarget = event.currentTarget,\n            clientWidth = _event$currentTarget.clientWidth,\n            scrollLeft = _event$currentTarget.scrollLeft,\n            scrollWidth = _event$currentTarget.scrollWidth;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollOffset === scrollLeft) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          }\n\n          var direction = _this.props.direction;\n          var scrollOffset = scrollLeft;\n\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n            // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                scrollOffset = -scrollLeft;\n                break;\n\n              case 'positive-descending':\n                scrollOffset = scrollWidth - clientWidth - scrollLeft;\n                break;\n            }\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          scrollOffset = Math.max(0, Math.min(scrollOffset, scrollWidth - clientWidth));\n          return {\n            isScrolling: true,\n            scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n            scrollOffset: scrollOffset,\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._onScrollVertical = function (event) {\n        var _event$currentTarget2 = event.currentTarget,\n            clientHeight = _event$currentTarget2.clientHeight,\n            scrollHeight = _event$currentTarget2.scrollHeight,\n            scrollTop = _event$currentTarget2.scrollTop;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollOffset === scrollTop) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          var scrollOffset = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n          return {\n            isScrolling: true,\n            scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n            scrollOffset: scrollOffset,\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._outerRefSetter = function (ref) {\n        var outerRef = _this.props.outerRef;\n        _this._outerRef = ref;\n\n        if (typeof outerRef === 'function') {\n          outerRef(ref);\n        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {\n          outerRef.current = ref;\n        }\n      };\n\n      _this._resetIsScrollingDebounced = function () {\n        if (_this._resetIsScrollingTimeoutId !== null) {\n          cancelTimeout(_this._resetIsScrollingTimeoutId);\n        }\n\n        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL$1);\n      };\n\n      _this._resetIsScrolling = function () {\n        _this._resetIsScrollingTimeoutId = null;\n\n        _this.setState({\n          isScrolling: false\n        }, function () {\n          // Clear style cache after state update has been committed.\n          // This way we don't break pure sCU for items that don't use isScrolling param.\n          _this._getItemStyleCache(-1, null);\n        });\n      };\n\n      return _this;\n    }\n\n    List.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      validateSharedProps$1(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    };\n\n    var _proto = List.prototype;\n\n    _proto.scrollTo = function scrollTo(scrollOffset) {\n      scrollOffset = Math.max(0, scrollOffset);\n      this.setState(function (prevState) {\n        if (prevState.scrollOffset === scrollOffset) {\n          return null;\n        }\n\n        return {\n          scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: true\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _proto.scrollToItem = function scrollToItem(index, align) {\n      if (align === void 0) {\n        align = 'auto';\n      }\n\n      var _this$props2 = this.props,\n          itemCount = _this$props2.itemCount,\n          layout = _this$props2.layout;\n      var scrollOffset = this.state.scrollOffset;\n      index = Math.max(0, Math.min(index, itemCount - 1)); // The scrollbar size should be considered when scrolling an item into view, to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n      // This is an edge case for lists; normally they only scroll in the dominant direction.\n\n      var scrollbarSize = 0;\n\n      if (this._outerRef) {\n        var outerRef = this._outerRef;\n\n        if (layout === 'vertical') {\n          scrollbarSize = outerRef.scrollWidth > outerRef.clientWidth ? getScrollbarSize() : 0;\n        } else {\n          scrollbarSize = outerRef.scrollHeight > outerRef.clientHeight ? getScrollbarSize() : 0;\n        }\n      }\n\n      this.scrollTo(getOffsetForIndexAndAlignment(this.props, index, align, scrollOffset, this._instanceProps, scrollbarSize));\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this$props3 = this.props,\n          direction = _this$props3.direction,\n          initialScrollOffset = _this$props3.initialScrollOffset,\n          layout = _this$props3.layout;\n\n      if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\n        var outerRef = this._outerRef; // TODO Deprecate direction \"horizontal\"\n\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          outerRef.scrollLeft = initialScrollOffset;\n        } else {\n          outerRef.scrollTop = initialScrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      var _this$props4 = this.props,\n          direction = _this$props4.direction,\n          layout = _this$props4.layout;\n      var _this$state = this.state,\n          scrollOffset = _this$state.scrollOffset,\n          scrollUpdateWasRequested = _this$state.scrollUpdateWasRequested;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        var outerRef = this._outerRef; // TODO Deprecate direction \"horizontal\"\n\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // So we need to determine which browser behavior we're dealing with, and mimic it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                outerRef.scrollLeft = -scrollOffset;\n                break;\n\n              case 'positive-ascending':\n                outerRef.scrollLeft = scrollOffset;\n                break;\n\n              default:\n                var clientWidth = outerRef.clientWidth,\n                    scrollWidth = outerRef.scrollWidth;\n                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset;\n                break;\n            }\n          } else {\n            outerRef.scrollLeft = scrollOffset;\n          }\n        } else {\n          outerRef.scrollTop = scrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props5 = this.props,\n          children = _this$props5.children,\n          className = _this$props5.className,\n          direction = _this$props5.direction,\n          height = _this$props5.height,\n          innerRef = _this$props5.innerRef,\n          innerElementType = _this$props5.innerElementType,\n          innerTagName = _this$props5.innerTagName,\n          itemCount = _this$props5.itemCount,\n          itemData = _this$props5.itemData,\n          _this$props5$itemKey = _this$props5.itemKey,\n          itemKey = _this$props5$itemKey === void 0 ? defaultItemKey$1 : _this$props5$itemKey,\n          layout = _this$props5.layout,\n          outerElementType = _this$props5.outerElementType,\n          outerTagName = _this$props5.outerTagName,\n          style = _this$props5.style,\n          useIsScrolling = _this$props5.useIsScrolling,\n          width = _this$props5.width;\n      var isScrolling = this.state.isScrolling; // TODO Deprecate direction \"horizontal\"\n\n      var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n      var onScroll = isHorizontal ? this._onScrollHorizontal : this._onScrollVertical;\n\n      var _this$_getRangeToRend = this._getRangeToRender(),\n          startIndex = _this$_getRangeToRend[0],\n          stopIndex = _this$_getRangeToRend[1];\n\n      var items = [];\n\n      if (itemCount > 0) {\n        for (var _index = startIndex; _index <= stopIndex; _index++) {\n          items.push(createElement(children, {\n            data: itemData,\n            key: itemKey(_index, itemData),\n            index: _index,\n            isScrolling: useIsScrolling ? isScrolling : undefined,\n            style: this._getItemStyle(_index)\n          }));\n        }\n      } // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n\n\n      var estimatedTotalSize = getEstimatedTotalSize(this.props, this._instanceProps);\n      return createElement(outerElementType || outerTagName || 'div', {\n        className: className,\n        onScroll: onScroll,\n        ref: this._outerRefSetter,\n        style: _extends({\n          position: 'relative',\n          height: height,\n          width: width,\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n          direction: direction\n        }, style)\n      }, createElement(innerElementType || innerTagName || 'div', {\n        children: items,\n        ref: innerRef,\n        style: {\n          height: isHorizontal ? '100%' : estimatedTotalSize,\n          pointerEvents: isScrolling ? 'none' : undefined,\n          width: isHorizontal ? estimatedTotalSize : '100%'\n        }\n      }));\n    };\n\n    _proto._callPropsCallbacks = function _callPropsCallbacks() {\n      if (typeof this.props.onItemsRendered === 'function') {\n        var itemCount = this.props.itemCount;\n\n        if (itemCount > 0) {\n          var _this$_getRangeToRend2 = this._getRangeToRender(),\n              _overscanStartIndex = _this$_getRangeToRend2[0],\n              _overscanStopIndex = _this$_getRangeToRend2[1],\n              _visibleStartIndex = _this$_getRangeToRend2[2],\n              _visibleStopIndex = _this$_getRangeToRend2[3];\n\n          this._callOnItemsRendered(_overscanStartIndex, _overscanStopIndex, _visibleStartIndex, _visibleStopIndex);\n        }\n      }\n\n      if (typeof this.props.onScroll === 'function') {\n        var _this$state2 = this.state,\n            _scrollDirection = _this$state2.scrollDirection,\n            _scrollOffset = _this$state2.scrollOffset,\n            _scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;\n\n        this._callOnScroll(_scrollDirection, _scrollOffset, _scrollUpdateWasRequested);\n      }\n    } // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    ;\n\n    _proto._getRangeToRender = function _getRangeToRender() {\n      var _this$props6 = this.props,\n          itemCount = _this$props6.itemCount,\n          overscanCount = _this$props6.overscanCount;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollDirection = _this$state3.scrollDirection,\n          scrollOffset = _this$state3.scrollOffset;\n\n      if (itemCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getStartIndexForOffset(this.props, scrollOffset, this._instanceProps);\n      var stopIndex = getStopIndexForStartIndex(this.props, startIndex, scrollOffset, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || scrollDirection === 'backward' ? Math.max(1, overscanCount) : 1;\n      var overscanForward = !isScrolling || scrollDirection === 'forward' ? Math.max(1, overscanCount) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    return List;\n  }(PureComponent), _class.defaultProps = {\n    direction: 'ltr',\n    itemData: undefined,\n    layout: 'vertical',\n    overscanCount: 2,\n    useIsScrolling: false\n  }, _class;\n} // NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n\nvar validateSharedProps$1 = function validateSharedProps(_ref2, _ref3) {\n  var children = _ref2.children,\n      direction = _ref2.direction,\n      height = _ref2.height,\n      layout = _ref2.layout,\n      innerTagName = _ref2.innerTagName,\n      outerTagName = _ref2.outerTagName,\n      width = _ref2.width;\n  var instance = _ref3.instance;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName$1 && !devWarningsTagName$1.has(instance)) {\n        devWarningsTagName$1.add(instance);\n        console.warn('The innerTagName and outerTagName props have been deprecated. ' + 'Please use the innerElementType and outerElementType props instead.');\n      }\n    } // TODO Deprecate direction \"horizontal\"\n\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n\n    switch (direction) {\n      case 'horizontal':\n      case 'vertical':\n        if (devWarningsDirection && !devWarningsDirection.has(instance)) {\n          devWarningsDirection.add(instance);\n          console.warn('The direction prop should be either \"ltr\" (default) or \"rtl\". ' + 'Please use the layout prop to specify \"vertical\" (default) or \"horizontal\" orientation.');\n        }\n\n        break;\n\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"direction\" prop has been specified. ' + 'Value should be either \"ltr\" or \"rtl\". ' + (\"\\\"\" + direction + \"\\\" was specified.\"));\n    }\n\n    switch (layout) {\n      case 'horizontal':\n      case 'vertical':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"layout\" prop has been specified. ' + 'Value should be either \"horizontal\" or \"vertical\". ' + (\"\\\"\" + layout + \"\\\" was specified.\"));\n    }\n\n    if (children == null) {\n      throw Error('An invalid \"children\" prop has been specified. ' + 'Value should be a React component. ' + (\"\\\"\" + (children === null ? 'null' : typeof children) + \"\\\" was specified.\"));\n    }\n\n    if (isHorizontal && typeof width !== 'number') {\n      throw Error('An invalid \"width\" prop has been specified. ' + 'Horizontal lists must specify a number for width. ' + (\"\\\"\" + (width === null ? 'null' : typeof width) + \"\\\" was specified.\"));\n    } else if (!isHorizontal && typeof height !== 'number') {\n      throw Error('An invalid \"height\" prop has been specified. ' + 'Vertical lists must specify a number for height. ' + (\"\\\"\" + (height === null ? 'null' : typeof height) + \"\\\" was specified.\"));\n    }\n  }\n};\n\nvar DEFAULT_ESTIMATED_ITEM_SIZE$1 = 50;\n\nvar getItemMetadata$1 = function getItemMetadata(props, index, instanceProps) {\n  var _ref = props,\n      itemSize = _ref.itemSize;\n  var itemMetadataMap = instanceProps.itemMetadataMap,\n      lastMeasuredIndex = instanceProps.lastMeasuredIndex;\n\n  if (index > lastMeasuredIndex) {\n    var offset = 0;\n\n    if (lastMeasuredIndex >= 0) {\n      var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (var i = lastMeasuredIndex + 1; i <= index; i++) {\n      var size = itemSize(i);\n      itemMetadataMap[i] = {\n        offset: offset,\n        size: size\n      };\n      offset += size;\n    }\n\n    instanceProps.lastMeasuredIndex = index;\n  }\n\n  return itemMetadataMap[index];\n};\n\nvar findNearestItem$1 = function findNearestItem(props, instanceProps, offset) {\n  var itemMetadataMap = instanceProps.itemMetadataMap,\n      lastMeasuredIndex = instanceProps.lastMeasuredIndex;\n  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch$1(props, instanceProps, lastMeasuredIndex, 0, offset);\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch$1(props, instanceProps, Math.max(0, lastMeasuredIndex), offset);\n  }\n};\n\nvar findNearestItemBinarySearch$1 = function findNearestItemBinarySearch(props, instanceProps, high, low, offset) {\n  while (low <= high) {\n    var middle = low + Math.floor((high - low) / 2);\n    var currentOffset = getItemMetadata$1(props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nvar findNearestItemExponentialSearch$1 = function findNearestItemExponentialSearch(props, instanceProps, index, offset) {\n  var itemCount = props.itemCount;\n  var interval = 1;\n\n  while (index < itemCount && getItemMetadata$1(props, index, instanceProps).offset < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch$1(props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);\n};\n\nvar getEstimatedTotalSize = function getEstimatedTotalSize(_ref2, _ref3) {\n  var itemCount = _ref2.itemCount;\n  var itemMetadataMap = _ref3.itemMetadataMap,\n      estimatedItemSize = _ref3.estimatedItemSize,\n      lastMeasuredIndex = _ref3.lastMeasuredIndex;\n  var totalSizeOfMeasuredItems = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredIndex >= itemCount) {\n    lastMeasuredIndex = itemCount - 1;\n  }\n\n  if (lastMeasuredIndex >= 0) {\n    var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\n};\n\nvar VariableSizeList = /*#__PURE__*/createListComponent({\n  getItemOffset: function getItemOffset(props, index, instanceProps) {\n    return getItemMetadata$1(props, index, instanceProps).offset;\n  },\n  getItemSize: function getItemSize(props, index, instanceProps) {\n    return instanceProps.itemMetadataMap[index].size;\n  },\n  getEstimatedTotalSize: getEstimatedTotalSize,\n  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    var direction = props.direction,\n        height = props.height,\n        layout = props.layout,\n        width = props.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var itemMetadata = getItemMetadata$1(props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,\n    // To ensure it reflects actual measurements instead of just estimates.\n\n    var estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\n    var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));\n    var minOffset = Math.max(0, itemMetadata.offset - size + itemMetadata.size + scrollbarSize);\n\n    if (align === 'smart') {\n      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getStartIndexForOffset: function getStartIndexForOffset(props, offset, instanceProps) {\n    return findNearestItem$1(props, instanceProps, offset);\n  },\n  getStopIndexForStartIndex: function getStopIndexForStartIndex(props, startIndex, scrollOffset, instanceProps) {\n    var direction = props.direction,\n        height = props.height,\n        itemCount = props.itemCount,\n        layout = props.layout,\n        width = props.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var itemMetadata = getItemMetadata$1(props, startIndex, instanceProps);\n    var maxOffset = scrollOffset + size;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata$1(props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  initInstanceProps: function initInstanceProps(props, instance) {\n    var _ref4 = props,\n        estimatedItemSize = _ref4.estimatedItemSize;\n    var instanceProps = {\n      itemMetadataMap: {},\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE$1,\n      lastMeasuredIndex: -1\n    };\n\n    instance.resetAfterIndex = function (index, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instanceProps.lastMeasuredIndex = Math.min(instanceProps.lastMeasuredIndex, index - 1); // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n  shouldResetStyleCacheOnItemSizeChange: false,\n  validateProps: function validateProps(_ref5) {\n    var itemSize = _ref5.itemSize;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'function') {\n        throw Error('An invalid \"itemSize\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (itemSize === null ? 'null' : typeof itemSize) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar FixedSizeGrid = /*#__PURE__*/createGridComponent({\n  getColumnOffset: function getColumnOffset(_ref, index) {\n    var columnWidth = _ref.columnWidth;\n    return index * columnWidth;\n  },\n  getColumnWidth: function getColumnWidth(_ref2, index) {\n    var columnWidth = _ref2.columnWidth;\n    return columnWidth;\n  },\n  getRowOffset: function getRowOffset(_ref3, index) {\n    var rowHeight = _ref3.rowHeight;\n    return index * rowHeight;\n  },\n  getRowHeight: function getRowHeight(_ref4, index) {\n    var rowHeight = _ref4.rowHeight;\n    return rowHeight;\n  },\n  getEstimatedTotalHeight: function getEstimatedTotalHeight(_ref5) {\n    var rowCount = _ref5.rowCount,\n        rowHeight = _ref5.rowHeight;\n    return rowHeight * rowCount;\n  },\n  getEstimatedTotalWidth: function getEstimatedTotalWidth(_ref6) {\n    var columnCount = _ref6.columnCount,\n        columnWidth = _ref6.columnWidth;\n    return columnWidth * columnCount;\n  },\n  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(_ref7, columnIndex, align, scrollLeft, instanceProps, scrollbarSize) {\n    var columnCount = _ref7.columnCount,\n        columnWidth = _ref7.columnWidth,\n        width = _ref7.width;\n    var lastColumnOffset = Math.max(0, columnCount * columnWidth - width);\n    var maxOffset = Math.min(lastColumnOffset, columnIndex * columnWidth);\n    var minOffset = Math.max(0, columnIndex * columnWidth - width + scrollbarSize + columnWidth);\n\n    if (align === 'smart') {\n      if (scrollLeft >= minOffset - width && scrollLeft <= maxOffset + width) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n        if (middleOffset < Math.ceil(width / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastColumnOffset + Math.floor(width / 2)) {\n          return lastColumnOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n\n      case 'auto':\n      default:\n        if (scrollLeft >= minOffset && scrollLeft <= maxOffset) {\n          return scrollLeft;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollLeft < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(_ref8, rowIndex, align, scrollTop, instanceProps, scrollbarSize) {\n    var rowHeight = _ref8.rowHeight,\n        height = _ref8.height,\n        rowCount = _ref8.rowCount;\n    var lastRowOffset = Math.max(0, rowCount * rowHeight - height);\n    var maxOffset = Math.min(lastRowOffset, rowIndex * rowHeight);\n    var minOffset = Math.max(0, rowIndex * rowHeight - height + scrollbarSize + rowHeight);\n\n    if (align === 'smart') {\n      if (scrollTop >= minOffset - height && scrollTop <= maxOffset + height) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n        if (middleOffset < Math.ceil(height / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastRowOffset + Math.floor(height / 2)) {\n          return lastRowOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n\n      case 'auto':\n      default:\n        if (scrollTop >= minOffset && scrollTop <= maxOffset) {\n          return scrollTop;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollTop < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(_ref9, scrollLeft) {\n    var columnWidth = _ref9.columnWidth,\n        columnCount = _ref9.columnCount;\n    return Math.max(0, Math.min(columnCount - 1, Math.floor(scrollLeft / columnWidth)));\n  },\n  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(_ref10, startIndex, scrollLeft) {\n    var columnWidth = _ref10.columnWidth,\n        columnCount = _ref10.columnCount,\n        width = _ref10.width;\n    var left = startIndex * columnWidth;\n    var numVisibleColumns = Math.ceil((width + scrollLeft - left) / columnWidth);\n    return Math.max(0, Math.min(columnCount - 1, startIndex + numVisibleColumns - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  getRowStartIndexForOffset: function getRowStartIndexForOffset(_ref11, scrollTop) {\n    var rowHeight = _ref11.rowHeight,\n        rowCount = _ref11.rowCount;\n    return Math.max(0, Math.min(rowCount - 1, Math.floor(scrollTop / rowHeight)));\n  },\n  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(_ref12, startIndex, scrollTop) {\n    var rowHeight = _ref12.rowHeight,\n        rowCount = _ref12.rowCount,\n        height = _ref12.height;\n    var top = startIndex * rowHeight;\n    var numVisibleRows = Math.ceil((height + scrollTop - top) / rowHeight);\n    return Math.max(0, Math.min(rowCount - 1, startIndex + numVisibleRows - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  initInstanceProps: function initInstanceProps(props) {// Noop\n  },\n  shouldResetStyleCacheOnItemSizeChange: true,\n  validateProps: function validateProps(_ref13) {\n    var columnWidth = _ref13.columnWidth,\n        rowHeight = _ref13.rowHeight;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'number') {\n        throw Error('An invalid \"columnWidth\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (columnWidth === null ? 'null' : typeof columnWidth) + \"\\\" was specified.\"));\n      }\n\n      if (typeof rowHeight !== 'number') {\n        throw Error('An invalid \"rowHeight\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (rowHeight === null ? 'null' : typeof rowHeight) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar FixedSizeList = /*#__PURE__*/createListComponent({\n  getItemOffset: function getItemOffset(_ref, index) {\n    var itemSize = _ref.itemSize;\n    return index * itemSize;\n  },\n  getItemSize: function getItemSize(_ref2, index) {\n    var itemSize = _ref2.itemSize;\n    return itemSize;\n  },\n  getEstimatedTotalSize: function getEstimatedTotalSize(_ref3) {\n    var itemCount = _ref3.itemCount,\n        itemSize = _ref3.itemSize;\n    return itemSize * itemCount;\n  },\n  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(_ref4, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    var direction = _ref4.direction,\n        height = _ref4.height,\n        itemCount = _ref4.itemCount,\n        itemSize = _ref4.itemSize,\n        layout = _ref4.layout,\n        width = _ref4.width;\n    // TODO Deprecate direction \"horizontal\"\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var lastItemOffset = Math.max(0, itemCount * itemSize - size);\n    var maxOffset = Math.min(lastItemOffset, index * itemSize);\n    var minOffset = Math.max(0, index * itemSize - size + itemSize + scrollbarSize);\n\n    if (align === 'smart') {\n      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        {\n          // \"Centered\" offset is usually the average of the min and max.\n          // But near the edges of the list, this doesn't hold true.\n          var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n          if (middleOffset < Math.ceil(size / 2)) {\n            return 0; // near the beginning\n          } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {\n            return lastItemOffset; // near the end\n          } else {\n            return middleOffset;\n          }\n        }\n\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getStartIndexForOffset: function getStartIndexForOffset(_ref5, offset) {\n    var itemCount = _ref5.itemCount,\n        itemSize = _ref5.itemSize;\n    return Math.max(0, Math.min(itemCount - 1, Math.floor(offset / itemSize)));\n  },\n  getStopIndexForStartIndex: function getStopIndexForStartIndex(_ref6, startIndex, scrollOffset) {\n    var direction = _ref6.direction,\n        height = _ref6.height,\n        itemCount = _ref6.itemCount,\n        itemSize = _ref6.itemSize,\n        layout = _ref6.layout,\n        width = _ref6.width;\n    // TODO Deprecate direction \"horizontal\"\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var offset = startIndex * itemSize;\n    var size = isHorizontal ? width : height;\n    var numVisibleItems = Math.ceil((size + scrollOffset - offset) / itemSize);\n    return Math.max(0, Math.min(itemCount - 1, startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  initInstanceProps: function initInstanceProps(props) {// Noop\n  },\n  shouldResetStyleCacheOnItemSizeChange: true,\n  validateProps: function validateProps(_ref7) {\n    var itemSize = _ref7.itemSize;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'number') {\n        throw Error('An invalid \"itemSize\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (itemSize === null ? 'null' : typeof itemSize) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\n// Pulled from react-compat\n// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\nfunction shallowDiffers(prev, next) {\n  for (var attribute in prev) {\n    if (!(attribute in next)) {\n      return true;\n    }\n  }\n\n  for (var _attribute in next) {\n    if (prev[_attribute] !== next[_attribute]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar _excluded = [\"style\"],\n    _excluded2 = [\"style\"];\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-api.html#reactmemo\n\nfunction areEqual(prevProps, nextProps) {\n  var prevStyle = prevProps.style,\n      prevRest = _objectWithoutPropertiesLoose(prevProps, _excluded);\n\n  var nextStyle = nextProps.style,\n      nextRest = _objectWithoutPropertiesLoose(nextProps, _excluded2);\n\n  return !shallowDiffers(prevStyle, nextStyle) && !shallowDiffers(prevRest, nextRest);\n}\n\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-component.html#shouldcomponentupdate\n\nfunction shouldComponentUpdate(nextProps, nextState) {\n  return !areEqual(this.props, nextProps) || shallowDiffers(this.state, nextState);\n}\n\nexport { FixedSizeGrid, FixedSizeList, VariableSizeGrid, VariableSizeList, areEqual, shouldComponentUpdate };\n//# sourceMappingURL=index.esm.js.map\n","import { createContext } from \"react\";\nimport useRouteStateValue from \"../../../hooks/use-route-state-value\";\n\nexport const SelectedContext = createContext<ReturnType<typeof useRouteStateValue<string>>>({\n  value: \"\",\n  setValue() {},\n  clearValue() {},\n});\n","import { useContext } from \"react\";\nimport {\n  Badge,\n  Box,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardProps,\n  Heading,\n  Link,\n  Spacer,\n  Text,\n} from \"@chakra-ui/react\";\nimport { NostrEvent } from \"nostr-tools\";\n\nimport { getEventUID, getTagValue } from \"../../../../helpers/nostr/event\";\nimport SupportedNIPs from \"../../../relays/components/supported-nips\";\nimport { SelectedContext } from \"../selected-context\";\nimport { RelayFavicon } from \"../../../../components/relay-favicon\";\nimport Timestamp from \"../../../../components/timestamp\";\n\nconst IgnoreNips = [1, 2, 4, 11, 12, 15, 16];\n\nexport default function RelayStatusCard({\n  event,\n  commonNips,\n  ...props\n}: Omit<CardProps, \"children\"> & {\n  event: NostrEvent;\n  commonNips?: Map<number, number>;\n}) {\n  const selected = useContext(SelectedContext);\n\n  const identity = getTagValue(event, \"d\");\n  const network = getTagValue(event, \"n\");\n  const software = getTagValue(event, \"s\");\n\n  const countryName = event.tags.find((t) => t[0] === \"l\" && t[2] === \"countryName\")?.[1];\n  const host = event.tags.find((t) => t[0] === \"l\" && t[2] === \"host.isp\")?.[1];\n\n  const nips = event.tags\n    .filter((t) => t[0] === \"N\" && t[1])\n    .map((t) => parseInt(t[1]))\n    .filter((n) => Number.isFinite(n))\n    .filter((n) => !IgnoreNips.includes(n))\n    .filter((n) => (commonNips ? (commonNips.get(n) ?? 1) < 0.8 : true));\n\n  return (\n    <Card {...props}>\n      <CardHeader display=\"flex\" alignItems=\"center\" py=\"2\" px=\"2\" gap=\"2\">\n        {identity && <RelayFavicon relay={identity} size=\"sm\" />}\n        <Heading size=\"sm\" isTruncated>\n          <Link onClick={() => selected.setValue(getEventUID(event))}>{identity}</Link>\n        </Heading>\n        <Timestamp timestamp={event.created_at} />\n        <Spacer />\n        <Badge>{network}</Badge>\n      </CardHeader>\n      <CardBody px=\"2\" pt=\"0\" pb=\"0\" display=\"flex\" gap=\"2\" flexDirection=\"column\">\n        <Box>\n          {countryName && <Text>Country: {countryName}</Text>}\n          {host && <Text>Host: {host}</Text>}\n        </Box>\n      </CardBody>\n      <CardFooter p=\"2\">\n        <SupportedNIPs nips={nips} />\n      </CardFooter>\n    </Card>\n  );\n}\n","import { useMemo, useState } from \"react\";\nimport { useThrottle } from \"react-use\";\nimport { NostrEvent } from \"nostr-tools\";\nimport { Box, Flex, FlexProps, Input, Text } from \"@chakra-ui/react\";\nimport { FixedSizeList as List, ListChildComponentProps } from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\n\nimport RelayStatusCard from \"./relay-status-card\";\n\n/** returns a map of nip -> percent supported */\nfunction computeCommonNips(events: NostrEvent[]) {\n  const common = new Map<number, number>();\n\n  for (const event of events) {\n    for (const tag of event.tags) {\n      if (tag[0] === \"N\" && tag[1]) {\n        const nip = parseInt(tag[1]);\n        if (Number.isFinite(nip)) common.set(nip, (common.get(nip) ?? 0) + 1);\n      }\n    }\n  }\n\n  for (const [nip, count] of common) {\n    common.set(nip, count / events.length);\n  }\n\n  return common;\n}\n\nfunction Row({ index, style, data }: ListChildComponentProps<NostrEvent[]>) {\n  return (\n    <Box style={style} pb=\"2\">\n      <RelayStatusCard event={data[index]} h=\"full\" />\n    </Box>\n  );\n}\n\nexport default function RelayList({ events, ...props }: Omit<FlexProps, \"children\"> & { events: NostrEvent[] }) {\n  const [filter, setFilter] = useState(\"\");\n\n  const filterThrottle = useThrottle(filter.toLocaleLowerCase(), 100);\n  const filtered = useMemo(() => {\n    if (filterThrottle.length >= 1)\n      return events.filter((event) =>\n        event.tags.some((t) => {\n          if (t[1]) return t[1].toLocaleLowerCase().includes(filterThrottle);\n        }),\n      );\n    else return events;\n  }, [filterThrottle, events]);\n\n  // const commonNips = useMemo(() => computeCommonNips(filtered), [filtered]);\n\n  return (\n    <Flex direction=\"column\" gap=\"2\" overflow=\"hidden\" {...props}>\n      <Flex gap=\"2\">\n        <Input type=\"search\" placeholder=\"filter relays\" value={filter} onChange={(e) => setFilter(e.target.value)} />\n      </Flex>\n      <Text fontSize=\"sm\">{filtered.length} Relays</Text>\n      <Flex direction=\"column\" flex={1}>\n        <AutoSizer>\n          {({ height, width }) => (\n            <List itemCount={filtered.length} itemSize={200} itemData={filtered} width={width} height={height}>\n              {Row}\n            </List>\n          )}\n        </AutoSizer>\n      </Flex>\n    </Flex>\n  );\n}\n","import { useCallback, useContext, useEffect, useRef, useState } from \"react\";\nimport { BoxProps } from \"@chakra-ui/react\";\nimport { NostrEvent } from \"nostr-tools\";\nimport L from \"leaflet\";\n\nimport LeafletMap from \"../../../map/components/leaflet-map\";\nimport useEventMarkers, { getEventLatLng } from \"../../../map/hooks/use-event-markers\";\nimport { getEventUID } from \"../../../../helpers/nostr/event\";\nimport { SelectedContext } from \"../selected-context\";\n\nexport default function RelayMap({ events, ...props }: Omit<BoxProps, \"children\"> & { events: NostrEvent[] }) {\n  const [map, setMap] = useState<L.Map>();\n\n  const selected = useContext(SelectedContext);\n  const prev = useRef(selected.value);\n\n  const selectRelay = useCallback(\n    (event: NostrEvent) => {\n      const id = getEventUID(event);\n      if (prev.current !== id) {\n        prev.current = id;\n        selected.setValue(id);\n      }\n    },\n    [selected.setValue],\n  );\n\n  useEventMarkers(events, map, selectRelay);\n\n  const eventsRef = useRef(events);\n  eventsRef.current = events;\n\n  // center map when selected changes\n  useEffect(() => {\n    if (!map || selected.value === prev.current) return;\n\n    const selectedEvent = eventsRef.current.find((e) => getEventUID(e) === selected.value);\n\n    if (selectedEvent) {\n      const latLng = getEventLatLng(selectedEvent);\n      if (latLng) map.setView(latLng, 10);\n    }\n  }, [map, selected.value]);\n\n  return <LeafletMap onCreate={setMap} {...props} />;\n}\n","import {\n  Accordion,\n  AccordionButton,\n  AccordionIcon,\n  AccordionItem,\n  AccordionPanel,\n  Box,\n  ButtonGroup,\n  CloseButton,\n  Code,\n  Flex,\n  FlexProps,\n  Heading,\n  IconButton,\n  Spacer,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useContext } from \"react\";\nimport { NostrEvent } from \"nostr-tools\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport { SelectedContext } from \"../selected-context\";\nimport { getTagValue } from \"../../../../helpers/nostr/event\";\nimport DebugEventButton from \"../../../../components/debug-modal/debug-event-button\";\nimport SupportedNIPs from \"../../../relays/components/supported-nips\";\nimport RelayNotes from \"../../../relays/relay/relay-notes\";\nimport { safeRelayUrl } from \"../../../../helpers/relay\";\nimport { ExternalLinkIcon } from \"../../../../components/icons\";\nimport PeopleListProvider from \"../../../../providers/local/people-list-provider\";\nimport { getPubkeysFromList } from \"../../../../helpers/nostr/lists\";\nimport UserAvatarLink from \"../../../../components/user/user-avatar-link\";\nimport UserName from \"../../../../components/user/user-name\";\nimport UserDnsIdentity from \"../../../../components/user/user-dns-identity\";\nimport { RelayFavicon } from \"../../../../components/relay-favicon\";\n\nexport default function RelayStatusDetails({ event, ...props }: Omit<FlexProps, \"children\"> & { event: NostrEvent }) {\n  const selected = useContext(SelectedContext);\n  const identity = getTagValue(event, \"d\");\n  const network = getTagValue(event, \"n\");\n  const software = getTagValue(event, \"s\");\n  const version = event.tags.find((t) => t[0] === \"l\" && t[2] === \"nip11.version\")?.[1];\n\n  const url = identity ? safeRelayUrl(identity) : undefined;\n\n  // gather labels\n  const misc: Record<string, string[]> = {};\n  for (const tag of event.tags) {\n    if (tag[0] == \"l\" && tag.length >= 3) {\n      if (misc[tag[2]]) misc[tag[2]].push(tag[1]);\n      else misc[tag[2]] = [tag[1]];\n    }\n  }\n\n  const nips = event.tags\n    .filter((t) => t[0] === \"N\" && t[1])\n    .map((t) => parseInt(t[1]))\n    .filter((n) => Number.isFinite(n));\n\n  const pubkeys = getPubkeysFromList(event);\n\n  return (\n    <Flex direction=\"column\" gap=\"2\" overflow=\"hidden\" {...props}>\n      <Flex gap=\"2\" alignItems=\"center\">\n        <CloseButton onClick={() => selected.clearValue()} />\n        {identity && <RelayFavicon relay={identity} size=\"sm\" />}\n        <Heading size=\"md\" isTruncated>\n          {identity}\n        </Heading>\n        <ButtonGroup ml=\"auto\" variant=\"ghost\" size=\"sm\">\n          {identity && (\n            <IconButton\n              icon={<ExternalLinkIcon />}\n              as={RouterLink}\n              to={`/r/${encodeURIComponent(identity)}`}\n              aria-label=\"Open\"\n            />\n          )}\n          <DebugEventButton event={event} />\n        </ButtonGroup>\n      </Flex>\n\n      <Accordion allowToggle>\n        <AccordionItem>\n          <AccordionButton px=\"2\">\n            <Box as=\"span\" flex=\"1\" textAlign=\"left\">\n              Software info\n            </Box>\n            <AccordionIcon />\n          </AccordionButton>\n          <AccordionPanel px=\"2\" pb=\"2\" pt=\"0\" display=\"flex\" flexDirection=\"column\" gap=\"2\">\n            <Box>\n              <Text>NIPs:</Text>\n              <SupportedNIPs nips={nips} names />\n            </Box>\n            {software && (\n              <Box>\n                <Text>Software:</Text>\n                <Code isTruncated>{software}</Code>\n                <Text>\n                  Version: <Code>{version}</Code>\n                </Text>\n              </Box>\n            )}\n          </AccordionPanel>\n        </AccordionItem>\n        {pubkeys.length > 0 && (\n          <AccordionItem>\n            <AccordionButton px=\"2\">\n              <Box as=\"span\" flex=\"1\" textAlign=\"left\">\n                Pubkeys\n              </Box>\n              <AccordionIcon />\n            </AccordionButton>\n            <AccordionPanel px=\"2\" pb=\"2\" pt=\"0\">\n              {pubkeys.map(({ pubkey }) => (\n                <Flex gap=\"2\" key={pubkey} alignItems=\"center\">\n                  <UserAvatarLink pubkey={pubkey} size=\"sm\" />\n                  <UserName isTruncated pubkey={pubkey} />\n                </Flex>\n              ))}\n            </AccordionPanel>\n          </AccordionItem>\n        )}\n        <AccordionItem>\n          <AccordionButton px=\"2\">\n            <Box as=\"span\" flex=\"1\" textAlign=\"left\">\n              Miscellaneous info\n            </Box>\n            <AccordionIcon />\n          </AccordionButton>\n          <AccordionPanel px=\"2\" pb=\"2\" pt=\"0\">\n            {Object.entries(misc).map(([label, values]) => (\n              <Text key={label}>\n                {label}: {values.join(\", \")}\n              </Text>\n            ))}\n          </AccordionPanel>\n        </AccordionItem>\n      </Accordion>\n      <PeopleListProvider initList=\"global\">\n        <Flex overflow=\"auto\" h=\"full\" w=\"full\" direction=\"column\" gap=\"2\">\n          {url && <RelayNotes relay={url} />}\n        </Flex>\n      </PeopleListProvider>\n    </Flex>\n  );\n}\n","exports.remove = removeDiacritics;\n\nvar replacementList = [\n  {\n    base: ' ',\n    chars: \"\\u00A0\",\n  }, {\n    base: '0',\n    chars: \"\\u07C0\",\n  }, {\n    base: 'A',\n    chars: \"\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F\",\n  }, {\n    base: 'AA',\n    chars: \"\\uA732\",\n  }, {\n    base: 'AE',\n    chars: \"\\u00C6\\u01FC\\u01E2\",\n  }, {\n    base: 'AO',\n    chars: \"\\uA734\",\n  }, {\n    base: 'AU',\n    chars: \"\\uA736\",\n  }, {\n    base: 'AV',\n    chars: \"\\uA738\\uA73A\",\n  }, {\n    base: 'AY',\n    chars: \"\\uA73C\",\n  }, {\n    base: 'B',\n    chars: \"\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0181\",\n  }, {\n    base: 'C',\n    chars: \"\\u24b8\\uff23\\uA73E\\u1E08\\u0106\\u0043\\u0108\\u010A\\u010C\\u00C7\\u0187\\u023B\",\n  }, {\n    base: 'D',\n    chars: \"\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018A\\u0189\\u1D05\\uA779\",\n  }, {\n    base: 'Dh',\n    chars: \"\\u00D0\",\n  }, {\n    base: 'DZ',\n    chars: \"\\u01F1\\u01C4\",\n  }, {\n    base: 'Dz',\n    chars: \"\\u01F2\\u01C5\",\n  }, {\n    base: 'E',\n    chars: \"\\u025B\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E\\u1D07\",\n  }, {\n    base: 'F',\n    chars: \"\\uA77C\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B\",\n  }, {\n    base: 'G',\n    chars: \"\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E\\u0262\",\n  }, {\n    base: 'H',\n    chars: \"\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D\",\n  }, {\n    base: 'I',\n    chars: \"\\u24BE\\uFF29\\xCC\\xCD\\xCE\\u0128\\u012A\\u012C\\u0130\\xCF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197\",\n  }, {\n    base: 'J',\n    chars: \"\\u24BF\\uFF2A\\u0134\\u0248\\u0237\",\n  }, {\n    base: 'K',\n    chars: \"\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2\",\n  }, {\n    base: 'L',\n    chars: \"\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780\",\n  }, {\n    base: 'LJ',\n    chars: \"\\u01C7\",\n  }, {\n    base: 'Lj',\n    chars: \"\\u01C8\",\n  }, {\n    base: 'M',\n    chars: \"\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C\\u03FB\",\n  }, {\n    base: 'N',\n    chars: \"\\uA7A4\\u0220\\u24C3\\uFF2E\\u01F8\\u0143\\xD1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u019D\\uA790\\u1D0E\",\n  }, {\n    base: 'NJ',\n    chars: \"\\u01CA\",\n  }, {\n    base: 'Nj',\n    chars: \"\\u01CB\",\n  }, {\n    base: 'O',\n    chars: \"\\u24C4\\uFF2F\\xD2\\xD3\\xD4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\xD5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\xD6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\xD8\\u01FE\\u0186\\u019F\\uA74A\\uA74C\",\n  }, {\n    base: 'OE',\n    chars: \"\\u0152\",\n  }, {\n    base: 'OI',\n    chars: \"\\u01A2\",\n  }, {\n    base: 'OO',\n    chars: \"\\uA74E\",\n  }, {\n    base: 'OU',\n    chars: \"\\u0222\",\n  }, {\n    base: 'P',\n    chars: \"\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754\",\n  }, {\n    base: 'Q',\n    chars: \"\\u24C6\\uFF31\\uA756\\uA758\\u024A\",\n  }, {\n    base: 'R',\n    chars: \"\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782\",\n  }, {\n    base: 'S',\n    chars: \"\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784\",\n  }, {\n    base: 'T',\n    chars: \"\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786\",\n  }, {\n    base: 'Th',\n    chars: \"\\u00DE\",\n  }, {\n    base: 'TZ',\n    chars: \"\\uA728\",\n  }, {\n    base: 'U',\n    chars: \"\\u24CA\\uFF35\\xD9\\xDA\\xDB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\xDC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244\",\n  }, {\n    base: 'V',\n    chars: \"\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245\",\n  }, {\n    base: 'VY',\n    chars: \"\\uA760\",\n  }, {\n    base: 'W',\n    chars: \"\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72\",\n  }, {\n    base: 'X',\n    chars: \"\\u24CD\\uFF38\\u1E8A\\u1E8C\",\n  }, {\n    base: 'Y',\n    chars: \"\\u24CE\\uFF39\\u1EF2\\xDD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE\",\n  }, {\n    base: 'Z',\n    chars: \"\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762\",\n  }, {\n    base: 'a',\n    chars: \"\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250\\u0251\",\n  }, {\n    base: 'aa',\n    chars: \"\\uA733\",\n  }, {\n    base: 'ae',\n    chars: \"\\u00E6\\u01FD\\u01E3\",\n  }, {\n    base: 'ao',\n    chars: \"\\uA735\",\n  }, {\n    base: 'au',\n    chars: \"\\uA737\",\n  }, {\n    base: 'av',\n    chars: \"\\uA739\\uA73B\",\n  }, {\n    base: 'ay',\n    chars: \"\\uA73D\",\n  }, {\n    base: 'b',\n    chars: \"\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253\\u0182\",\n  }, {\n    base: 'c',\n    chars: \"\\uFF43\\u24D2\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184\",\n  }, {\n    base: 'd',\n    chars: \"\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\u018B\\u13E7\\u0501\\uA7AA\",\n  }, {\n    base: 'dh',\n    chars: \"\\u00F0\",\n  }, {\n    base: 'dz',\n    chars: \"\\u01F3\\u01C6\",\n  }, {\n    base: 'e',\n    chars: \"\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u01DD\",\n  }, {\n    base: 'f',\n    chars: \"\\u24D5\\uFF46\\u1E1F\\u0192\",\n  }, {\n    base: 'ff',\n    chars: \"\\uFB00\",\n  }, {\n    base: 'fi',\n    chars: \"\\uFB01\",\n  }, {\n    base: 'fl',\n    chars: \"\\uFB02\",\n  }, {\n    base: 'ffi',\n    chars: \"\\uFB03\",\n  }, {\n    base: 'ffl',\n    chars: \"\\uFB04\",\n  }, {\n    base: 'g',\n    chars: \"\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\uA77F\\u1D79\",\n  }, {\n    base: 'h',\n    chars: \"\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265\",\n  }, {\n    base: 'hv',\n    chars: \"\\u0195\",\n  }, {\n    base: 'i',\n    chars: \"\\u24D8\\uFF49\\xEC\\xED\\xEE\\u0129\\u012B\\u012D\\xEF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131\",\n  }, {\n    base: 'j',\n    chars: \"\\u24D9\\uFF4A\\u0135\\u01F0\\u0249\",\n  }, {\n    base: 'k',\n    chars: \"\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3\",\n  }, {\n    base: 'l',\n    chars: \"\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747\\u026D\",\n  }, {\n    base: 'lj',\n    chars: \"\\u01C9\",\n  }, {\n    base: 'm',\n    chars: \"\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F\",\n  }, {\n    base: 'n',\n    chars: \"\\u24DD\\uFF4E\\u01F9\\u0144\\xF1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5\\u043B\\u0509\",\n  }, {\n    base: 'nj',\n    chars: \"\\u01CC\",\n  }, {\n    base: 'o',\n    chars: \"\\u24DE\\uFF4F\\xF2\\xF3\\xF4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\xF5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\xF6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\xF8\\u01FF\\uA74B\\uA74D\\u0275\\u0254\\u1D11\",\n  }, {\n    base: 'oe',\n    chars: \"\\u0153\",\n  }, {\n    base: 'oi',\n    chars: \"\\u01A3\",\n  }, {\n    base: 'oo',\n    chars: \"\\uA74F\",\n  }, {\n    base: 'ou',\n    chars: \"\\u0223\",\n  }, {\n    base: 'p',\n    chars: \"\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755\\u03C1\",\n  }, {\n    base: 'q',\n    chars: \"\\u24E0\\uFF51\\u024B\\uA757\\uA759\",\n  }, {\n    base: 'r',\n    chars: \"\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783\",\n  }, {\n    base: 's',\n    chars: \"\\u24E2\\uFF53\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B\\u0282\",\n  }, {\n    base: 'ss',\n    chars: \"\\xDF\",\n  }, {\n    base: 't',\n    chars: \"\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787\",\n  }, {\n    base: 'th',\n    chars: \"\\u00FE\",\n  }, {\n    base: 'tz',\n    chars: \"\\uA729\",\n  }, {\n    base: 'u',\n    chars: \"\\u24E4\\uFF55\\xF9\\xFA\\xFB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\xFC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289\",\n  }, {\n    base: 'v',\n    chars: \"\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C\",\n  }, {\n    base: 'vy',\n    chars: \"\\uA761\",\n  }, {\n    base: 'w',\n    chars: \"\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73\",\n  }, {\n    base: 'x',\n    chars: \"\\u24E7\\uFF58\\u1E8B\\u1E8D\",\n  }, {\n    base: 'y',\n    chars: \"\\u24E8\\uFF59\\u1EF3\\xFD\\u0177\\u1EF9\\u0233\\u1E8F\\xFF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF\",\n  }, {\n    base: 'z',\n    chars: \"\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763\",\n  }\n];\n\nvar diacriticsMap = {};\nfor (var i = 0; i < replacementList.length; i += 1) {\n  var chars = replacementList[i].chars;\n  for (var j = 0; j < chars.length; j += 1) {\n    diacriticsMap[chars[j]] = replacementList[i].base;\n  }\n}\n\nfunction removeDiacritics(str) {\n  return str.replace(/[^\\u0000-\\u007e]/g, function(c) {\n    return diacriticsMap[c] || c;\n  });\n}\n\nexports.replacementList = replacementList;\nexports.diacriticsMap = diacriticsMap;\n","\"use strict\";\n\nconst codes = require(\"./codes.json\");\nconst supportedLocales = require(\"./supportedLocales.json\");\nconst removeDiacritics = require(\"diacritics\").remove;\nconst registeredLocales = {};\n\n/*\n * All codes map to ISO 3166-1 alpha-2\n */\nconst alpha2 = {},\n  alpha3 = {},\n  numeric = {},\n  invertedNumeric = {};\n\ncodes.forEach(function (codeInformation) {\n  const s = codeInformation;\n  alpha2[s[0]] = s[1];\n  alpha3[s[1]] = s[0];\n  numeric[s[2]] = s[0];\n  invertedNumeric[s[0]] = s[2];\n});\n\n/**\n * @private\n * @param {number} code\n */\nfunction formatNumericCode(code) {\n  return String(\"000\" + (code ? code : \"\")).slice(-3);\n}\n\n/**\n * @private\n * Avoid using obj.hasOwnProperty directly as `hasOwnProperty` could be a\n * property in itself ({ hasOwnProperty: 1 }) and cause weird bugs\n * https://eslint.org/docs/rules/no-prototype-builtins\n */\nfunction hasOwnProperty(object, property) {\n  return Object.prototype.hasOwnProperty.call(object, property);\n}\n\n/**\n * @private\n * Pass localeList through a filter and return a newLocaleList obj\n * with the same structure of the old localeList.\n *\n * @param {LocalizedCountryNames} localeList  Local List in raw\n * @param {Function} filter    callback to set filter rule\n * @return {String | String[]} new filtered Local List\n */\nfunction localeFilter(localeList, filter) {\n  return Object.keys(localeList).reduce(function (newLocaleList, alpha2) {\n    const nameList = localeList[alpha2];\n    newLocaleList[alpha2] = filter(nameList, alpha2);\n    return newLocaleList;\n  }, {});\n}\n\n/**\n * @private\n * Preserve for getName & getNames\n *\n * @param {GetNameOptions.select} type all | official | alias\n * @param countryNameList  string array of country's\n *                         official name and alias\n * @return {String | String[]} of a country name\n */\nfunction filterNameBy(type, countryNameList) {\n  switch (type) {\n    case \"official\":\n      return Array.isArray(countryNameList)\n        ? countryNameList[0]\n        : countryNameList;\n\n    case \"all\":\n      return typeof countryNameList === \"string\"\n        ? [countryNameList]\n        : countryNameList;\n\n    case \"alias\":\n      return Array.isArray(countryNameList)\n        ? countryNameList[1] || countryNameList[0]\n        : countryNameList;\n\n    default:\n      throw new TypeError(\n        \"LocaleNameType must be one of these: all, official, alias!\"\n      );\n  }\n}\n\n/**\n * Register countries in browsers' environment:\n * @param {object} localeData\n * @example countries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\n * @return void\n */\nexports.registerLocale = function (localeData) {\n  if (!localeData.locale) {\n    throw new TypeError(\"Missing localeData.locale\");\n  }\n\n  if (!localeData.countries) {\n    throw new TypeError(\"Missing localeData.countries\");\n  }\n\n  registeredLocales[localeData.locale] = localeData.countries;\n};\n\n/*\n * @param code Alpha-3 code\n * @return Alpha-2 code or undefined\n */\nfunction alpha3ToAlpha2(code) {\n  return alpha3[code];\n}\nexports.alpha3ToAlpha2 = alpha3ToAlpha2;\n\n/*\n * @param code Alpha-2 code\n * @return Alpha-3 code or undefined\n */\nfunction alpha2ToAlpha3(code) {\n  return alpha2[code];\n}\nexports.alpha2ToAlpha3 = alpha2ToAlpha3;\n\n/*\n * @param code Alpha-3 code\n * @return Numeric code or undefined\n */\nfunction alpha3ToNumeric(code) {\n  return invertedNumeric[alpha3ToAlpha2(code)];\n}\nexports.alpha3ToNumeric = alpha3ToNumeric;\n\n/*\n * @param code Alpha-2 code\n * @return Numeric code or undefined\n */\nfunction alpha2ToNumeric(code) {\n  return invertedNumeric[code];\n}\nexports.alpha2ToNumeric = alpha2ToNumeric;\n\n/*\n * @param code Numeric code\n * @return Alpha-3 code or undefined\n */\nfunction numericToAlpha3(code) {\n  const padded = formatNumericCode(code);\n  return alpha2ToAlpha3(numeric[padded]);\n}\nexports.numericToAlpha3 = numericToAlpha3;\n\n/*\n * @param code Numeric code\n * @return Alpha-2 code or undefined\n */\nfunction numericToAlpha2(code) {\n  const padded = formatNumericCode(code);\n  return numeric[padded];\n}\nexports.numericToAlpha2 = numericToAlpha2;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-3\n */\nfunction toAlpha3(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha3(code);\n    }\n    if (code.length === 2) {\n      return alpha2ToAlpha3(code.toUpperCase());\n    }\n    if (code.length === 3) {\n      return code.toUpperCase();\n    }\n  }\n  if (typeof code === \"number\") {\n    return numericToAlpha3(code);\n  }\n  return undefined;\n}\nexports.toAlpha3 = toAlpha3;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-2\n */\nfunction toAlpha2(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha2(code);\n    }\n    if (code.length === 2) {\n      return code.toUpperCase();\n    }\n    if (code.length === 3) {\n      return alpha3ToAlpha2(code.toUpperCase());\n    }\n  }\n  if (typeof code === \"number\") {\n    return numericToAlpha2(code);\n  }\n  return undefined;\n}\nexports.toAlpha2 = toAlpha2;\n\n/**\n * @param {string | number | Alpha2Code | Alpha3Code} code\n * @param {String} lang          language for country name\n * @param {GetNameOptions} options\n * @return {String | String[] | undefined}  name\n */\nexports.getName = function (code, lang, options = {}) {\n  if (!(\"select\" in options)) {\n    options.select = \"official\";\n  }\n  try {\n    const codeMaps = registeredLocales[lang.toLowerCase()];\n    const nameList = codeMaps[toAlpha2(code)];\n    return filterNameBy(options.select, nameList);\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/**\n * @param {String} lang             language for country names\n * @param {GetNameOptions} options   getNames Options\n * @return {LocalizedCountryNames}  country code\n *                                  mapped to county name\n */\nexports.getNames = function (lang, options = {}) {\n  if (!(\"select\" in options)) {\n    options.select = \"official\";\n  }\n  const localeList = registeredLocales[lang.toLowerCase()];\n  if (localeList === undefined) return {};\n  return localeFilter(localeList, function (nameList) {\n    return filterNameBy(options.select, nameList);\n  });\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-2 or undefined\n */\nexports.getAlpha2Code = function (name, lang) {\n  const normalizeString = (string) => string.toLowerCase();\n  const areSimilar = (a, b) => normalizeString(a) === normalizeString(b);\n\n  try {\n    const codenames = registeredLocales[lang.toLowerCase()];\n    for (const p in codenames) {\n      if (!hasOwnProperty(codenames, p)) {\n        continue;\n      }\n      if (typeof codenames[p] === \"string\") {\n        if (areSimilar(codenames[p], name)) {\n          return p;\n        }\n      }\n      if (Array.isArray(codenames[p])) {\n        for (const mappedName of codenames[p]) {\n          if (areSimilar(mappedName, name)) {\n            return p;\n          }\n        }\n      }\n    }\n    return undefined;\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-2 or undefined\n */\nexports.getSimpleAlpha2Code = function (name, lang) {\n  const normalizeString = (string) => removeDiacritics(string.toLowerCase());\n  const areSimilar = (a, b) => normalizeString(a) === normalizeString(b);\n\n  try {\n    const codenames = registeredLocales[lang.toLowerCase()];\n    for (const p in codenames) {\n      if (!hasOwnProperty(codenames, p)) {\n        continue;\n      }\n      if (typeof codenames[p] === \"string\") {\n        if (areSimilar(codenames[p], name)) {\n          return p;\n        }\n      }\n      if (Array.isArray(codenames[p])) {\n        for (const mappedName of codenames[p]) {\n          if (areSimilar(mappedName, name)) {\n            return p;\n          }\n        }\n      }\n    }\n    return undefined;\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/*\n * @return Object of alpha-2 codes mapped to alpha-3 codes\n */\nexports.getAlpha2Codes = function () {\n  return alpha2;\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-3 or undefined\n */\nexports.getAlpha3Code = function (name, lang) {\n  const alpha2 = exports.getAlpha2Code(name, lang);\n  if (alpha2) {\n    return exports.toAlpha3(alpha2);\n  } else {\n    return undefined;\n  }\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-3 or undefined\n */\nexports.getSimpleAlpha3Code = function (name, lang) {\n  const alpha2 = exports.getSimpleAlpha2Code(name, lang);\n  if (alpha2) {\n    return exports.toAlpha3(alpha2);\n  } else {\n    return undefined;\n  }\n};\n\n/*\n * @return Object of alpha-3 codes mapped to alpha-2 codes\n */\nexports.getAlpha3Codes = function () {\n  return alpha3;\n};\n\n/*\n * @return Object of numeric codes mapped to alpha-2 codes\n */\nexports.getNumericCodes = function () {\n  return numeric;\n};\n\n/*\n * @return Array of registered languages\n */\nexports.langs = function () {\n  return Object.keys(registeredLocales);\n};\n\n/*\n * @return Array of supported languages\n */\nexports.getSupportedLanguages = function () {\n  return supportedLocales;\n};\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return Boolean\n */\nexports.isValid = function (code) {\n  if (!code) {\n    return false;\n  }\n\n  const coerced = code.toString().toUpperCase();\n  return (\n    hasOwnProperty(alpha3, coerced) ||\n    hasOwnProperty(alpha2, coerced) ||\n    hasOwnProperty(numeric, coerced)\n  );\n};\n","import { useMemo } from \"react\";\nimport { Select, SelectProps } from \"@chakra-ui/react\";\nimport { getAlpha3Codes, getName, registerLocale } from \"i18n-iso-countries\";\n\n// TODO: support others\nimport en from \"i18n-iso-countries/langs/en.json\";\nregisterLocale(en);\n\nexport default function CountyPicker({ ...props }: Omit<SelectProps, \"children\">) {\n  const codes = useMemo(() => Object.keys(getAlpha3Codes()).map((code) => ({ name: getName(code, \"en\"), code })), []);\n\n  return (\n    <Select w=\"auto\" {...props}>\n      <option value=\"\">Any</option>\n      {codes.map(({ code, name }) => (\n        <option value={code}>{name}</option>\n      ))}\n    </Select>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { Flex, Select, useDisclosure } from \"@chakra-ui/react\";\nimport { Filter, matchFilters, NostrEvent } from \"nostr-tools\";\nimport { getEventUID } from \"nostr-idb\";\nimport { useThrottle } from \"react-use\";\n\nimport PersistentSubscription from \"../../../classes/persistent-subscription\";\nimport BackButton from \"../../../components/router/back-button\";\nimport relayPoolService from \"../../../services/relay-pool\";\nimport RelayList from \"./components/relay-list\";\nimport useRouteStateValue from \"../../../hooks/use-route-state-value\";\nimport RelayMap from \"./components/relay-map\";\nimport RelayStatusDetails from \"./components/relay-details\";\nimport { getTagValue } from \"../../../helpers/nostr/event\";\nimport { SelectedContext } from \"./selected-context\";\nimport CountyPicker from \"../../../components/county-picker\";\nimport { useBreakpointValue } from \"../../../providers/global/breakpoint-provider\";\n\nexport default function RelayDiscoveryView() {\n  const showMap = useBreakpointValue({ base: false, lg: true });\n\n  const [discoveryRelay, setDiscoveryRelay] = useState(\"wss://relay.nostr.watch\");\n  const [monitor, setMonitor] = useState(\"9bbbb845e5b6c831c29789900769843ab43bb5047abe697870cb50b6fc9bf923\");\n  const [network, setNetwork] = useState(\"\");\n  const [county, setCounty] = useState(\"\");\n\n  const selected = useRouteStateValue<string>(\"selected\");\n  const [events, setEvents] = useState<Record<string, NostrEvent>>({});\n\n  const [subscription, setSubscription] = useState<PersistentSubscription>();\n\n  // recreate the subscription when the relay changes\n  useEffect(() => {\n    if (subscription && !subscription.closed) subscription.close();\n\n    const relay = relayPoolService.requestRelay(discoveryRelay);\n    const sub = new PersistentSubscription(relay, {\n      onevent: (event) => {\n        if (getTagValue(event, \"d\")) {\n          setEvents((arr) => ({ ...arr, [getEventUID(event)]: event }));\n        }\n      },\n    });\n    setSubscription(sub);\n  }, [discoveryRelay, setEvents]);\n\n  useEffect(() => {\n    if (!subscription) return;\n\n    const filter: Filter = {\n      kinds: [30166],\n      // set from https://github.com/nostr-protocol/nips/pull/230#pullrequestreview-2290873405\n      since: Math.round(Date.now() / 1000) - 60 * 60 * 2,\n    };\n\n    if (monitor) filter.authors = [monitor];\n\n    if (network) filter[\"#n\"] = [network];\n    if (county) {\n      // if (filter[\"#L\"]) filter[\"#L\"].push(\"countryCode\");\n      // else filter[\"#L\"] = [\"countryCode\"];\n\n      if (filter[\"#l\"]) filter[\"#l\"].push(county);\n      else filter[\"#l\"] = [county];\n    }\n\n    subscription.filters = [filter];\n\n    // remove non matching events\n    setEvents((dir) => {\n      const newDir: typeof dir = {};\n      for (const [uid, event] of Object.entries(dir)) {\n        if (matchFilters(subscription.filters, event)) newDir[uid] = event;\n      }\n      return newDir;\n    });\n\n    // update subscription\n    subscription.update();\n  }, [subscription, monitor, network, county, setEvents]);\n\n  // throttle updates to map\n  const eventsThrottle = useThrottle(Object.values(events), 250);\n\n  return (\n    <SelectedContext.Provider value={selected}>\n      <Flex direction=\"column\" overflow=\"hidden\" h=\"100vh\" gap=\"2\" p=\"2\">\n        <Flex gap=\"2\">\n          <BackButton />\n          <Select value={network} onChange={(e) => setNetwork(e.target.value)} w=\"auto\">\n            <option value=\"\">All</option>\n            <option value=\"clearnet\">clearnet</option>\n            <option value=\"tor\">Tor</option>\n            <option value=\"i2p\">I2P</option>\n            <option value=\"hyper\">Hyper</option>\n          </Select>\n          <CountyPicker value={county} onChange={(e) => setCounty(e.target.value)} w=\"auto\" />\n\n          <Select value={monitor} onChange={(e) => setMonitor(e.target.value)} w=\"auto\">\n            <option value=\"\">Self Published</option>\n            <option value=\"9bbbb845e5b6c831c29789900769843ab43bb5047abe697870cb50b6fc9bf923\">nostr.watch</option>\n          </Select>\n        </Flex>\n\n        <Flex gap=\"2\" overflow=\"hidden\" h=\"full\">\n          {selected.value && events[selected.value] ? (\n            <RelayStatusDetails w={{ base: \"full\", lg: \"lg\" }} event={events[selected.value]} flexShrink={0} />\n          ) : (\n            <RelayList w={{ base: \"full\", lg: \"lg\" }} flexShrink={0} events={eventsThrottle} />\n          )}\n          {showMap && <RelayMap events={eventsThrottle} />}\n        </Flex>\n      </Flex>\n    </SelectedContext.Provider>\n  );\n}\n"],"names":["safeIsNaN","value","isEqual","first","second","areInputsEqual","newInputs","lastInputs","i","memoizeOne","resultFn","lastThis","lastArgs","lastResult","calledOnce","memoized","newArgs","_i","hasNativePerformanceNow","now","cancelTimeout","timeoutID","requestTimeout","callback","delay","start","tick","size","getScrollbarSize","recalculate","div","style","cachedRTLResult","getRTLOffsetType","outerDiv","outerStyle","innerDiv","innerStyle","IS_SCROLLING_DEBOUNCE_INTERVAL$1","defaultItemKey$1","index","data","createListComponent","_ref","_class","getItemOffset","getEstimatedTotalSize","getItemSize","getOffsetForIndexAndAlignment","getStartIndexForOffset","getStopIndexForStartIndex","initInstanceProps","shouldResetStyleCacheOnItemSizeChange","validateProps","_PureComponent","_inheritsLoose","List","props","_this","_assertThisInitialized","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","scrollDirection","scrollOffset","scrollUpdateWasRequested","_this$props","direction","itemSize","layout","itemStyleCache","_offset","isHorizontal","isRtl","offsetHorizontal","_","__","___","event","_event$currentTarget","clientWidth","scrollLeft","scrollWidth","prevState","_event$currentTarget2","clientHeight","scrollHeight","scrollTop","ref","outerRef","nextProps","validateSharedProps$1","_proto","align","_this$props2","itemCount","scrollbarSize","_this$props3","initialScrollOffset","_this$props4","_this$state","_this$props5","children","className","height","innerRef","innerElementType","innerTagName","itemData","_this$props5$itemKey","itemKey","outerElementType","outerTagName","useIsScrolling","width","isScrolling","onScroll","_this$_getRangeToRend","startIndex","stopIndex","items","_index","createElement","estimatedTotalSize","_extends","_this$_getRangeToRend2","_overscanStartIndex","_overscanStopIndex","_visibleStartIndex","_visibleStopIndex","_this$state2","_scrollDirection","_scrollOffset","_scrollUpdateWasRequested","_this$props6","overscanCount","_this$state3","overscanBackward","overscanForward","PureComponent","_ref2","_ref3","FixedSizeList","_ref4","instanceProps","lastItemOffset","maxOffset","minOffset","middleOffset","_ref5","offset","_ref6","numVisibleItems","_ref7","SelectedContext","createContext","IgnoreNips","RelayStatusCard","commonNips","selected","useContext","identity","getTagValue","network","countryName","_a","t","host","_b","nips","n","jsxs","Card","CardHeader","jsx","RelayFavicon","Heading","Link","getEventUID","Timestamp","Spacer","Badge","CardBody","Box","Text","CardFooter","SupportedNIPs","Row","RelayList","events","filter","setFilter","useState","filterThrottle","useThrottle","filtered","useMemo","Flex","Input","e","AutoSizer","RelayMap","map","setMap","prev","useRef","selectRelay","useCallback","id","useEventMarkers","eventsRef","useEffect","selectedEvent","latLng","getEventLatLng","LeafletMap","RelayStatusDetails","software","version","url","safeRelayUrl","misc","tag","pubkeys","getPubkeysFromList","CloseButton","ButtonGroup","IconButton","ExternalLinkIcon","RouterLink","DebugEventButton","Accordion","AccordionItem","AccordionButton","AccordionIcon","AccordionPanel","Code","pubkey","UserAvatarLink","UserName","label","values","PeopleListProvider","RelayNotes","diacritics","removeDiacritics","replacementList","diacriticsMap","chars","j","str","c","codes","require$$0","supportedLocales","require$$1","require$$2","registeredLocales","alpha2","alpha3","numeric","invertedNumeric","codeInformation","s","formatNumericCode","code","hasOwnProperty","object","property","localeFilter","localeList","newLocaleList","nameList","filterNameBy","type","countryNameList","exports","localeData","alpha3ToAlpha2","alpha2ToAlpha3","alpha3ToNumeric","alpha2ToNumeric","numericToAlpha3","padded","numericToAlpha2","toAlpha3","toAlpha2","lang","options","name","normalizeString","string","areSimilar","a","b","codenames","p","mappedName","coerced","registerLocale","en","CountyPicker","getAlpha3Codes","getName","Select","RelayDiscoveryView","showMap","useBreakpointValue","discoveryRelay","setDiscoveryRelay","monitor","setMonitor","setNetwork","county","setCounty","useRouteStateValue","setEvents","subscription","setSubscription","relay","relayPoolService","sub","PersistentSubscription","arr","dir","newDir","uid","matchFilters","eventsThrottle","BackButton"],"mappings":"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AK,CACD,KAAM,KACN,MAAO,GACX,EAAK,CACD,KAAM,IACN,MAAO,WACX,EAAK,CACD,KAAM,IACN,MAAO,OACX,EAAK,CACD,KAAM,IACN,MAAO,kBACX,EAAK,CACD,KAAM,IACN,MAAO,kBACX,EAAK,CACD,KAAM,IACN,MAAO,gBACX,EAAK,CACD,KAAM,KACN,MAAO,GACX,EAAK,CACD,KAAM,KACN,MAAO,GACX,EAAK,CACD,KAAM,IACN,MAAO,mCACX,EAAK,CACD,KAAM,IACN,MAAO,SACX,EAAK,CACD,KAAM,KACN,MAAO,GACX,EAAK,CACD,KAAM,IACN,MAAO,WACX,EAAK,CACD,KAAM,IACN,MAAO,MACX,EAAK,CACD,KAAM,IACN,MAAO,gBACX,EAAK,CACD,KAAM,IACN,MAAO,eACX,EAAK,CACD,KAAM,IACN,MAAO,qCACX,EAAK,CACD,KAAM,KACN,MAAO,GACX,EAAK,CACD,KAAM,KACN,MAAO,KACX,EAAK,CACD,KAAM,KACN,MAAO,GACX,EAAK,CACD,KAAM,KACN,MAAO,GACX,EAAK,CACD,KAAM,KACN,MAAO,IACX,EAAK,CACD,KAAM,KACN,MAAO,GACX,EAAK,CACD,KAAM,IACN,MAAO,WACX,EAAK,CACD,KAAM,IACN,MAAO,cACX,EAAK,CACD,KAAM,IACN,MAAO,kBACX,EAAK,CACD,KAAM,KACN,MAAO,GACX,EAAK,CACD,KAAM,KACN,MAAO,IACX,EAAK,CACD,KAAM,IACN,MAAO,+BACX,EAAK,CACD,KAAM,IACN,MAAO,MACX,EAAK,CACD,KAAM,KACN,MAAO,GACX,EAAK,CACD,KAAM,KACN,MAAO,GACX,EAAK,CACD,KAAM,KACN,MAAO,GACX,EAAK,CACD,KAAM,MACN,MAAO,GACX,EAAK,CACD,KAAM,MACN,MAAO,GACX,EAAK,CACD,KAAM,IACN,MAAO,gBACX,EAAK,CACD,KAAM,IACN,MAAO,gBACX,EAAK,CACD,KAAM,KACN,MAAO,GACX,EAAK,CACD,KAAM,IACN,MAAO,qBACX,EAAK,CACD,KAAM,IACN,MAAO,OACX,EAAK,CACD,KAAM,IACN,M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","x_google_ignoreList":[0,1,7,8]}