import { AddressPointer, DecodeResult, EventPointer, ProfilePointer } from "nostr-tools/nip19";
export type AddressPointerWithoutD = Omit<AddressPointer, "identifier"> & {
    identifier?: string;
};
export declare function parseCoordinate(a: string): AddressPointerWithoutD | null;
export declare function parseCoordinate(a: string, requireD: false): AddressPointerWithoutD | null;
export declare function parseCoordinate(a: string, requireD: true): AddressPointer | null;
export declare function parseCoordinate(a: string, requireD: false, silent: false): AddressPointerWithoutD;
export declare function parseCoordinate(a: string, requireD: true, silent: false): AddressPointer;
export declare function parseCoordinate(a: string, requireD: true, silent: true): AddressPointer | null;
export declare function parseCoordinate(a: string, requireD: false, silent: true): AddressPointerWithoutD | null;
export declare function getPubkeyFromDecodeResult(result?: DecodeResult): string | undefined;
export declare function encodeDecodeResult(result: DecodeResult): "" | `nsec1${string}` | `npub1${string}` | `note1${string}` | `nprofile1${string}` | `nevent1${string}` | `naddr1${string}` | `nrelay1${string}`;
export declare function getEventPointerFromTag(tag: string[]): EventPointer;
export declare function getAddressPointerFromTag(tag: string[]): AddressPointer;
export declare function getProfilePointerFromTag(tag: string[]): ProfilePointer;
export declare function getPointerFromTag(tag: string[]): DecodeResult | null;
export declare function isAddressPointer(pointer: DecodeResult["data"]): pointer is AddressPointer;
export declare function isEventPointer(pointer: DecodeResult["data"]): pointer is EventPointer;
export declare function getCoordinateFromAddressPointer(pointer: AddressPointer): string;
export declare function getATagFromAddressPointer(pointer: AddressPointer): ["a", ...string[]];
export declare function getETagFromEventPointer(pointer: EventPointer): ["e", ...string[]];
