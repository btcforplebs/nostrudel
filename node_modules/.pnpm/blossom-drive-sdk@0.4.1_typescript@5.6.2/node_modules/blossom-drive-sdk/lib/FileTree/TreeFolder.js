import { Branch } from "./Branch.js";
export class TreeFolder extends Branch {
    constructor(name, children = []) {
        super(name);
        this.children = children;
    }
    has(name) {
        return this.children.some((e) => e.name === name);
    }
    get(name) {
        return this.children.find((e) => e.name === name);
    }
    set(name, entry, override = true) {
        const existing = this.get(name);
        if (existing) {
            if (override)
                this.children.splice(this.children.indexOf(existing), 1, entry);
            else
                throw new Error(`${name} already exists`);
        }
        else
            this.children.push(entry);
        entry.parent = this;
        entry.name = name;
    }
    remove(name) {
        const existing = this.get(name);
        if (existing) {
            this.children.splice(this.children.indexOf(existing), 1);
            existing.parent = undefined;
        }
    }
    [Symbol.iterator]() {
        return this.children[Symbol.iterator]();
    }
}
