import { type BlobDescriptor, type Signer } from "blossom-client-sdk";
import { EventEmitter } from "eventemitter3";
import type { Drive } from "./Drive.js";
import { EncryptedDrive } from "./EncryptedDrive.js";
export type UploadableItem = FileList | File | FileSystemDirectoryEntry;
export type UploadFileStatus = {
    complete: boolean;
    pending: boolean;
    serversComplete: number;
    results: Record<string, {
        success: true;
        blob: BlobDescriptor;
    } | {
        success: false;
        error: Error;
    }>;
};
type EventMap = {
    start: [Upload];
    progress: [number];
    complete: [Upload];
};
/** General purpose class for uploading blobs to drives */
export declare class Upload extends EventEmitter<EventMap> {
    drive: Drive | EncryptedDrive;
    /** The array of blossom servers to upload the files to */
    servers: string[];
    /** The signer used to sign auth events */
    signer: Signer;
    /** The base path in the drive to add all the files to */
    basePath: string;
    complete: boolean;
    running: boolean;
    /** The array of files to upload to the drive */
    files: {
        id: string;
        file: File;
        path: string;
    }[];
    /** Current upload status for each file */
    status: Record<string, UploadFileStatus>;
    /** The Blobs returned for each file upload, blobs[server][file.id] */
    blobs: Record<string, Record<string, BlobDescriptor>>;
    /** The Error returned for each file upload, blobs[server][file.id] */
    errors: Record<string, Record<string, Error>>;
    /** Total upload progress */
    get progress(): number;
    constructor(drive: Drive | EncryptedDrive, basePath: string, servers: string[], signer: Signer);
    /** Add a single file to the upload */
    addFile(file: File, path?: string): Promise<void>;
    /** Add a FileList to the upload */
    addFileList(fileList: FileList): Promise<void>;
    /** Read all files from a FileSystemEntry and add to the upload */
    addFileSystemEntry(entry: FileSystemEntry): Promise<void>;
    /** Start uploading the files to the servers */
    upload(): Promise<void>;
}
export {};
