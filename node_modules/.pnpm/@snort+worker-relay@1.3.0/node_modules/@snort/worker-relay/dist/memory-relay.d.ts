import { EventEmitter } from "eventemitter3";
import { NostrEvent, RelayHandler, RelayHandlerEvents, ReqFilter, EventMetadata } from "./types";
/**
 * A very simple dumb fallback relay using a flat table
 */
export declare class InMemoryRelay extends EventEmitter<RelayHandlerEvents> implements RelayHandler {
    #private;
    init(): Promise<void>;
    count(req: ReqFilter): number;
    summary(): Record<string, number>;
    dump(): Promise<Uint8Array>;
    close(): void;
    wipe(): Promise<void>;
    event(ev: NostrEvent): boolean;
    eventBatch(evs: NostrEvent[]): boolean;
    sql(sql: string, params: (string | number)[]): (string | number)[][];
    req(id: string, filter: ReqFilter): (string | NostrEvent)[];
    delete(filter: ReqFilter): string[];
    setEventMetadata(_id: string, _meta: EventMetadata): void;
}
//# sourceMappingURL=memory-relay.d.ts.map