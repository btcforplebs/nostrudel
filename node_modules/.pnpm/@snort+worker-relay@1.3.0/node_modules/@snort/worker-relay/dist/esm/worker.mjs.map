{
  "version": 3,
  "sources": ["../../../../.yarn/cache/eventemitter3-npm-5.0.1-5e423b7df3-ac6423ec31.zip/node_modules/eventemitter3/index.js", "../../../../.yarn/cache/@sqlite.org-sqlite-wasm-npm-3.46.1-build3-85143410ac-a64225fd78.zip/node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-bundler-friendly.mjs", "../../../../.yarn/cache/@sqlite.org-sqlite-wasm-npm-3.46.1-build3-85143410ac-a64225fd78.zip/node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-worker1-promiser.mjs", "../../../../.yarn/cache/@sqlite.org-sqlite-wasm-npm-3.46.1-build3-85143410ac-a64225fd78.zip/node_modules/@sqlite.org/sqlite-wasm/index.mjs", "../../../../.yarn/cache/eventemitter3-npm-5.0.1-5e423b7df3-ac6423ec31.zip/node_modules/eventemitter3/index.mjs", "../../src/types.ts", "../../src/debug.ts", "../../src/sqlite/migrations.ts", "../../src/sqlite/sqlite-relay.ts", "../../src/sqlite/fixers.ts", "../../src/memory-relay.ts", "../../src/forYouFeed.ts", "../../src/worker.ts"],
  "sourcesContent": ["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "/*\n ** LICENSE for the sqlite3 WebAssembly/JavaScript APIs.\n **\n ** This bundle (typically released as sqlite3.js or sqlite3.mjs)\n ** is an amalgamation of JavaScript source code from two projects:\n **\n ** 1) https://emscripten.org: the Emscripten \"glue code\" is covered by\n **    the terms of the MIT license and University of Illinois/NCSA\n **    Open Source License, as described at:\n **\n **    https://emscripten.org/docs/introducing_emscripten/emscripten_license.html\n **\n ** 2) https://sqlite.org: all code and documentation labeled as being\n **    from this source are released under the same terms as the sqlite3\n **    C library:\n **\n ** 2022-10-16\n **\n ** The author disclaims copyright to this source code.  In place of a\n ** legal notice, here is a blessing:\n **\n ** *   May you do good and not evil.\n ** *   May you find forgiveness for yourself and forgive others.\n ** *   May you share freely, never taking more than you give.\n */\n/*\n ** This code was built from sqlite3 version...\n **\n ** SQLITE_VERSION \"3.46.1\"\n ** SQLITE_VERSION_NUMBER 3046001\n ** SQLITE_SOURCE_ID \"2024-08-13 09:16:08 c9c2ab54ba1f5f46360f1b4f35d849cd3f080e6fc2b6c60e91b16c63f69a1e33\"\n **\n ** Using the Emscripten SDK version 3.1.30.\n */\n\nvar sqlite3InitModule = (() => {\n  var _scriptDir = import.meta.url;\n\n  return function (config) {\n    var sqlite3InitModule = config || {};\n\n    var Module =\n      typeof sqlite3InitModule != 'undefined' ? sqlite3InitModule : {};\n\n    var readyPromiseResolve, readyPromiseReject;\n    Module['ready'] = new Promise(function (resolve, reject) {\n      readyPromiseResolve = resolve;\n      readyPromiseReject = reject;\n    });\n\n    const sqlite3InitModuleState =\n      globalThis.sqlite3InitModuleState ||\n      Object.assign(Object.create(null), {\n        debugModule: () => {},\n      });\n    delete globalThis.sqlite3InitModuleState;\n    sqlite3InitModuleState.debugModule(\n      'globalThis.location =',\n      globalThis.location,\n    );\n\n    const xNameOfInstantiateWasm = false\n      ? 'instantiateWasm'\n      : 'emscripten-bug-17951';\n    Module[xNameOfInstantiateWasm] = function callee(imports, onSuccess) {\n      imports.env.foo = function () {};\n      const uri = Module.locateFile(\n        callee.uri,\n        'undefined' === typeof scriptDirectory ? '' : scriptDirectory,\n      );\n      sqlite3InitModuleState.debugModule('instantiateWasm() uri =', uri);\n      const wfetch = () => fetch(uri, { credentials: 'same-origin' });\n      const loadWasm = WebAssembly.instantiateStreaming\n        ? async () => {\n            return WebAssembly.instantiateStreaming(wfetch(), imports).then(\n              (arg) => onSuccess(arg.instance, arg.module),\n            );\n          }\n        : async () => {\n            return wfetch()\n              .then((response) => response.arrayBuffer())\n              .then((bytes) => WebAssembly.instantiate(bytes, imports))\n              .then((arg) => onSuccess(arg.instance, arg.module));\n          };\n      loadWasm();\n      return {};\n    };\n\n    Module[xNameOfInstantiateWasm].uri = 'sqlite3.wasm';\n\n    var moduleOverrides = Object.assign({}, Module);\n\n    var arguments_ = [];\n    var thisProgram = './this.program';\n    var quit_ = (status, toThrow) => {\n      throw toThrow;\n    };\n\n    var ENVIRONMENT_IS_WEB = typeof window == 'object';\n    var ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';\n\n    var ENVIRONMENT_IS_NODE =\n      typeof process == 'object' &&\n      typeof process.versions == 'object' &&\n      typeof process.versions.node == 'string';\n    var ENVIRONMENT_IS_SHELL =\n      !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\n    var scriptDirectory = '';\n    function locateFile(path) {\n      if (Module['locateFile']) {\n        return Module['locateFile'](path, scriptDirectory);\n      }\n      return scriptDirectory + path;\n    }\n\n    var read_, readAsync, readBinary, setWindowTitle;\n\n    if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = self.location.href;\n      } else if (typeof document != 'undefined' && document.currentScript) {\n        scriptDirectory = document.currentScript.src;\n      }\n\n      if (_scriptDir) {\n        scriptDirectory = _scriptDir;\n      }\n\n      if (scriptDirectory.indexOf('blob:') !== 0) {\n        scriptDirectory = scriptDirectory.substr(\n          0,\n          scriptDirectory.replace(/[?#].*/, '').lastIndexOf('/') + 1,\n        );\n      } else {\n        scriptDirectory = '';\n      }\n\n      {\n        read_ = (url) => {\n          var xhr = new XMLHttpRequest();\n          xhr.open('GET', url, false);\n          xhr.send(null);\n          return xhr.responseText;\n        };\n\n        if (ENVIRONMENT_IS_WORKER) {\n          readBinary = (url) => {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', url, false);\n            xhr.responseType = 'arraybuffer';\n            xhr.send(null);\n            return new Uint8Array(xhr.response);\n          };\n        }\n\n        readAsync = (url, onload, onerror) => {\n          var xhr = new XMLHttpRequest();\n          xhr.open('GET', url, true);\n          xhr.responseType = 'arraybuffer';\n          xhr.onload = () => {\n            if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) {\n              onload(xhr.response);\n              return;\n            }\n            onerror();\n          };\n          xhr.onerror = onerror;\n          xhr.send(null);\n        };\n      }\n\n      setWindowTitle = (title) => (document.title = title);\n    } else {\n    }\n\n    var out = Module['print'] || console.log.bind(console);\n    var err = Module['printErr'] || console.warn.bind(console);\n\n    Object.assign(Module, moduleOverrides);\n\n    moduleOverrides = null;\n\n    if (Module['arguments']) arguments_ = Module['arguments'];\n\n    if (Module['thisProgram']) thisProgram = Module['thisProgram'];\n\n    if (Module['quit']) quit_ = Module['quit'];\n\n    var STACK_ALIGN = 16;\n    var POINTER_SIZE = 4;\n\n    function getNativeTypeSize(type) {\n      switch (type) {\n        case 'i1':\n        case 'i8':\n        case 'u8':\n          return 1;\n        case 'i16':\n        case 'u16':\n          return 2;\n        case 'i32':\n        case 'u32':\n          return 4;\n        case 'i64':\n        case 'u64':\n          return 8;\n        case 'float':\n          return 4;\n        case 'double':\n          return 8;\n        default: {\n          if (type[type.length - 1] === '*') {\n            return POINTER_SIZE;\n          }\n          if (type[0] === 'i') {\n            const bits = Number(type.substr(1));\n            assert(\n              bits % 8 === 0,\n              'getNativeTypeSize invalid bits ' + bits + ', type ' + type,\n            );\n            return bits / 8;\n          }\n          return 0;\n        }\n      }\n    }\n\n    var wasmBinary;\n    if (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\n    var noExitRuntime = Module['noExitRuntime'] || true;\n\n    if (typeof WebAssembly != 'object') {\n      abort('no native wasm support detected');\n    }\n\n    var wasmMemory;\n\n    var ABORT = false;\n\n    var EXITSTATUS;\n\n    function assert(condition, text) {\n      if (!condition) {\n        abort(text);\n      }\n    }\n\n    var UTF8Decoder =\n      typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n\n    function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = '';\n\n      while (idx < endPtr) {\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 0x80)) {\n          str += String.fromCharCode(u0);\n          continue;\n        }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xe0) == 0xc0) {\n          str += String.fromCharCode(((u0 & 31) << 6) | u1);\n          continue;\n        }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xf0) == 0xe0) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          u0 =\n            ((u0 & 7) << 18) |\n            (u1 << 12) |\n            (u2 << 6) |\n            (heapOrArray[idx++] & 63);\n        }\n\n        if (u0 < 0x10000) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 0x10000;\n          str += String.fromCharCode(\n            0xd800 | (ch >> 10),\n            0xdc00 | (ch & 0x3ff),\n          );\n        }\n      }\n      return str;\n    }\n\n    function UTF8ToString(ptr, maxBytesToRead) {\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n    }\n\n    function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n      if (!(maxBytesToWrite > 0)) return 0;\n\n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1;\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 0xd800 && u <= 0xdfff) {\n          var u1 = str.charCodeAt(++i);\n          u = (0x10000 + ((u & 0x3ff) << 10)) | (u1 & 0x3ff);\n        }\n        if (u <= 0x7f) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 0x7ff) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 0xc0 | (u >> 6);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else if (u <= 0xffff) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 0xe0 | (u >> 12);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 0xf0 | (u >> 18);\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        }\n      }\n\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    }\n\n    function stringToUTF8(str, outPtr, maxBytesToWrite) {\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    }\n\n    function lengthBytesUTF8(str) {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        var c = str.charCodeAt(i);\n        if (c <= 0x7f) {\n          len++;\n        } else if (c <= 0x7ff) {\n          len += 2;\n        } else if (c >= 0xd800 && c <= 0xdfff) {\n          len += 4;\n          ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    }\n\n    var HEAP,\n      HEAP8,\n      HEAPU8,\n      HEAP16,\n      HEAPU16,\n      HEAP32,\n      HEAPU32,\n      HEAPF32,\n      HEAP64,\n      HEAPU64,\n      HEAPF64;\n\n    function updateMemoryViews() {\n      var b = wasmMemory.buffer;\n      Module['HEAP8'] = HEAP8 = new Int8Array(b);\n      Module['HEAP16'] = HEAP16 = new Int16Array(b);\n      Module['HEAP32'] = HEAP32 = new Int32Array(b);\n      Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n      Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n      Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n      Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n      Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n      Module['HEAP64'] = HEAP64 = new BigInt64Array(b);\n      Module['HEAPU64'] = HEAPU64 = new BigUint64Array(b);\n    }\n\n    var STACK_SIZE = 524288;\n\n    var INITIAL_MEMORY = Module['INITIAL_MEMORY'] || 16777216;\n\n    if (Module['wasmMemory']) {\n      wasmMemory = Module['wasmMemory'];\n    } else {\n      wasmMemory = new WebAssembly.Memory({\n        initial: INITIAL_MEMORY / 65536,\n\n        maximum: 2147483648 / 65536,\n      });\n    }\n\n    updateMemoryViews();\n\n    INITIAL_MEMORY = wasmMemory.buffer.byteLength;\n\n    var wasmTable;\n\n    var __ATPRERUN__ = [];\n    var __ATINIT__ = [];\n    var __ATEXIT__ = [];\n    var __ATPOSTRUN__ = [];\n\n    var runtimeInitialized = false;\n\n    function keepRuntimeAlive() {\n      return noExitRuntime;\n    }\n\n    function preRun() {\n      if (Module['preRun']) {\n        if (typeof Module['preRun'] == 'function')\n          Module['preRun'] = [Module['preRun']];\n        while (Module['preRun'].length) {\n          addOnPreRun(Module['preRun'].shift());\n        }\n      }\n\n      callRuntimeCallbacks(__ATPRERUN__);\n    }\n\n    function initRuntime() {\n      runtimeInitialized = true;\n\n      if (!Module['noFSInit'] && !FS.init.initialized) FS.init();\n      FS.ignorePermissions = false;\n\n      TTY.init();\n      callRuntimeCallbacks(__ATINIT__);\n    }\n\n    function postRun() {\n      if (Module['postRun']) {\n        if (typeof Module['postRun'] == 'function')\n          Module['postRun'] = [Module['postRun']];\n        while (Module['postRun'].length) {\n          addOnPostRun(Module['postRun'].shift());\n        }\n      }\n\n      callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n\n    function addOnPreRun(cb) {\n      __ATPRERUN__.unshift(cb);\n    }\n\n    function addOnInit(cb) {\n      __ATINIT__.unshift(cb);\n    }\n\n    function addOnExit(cb) {}\n\n    function addOnPostRun(cb) {\n      __ATPOSTRUN__.unshift(cb);\n    }\n\n    var runDependencies = 0;\n    var runDependencyWatcher = null;\n    var dependenciesFulfilled = null;\n\n    function getUniqueRunDependency(id) {\n      return id;\n    }\n\n    function addRunDependency(id) {\n      runDependencies++;\n\n      if (Module['monitorRunDependencies']) {\n        Module['monitorRunDependencies'](runDependencies);\n      }\n    }\n\n    function removeRunDependency(id) {\n      runDependencies--;\n\n      if (Module['monitorRunDependencies']) {\n        Module['monitorRunDependencies'](runDependencies);\n      }\n\n      if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n        }\n        if (dependenciesFulfilled) {\n          var callback = dependenciesFulfilled;\n          dependenciesFulfilled = null;\n          callback();\n        }\n      }\n    }\n\n    function abort(what) {\n      if (Module['onAbort']) {\n        Module['onAbort'](what);\n      }\n\n      what = 'Aborted(' + what + ')';\n\n      err(what);\n\n      ABORT = true;\n      EXITSTATUS = 1;\n\n      what += '. Build with -sASSERTIONS for more info.';\n\n      var e = new WebAssembly.RuntimeError(what);\n\n      readyPromiseReject(e);\n\n      throw e;\n    }\n\n    var dataURIPrefix = 'data:application/octet-stream;base64,';\n\n    function isDataURI(filename) {\n      return filename.startsWith(dataURIPrefix);\n    }\n\n    function isFileURI(filename) {\n      return filename.startsWith('file://');\n    }\n\n    var wasmBinaryFile;\n    if (Module['locateFile']) {\n      wasmBinaryFile = 'sqlite3.wasm';\n      if (!isDataURI(wasmBinaryFile)) {\n        wasmBinaryFile = locateFile(wasmBinaryFile);\n      }\n    } else {\n      wasmBinaryFile = new URL('sqlite3.wasm', import.meta.url).href;\n    }\n\n    function getBinary(file) {\n      try {\n        if (file == wasmBinaryFile && wasmBinary) {\n          return new Uint8Array(wasmBinary);\n        }\n        if (readBinary) {\n          return readBinary(file);\n        }\n        throw 'both async and sync fetching of the wasm failed';\n      } catch (err) {\n        abort(err);\n      }\n    }\n\n    function getBinaryPromise() {\n      if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n        if (typeof fetch == 'function') {\n          return fetch(wasmBinaryFile, { credentials: 'same-origin' })\n            .then(function (response) {\n              if (!response['ok']) {\n                throw (\n                  \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\"\n                );\n              }\n              return response['arrayBuffer']();\n            })\n            .catch(function () {\n              return getBinary(wasmBinaryFile);\n            });\n        }\n      }\n\n      return Promise.resolve().then(function () {\n        return getBinary(wasmBinaryFile);\n      });\n    }\n\n    function createWasm() {\n      var info = {\n        env: asmLibraryArg,\n        wasi_snapshot_preview1: asmLibraryArg,\n      };\n\n      function receiveInstance(instance, module) {\n        var exports = instance.exports;\n\n        Module['asm'] = exports;\n\n        wasmTable = Module['asm']['__indirect_function_table'];\n\n        addOnInit(Module['asm']['__wasm_call_ctors']);\n\n        removeRunDependency('wasm-instantiate');\n      }\n\n      addRunDependency('wasm-instantiate');\n\n      function receiveInstantiationResult(result) {\n        receiveInstance(result['instance']);\n      }\n\n      function instantiateArrayBuffer(receiver) {\n        return getBinaryPromise()\n          .then(function (binary) {\n            return WebAssembly.instantiate(binary, info);\n          })\n          .then(function (instance) {\n            return instance;\n          })\n          .then(receiver, function (reason) {\n            err('failed to asynchronously prepare wasm: ' + reason);\n\n            abort(reason);\n          });\n      }\n\n      function instantiateAsync() {\n        if (\n          !wasmBinary &&\n          typeof WebAssembly.instantiateStreaming == 'function' &&\n          !isDataURI(wasmBinaryFile) &&\n          typeof fetch == 'function'\n        ) {\n          return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(\n            function (response) {\n              var result = WebAssembly.instantiateStreaming(response, info);\n\n              return result.then(receiveInstantiationResult, function (reason) {\n                err('wasm streaming compile failed: ' + reason);\n                err('falling back to ArrayBuffer instantiation');\n                return instantiateArrayBuffer(receiveInstantiationResult);\n              });\n            },\n          );\n        } else {\n          return instantiateArrayBuffer(receiveInstantiationResult);\n        }\n      }\n\n      if (Module['instantiateWasm']) {\n        try {\n          var exports = Module['instantiateWasm'](info, receiveInstance);\n          return exports;\n        } catch (e) {\n          err('Module.instantiateWasm callback failed with error: ' + e);\n\n          readyPromiseReject(e);\n        }\n      }\n\n      instantiateAsync().catch(readyPromiseReject);\n      return {};\n    }\n\n    var tempDouble;\n    var tempI64;\n\n    var ASM_CONSTS = {};\n\n    function ExitStatus(status) {\n      this.name = 'ExitStatus';\n      this.message = 'Program terminated with exit(' + status + ')';\n      this.status = status;\n    }\n\n    function callRuntimeCallbacks(callbacks) {\n      while (callbacks.length > 0) {\n        callbacks.shift()(Module);\n      }\n    }\n\n    function getValue(ptr, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1':\n          return HEAP8[ptr >> 0];\n        case 'i8':\n          return HEAP8[ptr >> 0];\n        case 'i16':\n          return HEAP16[ptr >> 1];\n        case 'i32':\n          return HEAP32[ptr >> 2];\n        case 'i64':\n          return HEAP64[ptr >> 3];\n        case 'float':\n          return HEAPF32[ptr >> 2];\n        case 'double':\n          return HEAPF64[ptr >> 3];\n        case '*':\n          return HEAPU32[ptr >> 2];\n        default:\n          abort('invalid type for getValue: ' + type);\n      }\n      return null;\n    }\n\n    function setValue(ptr, value, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1':\n          HEAP8[ptr >> 0] = value;\n          break;\n        case 'i8':\n          HEAP8[ptr >> 0] = value;\n          break;\n        case 'i16':\n          HEAP16[ptr >> 1] = value;\n          break;\n        case 'i32':\n          HEAP32[ptr >> 2] = value;\n          break;\n        case 'i64':\n          (tempI64 = [\n            value >>> 0,\n            ((tempDouble = value),\n            +Math.abs(tempDouble) >= 1.0\n              ? tempDouble > 0.0\n                ? (Math.min(\n                    +Math.floor(tempDouble / 4294967296.0),\n                    4294967295.0,\n                  ) |\n                    0) >>>\n                  0\n                : ~~+Math.ceil(\n                    (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                  ) >>> 0\n              : 0),\n          ]),\n            (HEAP32[ptr >> 2] = tempI64[0]),\n            (HEAP32[(ptr + 4) >> 2] = tempI64[1]);\n          break;\n        case 'float':\n          HEAPF32[ptr >> 2] = value;\n          break;\n        case 'double':\n          HEAPF64[ptr >> 3] = value;\n          break;\n        case '*':\n          HEAPU32[ptr >> 2] = value;\n          break;\n        default:\n          abort('invalid type for setValue: ' + type);\n      }\n    }\n\n    var PATH = {\n      isAbs: (path) => path.charAt(0) === '/',\n      splitPath: (filename) => {\n        var splitPathRe =\n          /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n      normalizeArray: (parts, allowAboveRoot) => {\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === '.') {\n            parts.splice(i, 1);\n          } else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift('..');\n          }\n        }\n        return parts;\n      },\n      normalize: (path) => {\n        var isAbsolute = PATH.isAbs(path),\n          trailingSlash = path.substr(-1) === '/';\n\n        path = PATH.normalizeArray(\n          path.split('/').filter((p) => !!p),\n          !isAbsolute,\n        ).join('/');\n        if (!path && !isAbsolute) {\n          path = '.';\n        }\n        if (path && trailingSlash) {\n          path += '/';\n        }\n        return (isAbsolute ? '/' : '') + path;\n      },\n      dirname: (path) => {\n        var result = PATH.splitPath(path),\n          root = result[0],\n          dir = result[1];\n        if (!root && !dir) {\n          return '.';\n        }\n        if (dir) {\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },\n      basename: (path) => {\n        if (path === '/') return '/';\n        path = PATH.normalize(path);\n        path = path.replace(/\\/$/, '');\n        var lastSlash = path.lastIndexOf('/');\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash + 1);\n      },\n      join: function () {\n        var paths = Array.prototype.slice.call(arguments);\n        return PATH.normalize(paths.join('/'));\n      },\n      join2: (l, r) => {\n        return PATH.normalize(l + '/' + r);\n      },\n    };\n\n    function getRandomDevice() {\n      if (\n        typeof crypto == 'object' &&\n        typeof crypto['getRandomValues'] == 'function'\n      ) {\n        var randomBuffer = new Uint8Array(1);\n        return () => {\n          crypto.getRandomValues(randomBuffer);\n          return randomBuffer[0];\n        };\n      } else return () => abort('randomDevice');\n    }\n\n    var PATH_FS = {\n      resolve: function () {\n        var resolvedPath = '',\n          resolvedAbsolute = false;\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = i >= 0 ? arguments[i] : FS.cwd();\n\n          if (typeof path != 'string') {\n            throw new TypeError('Arguments to path.resolve must be strings');\n          } else if (!path) {\n            return '';\n          }\n          resolvedPath = path + '/' + resolvedPath;\n          resolvedAbsolute = PATH.isAbs(path);\n        }\n\n        resolvedPath = PATH.normalizeArray(\n          resolvedPath.split('/').filter((p) => !!p),\n          !resolvedAbsolute,\n        ).join('/');\n        return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n      },\n      relative: (from, to) => {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== '') break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== '') break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split('/'));\n        var toParts = trim(to.split('/'));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push('..');\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join('/');\n      },\n    };\n\n    function intArrayFromString(stringy, dontAddNull, length) {\n      var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n      var u8array = new Array(len);\n      var numBytesWritten = stringToUTF8Array(\n        stringy,\n        u8array,\n        0,\n        u8array.length,\n      );\n      if (dontAddNull) u8array.length = numBytesWritten;\n      return u8array;\n    }\n    var TTY = {\n      ttys: [],\n      init: function () {},\n      shutdown: function () {},\n      register: function (dev, ops) {\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n      stream_ops: {\n        open: function (stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n        close: function (stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        fsync: function (stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        read: function (stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        },\n        write: function (stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        },\n      },\n      default_tty_ops: {\n        get_char: function (tty) {\n          if (!tty.input.length) {\n            var result = null;\n            if (\n              typeof window != 'undefined' &&\n              typeof window.prompt == 'function'\n            ) {\n              result = window.prompt('Input: ');\n              if (result !== null) {\n                result += '\\n';\n              }\n            } else if (typeof readline == 'function') {\n              result = readline();\n              if (result !== null) {\n                result += '\\n';\n              }\n            }\n            if (!result) {\n              return null;\n            }\n            tty.input = intArrayFromString(result, true);\n          }\n          return tty.input.shift();\n        },\n        put_char: function (tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync: function (tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n      },\n      default_tty1_ops: {\n        put_char: function (tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync: function (tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n      },\n    };\n\n    function zeroMemory(address, size) {\n      HEAPU8.fill(0, address, address + size);\n      return address;\n    }\n\n    function alignMemory(size, alignment) {\n      return Math.ceil(size / alignment) * alignment;\n    }\n    function mmapAlloc(size) {\n      size = alignMemory(size, 65536);\n      var ptr = _emscripten_builtin_memalign(65536, size);\n      if (!ptr) return 0;\n      return zeroMemory(ptr, size);\n    }\n    var MEMFS = {\n      ops_table: null,\n      mount: function (mount) {\n        return MEMFS.createNode(null, '/', 16384 | 511, 0);\n      },\n      createNode: function (parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          throw new FS.ErrnoError(63);\n        }\n        if (!MEMFS.ops_table) {\n          MEMFS.ops_table = {\n            dir: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                lookup: MEMFS.node_ops.lookup,\n                mknod: MEMFS.node_ops.mknod,\n                rename: MEMFS.node_ops.rename,\n                unlink: MEMFS.node_ops.unlink,\n                rmdir: MEMFS.node_ops.rmdir,\n                readdir: MEMFS.node_ops.readdir,\n                symlink: MEMFS.node_ops.symlink,\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek,\n              },\n            },\n            file: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek,\n                read: MEMFS.stream_ops.read,\n                write: MEMFS.stream_ops.write,\n                allocate: MEMFS.stream_ops.allocate,\n                mmap: MEMFS.stream_ops.mmap,\n                msync: MEMFS.stream_ops.msync,\n              },\n            },\n            link: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                readlink: MEMFS.node_ops.readlink,\n              },\n              stream: {},\n            },\n            chrdev: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n              },\n              stream: FS.chrdev_stream_ops,\n            },\n          };\n        }\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0;\n\n          node.contents = null;\n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.timestamp = Date.now();\n\n        if (parent) {\n          parent.contents[name] = node;\n          parent.timestamp = node.timestamp;\n        }\n        return node;\n      },\n      getFileDataAsTypedArray: function (node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray)\n          return node.contents.subarray(0, node.usedBytes);\n        return new Uint8Array(node.contents);\n      },\n      expandFileStorage: function (node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return;\n\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(\n          newCapacity,\n          (prevCapacity *\n            (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>>\n            0,\n        );\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity);\n        if (node.usedBytes > 0)\n          node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n      },\n      resizeFileStorage: function (node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null;\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize);\n          if (oldContents) {\n            node.contents.set(\n              oldContents.subarray(0, Math.min(newSize, node.usedBytes)),\n            );\n          }\n          node.usedBytes = newSize;\n        }\n      },\n      node_ops: {\n        getattr: function (node) {\n          var attr = {};\n\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n        setattr: function (node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n        lookup: function (parent, name) {\n          throw FS.genericErrors[44];\n        },\n        mknod: function (parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n        rename: function (old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {}\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now();\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n          old_node.parent = new_dir;\n        },\n        unlink: function (parent, name) {\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        rmdir: function (parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        readdir: function (node) {\n          var entries = ['.', '..'];\n          for (var key in node.contents) {\n            if (!node.contents.hasOwnProperty(key)) {\n              continue;\n            }\n            entries.push(key);\n          }\n          return entries;\n        },\n        symlink: function (parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n        readlink: function (node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        },\n      },\n      stream_ops: {\n        read: function (stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++)\n              buffer[offset + i] = contents[position + i];\n          }\n          return size;\n        },\n        write: function (stream, buffer, offset, length, position, canOwn) {\n          if (buffer.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n\n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(\n                buffer.subarray(offset, offset + length),\n                position,\n              );\n              return length;\n            }\n          }\n\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer.subarray) {\n            node.contents.set(\n              buffer.subarray(offset, offset + length),\n              position,\n            );\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n        llseek: function (stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n        allocate: function (stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(\n            stream.node.usedBytes,\n            offset + length,\n          );\n        },\n        mmap: function (stream, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n\n          if (!(flags & 2) && contents.buffer === HEAP8.buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(\n                  contents,\n                  position,\n                  position + length,\n                );\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            HEAP8.set(contents, ptr);\n          }\n          return { ptr: ptr, allocated: allocated };\n        },\n        msync: function (stream, buffer, offset, length, mmapFlags) {\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n\n          return 0;\n        },\n      },\n    };\n\n    function asyncLoad(url, onload, onerror, noRunDep) {\n      var dep = !noRunDep ? getUniqueRunDependency('al ' + url) : '';\n      readAsync(\n        url,\n        (arrayBuffer) => {\n          assert(\n            arrayBuffer,\n            'Loading data file \"' + url + '\" failed (no arrayBuffer).',\n          );\n          onload(new Uint8Array(arrayBuffer));\n          if (dep) removeRunDependency(dep);\n        },\n        (event) => {\n          if (onerror) {\n            onerror();\n          } else {\n            throw 'Loading data file \"' + url + '\" failed.';\n          }\n        },\n      );\n      if (dep) addRunDependency(dep);\n    }\n\n    var FS = {\n      root: null,\n      mounts: [],\n      devices: {},\n      streams: [],\n      nextInode: 1,\n      nameTable: null,\n      currentPath: '/',\n      initialized: false,\n      ignorePermissions: true,\n      ErrnoError: null,\n      genericErrors: {},\n      filesystems: null,\n      syncFSRequests: 0,\n      lookupPath: (path, opts = {}) => {\n        path = PATH_FS.resolve(path);\n\n        if (!path) return { path: '', node: null };\n\n        var defaults = {\n          follow_mount: true,\n          recurse_count: 0,\n        };\n        opts = Object.assign(defaults, opts);\n\n        if (opts.recurse_count > 8) {\n          throw new FS.ErrnoError(32);\n        }\n\n        var parts = path.split('/').filter((p) => !!p);\n\n        var current = FS.root;\n        var current_path = '/';\n\n        for (var i = 0; i < parts.length; i++) {\n          var islast = i === parts.length - 1;\n          if (islast && opts.parent) {\n            break;\n          }\n\n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n\n          if (FS.isMountpoint(current)) {\n            if (!islast || (islast && opts.follow_mount)) {\n              current = current.mounted.root;\n            }\n          }\n\n          if (!islast || opts.follow) {\n            var count = 0;\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n\n              var lookup = FS.lookupPath(current_path, {\n                recurse_count: opts.recurse_count + 1,\n              });\n              current = lookup.node;\n\n              if (count++ > 40) {\n                throw new FS.ErrnoError(32);\n              }\n            }\n          }\n        }\n\n        return { path: current_path, node: current };\n      },\n      getPath: (node) => {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length - 1] !== '/'\n              ? mount + '/' + path\n              : mount + path;\n          }\n          path = path ? node.name + '/' + path : node.name;\n          node = node.parent;\n        }\n      },\n      hashName: (parentid, name) => {\n        var hash = 0;\n\n        for (var i = 0; i < name.length; i++) {\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n        }\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\n      },\n      hashAddNode: (node) => {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n      hashRemoveNode: (node) => {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },\n      lookupNode: (parent, name) => {\n        var errCode = FS.mayLookup(parent);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode, parent);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n\n        return FS.lookup(parent, name);\n      },\n      createNode: (parent, name, mode, rdev) => {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n\n        FS.hashAddNode(node);\n\n        return node;\n      },\n      destroyNode: (node) => {\n        FS.hashRemoveNode(node);\n      },\n      isRoot: (node) => {\n        return node === node.parent;\n      },\n      isMountpoint: (node) => {\n        return !!node.mounted;\n      },\n      isFile: (mode) => {\n        return (mode & 61440) === 32768;\n      },\n      isDir: (mode) => {\n        return (mode & 61440) === 16384;\n      },\n      isLink: (mode) => {\n        return (mode & 61440) === 40960;\n      },\n      isChrdev: (mode) => {\n        return (mode & 61440) === 8192;\n      },\n      isBlkdev: (mode) => {\n        return (mode & 61440) === 24576;\n      },\n      isFIFO: (mode) => {\n        return (mode & 61440) === 4096;\n      },\n      isSocket: (mode) => {\n        return (mode & 49152) === 49152;\n      },\n      flagModes: { r: 0, 'r+': 2, w: 577, 'w+': 578, a: 1089, 'a+': 1090 },\n      modeStringToFlags: (str) => {\n        var flags = FS.flagModes[str];\n        if (typeof flags == 'undefined') {\n          throw new Error('Unknown file open mode: ' + str);\n        }\n        return flags;\n      },\n      flagsToPermissionString: (flag) => {\n        var perms = ['r', 'w', 'rw'][flag & 3];\n        if (flag & 512) {\n          perms += 'w';\n        }\n        return perms;\n      },\n      nodePermissions: (node, perms) => {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n\n        if (perms.includes('r') && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.includes('w') && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.includes('x') && !(node.mode & 73)) {\n          return 2;\n        }\n        return 0;\n      },\n      mayLookup: (dir) => {\n        var errCode = FS.nodePermissions(dir, 'x');\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n      mayCreate: (dir, name) => {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {}\n        return FS.nodePermissions(dir, 'wx');\n      },\n      mayDelete: (dir, name, isdir) => {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var errCode = FS.nodePermissions(dir, 'wx');\n        if (errCode) {\n          return errCode;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n        return 0;\n      },\n      mayOpen: (node, flags) => {\n        if (!node) {\n          return 44;\n        }\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== 'r' || flags & 512) {\n            return 31;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n      MAX_OPEN_FDS: 4096,\n      nextfd: (fd_start = 0, fd_end = FS.MAX_OPEN_FDS) => {\n        for (var fd = fd_start; fd <= fd_end; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(33);\n      },\n      getStream: (fd) => FS.streams[fd],\n      createStream: (stream, fd_start, fd_end) => {\n        if (!FS.FSStream) {\n          FS.FSStream = function () {\n            this.shared = {};\n          };\n          FS.FSStream.prototype = {};\n          Object.defineProperties(FS.FSStream.prototype, {\n            object: {\n              get: function () {\n                return this.node;\n              },\n\n              set: function (val) {\n                this.node = val;\n              },\n            },\n            isRead: {\n              get: function () {\n                return (this.flags & 2097155) !== 1;\n              },\n            },\n            isWrite: {\n              get: function () {\n                return (this.flags & 2097155) !== 0;\n              },\n            },\n            isAppend: {\n              get: function () {\n                return this.flags & 1024;\n              },\n            },\n            flags: {\n              get: function () {\n                return this.shared.flags;\n              },\n\n              set: function (val) {\n                this.shared.flags = val;\n              },\n            },\n            position: {\n              get: function () {\n                return this.shared.position;\n              },\n\n              set: function (val) {\n                this.shared.position = val;\n              },\n            },\n          });\n        }\n\n        stream = Object.assign(new FS.FSStream(), stream);\n        var fd = FS.nextfd(fd_start, fd_end);\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n      closeStream: (fd) => {\n        FS.streams[fd] = null;\n      },\n      chrdev_stream_ops: {\n        open: (stream) => {\n          var device = FS.getDevice(stream.node.rdev);\n\n          stream.stream_ops = device.stream_ops;\n\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        },\n        llseek: () => {\n          throw new FS.ErrnoError(70);\n        },\n      },\n      major: (dev) => dev >> 8,\n      minor: (dev) => dev & 0xff,\n      makedev: (ma, mi) => (ma << 8) | mi,\n      registerDevice: (dev, ops) => {\n        FS.devices[dev] = { stream_ops: ops };\n      },\n      getDevice: (dev) => FS.devices[dev],\n      getMounts: (mount) => {\n        var mounts = [];\n        var check = [mount];\n\n        while (check.length) {\n          var m = check.pop();\n\n          mounts.push(m);\n\n          check.push.apply(check, m.mounts);\n        }\n\n        return mounts;\n      },\n      syncfs: (populate, callback) => {\n        if (typeof populate == 'function') {\n          callback = populate;\n          populate = false;\n        }\n\n        FS.syncFSRequests++;\n\n        if (FS.syncFSRequests > 1) {\n          err(\n            'warning: ' +\n              FS.syncFSRequests +\n              ' FS.syncfs operations in flight at once, probably just doing extra work',\n          );\n        }\n\n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n\n        function doCallback(errCode) {\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n\n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        }\n\n        mounts.forEach((mount) => {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n      mount: (type, opts, mountpoint) => {\n        var root = mountpoint === '/';\n        var pseudo = !mountpoint;\n        var node;\n\n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n\n          mountpoint = lookup.path;\n          node = lookup.node;\n\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n\n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n\n        var mount = {\n          type: type,\n          opts: opts,\n          mountpoint: mountpoint,\n          mounts: [],\n        };\n\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n\n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          node.mounted = mount;\n\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n\n        return mountRoot;\n      },\n      unmount: (mountpoint) => {\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n\n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n\n        Object.keys(FS.nameTable).forEach((hash) => {\n          var current = FS.nameTable[hash];\n\n          while (current) {\n            var next = current.name_next;\n\n            if (mounts.includes(current.mount)) {\n              FS.destroyNode(current);\n            }\n\n            current = next;\n          }\n        });\n\n        node.mounted = null;\n\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n      },\n      lookup: (parent, name) => {\n        return parent.node_ops.lookup(parent, name);\n      },\n      mknod: (path, mode, dev) => {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name || name === '.' || name === '..') {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.mayCreate(parent, name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n      create: (path, mode) => {\n        mode = mode !== undefined ? mode : 438;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdir: (path, mode) => {\n        mode = mode !== undefined ? mode : 511;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdirTree: (path, mode) => {\n        var dirs = path.split('/');\n        var d = '';\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += '/' + dirs[i];\n          try {\n            FS.mkdir(d, mode);\n          } catch (e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n      mkdev: (path, mode, dev) => {\n        if (typeof dev == 'undefined') {\n          dev = mode;\n          mode = 438;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n      symlink: (oldpath, newpath) => {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n        var lookup = FS.lookupPath(newpath, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n      rename: (old_path, new_path) => {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n\n        var lookup, old_dir, new_dir;\n\n        lookup = FS.lookupPath(old_path, { parent: true });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, { parent: true });\n        new_dir = lookup.node;\n\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n\n        var old_node = FS.lookupNode(old_dir, old_name);\n\n        var relative = PATH_FS.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(28);\n        }\n\n        relative = PATH_FS.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(55);\n        }\n\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {}\n\n        if (old_node === new_node) {\n          return;\n        }\n\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        errCode = new_node\n          ? FS.mayDelete(new_dir, new_name, isdir)\n          : FS.mayCreate(new_dir, new_name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n        if (\n          FS.isMountpoint(old_node) ||\n          (new_node && FS.isMountpoint(new_node))\n        ) {\n          throw new FS.ErrnoError(10);\n        }\n\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, 'w');\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        FS.hashRemoveNode(old_node);\n\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.hashAddNode(old_node);\n        }\n      },\n      rmdir: (path) => {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n      },\n      readdir: (path) => {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(54);\n        }\n        return node.node_ops.readdir(node);\n      },\n      unlink: (path) => {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n      },\n      readlink: (path) => {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n        return PATH_FS.resolve(\n          FS.getPath(link.parent),\n          link.node_ops.readlink(link),\n        );\n      },\n      stat: (path, dontFollow) => {\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\n        var node = lookup.node;\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(63);\n        }\n        return node.node_ops.getattr(node);\n      },\n      lstat: (path) => {\n        return FS.stat(path, true);\n      },\n      chmod: (path, mode, dontFollow) => {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          mode: (mode & 4095) | (node.mode & ~4095),\n          timestamp: Date.now(),\n        });\n      },\n      lchmod: (path, mode) => {\n        FS.chmod(path, mode, true);\n      },\n      fchmod: (fd, mode) => {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        FS.chmod(stream.node, mode);\n      },\n      chown: (path, uid, gid, dontFollow) => {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          timestamp: Date.now(),\n        });\n      },\n      lchown: (path, uid, gid) => {\n        FS.chown(path, uid, gid, true);\n      },\n      fchown: (fd, uid, gid) => {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        FS.chown(stream.node, uid, gid);\n      },\n      truncate: (path, len) => {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.nodePermissions(node, 'w');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        node.node_ops.setattr(node, {\n          size: len,\n          timestamp: Date.now(),\n        });\n      },\n      ftruncate: (fd, len) => {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n        FS.truncate(stream.node, len);\n      },\n      utime: (path, atime, mtime) => {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        node.node_ops.setattr(node, {\n          timestamp: Math.max(atime, mtime),\n        });\n      },\n      open: (path, flags, mode) => {\n        if (path === '') {\n          throw new FS.ErrnoError(44);\n        }\n        flags = typeof flags == 'string' ? FS.modeStringToFlags(flags) : flags;\n        mode = typeof mode == 'undefined' ? 438 : mode;\n        if (flags & 64) {\n          mode = (mode & 4095) | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        if (typeof path == 'object') {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n          try {\n            var lookup = FS.lookupPath(path, {\n              follow: !(flags & 131072),\n            });\n            node = lookup.node;\n          } catch (e) {}\n        }\n\n        var created = false;\n        if (flags & 64) {\n          if (node) {\n            if (flags & 128) {\n              throw new FS.ErrnoError(20);\n            }\n          } else {\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n\n        if (flags & 65536 && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        if (flags & 512 && !created) {\n          FS.truncate(node, 0);\n        }\n\n        flags &= ~(128 | 512 | 131072);\n\n        var stream = FS.createStream({\n          node: node,\n          path: FS.getPath(node),\n          flags: flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n\n          ungotten: [],\n          error: false,\n        });\n\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (Module['logReadFiles'] && !(flags & 1)) {\n          if (!FS.readFiles) FS.readFiles = {};\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n          }\n        }\n        return stream;\n      },\n      close: (stream) => {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (stream.getdents) stream.getdents = null;\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n      },\n      isClosed: (stream) => {\n        return stream.fd === null;\n      },\n      llseek: (stream, offset, whence) => {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n      read: (stream, buffer, offset, length, position) => {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesRead = stream.stream_ops.read(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n        );\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n      write: (stream, buffer, offset, length, position, canOwn) => {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n        if (stream.seekable && stream.flags & 1024) {\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesWritten = stream.stream_ops.write(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n          canOwn,\n        );\n        if (!seeking) stream.position += bytesWritten;\n        return bytesWritten;\n      },\n      allocate: (stream, offset, length) => {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(138);\n        }\n        stream.stream_ops.allocate(stream, offset, length);\n      },\n      mmap: (stream, length, position, prot, flags) => {\n        if (\n          (prot & 2) !== 0 &&\n          (flags & 2) === 0 &&\n          (stream.flags & 2097155) !== 2\n        ) {\n          throw new FS.ErrnoError(2);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\n      },\n      msync: (stream, buffer, offset, length, mmapFlags) => {\n        if (!stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(\n          stream,\n          buffer,\n          offset,\n          length,\n          mmapFlags,\n        );\n      },\n      munmap: (stream) => 0,\n      ioctl: (stream, cmd, arg) => {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n      readFile: (path, opts = {}) => {\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || 'binary';\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\n          throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === 'utf8') {\n          ret = UTF8ArrayToString(buf, 0);\n        } else if (opts.encoding === 'binary') {\n          ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n      },\n      writeFile: (path, data, opts = {}) => {\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data == 'string') {\n          var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error('Unsupported data type');\n        }\n        FS.close(stream);\n      },\n      cwd: () => FS.currentPath,\n      chdir: (path) => {\n        var lookup = FS.lookupPath(path, { follow: true });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        var errCode = FS.nodePermissions(lookup.node, 'x');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.currentPath = lookup.path;\n      },\n      createDefaultDirectories: () => {\n        FS.mkdir('/tmp');\n        FS.mkdir('/home');\n        FS.mkdir('/home/web_user');\n      },\n      createDefaultDevices: () => {\n        FS.mkdir('/dev');\n\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: () => 0,\n          write: (stream, buffer, offset, length, pos) => length,\n        });\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\n\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\n\n        var random_device = getRandomDevice();\n        FS.createDevice('/dev', 'random', random_device);\n        FS.createDevice('/dev', 'urandom', random_device);\n\n        FS.mkdir('/dev/shm');\n        FS.mkdir('/dev/shm/tmp');\n      },\n      createSpecialDirectories: () => {\n        FS.mkdir('/proc');\n        var proc_self = FS.mkdir('/proc/self');\n        FS.mkdir('/proc/self/fd');\n        FS.mount(\n          {\n            mount: () => {\n              var node = FS.createNode(proc_self, 'fd', 16384 | 511, 73);\n              node.node_ops = {\n                lookup: (parent, name) => {\n                  var fd = +name;\n                  var stream = FS.getStream(fd);\n                  if (!stream) throw new FS.ErrnoError(8);\n                  var ret = {\n                    parent: null,\n                    mount: { mountpoint: 'fake' },\n                    node_ops: { readlink: () => stream.path },\n                  };\n                  ret.parent = ret;\n                  return ret;\n                },\n              };\n              return node;\n            },\n          },\n          {},\n          '/proc/self/fd',\n        );\n      },\n      createStandardStreams: () => {\n        if (Module['stdin']) {\n          FS.createDevice('/dev', 'stdin', Module['stdin']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdin');\n        }\n        if (Module['stdout']) {\n          FS.createDevice('/dev', 'stdout', null, Module['stdout']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdout');\n        }\n        if (Module['stderr']) {\n          FS.createDevice('/dev', 'stderr', null, Module['stderr']);\n        } else {\n          FS.symlink('/dev/tty1', '/dev/stderr');\n        }\n\n        var stdin = FS.open('/dev/stdin', 0);\n        var stdout = FS.open('/dev/stdout', 1);\n        var stderr = FS.open('/dev/stderr', 1);\n      },\n      ensureErrnoError: () => {\n        if (FS.ErrnoError) return;\n        FS.ErrnoError = function ErrnoError(errno, node) {\n          this.node = node;\n          this.setErrno = function (errno) {\n            this.errno = errno;\n          };\n          this.setErrno(errno);\n          this.message = 'FS error';\n        };\n        FS.ErrnoError.prototype = new Error();\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n\n        [44].forEach((code) => {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = '<generic error, no stack>';\n        });\n      },\n      staticInit: () => {\n        FS.ensureErrnoError();\n\n        FS.nameTable = new Array(4096);\n\n        FS.mount(MEMFS, {}, '/');\n\n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n\n        FS.filesystems = {\n          MEMFS: MEMFS,\n        };\n      },\n      init: (input, output, error) => {\n        FS.init.initialized = true;\n\n        FS.ensureErrnoError();\n\n        Module['stdin'] = input || Module['stdin'];\n        Module['stdout'] = output || Module['stdout'];\n        Module['stderr'] = error || Module['stderr'];\n\n        FS.createStandardStreams();\n      },\n      quit: () => {\n        FS.init.initialized = false;\n\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n          if (!stream) {\n            continue;\n          }\n          FS.close(stream);\n        }\n      },\n      getMode: (canRead, canWrite) => {\n        var mode = 0;\n        if (canRead) mode |= 292 | 73;\n        if (canWrite) mode |= 146;\n        return mode;\n      },\n      findObject: (path, dontResolveLastLink) => {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (!ret.exists) {\n          return null;\n        }\n        return ret.object;\n      },\n      analyzePath: (path, dontResolveLastLink) => {\n        try {\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          path = lookup.path;\n        } catch (e) {}\n        var ret = {\n          isRoot: false,\n          exists: false,\n          error: 0,\n          name: null,\n          path: null,\n          object: null,\n          parentExists: false,\n          parentPath: null,\n          parentObject: null,\n        };\n        try {\n          var lookup = FS.lookupPath(path, { parent: true });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === '/';\n        } catch (e) {\n          ret.error = e.errno;\n        }\n        return ret;\n      },\n      createPath: (parent, path, canRead, canWrite) => {\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n        var parts = path.split('/').reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {}\n          parent = current;\n        }\n        return current;\n      },\n      createFile: (parent, name, properties, canRead, canWrite) => {\n        var path = PATH.join2(\n          typeof parent == 'string' ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS.getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n      createDataFile: (parent, name, data, canRead, canWrite, canOwn) => {\n        var path = name;\n        if (parent) {\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n          path = name ? PATH.join2(parent, name) : parent;\n        }\n        var mode = FS.getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data == 'string') {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i)\n              arr[i] = data.charCodeAt(i);\n            data = arr;\n          }\n\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 577);\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n        return node;\n      },\n      createDevice: (parent, name, input, output) => {\n        var path = PATH.join2(\n          typeof parent == 'string' ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS.getMode(!!input, !!output);\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n\n        FS.registerDevice(dev, {\n          open: (stream) => {\n            stream.seekable = false;\n          },\n          close: (stream) => {\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          },\n          read: (stream, buffer, offset, length, pos) => {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          },\n          write: (stream, buffer, offset, length, pos) => {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          },\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n      forceLoadFile: (obj) => {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n          return true;\n        if (typeof XMLHttpRequest != 'undefined') {\n          throw new Error(\n            'Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.',\n          );\n        } else if (read_) {\n          try {\n            obj.contents = intArrayFromString(read_(obj.url), true);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n        } else {\n          throw new Error('Cannot load without read() or XMLHttpRequest.');\n        }\n      },\n      createLazyFile: (parent, name, url, canRead, canWrite) => {\n        function LazyUint8Array() {\n          this.lengthKnown = false;\n          this.chunks = [];\n        }\n        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n          if (idx > this.length - 1 || idx < 0) {\n            return undefined;\n          }\n          var chunkOffset = idx % this.chunkSize;\n          var chunkNum = (idx / this.chunkSize) | 0;\n          return this.getter(chunkNum)[chunkOffset];\n        };\n        LazyUint8Array.prototype.setDataGetter =\n          function LazyUint8Array_setDataGetter(getter) {\n            this.getter = getter;\n          };\n        LazyUint8Array.prototype.cacheLength =\n          function LazyUint8Array_cacheLength() {\n            var xhr = new XMLHttpRequest();\n            xhr.open('HEAD', url, false);\n            xhr.send(null);\n            if (\n              !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n            )\n              throw new Error(\n                \"Couldn't load \" + url + '. Status: ' + xhr.status,\n              );\n            var datalength = Number(xhr.getResponseHeader('Content-length'));\n            var header;\n            var hasByteServing =\n              (header = xhr.getResponseHeader('Accept-Ranges')) &&\n              header === 'bytes';\n            var usesGzip =\n              (header = xhr.getResponseHeader('Content-Encoding')) &&\n              header === 'gzip';\n\n            var chunkSize = 1024 * 1024;\n\n            if (!hasByteServing) chunkSize = datalength;\n\n            var doXHR = (from, to) => {\n              if (from > to)\n                throw new Error(\n                  'invalid range (' +\n                    from +\n                    ', ' +\n                    to +\n                    ') or no bytes requested!',\n                );\n              if (to > datalength - 1)\n                throw new Error(\n                  'only ' + datalength + ' bytes available! programmer error!',\n                );\n\n              var xhr = new XMLHttpRequest();\n              xhr.open('GET', url, false);\n              if (datalength !== chunkSize)\n                xhr.setRequestHeader('Range', 'bytes=' + from + '-' + to);\n\n              xhr.responseType = 'arraybuffer';\n              if (xhr.overrideMimeType) {\n                xhr.overrideMimeType('text/plain; charset=x-user-defined');\n              }\n\n              xhr.send(null);\n              if (\n                !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n              )\n                throw new Error(\n                  \"Couldn't load \" + url + '. Status: ' + xhr.status,\n                );\n              if (xhr.response !== undefined) {\n                return new Uint8Array(xhr.response || []);\n              }\n              return intArrayFromString(xhr.responseText || '', true);\n            };\n            var lazyArray = this;\n            lazyArray.setDataGetter((chunkNum) => {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum + 1) * chunkSize - 1;\n              end = Math.min(end, datalength - 1);\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\n                lazyArray.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined')\n                throw new Error('doXHR failed!');\n              return lazyArray.chunks[chunkNum];\n            });\n\n            if (usesGzip || !datalength) {\n              chunkSize = datalength = 1;\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\n                'LazyFiles on gzip forces download of the whole file when length is accessed',\n              );\n            }\n\n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          };\n        if (typeof XMLHttpRequest != 'undefined') {\n          if (!ENVIRONMENT_IS_WORKER)\n            throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\n          var lazyArray = new LazyUint8Array();\n          Object.defineProperties(lazyArray, {\n            length: {\n              get: function () {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._length;\n              },\n            },\n            chunkSize: {\n              get: function () {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._chunkSize;\n              },\n            },\n          });\n\n          var properties = { isDevice: false, contents: lazyArray };\n        } else {\n          var properties = { isDevice: false, url: url };\n        }\n\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: function () {\n              return this.contents.length;\n            },\n          },\n        });\n\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach((key) => {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = function forceLoadLazyFile() {\n            FS.forceLoadFile(node);\n            return fn.apply(null, arguments);\n          };\n        });\n        function writeChunks(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= contents.length) return 0;\n          var size = Math.min(contents.length - position, length);\n          if (contents.slice) {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        }\n\n        stream_ops.read = (stream, buffer, offset, length, position) => {\n          FS.forceLoadFile(node);\n          return writeChunks(stream, buffer, offset, length, position);\n        };\n\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\n          FS.forceLoadFile(node);\n          var ptr = mmapAlloc(length);\n          if (!ptr) {\n            throw new FS.ErrnoError(48);\n          }\n          writeChunks(stream, HEAP8, ptr, length, position);\n          return { ptr: ptr, allocated: true };\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      },\n      createPreloadedFile: (\n        parent,\n        name,\n        url,\n        canRead,\n        canWrite,\n        onload,\n        onerror,\n        dontCreateFile,\n        canOwn,\n        preFinish,\n      ) => {\n        var fullname = name\n          ? PATH_FS.resolve(PATH.join2(parent, name))\n          : parent;\n        var dep = getUniqueRunDependency('cp ' + fullname);\n        function processData(byteArray) {\n          function finish(byteArray) {\n            if (preFinish) preFinish();\n            if (!dontCreateFile) {\n              FS.createDataFile(\n                parent,\n                name,\n                byteArray,\n                canRead,\n                canWrite,\n                canOwn,\n              );\n            }\n            if (onload) onload();\n            removeRunDependency(dep);\n          }\n          if (\n            Browser.handledByPreloadPlugin(byteArray, fullname, finish, () => {\n              if (onerror) onerror();\n              removeRunDependency(dep);\n            })\n          ) {\n            return;\n          }\n          finish(byteArray);\n        }\n        addRunDependency(dep);\n        if (typeof url == 'string') {\n          asyncLoad(url, (byteArray) => processData(byteArray), onerror);\n        } else {\n          processData(url);\n        }\n      },\n      indexedDB: () => {\n        return (\n          window.indexedDB ||\n          window.mozIndexedDB ||\n          window.webkitIndexedDB ||\n          window.msIndexedDB\n        );\n      },\n      DB_NAME: () => {\n        return 'EM_FS_' + window.location.pathname;\n      },\n      DB_VERSION: 20,\n      DB_STORE_NAME: 'FILE_DATA',\n      saveFilesToDB: (paths, onload, onerror) => {\n        onload = onload || (() => {});\n        onerror = onerror || (() => {});\n        var indexedDB = FS.indexedDB();\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n        openRequest.onupgradeneeded = () => {\n          out('creating db');\n          var db = openRequest.result;\n          db.createObjectStore(FS.DB_STORE_NAME);\n        };\n        openRequest.onsuccess = () => {\n          var db = openRequest.result;\n          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0,\n            fail = 0,\n            total = paths.length;\n          function finish() {\n            if (fail == 0) onload();\n            else onerror();\n          }\n          paths.forEach((path) => {\n            var putRequest = files.put(\n              FS.analyzePath(path).object.contents,\n              path,\n            );\n            putRequest.onsuccess = () => {\n              ok++;\n              if (ok + fail == total) finish();\n            };\n            putRequest.onerror = () => {\n              fail++;\n              if (ok + fail == total) finish();\n            };\n          });\n          transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n      },\n      loadFilesFromDB: (paths, onload, onerror) => {\n        onload = onload || (() => {});\n        onerror = onerror || (() => {});\n        var indexedDB = FS.indexedDB();\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n        openRequest.onupgradeneeded = onerror;\n        openRequest.onsuccess = () => {\n          var db = openRequest.result;\n          try {\n            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');\n          } catch (e) {\n            onerror(e);\n            return;\n          }\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0,\n            fail = 0,\n            total = paths.length;\n          function finish() {\n            if (fail == 0) onload();\n            else onerror();\n          }\n          paths.forEach((path) => {\n            var getRequest = files.get(path);\n            getRequest.onsuccess = () => {\n              if (FS.analyzePath(path).exists) {\n                FS.unlink(path);\n              }\n              FS.createDataFile(\n                PATH.dirname(path),\n                PATH.basename(path),\n                getRequest.result,\n                true,\n                true,\n                true,\n              );\n              ok++;\n              if (ok + fail == total) finish();\n            };\n            getRequest.onerror = () => {\n              fail++;\n              if (ok + fail == total) finish();\n            };\n          });\n          transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n      },\n    };\n    var SYSCALLS = {\n      DEFAULT_POLLMASK: 5,\n      calculateAt: function (dirfd, path, allowEmpty) {\n        if (PATH.isAbs(path)) {\n          return path;\n        }\n\n        var dir;\n        if (dirfd === -100) {\n          dir = FS.cwd();\n        } else {\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\n          dir = dirstream.path;\n        }\n        if (path.length == 0) {\n          if (!allowEmpty) {\n            throw new FS.ErrnoError(44);\n          }\n          return dir;\n        }\n        return PATH.join2(dir, path);\n      },\n      doStat: function (func, path, buf) {\n        try {\n          var stat = func(path);\n        } catch (e) {\n          if (\n            e &&\n            e.node &&\n            PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))\n          ) {\n            return -54;\n          }\n          throw e;\n        }\n        HEAP32[buf >> 2] = stat.dev;\n        HEAP32[(buf + 8) >> 2] = stat.ino;\n        HEAP32[(buf + 12) >> 2] = stat.mode;\n        HEAPU32[(buf + 16) >> 2] = stat.nlink;\n        HEAP32[(buf + 20) >> 2] = stat.uid;\n        HEAP32[(buf + 24) >> 2] = stat.gid;\n        HEAP32[(buf + 28) >> 2] = stat.rdev;\n        (tempI64 = [\n          stat.size >>> 0,\n          ((tempDouble = stat.size),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 40) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 44) >> 2] = tempI64[1]);\n        HEAP32[(buf + 48) >> 2] = 4096;\n        HEAP32[(buf + 52) >> 2] = stat.blocks;\n        var atime = stat.atime.getTime();\n        var mtime = stat.mtime.getTime();\n        var ctime = stat.ctime.getTime();\n        (tempI64 = [\n          Math.floor(atime / 1000) >>> 0,\n          ((tempDouble = Math.floor(atime / 1000)),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 56) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 60) >> 2] = tempI64[1]);\n        HEAPU32[(buf + 64) >> 2] = (atime % 1000) * 1000;\n        (tempI64 = [\n          Math.floor(mtime / 1000) >>> 0,\n          ((tempDouble = Math.floor(mtime / 1000)),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 72) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 76) >> 2] = tempI64[1]);\n        HEAPU32[(buf + 80) >> 2] = (mtime % 1000) * 1000;\n        (tempI64 = [\n          Math.floor(ctime / 1000) >>> 0,\n          ((tempDouble = Math.floor(ctime / 1000)),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 88) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 92) >> 2] = tempI64[1]);\n        HEAPU32[(buf + 96) >> 2] = (ctime % 1000) * 1000;\n        (tempI64 = [\n          stat.ino >>> 0,\n          ((tempDouble = stat.ino),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 104) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 108) >> 2] = tempI64[1]);\n        return 0;\n      },\n      doMsync: function (addr, stream, len, flags, offset) {\n        if (!FS.isFile(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (flags & 2) {\n          return 0;\n        }\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n      varargs: undefined,\n      get: function () {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[(SYSCALLS.varargs - 4) >> 2];\n        return ret;\n      },\n      getStr: function (ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n      getStreamFromFD: function (fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) throw new FS.ErrnoError(8);\n        return stream;\n      },\n    };\n    function ___syscall_chmod(path, mode) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.chmod(path, mode);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_faccessat(dirfd, path, amode, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (amode & ~7) {\n          return -28;\n        }\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node) {\n          return -44;\n        }\n        var perms = '';\n        if (amode & 4) perms += 'r';\n        if (amode & 2) perms += 'w';\n        if (amode & 1) perms += 'x';\n        if (perms && FS.nodePermissions(node, perms)) {\n          return -2;\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fchmod(fd, mode) {\n      try {\n        FS.fchmod(fd, mode);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fchown32(fd, owner, group) {\n      try {\n        FS.fchown(fd, owner, group);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function setErrNo(value) {\n      HEAP32[___errno_location() >> 2] = value;\n      return value;\n    }\n\n    function ___syscall_fcntl64(fd, cmd, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        switch (cmd) {\n          case 0: {\n            var arg = SYSCALLS.get();\n            if (arg < 0) {\n              return -28;\n            }\n            var newStream;\n            newStream = FS.createStream(stream, arg);\n            return newStream.fd;\n          }\n          case 1:\n          case 2:\n            return 0;\n          case 3:\n            return stream.flags;\n          case 4: {\n            var arg = SYSCALLS.get();\n            stream.flags |= arg;\n            return 0;\n          }\n          case 5: {\n            var arg = SYSCALLS.get();\n            var offset = 0;\n\n            HEAP16[(arg + offset) >> 1] = 2;\n            return 0;\n          }\n          case 6:\n          case 7:\n            return 0;\n          case 16:\n          case 8:\n            return -28;\n          case 9:\n            setErrNo(28);\n            return -1;\n          default: {\n            return -28;\n          }\n        }\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fstat64(fd, buf) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        return SYSCALLS.doStat(FS.stat, stream.path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    var MAX_INT53 = 9007199254740992;\n\n    var MIN_INT53 = -9007199254740992;\n    function bigintToI53Checked(num) {\n      return num < MIN_INT53 || num > MAX_INT53 ? NaN : Number(num);\n    }\n\n    function ___syscall_ftruncate64(fd, length) {\n      try {\n        length = bigintToI53Checked(length);\n        if (isNaN(length)) return -61;\n        FS.ftruncate(fd, length);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_getcwd(buf, size) {\n      try {\n        if (size === 0) return -28;\n        var cwd = FS.cwd();\n        var cwdLengthInBytes = lengthBytesUTF8(cwd) + 1;\n        if (size < cwdLengthInBytes) return -68;\n        stringToUTF8(cwd, buf, size);\n        return cwdLengthInBytes;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_ioctl(fd, op, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        switch (op) {\n          case 21509:\n          case 21505: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21510:\n          case 21511:\n          case 21512:\n          case 21506:\n          case 21507:\n          case 21508: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21519: {\n            if (!stream.tty) return -59;\n            var argp = SYSCALLS.get();\n            HEAP32[argp >> 2] = 0;\n            return 0;\n          }\n          case 21520: {\n            if (!stream.tty) return -59;\n            return -28;\n          }\n          case 21531: {\n            var argp = SYSCALLS.get();\n            return FS.ioctl(stream, op, argp);\n          }\n          case 21523: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21524: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          default:\n            return -28;\n        }\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_lstat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.lstat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_mkdirat(dirfd, path, mode) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n\n        path = PATH.normalize(path);\n        if (path[path.length - 1] === '/')\n          path = path.substr(0, path.length - 1);\n        FS.mkdir(path, mode, 0);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_newfstatat(dirfd, path, buf, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        var nofollow = flags & 256;\n        var allowEmpty = flags & 4096;\n        flags = flags & ~6400;\n        path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\n        return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_openat(dirfd, path, flags, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        var mode = varargs ? SYSCALLS.get() : 0;\n        return FS.open(path, flags, mode).fd;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_readlinkat(dirfd, path, buf, bufsize) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (bufsize <= 0) return -28;\n        var ret = FS.readlink(path);\n\n        var len = Math.min(bufsize, lengthBytesUTF8(ret));\n        var endChar = HEAP8[buf + len];\n        stringToUTF8(ret, buf, bufsize + 1);\n\n        HEAP8[buf + len] = endChar;\n        return len;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_rmdir(path) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.rmdir(path);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_stat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.stat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_unlinkat(dirfd, path, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (flags === 0) {\n          FS.unlink(path);\n        } else if (flags === 512) {\n          FS.rmdir(path);\n        } else {\n          abort('Invalid flags passed to unlinkat');\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function readI53FromI64(ptr) {\n      return HEAPU32[ptr >> 2] + HEAP32[(ptr + 4) >> 2] * 4294967296;\n    }\n\n    function ___syscall_utimensat(dirfd, path, times, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path, true);\n        if (!times) {\n          var atime = Date.now();\n          var mtime = atime;\n        } else {\n          var seconds = readI53FromI64(times);\n          var nanoseconds = HEAP32[(times + 8) >> 2];\n          atime = seconds * 1000 + nanoseconds / (1000 * 1000);\n          times += 16;\n          seconds = readI53FromI64(times);\n          nanoseconds = HEAP32[(times + 8) >> 2];\n          mtime = seconds * 1000 + nanoseconds / (1000 * 1000);\n        }\n        FS.utime(path, atime, mtime);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    var nowIsMonotonic = true;\n    function __emscripten_get_now_is_monotonic() {\n      return nowIsMonotonic;\n    }\n\n    function __isLeapYear(year) {\n      return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n    }\n\n    var __MONTH_DAYS_LEAP_CUMULATIVE = [\n      0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335,\n    ];\n\n    var __MONTH_DAYS_REGULAR_CUMULATIVE = [\n      0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334,\n    ];\n    function __yday_from_date(date) {\n      var isLeapYear = __isLeapYear(date.getFullYear());\n      var monthDaysCumulative = isLeapYear\n        ? __MONTH_DAYS_LEAP_CUMULATIVE\n        : __MONTH_DAYS_REGULAR_CUMULATIVE;\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1;\n\n      return yday;\n    }\n    function __localtime_js(time, tmPtr) {\n      var date = new Date(readI53FromI64(time) * 1000);\n      HEAP32[tmPtr >> 2] = date.getSeconds();\n      HEAP32[(tmPtr + 4) >> 2] = date.getMinutes();\n      HEAP32[(tmPtr + 8) >> 2] = date.getHours();\n      HEAP32[(tmPtr + 12) >> 2] = date.getDate();\n      HEAP32[(tmPtr + 16) >> 2] = date.getMonth();\n      HEAP32[(tmPtr + 20) >> 2] = date.getFullYear() - 1900;\n      HEAP32[(tmPtr + 24) >> 2] = date.getDay();\n\n      var yday = __yday_from_date(date) | 0;\n      HEAP32[(tmPtr + 28) >> 2] = yday;\n      HEAP32[(tmPtr + 36) >> 2] = -(date.getTimezoneOffset() * 60);\n\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dst =\n        (summerOffset != winterOffset &&\n          date.getTimezoneOffset() == Math.min(winterOffset, summerOffset)) | 0;\n      HEAP32[(tmPtr + 32) >> 2] = dst;\n    }\n\n    function __mmap_js(len, prot, flags, fd, off, allocated, addr) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var res = FS.mmap(stream, len, off, prot, flags);\n        var ptr = res.ptr;\n        HEAP32[allocated >> 2] = res.allocated;\n        HEAPU32[addr >> 2] = ptr;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function __munmap_js(addr, len, prot, flags, fd, offset) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        if (prot & 2) {\n          SYSCALLS.doMsync(addr, stream, len, flags, offset);\n        }\n        FS.munmap(stream);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function allocateUTF8(str) {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = _malloc(size);\n      if (ret) stringToUTF8Array(str, HEAP8, ret, size);\n      return ret;\n    }\n    function __tzset_js(timezone, daylight, tzname) {\n      var currentYear = new Date().getFullYear();\n      var winter = new Date(currentYear, 0, 1);\n      var summer = new Date(currentYear, 6, 1);\n      var winterOffset = winter.getTimezoneOffset();\n      var summerOffset = summer.getTimezoneOffset();\n\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\n\n      HEAPU32[timezone >> 2] = stdTimezoneOffset * 60;\n\n      HEAP32[daylight >> 2] = Number(winterOffset != summerOffset);\n\n      function extractZone(date) {\n        var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\n        return match ? match[1] : 'GMT';\n      }\n      var winterName = extractZone(winter);\n      var summerName = extractZone(summer);\n      var winterNamePtr = allocateUTF8(winterName);\n      var summerNamePtr = allocateUTF8(summerName);\n      if (summerOffset < winterOffset) {\n        HEAPU32[tzname >> 2] = winterNamePtr;\n        HEAPU32[(tzname + 4) >> 2] = summerNamePtr;\n      } else {\n        HEAPU32[tzname >> 2] = summerNamePtr;\n        HEAPU32[(tzname + 4) >> 2] = winterNamePtr;\n      }\n    }\n\n    function _emscripten_date_now() {\n      return Date.now();\n    }\n\n    var _emscripten_get_now;\n    _emscripten_get_now = () => performance.now();\n    function getHeapMax() {\n      return 2147483648;\n    }\n\n    function emscripten_realloc_buffer(size) {\n      var b = wasmMemory.buffer;\n      try {\n        wasmMemory.grow((size - b.byteLength + 65535) >>> 16);\n        updateMemoryViews();\n        return 1;\n      } catch (e) {}\n    }\n    function _emscripten_resize_heap(requestedSize) {\n      var oldSize = HEAPU8.length;\n      requestedSize = requestedSize >>> 0;\n\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n\n      let alignUp = (x, multiple) =>\n        x + ((multiple - (x % multiple)) % multiple);\n\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n\n        overGrownHeapSize = Math.min(\n          overGrownHeapSize,\n          requestedSize + 100663296,\n        );\n\n        var newSize = Math.min(\n          maxHeapSize,\n          alignUp(Math.max(requestedSize, overGrownHeapSize), 65536),\n        );\n\n        var replacement = emscripten_realloc_buffer(newSize);\n        if (replacement) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    var ENV = {};\n\n    function getExecutableName() {\n      return thisProgram || './this.program';\n    }\n    function getEnvStrings() {\n      if (!getEnvStrings.strings) {\n        var lang =\n          (\n            (typeof navigator == 'object' &&\n              navigator.languages &&\n              navigator.languages[0]) ||\n            'C'\n          ).replace('-', '_') + '.UTF-8';\n        var env = {\n          USER: 'web_user',\n          LOGNAME: 'web_user',\n          PATH: '/',\n          PWD: '/',\n          HOME: '/home/web_user',\n          LANG: lang,\n          _: getExecutableName(),\n        };\n\n        for (var x in ENV) {\n          if (ENV[x] === undefined) delete env[x];\n          else env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(x + '=' + env[x]);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    }\n\n    function writeAsciiToMemory(str, buffer, dontAddNull) {\n      for (var i = 0; i < str.length; ++i) {\n        HEAP8[buffer++ >> 0] = str.charCodeAt(i);\n      }\n\n      if (!dontAddNull) HEAP8[buffer >> 0] = 0;\n    }\n\n    function _environ_get(__environ, environ_buf) {\n      var bufSize = 0;\n      getEnvStrings().forEach(function (string, i) {\n        var ptr = environ_buf + bufSize;\n        HEAPU32[(__environ + i * 4) >> 2] = ptr;\n        writeAsciiToMemory(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    }\n\n    function _environ_sizes_get(penviron_count, penviron_buf_size) {\n      var strings = getEnvStrings();\n      HEAPU32[penviron_count >> 2] = strings.length;\n      var bufSize = 0;\n      strings.forEach(function (string) {\n        bufSize += string.length + 1;\n      });\n      HEAPU32[penviron_buf_size >> 2] = bufSize;\n      return 0;\n    }\n\n    function _fd_close(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.close(stream);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_fdstat_get(fd, pbuf) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n\n        var type = stream.tty\n          ? 2\n          : FS.isDir(stream.mode)\n            ? 3\n            : FS.isLink(stream.mode)\n              ? 7\n              : 4;\n        HEAP8[pbuf >> 0] = type;\n\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function doReadv(stream, iov, iovcnt, offset) {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.read(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) break;\n        if (typeof offset !== 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    }\n\n    function _fd_read(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doReadv(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_seek(fd, offset, whence, newOffset) {\n      try {\n        offset = bigintToI53Checked(offset);\n        if (isNaN(offset)) return 61;\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.llseek(stream, offset, whence);\n        (tempI64 = [\n          stream.position >>> 0,\n          ((tempDouble = stream.position),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[newOffset >> 2] = tempI64[0]),\n          (HEAP32[(newOffset + 4) >> 2] = tempI64[1]);\n        if (stream.getdents && offset === 0 && whence === 0)\n          stream.getdents = null;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_sync(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        if (stream.stream_ops && stream.stream_ops.fsync) {\n          return stream.stream_ops.fsync(stream);\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function doWritev(stream, iov, iovcnt, offset) {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.write(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (typeof offset !== 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    }\n\n    function _fd_write(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doWritev(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    var FSNode = function (parent, name, mode, rdev) {\n      if (!parent) {\n        parent = this;\n      }\n      this.parent = parent;\n      this.mount = parent.mount;\n      this.mounted = null;\n      this.id = FS.nextInode++;\n      this.name = name;\n      this.mode = mode;\n      this.node_ops = {};\n      this.stream_ops = {};\n      this.rdev = rdev;\n    };\n    var readMode = 292 | 73;\n    var writeMode = 146;\n    Object.defineProperties(FSNode.prototype, {\n      read: {\n        get: function () {\n          return (this.mode & readMode) === readMode;\n        },\n        set: function (val) {\n          val ? (this.mode |= readMode) : (this.mode &= ~readMode);\n        },\n      },\n      write: {\n        get: function () {\n          return (this.mode & writeMode) === writeMode;\n        },\n        set: function (val) {\n          val ? (this.mode |= writeMode) : (this.mode &= ~writeMode);\n        },\n      },\n      isFolder: {\n        get: function () {\n          return FS.isDir(this.mode);\n        },\n      },\n      isDevice: {\n        get: function () {\n          return FS.isChrdev(this.mode);\n        },\n      },\n    });\n    FS.FSNode = FSNode;\n    FS.staticInit();\n    var ASSERTIONS = false;\n\n    var asmLibraryArg = {\n      __syscall_chmod: ___syscall_chmod,\n      __syscall_faccessat: ___syscall_faccessat,\n      __syscall_fchmod: ___syscall_fchmod,\n      __syscall_fchown32: ___syscall_fchown32,\n      __syscall_fcntl64: ___syscall_fcntl64,\n      __syscall_fstat64: ___syscall_fstat64,\n      __syscall_ftruncate64: ___syscall_ftruncate64,\n      __syscall_getcwd: ___syscall_getcwd,\n      __syscall_ioctl: ___syscall_ioctl,\n      __syscall_lstat64: ___syscall_lstat64,\n      __syscall_mkdirat: ___syscall_mkdirat,\n      __syscall_newfstatat: ___syscall_newfstatat,\n      __syscall_openat: ___syscall_openat,\n      __syscall_readlinkat: ___syscall_readlinkat,\n      __syscall_rmdir: ___syscall_rmdir,\n      __syscall_stat64: ___syscall_stat64,\n      __syscall_unlinkat: ___syscall_unlinkat,\n      __syscall_utimensat: ___syscall_utimensat,\n      _emscripten_get_now_is_monotonic: __emscripten_get_now_is_monotonic,\n      _localtime_js: __localtime_js,\n      _mmap_js: __mmap_js,\n      _munmap_js: __munmap_js,\n      _tzset_js: __tzset_js,\n      emscripten_date_now: _emscripten_date_now,\n      emscripten_get_now: _emscripten_get_now,\n      emscripten_resize_heap: _emscripten_resize_heap,\n      environ_get: _environ_get,\n      environ_sizes_get: _environ_sizes_get,\n      fd_close: _fd_close,\n      fd_fdstat_get: _fd_fdstat_get,\n      fd_read: _fd_read,\n      fd_seek: _fd_seek,\n      fd_sync: _fd_sync,\n      fd_write: _fd_write,\n      memory: wasmMemory,\n    };\n    var asm = createWasm();\n\n    var ___wasm_call_ctors = (Module['___wasm_call_ctors'] = function () {\n      return (___wasm_call_ctors = Module['___wasm_call_ctors'] =\n        Module['asm']['__wasm_call_ctors']).apply(null, arguments);\n    });\n\n    var _sqlite3_status64 = (Module['_sqlite3_status64'] = function () {\n      return (_sqlite3_status64 = Module['_sqlite3_status64'] =\n        Module['asm']['sqlite3_status64']).apply(null, arguments);\n    });\n\n    var _sqlite3_status = (Module['_sqlite3_status'] = function () {\n      return (_sqlite3_status = Module['_sqlite3_status'] =\n        Module['asm']['sqlite3_status']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_status = (Module['_sqlite3_db_status'] = function () {\n      return (_sqlite3_db_status = Module['_sqlite3_db_status'] =\n        Module['asm']['sqlite3_db_status']).apply(null, arguments);\n    });\n\n    var _sqlite3_msize = (Module['_sqlite3_msize'] = function () {\n      return (_sqlite3_msize = Module['_sqlite3_msize'] =\n        Module['asm']['sqlite3_msize']).apply(null, arguments);\n    });\n\n    var _sqlite3_vfs_find = (Module['_sqlite3_vfs_find'] = function () {\n      return (_sqlite3_vfs_find = Module['_sqlite3_vfs_find'] =\n        Module['asm']['sqlite3_vfs_find']).apply(null, arguments);\n    });\n\n    var _sqlite3_initialize = (Module['_sqlite3_initialize'] = function () {\n      return (_sqlite3_initialize = Module['_sqlite3_initialize'] =\n        Module['asm']['sqlite3_initialize']).apply(null, arguments);\n    });\n\n    var _sqlite3_malloc = (Module['_sqlite3_malloc'] = function () {\n      return (_sqlite3_malloc = Module['_sqlite3_malloc'] =\n        Module['asm']['sqlite3_malloc']).apply(null, arguments);\n    });\n\n    var _sqlite3_free = (Module['_sqlite3_free'] = function () {\n      return (_sqlite3_free = Module['_sqlite3_free'] =\n        Module['asm']['sqlite3_free']).apply(null, arguments);\n    });\n\n    var _sqlite3_vfs_register = (Module['_sqlite3_vfs_register'] = function () {\n      return (_sqlite3_vfs_register = Module['_sqlite3_vfs_register'] =\n        Module['asm']['sqlite3_vfs_register']).apply(null, arguments);\n    });\n\n    var _sqlite3_vfs_unregister = (Module['_sqlite3_vfs_unregister'] =\n      function () {\n        return (_sqlite3_vfs_unregister = Module['_sqlite3_vfs_unregister'] =\n          Module['asm']['sqlite3_vfs_unregister']).apply(null, arguments);\n      });\n\n    var _sqlite3_malloc64 = (Module['_sqlite3_malloc64'] = function () {\n      return (_sqlite3_malloc64 = Module['_sqlite3_malloc64'] =\n        Module['asm']['sqlite3_malloc64']).apply(null, arguments);\n    });\n\n    var _sqlite3_realloc = (Module['_sqlite3_realloc'] = function () {\n      return (_sqlite3_realloc = Module['_sqlite3_realloc'] =\n        Module['asm']['sqlite3_realloc']).apply(null, arguments);\n    });\n\n    var _sqlite3_realloc64 = (Module['_sqlite3_realloc64'] = function () {\n      return (_sqlite3_realloc64 = Module['_sqlite3_realloc64'] =\n        Module['asm']['sqlite3_realloc64']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_text = (Module['_sqlite3_value_text'] = function () {\n      return (_sqlite3_value_text = Module['_sqlite3_value_text'] =\n        Module['asm']['sqlite3_value_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_randomness = (Module['_sqlite3_randomness'] = function () {\n      return (_sqlite3_randomness = Module['_sqlite3_randomness'] =\n        Module['asm']['sqlite3_randomness']).apply(null, arguments);\n    });\n\n    var _sqlite3_stricmp = (Module['_sqlite3_stricmp'] = function () {\n      return (_sqlite3_stricmp = Module['_sqlite3_stricmp'] =\n        Module['asm']['sqlite3_stricmp']).apply(null, arguments);\n    });\n\n    var _sqlite3_strnicmp = (Module['_sqlite3_strnicmp'] = function () {\n      return (_sqlite3_strnicmp = Module['_sqlite3_strnicmp'] =\n        Module['asm']['sqlite3_strnicmp']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_parameter = (Module['_sqlite3_uri_parameter'] =\n      function () {\n        return (_sqlite3_uri_parameter = Module['_sqlite3_uri_parameter'] =\n          Module['asm']['sqlite3_uri_parameter']).apply(null, arguments);\n      });\n\n    var ___errno_location = (Module['___errno_location'] = function () {\n      return (___errno_location = Module['___errno_location'] =\n        Module['asm']['__errno_location']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_boolean = (Module['_sqlite3_uri_boolean'] = function () {\n      return (_sqlite3_uri_boolean = Module['_sqlite3_uri_boolean'] =\n        Module['asm']['sqlite3_uri_boolean']).apply(null, arguments);\n    });\n\n    var _sqlite3_serialize = (Module['_sqlite3_serialize'] = function () {\n      return (_sqlite3_serialize = Module['_sqlite3_serialize'] =\n        Module['asm']['sqlite3_serialize']).apply(null, arguments);\n    });\n\n    var _sqlite3_prepare_v2 = (Module['_sqlite3_prepare_v2'] = function () {\n      return (_sqlite3_prepare_v2 = Module['_sqlite3_prepare_v2'] =\n        Module['asm']['sqlite3_prepare_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_step = (Module['_sqlite3_step'] = function () {\n      return (_sqlite3_step = Module['_sqlite3_step'] =\n        Module['asm']['sqlite3_step']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_int64 = (Module['_sqlite3_column_int64'] = function () {\n      return (_sqlite3_column_int64 = Module['_sqlite3_column_int64'] =\n        Module['asm']['sqlite3_column_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_reset = (Module['_sqlite3_reset'] = function () {\n      return (_sqlite3_reset = Module['_sqlite3_reset'] =\n        Module['asm']['sqlite3_reset']).apply(null, arguments);\n    });\n\n    var _sqlite3_exec = (Module['_sqlite3_exec'] = function () {\n      return (_sqlite3_exec = Module['_sqlite3_exec'] =\n        Module['asm']['sqlite3_exec']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_int = (Module['_sqlite3_column_int'] = function () {\n      return (_sqlite3_column_int = Module['_sqlite3_column_int'] =\n        Module['asm']['sqlite3_column_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_finalize = (Module['_sqlite3_finalize'] = function () {\n      return (_sqlite3_finalize = Module['_sqlite3_finalize'] =\n        Module['asm']['sqlite3_finalize']).apply(null, arguments);\n    });\n\n    var _sqlite3_file_control = (Module['_sqlite3_file_control'] = function () {\n      return (_sqlite3_file_control = Module['_sqlite3_file_control'] =\n        Module['asm']['sqlite3_file_control']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_name = (Module['_sqlite3_column_name'] = function () {\n      return (_sqlite3_column_name = Module['_sqlite3_column_name'] =\n        Module['asm']['sqlite3_column_name']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_text = (Module['_sqlite3_column_text'] = function () {\n      return (_sqlite3_column_text = Module['_sqlite3_column_text'] =\n        Module['asm']['sqlite3_column_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_type = (Module['_sqlite3_column_type'] = function () {\n      return (_sqlite3_column_type = Module['_sqlite3_column_type'] =\n        Module['asm']['sqlite3_column_type']).apply(null, arguments);\n    });\n\n    var _sqlite3_errmsg = (Module['_sqlite3_errmsg'] = function () {\n      return (_sqlite3_errmsg = Module['_sqlite3_errmsg'] =\n        Module['asm']['sqlite3_errmsg']).apply(null, arguments);\n    });\n\n    var _sqlite3_deserialize = (Module['_sqlite3_deserialize'] = function () {\n      return (_sqlite3_deserialize = Module['_sqlite3_deserialize'] =\n        Module['asm']['sqlite3_deserialize']).apply(null, arguments);\n    });\n\n    var _sqlite3_clear_bindings = (Module['_sqlite3_clear_bindings'] =\n      function () {\n        return (_sqlite3_clear_bindings = Module['_sqlite3_clear_bindings'] =\n          Module['asm']['sqlite3_clear_bindings']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_blob = (Module['_sqlite3_value_blob'] = function () {\n      return (_sqlite3_value_blob = Module['_sqlite3_value_blob'] =\n        Module['asm']['sqlite3_value_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_bytes = (Module['_sqlite3_value_bytes'] = function () {\n      return (_sqlite3_value_bytes = Module['_sqlite3_value_bytes'] =\n        Module['asm']['sqlite3_value_bytes']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_double = (Module['_sqlite3_value_double'] = function () {\n      return (_sqlite3_value_double = Module['_sqlite3_value_double'] =\n        Module['asm']['sqlite3_value_double']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_int = (Module['_sqlite3_value_int'] = function () {\n      return (_sqlite3_value_int = Module['_sqlite3_value_int'] =\n        Module['asm']['sqlite3_value_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_int64 = (Module['_sqlite3_value_int64'] = function () {\n      return (_sqlite3_value_int64 = Module['_sqlite3_value_int64'] =\n        Module['asm']['sqlite3_value_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_subtype = (Module['_sqlite3_value_subtype'] =\n      function () {\n        return (_sqlite3_value_subtype = Module['_sqlite3_value_subtype'] =\n          Module['asm']['sqlite3_value_subtype']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_pointer = (Module['_sqlite3_value_pointer'] =\n      function () {\n        return (_sqlite3_value_pointer = Module['_sqlite3_value_pointer'] =\n          Module['asm']['sqlite3_value_pointer']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_type = (Module['_sqlite3_value_type'] = function () {\n      return (_sqlite3_value_type = Module['_sqlite3_value_type'] =\n        Module['asm']['sqlite3_value_type']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_nochange = (Module['_sqlite3_value_nochange'] =\n      function () {\n        return (_sqlite3_value_nochange = Module['_sqlite3_value_nochange'] =\n          Module['asm']['sqlite3_value_nochange']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_frombind = (Module['_sqlite3_value_frombind'] =\n      function () {\n        return (_sqlite3_value_frombind = Module['_sqlite3_value_frombind'] =\n          Module['asm']['sqlite3_value_frombind']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_dup = (Module['_sqlite3_value_dup'] = function () {\n      return (_sqlite3_value_dup = Module['_sqlite3_value_dup'] =\n        Module['asm']['sqlite3_value_dup']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_free = (Module['_sqlite3_value_free'] = function () {\n      return (_sqlite3_value_free = Module['_sqlite3_value_free'] =\n        Module['asm']['sqlite3_value_free']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_blob = (Module['_sqlite3_result_blob'] = function () {\n      return (_sqlite3_result_blob = Module['_sqlite3_result_blob'] =\n        Module['asm']['sqlite3_result_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_error_toobig = (Module['_sqlite3_result_error_toobig'] =\n      function () {\n        return (_sqlite3_result_error_toobig = Module[\n          '_sqlite3_result_error_toobig'\n        ] =\n          Module['asm']['sqlite3_result_error_toobig']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_error_nomem = (Module['_sqlite3_result_error_nomem'] =\n      function () {\n        return (_sqlite3_result_error_nomem = Module[\n          '_sqlite3_result_error_nomem'\n        ] =\n          Module['asm']['sqlite3_result_error_nomem']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_double = (Module['_sqlite3_result_double'] =\n      function () {\n        return (_sqlite3_result_double = Module['_sqlite3_result_double'] =\n          Module['asm']['sqlite3_result_double']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_error = (Module['_sqlite3_result_error'] = function () {\n      return (_sqlite3_result_error = Module['_sqlite3_result_error'] =\n        Module['asm']['sqlite3_result_error']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_int = (Module['_sqlite3_result_int'] = function () {\n      return (_sqlite3_result_int = Module['_sqlite3_result_int'] =\n        Module['asm']['sqlite3_result_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_int64 = (Module['_sqlite3_result_int64'] = function () {\n      return (_sqlite3_result_int64 = Module['_sqlite3_result_int64'] =\n        Module['asm']['sqlite3_result_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_null = (Module['_sqlite3_result_null'] = function () {\n      return (_sqlite3_result_null = Module['_sqlite3_result_null'] =\n        Module['asm']['sqlite3_result_null']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_pointer = (Module['_sqlite3_result_pointer'] =\n      function () {\n        return (_sqlite3_result_pointer = Module['_sqlite3_result_pointer'] =\n          Module['asm']['sqlite3_result_pointer']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_subtype = (Module['_sqlite3_result_subtype'] =\n      function () {\n        return (_sqlite3_result_subtype = Module['_sqlite3_result_subtype'] =\n          Module['asm']['sqlite3_result_subtype']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_text = (Module['_sqlite3_result_text'] = function () {\n      return (_sqlite3_result_text = Module['_sqlite3_result_text'] =\n        Module['asm']['sqlite3_result_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_zeroblob = (Module['_sqlite3_result_zeroblob'] =\n      function () {\n        return (_sqlite3_result_zeroblob = Module['_sqlite3_result_zeroblob'] =\n          Module['asm']['sqlite3_result_zeroblob']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_zeroblob64 = (Module['_sqlite3_result_zeroblob64'] =\n      function () {\n        return (_sqlite3_result_zeroblob64 = Module[\n          '_sqlite3_result_zeroblob64'\n        ] =\n          Module['asm']['sqlite3_result_zeroblob64']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_error_code = (Module['_sqlite3_result_error_code'] =\n      function () {\n        return (_sqlite3_result_error_code = Module[\n          '_sqlite3_result_error_code'\n        ] =\n          Module['asm']['sqlite3_result_error_code']).apply(null, arguments);\n      });\n\n    var _sqlite3_user_data = (Module['_sqlite3_user_data'] = function () {\n      return (_sqlite3_user_data = Module['_sqlite3_user_data'] =\n        Module['asm']['sqlite3_user_data']).apply(null, arguments);\n    });\n\n    var _sqlite3_context_db_handle = (Module['_sqlite3_context_db_handle'] =\n      function () {\n        return (_sqlite3_context_db_handle = Module[\n          '_sqlite3_context_db_handle'\n        ] =\n          Module['asm']['sqlite3_context_db_handle']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_nochange = (Module['_sqlite3_vtab_nochange'] =\n      function () {\n        return (_sqlite3_vtab_nochange = Module['_sqlite3_vtab_nochange'] =\n          Module['asm']['sqlite3_vtab_nochange']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_in_first = (Module['_sqlite3_vtab_in_first'] =\n      function () {\n        return (_sqlite3_vtab_in_first = Module['_sqlite3_vtab_in_first'] =\n          Module['asm']['sqlite3_vtab_in_first']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_in_next = (Module['_sqlite3_vtab_in_next'] = function () {\n      return (_sqlite3_vtab_in_next = Module['_sqlite3_vtab_in_next'] =\n        Module['asm']['sqlite3_vtab_in_next']).apply(null, arguments);\n    });\n\n    var _sqlite3_aggregate_context = (Module['_sqlite3_aggregate_context'] =\n      function () {\n        return (_sqlite3_aggregate_context = Module[\n          '_sqlite3_aggregate_context'\n        ] =\n          Module['asm']['sqlite3_aggregate_context']).apply(null, arguments);\n      });\n\n    var _sqlite3_get_auxdata = (Module['_sqlite3_get_auxdata'] = function () {\n      return (_sqlite3_get_auxdata = Module['_sqlite3_get_auxdata'] =\n        Module['asm']['sqlite3_get_auxdata']).apply(null, arguments);\n    });\n\n    var _sqlite3_set_auxdata = (Module['_sqlite3_set_auxdata'] = function () {\n      return (_sqlite3_set_auxdata = Module['_sqlite3_set_auxdata'] =\n        Module['asm']['sqlite3_set_auxdata']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_count = (Module['_sqlite3_column_count'] = function () {\n      return (_sqlite3_column_count = Module['_sqlite3_column_count'] =\n        Module['asm']['sqlite3_column_count']).apply(null, arguments);\n    });\n\n    var _sqlite3_data_count = (Module['_sqlite3_data_count'] = function () {\n      return (_sqlite3_data_count = Module['_sqlite3_data_count'] =\n        Module['asm']['sqlite3_data_count']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_blob = (Module['_sqlite3_column_blob'] = function () {\n      return (_sqlite3_column_blob = Module['_sqlite3_column_blob'] =\n        Module['asm']['sqlite3_column_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_bytes = (Module['_sqlite3_column_bytes'] = function () {\n      return (_sqlite3_column_bytes = Module['_sqlite3_column_bytes'] =\n        Module['asm']['sqlite3_column_bytes']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_double = (Module['_sqlite3_column_double'] =\n      function () {\n        return (_sqlite3_column_double = Module['_sqlite3_column_double'] =\n          Module['asm']['sqlite3_column_double']).apply(null, arguments);\n      });\n\n    var _sqlite3_column_value = (Module['_sqlite3_column_value'] = function () {\n      return (_sqlite3_column_value = Module['_sqlite3_column_value'] =\n        Module['asm']['sqlite3_column_value']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_blob = (Module['_sqlite3_bind_blob'] = function () {\n      return (_sqlite3_bind_blob = Module['_sqlite3_bind_blob'] =\n        Module['asm']['sqlite3_bind_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_double = (Module['_sqlite3_bind_double'] = function () {\n      return (_sqlite3_bind_double = Module['_sqlite3_bind_double'] =\n        Module['asm']['sqlite3_bind_double']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_int = (Module['_sqlite3_bind_int'] = function () {\n      return (_sqlite3_bind_int = Module['_sqlite3_bind_int'] =\n        Module['asm']['sqlite3_bind_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_int64 = (Module['_sqlite3_bind_int64'] = function () {\n      return (_sqlite3_bind_int64 = Module['_sqlite3_bind_int64'] =\n        Module['asm']['sqlite3_bind_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_null = (Module['_sqlite3_bind_null'] = function () {\n      return (_sqlite3_bind_null = Module['_sqlite3_bind_null'] =\n        Module['asm']['sqlite3_bind_null']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_pointer = (Module['_sqlite3_bind_pointer'] = function () {\n      return (_sqlite3_bind_pointer = Module['_sqlite3_bind_pointer'] =\n        Module['asm']['sqlite3_bind_pointer']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_text = (Module['_sqlite3_bind_text'] = function () {\n      return (_sqlite3_bind_text = Module['_sqlite3_bind_text'] =\n        Module['asm']['sqlite3_bind_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_parameter_count = (Module[\n      '_sqlite3_bind_parameter_count'\n    ] = function () {\n      return (_sqlite3_bind_parameter_count = Module[\n        '_sqlite3_bind_parameter_count'\n      ] =\n        Module['asm']['sqlite3_bind_parameter_count']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_parameter_index = (Module[\n      '_sqlite3_bind_parameter_index'\n    ] = function () {\n      return (_sqlite3_bind_parameter_index = Module[\n        '_sqlite3_bind_parameter_index'\n      ] =\n        Module['asm']['sqlite3_bind_parameter_index']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_handle = (Module['_sqlite3_db_handle'] = function () {\n      return (_sqlite3_db_handle = Module['_sqlite3_db_handle'] =\n        Module['asm']['sqlite3_db_handle']).apply(null, arguments);\n    });\n\n    var _sqlite3_stmt_readonly = (Module['_sqlite3_stmt_readonly'] =\n      function () {\n        return (_sqlite3_stmt_readonly = Module['_sqlite3_stmt_readonly'] =\n          Module['asm']['sqlite3_stmt_readonly']).apply(null, arguments);\n      });\n\n    var _sqlite3_stmt_isexplain = (Module['_sqlite3_stmt_isexplain'] =\n      function () {\n        return (_sqlite3_stmt_isexplain = Module['_sqlite3_stmt_isexplain'] =\n          Module['asm']['sqlite3_stmt_isexplain']).apply(null, arguments);\n      });\n\n    var _sqlite3_stmt_status = (Module['_sqlite3_stmt_status'] = function () {\n      return (_sqlite3_stmt_status = Module['_sqlite3_stmt_status'] =\n        Module['asm']['sqlite3_stmt_status']).apply(null, arguments);\n    });\n\n    var _sqlite3_sql = (Module['_sqlite3_sql'] = function () {\n      return (_sqlite3_sql = Module['_sqlite3_sql'] =\n        Module['asm']['sqlite3_sql']).apply(null, arguments);\n    });\n\n    var _sqlite3_expanded_sql = (Module['_sqlite3_expanded_sql'] = function () {\n      return (_sqlite3_expanded_sql = Module['_sqlite3_expanded_sql'] =\n        Module['asm']['sqlite3_expanded_sql']).apply(null, arguments);\n    });\n\n    var _sqlite3_preupdate_old = (Module['_sqlite3_preupdate_old'] =\n      function () {\n        return (_sqlite3_preupdate_old = Module['_sqlite3_preupdate_old'] =\n          Module['asm']['sqlite3_preupdate_old']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_count = (Module['_sqlite3_preupdate_count'] =\n      function () {\n        return (_sqlite3_preupdate_count = Module['_sqlite3_preupdate_count'] =\n          Module['asm']['sqlite3_preupdate_count']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_depth = (Module['_sqlite3_preupdate_depth'] =\n      function () {\n        return (_sqlite3_preupdate_depth = Module['_sqlite3_preupdate_depth'] =\n          Module['asm']['sqlite3_preupdate_depth']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_blobwrite = (Module['_sqlite3_preupdate_blobwrite'] =\n      function () {\n        return (_sqlite3_preupdate_blobwrite = Module[\n          '_sqlite3_preupdate_blobwrite'\n        ] =\n          Module['asm']['sqlite3_preupdate_blobwrite']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_new = (Module['_sqlite3_preupdate_new'] =\n      function () {\n        return (_sqlite3_preupdate_new = Module['_sqlite3_preupdate_new'] =\n          Module['asm']['sqlite3_preupdate_new']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_numeric_type = (Module['_sqlite3_value_numeric_type'] =\n      function () {\n        return (_sqlite3_value_numeric_type = Module[\n          '_sqlite3_value_numeric_type'\n        ] =\n          Module['asm']['sqlite3_value_numeric_type']).apply(null, arguments);\n      });\n\n    var _sqlite3_set_authorizer = (Module['_sqlite3_set_authorizer'] =\n      function () {\n        return (_sqlite3_set_authorizer = Module['_sqlite3_set_authorizer'] =\n          Module['asm']['sqlite3_set_authorizer']).apply(null, arguments);\n      });\n\n    var _sqlite3_strglob = (Module['_sqlite3_strglob'] = function () {\n      return (_sqlite3_strglob = Module['_sqlite3_strglob'] =\n        Module['asm']['sqlite3_strglob']).apply(null, arguments);\n    });\n\n    var _sqlite3_strlike = (Module['_sqlite3_strlike'] = function () {\n      return (_sqlite3_strlike = Module['_sqlite3_strlike'] =\n        Module['asm']['sqlite3_strlike']).apply(null, arguments);\n    });\n\n    var _sqlite3_auto_extension = (Module['_sqlite3_auto_extension'] =\n      function () {\n        return (_sqlite3_auto_extension = Module['_sqlite3_auto_extension'] =\n          Module['asm']['sqlite3_auto_extension']).apply(null, arguments);\n      });\n\n    var _sqlite3_cancel_auto_extension = (Module[\n      '_sqlite3_cancel_auto_extension'\n    ] = function () {\n      return (_sqlite3_cancel_auto_extension = Module[\n        '_sqlite3_cancel_auto_extension'\n      ] =\n        Module['asm']['sqlite3_cancel_auto_extension']).apply(null, arguments);\n    });\n\n    var _sqlite3_reset_auto_extension = (Module[\n      '_sqlite3_reset_auto_extension'\n    ] = function () {\n      return (_sqlite3_reset_auto_extension = Module[\n        '_sqlite3_reset_auto_extension'\n      ] =\n        Module['asm']['sqlite3_reset_auto_extension']).apply(null, arguments);\n    });\n\n    var _sqlite3_prepare_v3 = (Module['_sqlite3_prepare_v3'] = function () {\n      return (_sqlite3_prepare_v3 = Module['_sqlite3_prepare_v3'] =\n        Module['asm']['sqlite3_prepare_v3']).apply(null, arguments);\n    });\n\n    var _sqlite3_create_module = (Module['_sqlite3_create_module'] =\n      function () {\n        return (_sqlite3_create_module = Module['_sqlite3_create_module'] =\n          Module['asm']['sqlite3_create_module']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_module_v2 = (Module['_sqlite3_create_module_v2'] =\n      function () {\n        return (_sqlite3_create_module_v2 = Module[\n          '_sqlite3_create_module_v2'\n        ] =\n          Module['asm']['sqlite3_create_module_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3_drop_modules = (Module['_sqlite3_drop_modules'] = function () {\n      return (_sqlite3_drop_modules = Module['_sqlite3_drop_modules'] =\n        Module['asm']['sqlite3_drop_modules']).apply(null, arguments);\n    });\n\n    var _sqlite3_declare_vtab = (Module['_sqlite3_declare_vtab'] = function () {\n      return (_sqlite3_declare_vtab = Module['_sqlite3_declare_vtab'] =\n        Module['asm']['sqlite3_declare_vtab']).apply(null, arguments);\n    });\n\n    var _sqlite3_vtab_on_conflict = (Module['_sqlite3_vtab_on_conflict'] =\n      function () {\n        return (_sqlite3_vtab_on_conflict = Module[\n          '_sqlite3_vtab_on_conflict'\n        ] =\n          Module['asm']['sqlite3_vtab_on_conflict']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_collation = (Module['_sqlite3_vtab_collation'] =\n      function () {\n        return (_sqlite3_vtab_collation = Module['_sqlite3_vtab_collation'] =\n          Module['asm']['sqlite3_vtab_collation']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_in = (Module['_sqlite3_vtab_in'] = function () {\n      return (_sqlite3_vtab_in = Module['_sqlite3_vtab_in'] =\n        Module['asm']['sqlite3_vtab_in']).apply(null, arguments);\n    });\n\n    var _sqlite3_vtab_rhs_value = (Module['_sqlite3_vtab_rhs_value'] =\n      function () {\n        return (_sqlite3_vtab_rhs_value = Module['_sqlite3_vtab_rhs_value'] =\n          Module['asm']['sqlite3_vtab_rhs_value']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_distinct = (Module['_sqlite3_vtab_distinct'] =\n      function () {\n        return (_sqlite3_vtab_distinct = Module['_sqlite3_vtab_distinct'] =\n          Module['asm']['sqlite3_vtab_distinct']).apply(null, arguments);\n      });\n\n    var _sqlite3_keyword_name = (Module['_sqlite3_keyword_name'] = function () {\n      return (_sqlite3_keyword_name = Module['_sqlite3_keyword_name'] =\n        Module['asm']['sqlite3_keyword_name']).apply(null, arguments);\n    });\n\n    var _sqlite3_keyword_count = (Module['_sqlite3_keyword_count'] =\n      function () {\n        return (_sqlite3_keyword_count = Module['_sqlite3_keyword_count'] =\n          Module['asm']['sqlite3_keyword_count']).apply(null, arguments);\n      });\n\n    var _sqlite3_keyword_check = (Module['_sqlite3_keyword_check'] =\n      function () {\n        return (_sqlite3_keyword_check = Module['_sqlite3_keyword_check'] =\n          Module['asm']['sqlite3_keyword_check']).apply(null, arguments);\n      });\n\n    var _sqlite3_complete = (Module['_sqlite3_complete'] = function () {\n      return (_sqlite3_complete = Module['_sqlite3_complete'] =\n        Module['asm']['sqlite3_complete']).apply(null, arguments);\n    });\n\n    var _sqlite3_libversion = (Module['_sqlite3_libversion'] = function () {\n      return (_sqlite3_libversion = Module['_sqlite3_libversion'] =\n        Module['asm']['sqlite3_libversion']).apply(null, arguments);\n    });\n\n    var _sqlite3_libversion_number = (Module['_sqlite3_libversion_number'] =\n      function () {\n        return (_sqlite3_libversion_number = Module[\n          '_sqlite3_libversion_number'\n        ] =\n          Module['asm']['sqlite3_libversion_number']).apply(null, arguments);\n      });\n\n    var _sqlite3_shutdown = (Module['_sqlite3_shutdown'] = function () {\n      return (_sqlite3_shutdown = Module['_sqlite3_shutdown'] =\n        Module['asm']['sqlite3_shutdown']).apply(null, arguments);\n    });\n\n    var _sqlite3_last_insert_rowid = (Module['_sqlite3_last_insert_rowid'] =\n      function () {\n        return (_sqlite3_last_insert_rowid = Module[\n          '_sqlite3_last_insert_rowid'\n        ] =\n          Module['asm']['sqlite3_last_insert_rowid']).apply(null, arguments);\n      });\n\n    var _sqlite3_set_last_insert_rowid = (Module[\n      '_sqlite3_set_last_insert_rowid'\n    ] = function () {\n      return (_sqlite3_set_last_insert_rowid = Module[\n        '_sqlite3_set_last_insert_rowid'\n      ] =\n        Module['asm']['sqlite3_set_last_insert_rowid']).apply(null, arguments);\n    });\n\n    var _sqlite3_changes64 = (Module['_sqlite3_changes64'] = function () {\n      return (_sqlite3_changes64 = Module['_sqlite3_changes64'] =\n        Module['asm']['sqlite3_changes64']).apply(null, arguments);\n    });\n\n    var _sqlite3_changes = (Module['_sqlite3_changes'] = function () {\n      return (_sqlite3_changes = Module['_sqlite3_changes'] =\n        Module['asm']['sqlite3_changes']).apply(null, arguments);\n    });\n\n    var _sqlite3_total_changes64 = (Module['_sqlite3_total_changes64'] =\n      function () {\n        return (_sqlite3_total_changes64 = Module['_sqlite3_total_changes64'] =\n          Module['asm']['sqlite3_total_changes64']).apply(null, arguments);\n      });\n\n    var _sqlite3_total_changes = (Module['_sqlite3_total_changes'] =\n      function () {\n        return (_sqlite3_total_changes = Module['_sqlite3_total_changes'] =\n          Module['asm']['sqlite3_total_changes']).apply(null, arguments);\n      });\n\n    var _sqlite3_txn_state = (Module['_sqlite3_txn_state'] = function () {\n      return (_sqlite3_txn_state = Module['_sqlite3_txn_state'] =\n        Module['asm']['sqlite3_txn_state']).apply(null, arguments);\n    });\n\n    var _sqlite3_close_v2 = (Module['_sqlite3_close_v2'] = function () {\n      return (_sqlite3_close_v2 = Module['_sqlite3_close_v2'] =\n        Module['asm']['sqlite3_close_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_busy_handler = (Module['_sqlite3_busy_handler'] = function () {\n      return (_sqlite3_busy_handler = Module['_sqlite3_busy_handler'] =\n        Module['asm']['sqlite3_busy_handler']).apply(null, arguments);\n    });\n\n    var _sqlite3_progress_handler = (Module['_sqlite3_progress_handler'] =\n      function () {\n        return (_sqlite3_progress_handler = Module[\n          '_sqlite3_progress_handler'\n        ] =\n          Module['asm']['sqlite3_progress_handler']).apply(null, arguments);\n      });\n\n    var _sqlite3_busy_timeout = (Module['_sqlite3_busy_timeout'] = function () {\n      return (_sqlite3_busy_timeout = Module['_sqlite3_busy_timeout'] =\n        Module['asm']['sqlite3_busy_timeout']).apply(null, arguments);\n    });\n\n    var _sqlite3_create_function = (Module['_sqlite3_create_function'] =\n      function () {\n        return (_sqlite3_create_function = Module['_sqlite3_create_function'] =\n          Module['asm']['sqlite3_create_function']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_function_v2 = (Module['_sqlite3_create_function_v2'] =\n      function () {\n        return (_sqlite3_create_function_v2 = Module[\n          '_sqlite3_create_function_v2'\n        ] =\n          Module['asm']['sqlite3_create_function_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_window_function = (Module[\n      '_sqlite3_create_window_function'\n    ] = function () {\n      return (_sqlite3_create_window_function = Module[\n        '_sqlite3_create_window_function'\n      ] =\n        Module['asm']['sqlite3_create_window_function']).apply(null, arguments);\n    });\n\n    var _sqlite3_overload_function = (Module['_sqlite3_overload_function'] =\n      function () {\n        return (_sqlite3_overload_function = Module[\n          '_sqlite3_overload_function'\n        ] =\n          Module['asm']['sqlite3_overload_function']).apply(null, arguments);\n      });\n\n    var _sqlite3_trace_v2 = (Module['_sqlite3_trace_v2'] = function () {\n      return (_sqlite3_trace_v2 = Module['_sqlite3_trace_v2'] =\n        Module['asm']['sqlite3_trace_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_commit_hook = (Module['_sqlite3_commit_hook'] = function () {\n      return (_sqlite3_commit_hook = Module['_sqlite3_commit_hook'] =\n        Module['asm']['sqlite3_commit_hook']).apply(null, arguments);\n    });\n\n    var _sqlite3_update_hook = (Module['_sqlite3_update_hook'] = function () {\n      return (_sqlite3_update_hook = Module['_sqlite3_update_hook'] =\n        Module['asm']['sqlite3_update_hook']).apply(null, arguments);\n    });\n\n    var _sqlite3_rollback_hook = (Module['_sqlite3_rollback_hook'] =\n      function () {\n        return (_sqlite3_rollback_hook = Module['_sqlite3_rollback_hook'] =\n          Module['asm']['sqlite3_rollback_hook']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_hook = (Module['_sqlite3_preupdate_hook'] =\n      function () {\n        return (_sqlite3_preupdate_hook = Module['_sqlite3_preupdate_hook'] =\n          Module['asm']['sqlite3_preupdate_hook']).apply(null, arguments);\n      });\n\n    var _sqlite3_error_offset = (Module['_sqlite3_error_offset'] = function () {\n      return (_sqlite3_error_offset = Module['_sqlite3_error_offset'] =\n        Module['asm']['sqlite3_error_offset']).apply(null, arguments);\n    });\n\n    var _sqlite3_errcode = (Module['_sqlite3_errcode'] = function () {\n      return (_sqlite3_errcode = Module['_sqlite3_errcode'] =\n        Module['asm']['sqlite3_errcode']).apply(null, arguments);\n    });\n\n    var _sqlite3_extended_errcode = (Module['_sqlite3_extended_errcode'] =\n      function () {\n        return (_sqlite3_extended_errcode = Module[\n          '_sqlite3_extended_errcode'\n        ] =\n          Module['asm']['sqlite3_extended_errcode']).apply(null, arguments);\n      });\n\n    var _sqlite3_errstr = (Module['_sqlite3_errstr'] = function () {\n      return (_sqlite3_errstr = Module['_sqlite3_errstr'] =\n        Module['asm']['sqlite3_errstr']).apply(null, arguments);\n    });\n\n    var _sqlite3_limit = (Module['_sqlite3_limit'] = function () {\n      return (_sqlite3_limit = Module['_sqlite3_limit'] =\n        Module['asm']['sqlite3_limit']).apply(null, arguments);\n    });\n\n    var _sqlite3_open = (Module['_sqlite3_open'] = function () {\n      return (_sqlite3_open = Module['_sqlite3_open'] =\n        Module['asm']['sqlite3_open']).apply(null, arguments);\n    });\n\n    var _sqlite3_open_v2 = (Module['_sqlite3_open_v2'] = function () {\n      return (_sqlite3_open_v2 = Module['_sqlite3_open_v2'] =\n        Module['asm']['sqlite3_open_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_create_collation = (Module['_sqlite3_create_collation'] =\n      function () {\n        return (_sqlite3_create_collation = Module[\n          '_sqlite3_create_collation'\n        ] =\n          Module['asm']['sqlite3_create_collation']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_collation_v2 = (Module['_sqlite3_create_collation_v2'] =\n      function () {\n        return (_sqlite3_create_collation_v2 = Module[\n          '_sqlite3_create_collation_v2'\n        ] =\n          Module['asm']['sqlite3_create_collation_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3_collation_needed = (Module['_sqlite3_collation_needed'] =\n      function () {\n        return (_sqlite3_collation_needed = Module[\n          '_sqlite3_collation_needed'\n        ] =\n          Module['asm']['sqlite3_collation_needed']).apply(null, arguments);\n      });\n\n    var _sqlite3_get_autocommit = (Module['_sqlite3_get_autocommit'] =\n      function () {\n        return (_sqlite3_get_autocommit = Module['_sqlite3_get_autocommit'] =\n          Module['asm']['sqlite3_get_autocommit']).apply(null, arguments);\n      });\n\n    var _sqlite3_table_column_metadata = (Module[\n      '_sqlite3_table_column_metadata'\n    ] = function () {\n      return (_sqlite3_table_column_metadata = Module[\n        '_sqlite3_table_column_metadata'\n      ] =\n        Module['asm']['sqlite3_table_column_metadata']).apply(null, arguments);\n    });\n\n    var _sqlite3_extended_result_codes = (Module[\n      '_sqlite3_extended_result_codes'\n    ] = function () {\n      return (_sqlite3_extended_result_codes = Module[\n        '_sqlite3_extended_result_codes'\n      ] =\n        Module['asm']['sqlite3_extended_result_codes']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_key = (Module['_sqlite3_uri_key'] = function () {\n      return (_sqlite3_uri_key = Module['_sqlite3_uri_key'] =\n        Module['asm']['sqlite3_uri_key']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_int64 = (Module['_sqlite3_uri_int64'] = function () {\n      return (_sqlite3_uri_int64 = Module['_sqlite3_uri_int64'] =\n        Module['asm']['sqlite3_uri_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_name = (Module['_sqlite3_db_name'] = function () {\n      return (_sqlite3_db_name = Module['_sqlite3_db_name'] =\n        Module['asm']['sqlite3_db_name']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_filename = (Module['_sqlite3_db_filename'] = function () {\n      return (_sqlite3_db_filename = Module['_sqlite3_db_filename'] =\n        Module['asm']['sqlite3_db_filename']).apply(null, arguments);\n    });\n\n    var _sqlite3_compileoption_used = (Module['_sqlite3_compileoption_used'] =\n      function () {\n        return (_sqlite3_compileoption_used = Module[\n          '_sqlite3_compileoption_used'\n        ] =\n          Module['asm']['sqlite3_compileoption_used']).apply(null, arguments);\n      });\n\n    var _sqlite3_compileoption_get = (Module['_sqlite3_compileoption_get'] =\n      function () {\n        return (_sqlite3_compileoption_get = Module[\n          '_sqlite3_compileoption_get'\n        ] =\n          Module['asm']['sqlite3_compileoption_get']).apply(null, arguments);\n      });\n\n    var _sqlite3session_diff = (Module['_sqlite3session_diff'] = function () {\n      return (_sqlite3session_diff = Module['_sqlite3session_diff'] =\n        Module['asm']['sqlite3session_diff']).apply(null, arguments);\n    });\n\n    var _sqlite3session_attach = (Module['_sqlite3session_attach'] =\n      function () {\n        return (_sqlite3session_attach = Module['_sqlite3session_attach'] =\n          Module['asm']['sqlite3session_attach']).apply(null, arguments);\n      });\n\n    var _sqlite3session_create = (Module['_sqlite3session_create'] =\n      function () {\n        return (_sqlite3session_create = Module['_sqlite3session_create'] =\n          Module['asm']['sqlite3session_create']).apply(null, arguments);\n      });\n\n    var _sqlite3session_delete = (Module['_sqlite3session_delete'] =\n      function () {\n        return (_sqlite3session_delete = Module['_sqlite3session_delete'] =\n          Module['asm']['sqlite3session_delete']).apply(null, arguments);\n      });\n\n    var _sqlite3session_table_filter = (Module['_sqlite3session_table_filter'] =\n      function () {\n        return (_sqlite3session_table_filter = Module[\n          '_sqlite3session_table_filter'\n        ] =\n          Module['asm']['sqlite3session_table_filter']).apply(null, arguments);\n      });\n\n    var _sqlite3session_changeset = (Module['_sqlite3session_changeset'] =\n      function () {\n        return (_sqlite3session_changeset = Module[\n          '_sqlite3session_changeset'\n        ] =\n          Module['asm']['sqlite3session_changeset']).apply(null, arguments);\n      });\n\n    var _sqlite3session_changeset_strm = (Module[\n      '_sqlite3session_changeset_strm'\n    ] = function () {\n      return (_sqlite3session_changeset_strm = Module[\n        '_sqlite3session_changeset_strm'\n      ] =\n        Module['asm']['sqlite3session_changeset_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3session_patchset_strm = (Module[\n      '_sqlite3session_patchset_strm'\n    ] = function () {\n      return (_sqlite3session_patchset_strm = Module[\n        '_sqlite3session_patchset_strm'\n      ] =\n        Module['asm']['sqlite3session_patchset_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3session_patchset = (Module['_sqlite3session_patchset'] =\n      function () {\n        return (_sqlite3session_patchset = Module['_sqlite3session_patchset'] =\n          Module['asm']['sqlite3session_patchset']).apply(null, arguments);\n      });\n\n    var _sqlite3session_enable = (Module['_sqlite3session_enable'] =\n      function () {\n        return (_sqlite3session_enable = Module['_sqlite3session_enable'] =\n          Module['asm']['sqlite3session_enable']).apply(null, arguments);\n      });\n\n    var _sqlite3session_indirect = (Module['_sqlite3session_indirect'] =\n      function () {\n        return (_sqlite3session_indirect = Module['_sqlite3session_indirect'] =\n          Module['asm']['sqlite3session_indirect']).apply(null, arguments);\n      });\n\n    var _sqlite3session_isempty = (Module['_sqlite3session_isempty'] =\n      function () {\n        return (_sqlite3session_isempty = Module['_sqlite3session_isempty'] =\n          Module['asm']['sqlite3session_isempty']).apply(null, arguments);\n      });\n\n    var _sqlite3session_memory_used = (Module['_sqlite3session_memory_used'] =\n      function () {\n        return (_sqlite3session_memory_used = Module[\n          '_sqlite3session_memory_used'\n        ] =\n          Module['asm']['sqlite3session_memory_used']).apply(null, arguments);\n      });\n\n    var _sqlite3session_object_config = (Module[\n      '_sqlite3session_object_config'\n    ] = function () {\n      return (_sqlite3session_object_config = Module[\n        '_sqlite3session_object_config'\n      ] =\n        Module['asm']['sqlite3session_object_config']).apply(null, arguments);\n    });\n\n    var _sqlite3session_changeset_size = (Module[\n      '_sqlite3session_changeset_size'\n    ] = function () {\n      return (_sqlite3session_changeset_size = Module[\n        '_sqlite3session_changeset_size'\n      ] =\n        Module['asm']['sqlite3session_changeset_size']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_start = (Module['_sqlite3changeset_start'] =\n      function () {\n        return (_sqlite3changeset_start = Module['_sqlite3changeset_start'] =\n          Module['asm']['sqlite3changeset_start']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_start_v2 = (Module['_sqlite3changeset_start_v2'] =\n      function () {\n        return (_sqlite3changeset_start_v2 = Module[\n          '_sqlite3changeset_start_v2'\n        ] =\n          Module['asm']['sqlite3changeset_start_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_start_strm = (Module['_sqlite3changeset_start_strm'] =\n      function () {\n        return (_sqlite3changeset_start_strm = Module[\n          '_sqlite3changeset_start_strm'\n        ] =\n          Module['asm']['sqlite3changeset_start_strm']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_start_v2_strm = (Module[\n      '_sqlite3changeset_start_v2_strm'\n    ] = function () {\n      return (_sqlite3changeset_start_v2_strm = Module[\n        '_sqlite3changeset_start_v2_strm'\n      ] =\n        Module['asm']['sqlite3changeset_start_v2_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_next = (Module['_sqlite3changeset_next'] =\n      function () {\n        return (_sqlite3changeset_next = Module['_sqlite3changeset_next'] =\n          Module['asm']['sqlite3changeset_next']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_op = (Module['_sqlite3changeset_op'] = function () {\n      return (_sqlite3changeset_op = Module['_sqlite3changeset_op'] =\n        Module['asm']['sqlite3changeset_op']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_pk = (Module['_sqlite3changeset_pk'] = function () {\n      return (_sqlite3changeset_pk = Module['_sqlite3changeset_pk'] =\n        Module['asm']['sqlite3changeset_pk']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_old = (Module['_sqlite3changeset_old'] = function () {\n      return (_sqlite3changeset_old = Module['_sqlite3changeset_old'] =\n        Module['asm']['sqlite3changeset_old']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_new = (Module['_sqlite3changeset_new'] = function () {\n      return (_sqlite3changeset_new = Module['_sqlite3changeset_new'] =\n        Module['asm']['sqlite3changeset_new']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_conflict = (Module['_sqlite3changeset_conflict'] =\n      function () {\n        return (_sqlite3changeset_conflict = Module[\n          '_sqlite3changeset_conflict'\n        ] =\n          Module['asm']['sqlite3changeset_conflict']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_fk_conflicts = (Module[\n      '_sqlite3changeset_fk_conflicts'\n    ] = function () {\n      return (_sqlite3changeset_fk_conflicts = Module[\n        '_sqlite3changeset_fk_conflicts'\n      ] =\n        Module['asm']['sqlite3changeset_fk_conflicts']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_finalize = (Module['_sqlite3changeset_finalize'] =\n      function () {\n        return (_sqlite3changeset_finalize = Module[\n          '_sqlite3changeset_finalize'\n        ] =\n          Module['asm']['sqlite3changeset_finalize']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_invert = (Module['_sqlite3changeset_invert'] =\n      function () {\n        return (_sqlite3changeset_invert = Module['_sqlite3changeset_invert'] =\n          Module['asm']['sqlite3changeset_invert']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_invert_strm = (Module[\n      '_sqlite3changeset_invert_strm'\n    ] = function () {\n      return (_sqlite3changeset_invert_strm = Module[\n        '_sqlite3changeset_invert_strm'\n      ] =\n        Module['asm']['sqlite3changeset_invert_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_apply_v2 = (Module['_sqlite3changeset_apply_v2'] =\n      function () {\n        return (_sqlite3changeset_apply_v2 = Module[\n          '_sqlite3changeset_apply_v2'\n        ] =\n          Module['asm']['sqlite3changeset_apply_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_apply = (Module['_sqlite3changeset_apply'] =\n      function () {\n        return (_sqlite3changeset_apply = Module['_sqlite3changeset_apply'] =\n          Module['asm']['sqlite3changeset_apply']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_apply_v2_strm = (Module[\n      '_sqlite3changeset_apply_v2_strm'\n    ] = function () {\n      return (_sqlite3changeset_apply_v2_strm = Module[\n        '_sqlite3changeset_apply_v2_strm'\n      ] =\n        Module['asm']['sqlite3changeset_apply_v2_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_apply_strm = (Module['_sqlite3changeset_apply_strm'] =\n      function () {\n        return (_sqlite3changeset_apply_strm = Module[\n          '_sqlite3changeset_apply_strm'\n        ] =\n          Module['asm']['sqlite3changeset_apply_strm']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_new = (Module['_sqlite3changegroup_new'] =\n      function () {\n        return (_sqlite3changegroup_new = Module['_sqlite3changegroup_new'] =\n          Module['asm']['sqlite3changegroup_new']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_add = (Module['_sqlite3changegroup_add'] =\n      function () {\n        return (_sqlite3changegroup_add = Module['_sqlite3changegroup_add'] =\n          Module['asm']['sqlite3changegroup_add']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_output = (Module['_sqlite3changegroup_output'] =\n      function () {\n        return (_sqlite3changegroup_output = Module[\n          '_sqlite3changegroup_output'\n        ] =\n          Module['asm']['sqlite3changegroup_output']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_add_strm = (Module['_sqlite3changegroup_add_strm'] =\n      function () {\n        return (_sqlite3changegroup_add_strm = Module[\n          '_sqlite3changegroup_add_strm'\n        ] =\n          Module['asm']['sqlite3changegroup_add_strm']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_output_strm = (Module[\n      '_sqlite3changegroup_output_strm'\n    ] = function () {\n      return (_sqlite3changegroup_output_strm = Module[\n        '_sqlite3changegroup_output_strm'\n      ] =\n        Module['asm']['sqlite3changegroup_output_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changegroup_delete = (Module['_sqlite3changegroup_delete'] =\n      function () {\n        return (_sqlite3changegroup_delete = Module[\n          '_sqlite3changegroup_delete'\n        ] =\n          Module['asm']['sqlite3changegroup_delete']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_concat = (Module['_sqlite3changeset_concat'] =\n      function () {\n        return (_sqlite3changeset_concat = Module['_sqlite3changeset_concat'] =\n          Module['asm']['sqlite3changeset_concat']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_concat_strm = (Module[\n      '_sqlite3changeset_concat_strm'\n    ] = function () {\n      return (_sqlite3changeset_concat_strm = Module[\n        '_sqlite3changeset_concat_strm'\n      ] =\n        Module['asm']['sqlite3changeset_concat_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3session_config = (Module['_sqlite3session_config'] =\n      function () {\n        return (_sqlite3session_config = Module['_sqlite3session_config'] =\n          Module['asm']['sqlite3session_config']).apply(null, arguments);\n      });\n\n    var _sqlite3_sourceid = (Module['_sqlite3_sourceid'] = function () {\n      return (_sqlite3_sourceid = Module['_sqlite3_sourceid'] =\n        Module['asm']['sqlite3_sourceid']).apply(null, arguments);\n    });\n\n    var _sqlite3__wasm_pstack_ptr = (Module['_sqlite3__wasm_pstack_ptr'] =\n      function () {\n        return (_sqlite3__wasm_pstack_ptr = Module[\n          '_sqlite3__wasm_pstack_ptr'\n        ] =\n          Module['asm']['sqlite3__wasm_pstack_ptr']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_pstack_restore = (Module[\n      '_sqlite3__wasm_pstack_restore'\n    ] = function () {\n      return (_sqlite3__wasm_pstack_restore = Module[\n        '_sqlite3__wasm_pstack_restore'\n      ] =\n        Module['asm']['sqlite3__wasm_pstack_restore']).apply(null, arguments);\n    });\n\n    var _sqlite3__wasm_pstack_alloc = (Module['_sqlite3__wasm_pstack_alloc'] =\n      function () {\n        return (_sqlite3__wasm_pstack_alloc = Module[\n          '_sqlite3__wasm_pstack_alloc'\n        ] =\n          Module['asm']['sqlite3__wasm_pstack_alloc']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_pstack_remaining = (Module[\n      '_sqlite3__wasm_pstack_remaining'\n    ] = function () {\n      return (_sqlite3__wasm_pstack_remaining = Module[\n        '_sqlite3__wasm_pstack_remaining'\n      ] =\n        Module['asm']['sqlite3__wasm_pstack_remaining']).apply(null, arguments);\n    });\n\n    var _sqlite3__wasm_pstack_quota = (Module['_sqlite3__wasm_pstack_quota'] =\n      function () {\n        return (_sqlite3__wasm_pstack_quota = Module[\n          '_sqlite3__wasm_pstack_quota'\n        ] =\n          Module['asm']['sqlite3__wasm_pstack_quota']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_db_error = (Module['_sqlite3__wasm_db_error'] =\n      function () {\n        return (_sqlite3__wasm_db_error = Module['_sqlite3__wasm_db_error'] =\n          Module['asm']['sqlite3__wasm_db_error']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_test_struct = (Module['_sqlite3__wasm_test_struct'] =\n      function () {\n        return (_sqlite3__wasm_test_struct = Module[\n          '_sqlite3__wasm_test_struct'\n        ] =\n          Module['asm']['sqlite3__wasm_test_struct']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_enum_json = (Module['_sqlite3__wasm_enum_json'] =\n      function () {\n        return (_sqlite3__wasm_enum_json = Module['_sqlite3__wasm_enum_json'] =\n          Module['asm']['sqlite3__wasm_enum_json']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_vfs_unlink = (Module['_sqlite3__wasm_vfs_unlink'] =\n      function () {\n        return (_sqlite3__wasm_vfs_unlink = Module[\n          '_sqlite3__wasm_vfs_unlink'\n        ] =\n          Module['asm']['sqlite3__wasm_vfs_unlink']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_db_vfs = (Module['_sqlite3__wasm_db_vfs'] = function () {\n      return (_sqlite3__wasm_db_vfs = Module['_sqlite3__wasm_db_vfs'] =\n        Module['asm']['sqlite3__wasm_db_vfs']).apply(null, arguments);\n    });\n\n    var _sqlite3__wasm_db_reset = (Module['_sqlite3__wasm_db_reset'] =\n      function () {\n        return (_sqlite3__wasm_db_reset = Module['_sqlite3__wasm_db_reset'] =\n          Module['asm']['sqlite3__wasm_db_reset']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_db_export_chunked = (Module[\n      '_sqlite3__wasm_db_export_chunked'\n    ] = function () {\n      return (_sqlite3__wasm_db_export_chunked = Module[\n        '_sqlite3__wasm_db_export_chunked'\n      ] =\n        Module['asm']['sqlite3__wasm_db_export_chunked']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3__wasm_db_serialize = (Module['_sqlite3__wasm_db_serialize'] =\n      function () {\n        return (_sqlite3__wasm_db_serialize = Module[\n          '_sqlite3__wasm_db_serialize'\n        ] =\n          Module['asm']['sqlite3__wasm_db_serialize']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_vfs_create_file = (Module[\n      '_sqlite3__wasm_vfs_create_file'\n    ] = function () {\n      return (_sqlite3__wasm_vfs_create_file = Module[\n        '_sqlite3__wasm_vfs_create_file'\n      ] =\n        Module['asm']['sqlite3__wasm_vfs_create_file']).apply(null, arguments);\n    });\n\n    var _sqlite3__wasm_posix_create_file = (Module[\n      '_sqlite3__wasm_posix_create_file'\n    ] = function () {\n      return (_sqlite3__wasm_posix_create_file = Module[\n        '_sqlite3__wasm_posix_create_file'\n      ] =\n        Module['asm']['sqlite3__wasm_posix_create_file']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3__wasm_kvvfsMakeKeyOnPstack = (Module[\n      '_sqlite3__wasm_kvvfsMakeKeyOnPstack'\n    ] = function () {\n      return (_sqlite3__wasm_kvvfsMakeKeyOnPstack = Module[\n        '_sqlite3__wasm_kvvfsMakeKeyOnPstack'\n      ] =\n        Module['asm']['sqlite3__wasm_kvvfsMakeKeyOnPstack']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3__wasm_kvvfs_methods = (Module['_sqlite3__wasm_kvvfs_methods'] =\n      function () {\n        return (_sqlite3__wasm_kvvfs_methods = Module[\n          '_sqlite3__wasm_kvvfs_methods'\n        ] =\n          Module['asm']['sqlite3__wasm_kvvfs_methods']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_vtab_config = (Module['_sqlite3__wasm_vtab_config'] =\n      function () {\n        return (_sqlite3__wasm_vtab_config = Module[\n          '_sqlite3__wasm_vtab_config'\n        ] =\n          Module['asm']['sqlite3__wasm_vtab_config']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_db_config_ip = (Module['_sqlite3__wasm_db_config_ip'] =\n      function () {\n        return (_sqlite3__wasm_db_config_ip = Module[\n          '_sqlite3__wasm_db_config_ip'\n        ] =\n          Module['asm']['sqlite3__wasm_db_config_ip']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_db_config_pii = (Module['_sqlite3__wasm_db_config_pii'] =\n      function () {\n        return (_sqlite3__wasm_db_config_pii = Module[\n          '_sqlite3__wasm_db_config_pii'\n        ] =\n          Module['asm']['sqlite3__wasm_db_config_pii']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_db_config_s = (Module['_sqlite3__wasm_db_config_s'] =\n      function () {\n        return (_sqlite3__wasm_db_config_s = Module[\n          '_sqlite3__wasm_db_config_s'\n        ] =\n          Module['asm']['sqlite3__wasm_db_config_s']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_config_i = (Module['_sqlite3__wasm_config_i'] =\n      function () {\n        return (_sqlite3__wasm_config_i = Module['_sqlite3__wasm_config_i'] =\n          Module['asm']['sqlite3__wasm_config_i']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_config_ii = (Module['_sqlite3__wasm_config_ii'] =\n      function () {\n        return (_sqlite3__wasm_config_ii = Module['_sqlite3__wasm_config_ii'] =\n          Module['asm']['sqlite3__wasm_config_ii']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_config_j = (Module['_sqlite3__wasm_config_j'] =\n      function () {\n        return (_sqlite3__wasm_config_j = Module['_sqlite3__wasm_config_j'] =\n          Module['asm']['sqlite3__wasm_config_j']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_qfmt_token = (Module['_sqlite3__wasm_qfmt_token'] =\n      function () {\n        return (_sqlite3__wasm_qfmt_token = Module[\n          '_sqlite3__wasm_qfmt_token'\n        ] =\n          Module['asm']['sqlite3__wasm_qfmt_token']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_init_wasmfs = (Module['_sqlite3__wasm_init_wasmfs'] =\n      function () {\n        return (_sqlite3__wasm_init_wasmfs = Module[\n          '_sqlite3__wasm_init_wasmfs'\n        ] =\n          Module['asm']['sqlite3__wasm_init_wasmfs']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_test_intptr = (Module['_sqlite3__wasm_test_intptr'] =\n      function () {\n        return (_sqlite3__wasm_test_intptr = Module[\n          '_sqlite3__wasm_test_intptr'\n        ] =\n          Module['asm']['sqlite3__wasm_test_intptr']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_test_voidptr = (Module['_sqlite3__wasm_test_voidptr'] =\n      function () {\n        return (_sqlite3__wasm_test_voidptr = Module[\n          '_sqlite3__wasm_test_voidptr'\n        ] =\n          Module['asm']['sqlite3__wasm_test_voidptr']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_test_int64_max = (Module[\n      '_sqlite3__wasm_test_int64_max'\n    ] = function () {\n      return (_sqlite3__wasm_test_int64_max = Module[\n        '_sqlite3__wasm_test_int64_max'\n      ] =\n        Module['asm']['sqlite3__wasm_test_int64_max']).apply(null, arguments);\n    });\n\n    var _sqlite3__wasm_test_int64_min = (Module[\n      '_sqlite3__wasm_test_int64_min'\n    ] = function () {\n      return (_sqlite3__wasm_test_int64_min = Module[\n        '_sqlite3__wasm_test_int64_min'\n      ] =\n        Module['asm']['sqlite3__wasm_test_int64_min']).apply(null, arguments);\n    });\n\n    var _sqlite3__wasm_test_int64_times2 = (Module[\n      '_sqlite3__wasm_test_int64_times2'\n    ] = function () {\n      return (_sqlite3__wasm_test_int64_times2 = Module[\n        '_sqlite3__wasm_test_int64_times2'\n      ] =\n        Module['asm']['sqlite3__wasm_test_int64_times2']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3__wasm_test_int64_minmax = (Module[\n      '_sqlite3__wasm_test_int64_minmax'\n    ] = function () {\n      return (_sqlite3__wasm_test_int64_minmax = Module[\n        '_sqlite3__wasm_test_int64_minmax'\n      ] =\n        Module['asm']['sqlite3__wasm_test_int64_minmax']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3__wasm_test_int64ptr = (Module['_sqlite3__wasm_test_int64ptr'] =\n      function () {\n        return (_sqlite3__wasm_test_int64ptr = Module[\n          '_sqlite3__wasm_test_int64ptr'\n        ] =\n          Module['asm']['sqlite3__wasm_test_int64ptr']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_test_stack_overflow = (Module[\n      '_sqlite3__wasm_test_stack_overflow'\n    ] = function () {\n      return (_sqlite3__wasm_test_stack_overflow = Module[\n        '_sqlite3__wasm_test_stack_overflow'\n      ] =\n        Module['asm']['sqlite3__wasm_test_stack_overflow']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3__wasm_test_str_hello = (Module[\n      '_sqlite3__wasm_test_str_hello'\n    ] = function () {\n      return (_sqlite3__wasm_test_str_hello = Module[\n        '_sqlite3__wasm_test_str_hello'\n      ] =\n        Module['asm']['sqlite3__wasm_test_str_hello']).apply(null, arguments);\n    });\n\n    var _sqlite3__wasm_SQLTester_strglob = (Module[\n      '_sqlite3__wasm_SQLTester_strglob'\n    ] = function () {\n      return (_sqlite3__wasm_SQLTester_strglob = Module[\n        '_sqlite3__wasm_SQLTester_strglob'\n      ] =\n        Module['asm']['sqlite3__wasm_SQLTester_strglob']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _malloc = (Module['_malloc'] = function () {\n      return (_malloc = Module['_malloc'] = Module['asm']['malloc']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _free = (Module['_free'] = function () {\n      return (_free = Module['_free'] = Module['asm']['free']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _realloc = (Module['_realloc'] = function () {\n      return (_realloc = Module['_realloc'] = Module['asm']['realloc']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _emscripten_builtin_memalign = (Module['_emscripten_builtin_memalign'] =\n      function () {\n        return (_emscripten_builtin_memalign = Module[\n          '_emscripten_builtin_memalign'\n        ] =\n          Module['asm']['emscripten_builtin_memalign']).apply(null, arguments);\n      });\n\n    var stackSave = (Module['stackSave'] = function () {\n      return (stackSave = Module['stackSave'] =\n        Module['asm']['stackSave']).apply(null, arguments);\n    });\n\n    var stackRestore = (Module['stackRestore'] = function () {\n      return (stackRestore = Module['stackRestore'] =\n        Module['asm']['stackRestore']).apply(null, arguments);\n    });\n\n    var stackAlloc = (Module['stackAlloc'] = function () {\n      return (stackAlloc = Module['stackAlloc'] =\n        Module['asm']['stackAlloc']).apply(null, arguments);\n    });\n\n    Module['wasmMemory'] = wasmMemory;\n\n    var calledRun;\n\n    dependenciesFulfilled = function runCaller() {\n      if (!calledRun) run();\n      if (!calledRun) dependenciesFulfilled = runCaller;\n    };\n\n    function run(args) {\n      args = args || arguments_;\n\n      if (runDependencies > 0) {\n        return;\n      }\n\n      preRun();\n\n      if (runDependencies > 0) {\n        return;\n      }\n\n      function doRun() {\n        if (calledRun) return;\n        calledRun = true;\n        Module['calledRun'] = true;\n\n        if (ABORT) return;\n\n        initRuntime();\n\n        readyPromiseResolve(Module);\n        if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n        postRun();\n      }\n\n      if (Module['setStatus']) {\n        Module['setStatus']('Running...');\n        setTimeout(function () {\n          setTimeout(function () {\n            Module['setStatus']('');\n          }, 1);\n          doRun();\n        }, 1);\n      } else {\n        doRun();\n      }\n    }\n\n    if (Module['preInit']) {\n      if (typeof Module['preInit'] == 'function')\n        Module['preInit'] = [Module['preInit']];\n      while (Module['preInit'].length > 0) {\n        Module['preInit'].pop()();\n      }\n    }\n\n    run();\n\n    if (!Module.postRun) Module.postRun = [];\n    Module.postRun.push(function (Module) {\n      'use strict';\n\n      'use strict';\n      globalThis.sqlite3ApiBootstrap = function sqlite3ApiBootstrap(\n        apiConfig = globalThis.sqlite3ApiConfig ||\n          sqlite3ApiBootstrap.defaultConfig,\n      ) {\n        if (sqlite3ApiBootstrap.sqlite3) {\n          (sqlite3ApiBootstrap.sqlite3.config || console).warn(\n            'sqlite3ApiBootstrap() called multiple times.',\n            'Config and external initializers are ignored on calls after the first.',\n          );\n          return sqlite3ApiBootstrap.sqlite3;\n        }\n        const config = Object.assign(\n          Object.create(null),\n          {\n            exports: undefined,\n            memory: undefined,\n            bigIntEnabled: (() => {\n              if ('undefined' !== typeof Module) {\n                if (!!Module.HEAPU64) return true;\n              }\n              return !!globalThis.BigInt64Array;\n            })(),\n            debug: console.debug.bind(console),\n            warn: console.warn.bind(console),\n            error: console.error.bind(console),\n            log: console.log.bind(console),\n            wasmfsOpfsDir: '/opfs',\n\n            useStdAlloc: false,\n          },\n          apiConfig || {},\n        );\n\n        Object.assign(\n          config,\n          {\n            allocExportName: config.useStdAlloc ? 'malloc' : 'sqlite3_malloc',\n            deallocExportName: config.useStdAlloc ? 'free' : 'sqlite3_free',\n            reallocExportName: config.useStdAlloc\n              ? 'realloc'\n              : 'sqlite3_realloc',\n          },\n          config,\n        );\n\n        ['exports', 'memory', 'wasmfsOpfsDir'].forEach((k) => {\n          if ('function' === typeof config[k]) {\n            config[k] = config[k]();\n          }\n        });\n\n        delete globalThis.sqlite3ApiConfig;\n        delete sqlite3ApiBootstrap.defaultConfig;\n\n        const capi = Object.create(null);\n\n        const wasm = Object.create(null);\n\n        const __rcStr = (rc) => {\n          return (\n            (capi.sqlite3_js_rc_str && capi.sqlite3_js_rc_str(rc)) ||\n            'Unknown result code #' + rc\n          );\n        };\n\n        const __isInt = (n) => 'number' === typeof n && n === (n | 0);\n\n        class SQLite3Error extends Error {\n          constructor(...args) {\n            let rc;\n            if (args.length) {\n              if (__isInt(args[0])) {\n                rc = args[0];\n                if (1 === args.length) {\n                  super(__rcStr(args[0]));\n                } else {\n                  const rcStr = __rcStr(rc);\n                  if ('object' === typeof args[1]) {\n                    super(rcStr, args[1]);\n                  } else {\n                    args[0] = rcStr + ':';\n                    super(args.join(' '));\n                  }\n                }\n              } else {\n                if (2 === args.length && 'object' === typeof args[1]) {\n                  super(...args);\n                } else {\n                  super(args.join(' '));\n                }\n              }\n            }\n            this.resultCode = rc || capi.SQLITE_ERROR;\n            this.name = 'SQLite3Error';\n          }\n        }\n\n        SQLite3Error.toss = (...args) => {\n          throw new SQLite3Error(...args);\n        };\n        const toss3 = SQLite3Error.toss;\n\n        if (config.wasmfsOpfsDir && !/^\\/[^/]+$/.test(config.wasmfsOpfsDir)) {\n          toss3(\n            \"config.wasmfsOpfsDir must be falsy or in the form '/dir-name'.\",\n          );\n        }\n\n        const isInt32 = (n) => {\n          return (\n            'bigint' !== typeof n &&\n            !!(n === (n | 0) && n <= 2147483647 && n >= -2147483648)\n          );\n        };\n\n        const bigIntFits64 = function f(b) {\n          if (!f._max) {\n            f._max = BigInt('0x7fffffffffffffff');\n            f._min = ~f._max;\n          }\n          return b >= f._min && b <= f._max;\n        };\n\n        const bigIntFits32 = (b) => b >= -0x7fffffffn - 1n && b <= 0x7fffffffn;\n\n        const bigIntFitsDouble = function f(b) {\n          if (!f._min) {\n            f._min = Number.MIN_SAFE_INTEGER;\n            f._max = Number.MAX_SAFE_INTEGER;\n          }\n          return b >= f._min && b <= f._max;\n        };\n\n        const isTypedArray = (v) => {\n          return v && v.constructor && isInt32(v.constructor.BYTES_PER_ELEMENT)\n            ? v\n            : false;\n        };\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n\n        const isSharedTypedArray = (aTypedArray) =>\n          aTypedArray.buffer instanceof __SAB;\n\n        const typedArrayPart = (aTypedArray, begin, end) => {\n          return isSharedTypedArray(aTypedArray)\n            ? aTypedArray.slice(begin, end)\n            : aTypedArray.subarray(begin, end);\n        };\n\n        const isBindableTypedArray = (v) => {\n          return (\n            v &&\n            (v instanceof Uint8Array ||\n              v instanceof Int8Array ||\n              v instanceof ArrayBuffer)\n          );\n        };\n\n        const isSQLableTypedArray = (v) => {\n          return (\n            v &&\n            (v instanceof Uint8Array ||\n              v instanceof Int8Array ||\n              v instanceof ArrayBuffer)\n          );\n        };\n\n        const affirmBindableTypedArray = (v) => {\n          return (\n            isBindableTypedArray(v) ||\n            toss3('Value is not of a supported TypedArray type.')\n          );\n        };\n\n        const utf8Decoder = new TextDecoder('utf-8');\n\n        const typedArrayToString = function (typedArray, begin, end) {\n          return utf8Decoder.decode(typedArrayPart(typedArray, begin, end));\n        };\n\n        const flexibleString = function (v) {\n          if (isSQLableTypedArray(v)) {\n            return typedArrayToString(\n              v instanceof ArrayBuffer ? new Uint8Array(v) : v,\n            );\n          } else if (Array.isArray(v)) return v.join('');\n          else if (wasm.isPtr(v)) v = wasm.cstrToJs(v);\n          return v;\n        };\n\n        class WasmAllocError extends Error {\n          constructor(...args) {\n            if (2 === args.length && 'object' === typeof args[1]) {\n              super(...args);\n            } else if (args.length) {\n              super(args.join(' '));\n            } else {\n              super('Allocation failed.');\n            }\n            this.resultCode = capi.SQLITE_NOMEM;\n            this.name = 'WasmAllocError';\n          }\n        }\n\n        WasmAllocError.toss = (...args) => {\n          throw new WasmAllocError(...args);\n        };\n\n        Object.assign(capi, {\n          sqlite3_bind_blob: undefined,\n\n          sqlite3_bind_text: undefined,\n\n          sqlite3_create_function_v2: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n            xDestroy,\n          ) => {},\n\n          sqlite3_create_function: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n          ) => {},\n\n          sqlite3_create_window_function: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xStep,\n            xFinal,\n            xValue,\n            xInverse,\n            xDestroy,\n          ) => {},\n\n          sqlite3_prepare_v3: (\n            dbPtr,\n            sql,\n            sqlByteLen,\n            prepFlags,\n            stmtPtrPtr,\n            strPtrPtr,\n          ) => {},\n\n          sqlite3_prepare_v2: (\n            dbPtr,\n            sql,\n            sqlByteLen,\n            stmtPtrPtr,\n            strPtrPtr,\n          ) => {},\n\n          sqlite3_exec: (pDb, sql, callback, pVoid, pErrMsg) => {},\n\n          sqlite3_randomness: (n, outPtr) => {},\n        });\n\n        const util = {\n          affirmBindableTypedArray,\n          flexibleString,\n          bigIntFits32,\n          bigIntFits64,\n          bigIntFitsDouble,\n          isBindableTypedArray,\n          isInt32,\n          isSQLableTypedArray,\n          isTypedArray,\n          typedArrayToString,\n          isUIThread: () =>\n            globalThis.window === globalThis && !!globalThis.document,\n\n          isSharedTypedArray,\n          toss: function (...args) {\n            throw new Error(args.join(' '));\n          },\n          toss3,\n          typedArrayPart,\n\n          affirmDbHeader: function (bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            const header = 'SQLite format 3';\n            if (header.length > bytes.byteLength) {\n              toss3('Input does not contain an SQLite3 database header.');\n            }\n            for (let i = 0; i < header.length; ++i) {\n              if (header.charCodeAt(i) !== bytes[i]) {\n                toss3('Input does not contain an SQLite3 database header.');\n              }\n            }\n          },\n\n          affirmIsDb: function (bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            const n = bytes.byteLength;\n            if (n < 512 || n % 512 !== 0) {\n              toss3('Byte array size', n, 'is invalid for an SQLite3 db.');\n            }\n            util.affirmDbHeader(bytes);\n          },\n        };\n\n        Object.assign(wasm, {\n          ptrSizeof: config.wasmPtrSizeof || 4,\n\n          ptrIR: config.wasmPtrIR || 'i32',\n\n          bigIntEnabled: !!config.bigIntEnabled,\n\n          exports:\n            config.exports ||\n            toss3('Missing API config.exports (WASM module exports).'),\n\n          memory:\n            config.memory ||\n            config.exports['memory'] ||\n            toss3(\n              'API config object requires a WebAssembly.Memory object',\n              'in either config.exports.memory (exported)',\n              'or config.memory (imported).',\n            ),\n\n          alloc: undefined,\n\n          realloc: undefined,\n\n          dealloc: undefined,\n        });\n\n        wasm.allocFromTypedArray = function (srcTypedArray) {\n          if (srcTypedArray instanceof ArrayBuffer) {\n            srcTypedArray = new Uint8Array(srcTypedArray);\n          }\n          affirmBindableTypedArray(srcTypedArray);\n          const pRet = wasm.alloc(srcTypedArray.byteLength || 1);\n          wasm\n            .heapForSize(srcTypedArray.constructor)\n            .set(srcTypedArray.byteLength ? srcTypedArray : [0], pRet);\n          return pRet;\n        };\n\n        {\n          const keyAlloc = config.allocExportName,\n            keyDealloc = config.deallocExportName,\n            keyRealloc = config.reallocExportName;\n          for (const key of [keyAlloc, keyDealloc, keyRealloc]) {\n            const f = wasm.exports[key];\n            if (!(f instanceof Function))\n              toss3('Missing required exports[', key, '] function.');\n          }\n\n          wasm.alloc = function f(n) {\n            return (\n              f.impl(n) ||\n              WasmAllocError.toss('Failed to allocate', n, ' bytes.')\n            );\n          };\n          wasm.alloc.impl = wasm.exports[keyAlloc];\n          wasm.realloc = function f(m, n) {\n            const m2 = f.impl(m, n);\n            return n\n              ? m2 || WasmAllocError.toss('Failed to reallocate', n, ' bytes.')\n              : 0;\n          };\n          wasm.realloc.impl = wasm.exports[keyRealloc];\n          wasm.dealloc = wasm.exports[keyDealloc];\n        }\n\n        wasm.compileOptionUsed = function f(optName) {\n          if (!arguments.length) {\n            if (f._result) return f._result;\n            else if (!f._opt) {\n              f._rx = /^([^=]+)=(.+)/;\n              f._rxInt = /^-?\\d+$/;\n              f._opt = function (opt, rv) {\n                const m = f._rx.exec(opt);\n                rv[0] = m ? m[1] : opt;\n                rv[1] = m ? (f._rxInt.test(m[2]) ? +m[2] : m[2]) : true;\n              };\n            }\n            const rc = {},\n              ov = [0, 0];\n            let i = 0,\n              k;\n            while ((k = capi.sqlite3_compileoption_get(i++))) {\n              f._opt(k, ov);\n              rc[ov[0]] = ov[1];\n            }\n            return (f._result = rc);\n          } else if (Array.isArray(optName)) {\n            const rc = {};\n            optName.forEach((v) => {\n              rc[v] = capi.sqlite3_compileoption_used(v);\n            });\n            return rc;\n          } else if ('object' === typeof optName) {\n            Object.keys(optName).forEach((k) => {\n              optName[k] = capi.sqlite3_compileoption_used(k);\n            });\n            return optName;\n          }\n          return 'string' === typeof optName\n            ? !!capi.sqlite3_compileoption_used(optName)\n            : false;\n        };\n\n        wasm.pstack = Object.assign(Object.create(null), {\n          restore: wasm.exports.sqlite3__wasm_pstack_restore,\n\n          alloc: function (n) {\n            if ('string' === typeof n && !(n = wasm.sizeofIR(n))) {\n              WasmAllocError.toss(\n                'Invalid value for pstack.alloc(',\n                arguments[0],\n                ')',\n              );\n            }\n            return (\n              wasm.exports.sqlite3__wasm_pstack_alloc(n) ||\n              WasmAllocError.toss(\n                'Could not allocate',\n                n,\n                'bytes from the pstack.',\n              )\n            );\n          },\n\n          allocChunks: function (n, sz) {\n            if ('string' === typeof sz && !(sz = wasm.sizeofIR(sz))) {\n              WasmAllocError.toss(\n                'Invalid size value for allocChunks(',\n                arguments[1],\n                ')',\n              );\n            }\n            const mem = wasm.pstack.alloc(n * sz);\n            const rc = [];\n            let i = 0,\n              offset = 0;\n            for (; i < n; ++i, offset += sz) rc.push(mem + offset);\n            return rc;\n          },\n\n          allocPtr: (n = 1, safePtrSize = true) => {\n            return 1 === n\n              ? wasm.pstack.alloc(safePtrSize ? 8 : wasm.ptrSizeof)\n              : wasm.pstack.allocChunks(n, safePtrSize ? 8 : wasm.ptrSizeof);\n          },\n\n          call: function (f) {\n            const stackPos = wasm.pstack.pointer;\n            try {\n              return f(sqlite3);\n            } finally {\n              wasm.pstack.restore(stackPos);\n            }\n          },\n        });\n        Object.defineProperties(wasm.pstack, {\n          pointer: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3__wasm_pstack_ptr,\n          },\n\n          quota: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3__wasm_pstack_quota,\n          },\n\n          remaining: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3__wasm_pstack_remaining,\n          },\n        });\n\n        capi.sqlite3_randomness = (...args) => {\n          if (\n            1 === args.length &&\n            util.isTypedArray(args[0]) &&\n            1 === args[0].BYTES_PER_ELEMENT\n          ) {\n            const ta = args[0];\n            if (0 === ta.byteLength) {\n              wasm.exports.sqlite3_randomness(0, 0);\n              return ta;\n            }\n            const stack = wasm.pstack.pointer;\n            try {\n              let n = ta.byteLength,\n                offset = 0;\n              const r = wasm.exports.sqlite3_randomness;\n              const heap = wasm.heap8u();\n              const nAlloc = n < 512 ? n : 512;\n              const ptr = wasm.pstack.alloc(nAlloc);\n              do {\n                const j = n > nAlloc ? nAlloc : n;\n                r(j, ptr);\n                ta.set(typedArrayPart(heap, ptr, ptr + j), offset);\n                n -= j;\n                offset += j;\n              } while (n > 0);\n            } catch (e) {\n              console.error(\n                'Highly unexpected (and ignored!) ' +\n                  'exception in sqlite3_randomness():',\n                e,\n              );\n            } finally {\n              wasm.pstack.restore(stack);\n            }\n            return ta;\n          }\n          wasm.exports.sqlite3_randomness(...args);\n        };\n\n        let __wasmfsOpfsDir = undefined;\n\n        capi.sqlite3_wasmfs_opfs_dir = function () {\n          if (undefined !== __wasmfsOpfsDir) return __wasmfsOpfsDir;\n\n          const pdir = config.wasmfsOpfsDir;\n          if (\n            !pdir ||\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle\n          ) {\n            return (__wasmfsOpfsDir = '');\n          }\n          try {\n            if (\n              pdir &&\n              0 ===\n                wasm.xCallWrapped(\n                  'sqlite3__wasm_init_wasmfs',\n                  'i32',\n                  ['string'],\n                  pdir,\n                )\n            ) {\n              return (__wasmfsOpfsDir = pdir);\n            } else {\n              return (__wasmfsOpfsDir = '');\n            }\n          } catch (e) {\n            return (__wasmfsOpfsDir = '');\n          }\n        };\n\n        capi.sqlite3_wasmfs_filename_is_persistent = function (name) {\n          const p = capi.sqlite3_wasmfs_opfs_dir();\n          return p && name ? name.startsWith(p + '/') : false;\n        };\n\n        capi.sqlite3_js_db_uses_vfs = function (pDb, vfsName, dbName = 0) {\n          try {\n            const pK = capi.sqlite3_vfs_find(vfsName);\n            if (!pK) return false;\n            else if (!pDb) {\n              return pK === capi.sqlite3_vfs_find(0) ? pK : false;\n            } else {\n              return pK === capi.sqlite3_js_db_vfs(pDb, dbName) ? pK : false;\n            }\n          } catch (e) {\n            return false;\n          }\n        };\n\n        capi.sqlite3_js_vfs_list = function () {\n          const rc = [];\n          let pVfs = capi.sqlite3_vfs_find(0);\n          while (pVfs) {\n            const oVfs = new capi.sqlite3_vfs(pVfs);\n            rc.push(wasm.cstrToJs(oVfs.$zName));\n            pVfs = oVfs.$pNext;\n            oVfs.dispose();\n          }\n          return rc;\n        };\n\n        capi.sqlite3_js_db_export = function (pDb, schema = 0) {\n          pDb = wasm.xWrap.testConvertArg('sqlite3*', pDb);\n          if (!pDb) toss3('Invalid sqlite3* argument.');\n          if (!wasm.bigIntEnabled) toss3('BigInt64 support is not enabled.');\n          const scope = wasm.scopedAllocPush();\n          let pOut;\n          try {\n            const pSize = wasm.scopedAlloc(8 + wasm.ptrSizeof);\n            const ppOut = pSize + 8;\n\n            const zSchema = schema\n              ? wasm.isPtr(schema)\n                ? schema\n                : wasm.scopedAllocCString('' + schema)\n              : 0;\n            let rc = wasm.exports.sqlite3__wasm_db_serialize(\n              pDb,\n              zSchema,\n              ppOut,\n              pSize,\n              0,\n            );\n            if (rc) {\n              toss3(\n                'Database serialization failed with code',\n                sqlite3.capi.sqlite3_js_rc_str(rc),\n              );\n            }\n            pOut = wasm.peekPtr(ppOut);\n            const nOut = wasm.peek(pSize, 'i64');\n            rc = nOut\n              ? wasm.heap8u().slice(pOut, pOut + Number(nOut))\n              : new Uint8Array();\n            return rc;\n          } finally {\n            if (pOut) wasm.exports.sqlite3_free(pOut);\n            wasm.scopedAllocPop(scope);\n          }\n        };\n\n        capi.sqlite3_js_db_vfs = (dbPointer, dbName = 0) =>\n          util.sqlite3__wasm_db_vfs(dbPointer, dbName);\n\n        capi.sqlite3_js_aggregate_context = (pCtx, n) => {\n          return (\n            capi.sqlite3_aggregate_context(pCtx, n) ||\n            (n\n              ? WasmAllocError.toss(\n                  'Cannot allocate',\n                  n,\n                  'bytes for sqlite3_aggregate_context()',\n                )\n              : 0)\n          );\n        };\n\n        capi.sqlite3_js_posix_create_file = function (filename, data, dataLen) {\n          let pData;\n          if (data && wasm.isPtr(data)) {\n            pData = data;\n          } else if (\n            data instanceof ArrayBuffer ||\n            data instanceof Uint8Array\n          ) {\n            pData = wasm.allocFromTypedArray(data);\n            if (arguments.length < 3 || !util.isInt32(dataLen) || dataLen < 0) {\n              dataLen = data.byteLength;\n            }\n          } else {\n            SQLite3Error.toss(\n              'Invalid 2nd argument for sqlite3_js_posix_create_file().',\n            );\n          }\n          try {\n            if (!util.isInt32(dataLen) || dataLen < 0) {\n              SQLite3Error.toss(\n                'Invalid 3rd argument for sqlite3_js_posix_create_file().',\n              );\n            }\n            const rc = util.sqlite3__wasm_posix_create_file(\n              filename,\n              pData,\n              dataLen,\n            );\n            if (rc)\n              SQLite3Error.toss(\n                'Creation of file failed with sqlite3 result code',\n                capi.sqlite3_js_rc_str(rc),\n              );\n          } finally {\n            wasm.dealloc(pData);\n          }\n        };\n\n        capi.sqlite3_js_vfs_create_file = function (\n          vfs,\n          filename,\n          data,\n          dataLen,\n        ) {\n          config.warn(\n            'sqlite3_js_vfs_create_file() is deprecated and',\n            'should be avoided because it can lead to C-level crashes.',\n            'See its documentation for alternative options.',\n          );\n          let pData;\n          if (data) {\n            if (wasm.isPtr(data)) {\n              pData = data;\n            } else if (data instanceof ArrayBuffer) {\n              data = new Uint8Array(data);\n            }\n            if (data instanceof Uint8Array) {\n              pData = wasm.allocFromTypedArray(data);\n              if (\n                arguments.length < 4 ||\n                !util.isInt32(dataLen) ||\n                dataLen < 0\n              ) {\n                dataLen = data.byteLength;\n              }\n            } else {\n              SQLite3Error.toss(\n                'Invalid 3rd argument type for sqlite3_js_vfs_create_file().',\n              );\n            }\n          } else {\n            pData = 0;\n          }\n          if (!util.isInt32(dataLen) || dataLen < 0) {\n            wasm.dealloc(pData);\n            SQLite3Error.toss(\n              'Invalid 4th argument for sqlite3_js_vfs_create_file().',\n            );\n          }\n          try {\n            const rc = util.sqlite3__wasm_vfs_create_file(\n              vfs,\n              filename,\n              pData,\n              dataLen,\n            );\n            if (rc)\n              SQLite3Error.toss(\n                'Creation of file failed with sqlite3 result code',\n                capi.sqlite3_js_rc_str(rc),\n              );\n          } finally {\n            wasm.dealloc(pData);\n          }\n        };\n\n        capi.sqlite3_js_sql_to_string = (sql) => {\n          if ('string' === typeof sql) {\n            return sql;\n          }\n          const x = flexibleString(v);\n          return x === v ? undefined : x;\n        };\n\n        if (util.isUIThread()) {\n          const __kvvfsInfo = function (which) {\n            const rc = Object.create(null);\n            rc.prefix = 'kvvfs-' + which;\n            rc.stores = [];\n            if ('session' === which || '' === which)\n              rc.stores.push(globalThis.sessionStorage);\n            if ('local' === which || '' === which)\n              rc.stores.push(globalThis.localStorage);\n            return rc;\n          };\n\n          capi.sqlite3_js_kvvfs_clear = function (which = '') {\n            let rc = 0;\n            const kvinfo = __kvvfsInfo(which);\n            kvinfo.stores.forEach((s) => {\n              const toRm = [];\n              let i;\n              for (i = 0; i < s.length; ++i) {\n                const k = s.key(i);\n                if (k.startsWith(kvinfo.prefix)) toRm.push(k);\n              }\n              toRm.forEach((kk) => s.removeItem(kk));\n              rc += toRm.length;\n            });\n            return rc;\n          };\n\n          capi.sqlite3_js_kvvfs_size = function (which = '') {\n            let sz = 0;\n            const kvinfo = __kvvfsInfo(which);\n            kvinfo.stores.forEach((s) => {\n              let i;\n              for (i = 0; i < s.length; ++i) {\n                const k = s.key(i);\n                if (k.startsWith(kvinfo.prefix)) {\n                  sz += k.length;\n                  sz += s.getItem(k).length;\n                }\n              }\n            });\n            return sz * 2;\n          };\n        }\n\n        capi.sqlite3_db_config = function (pDb, op, ...args) {\n          if (!this.s) {\n            this.s = wasm.xWrap('sqlite3__wasm_db_config_s', 'int', [\n              'sqlite3*',\n              'int',\n              'string:static',\n            ]);\n            this.pii = wasm.xWrap('sqlite3__wasm_db_config_pii', 'int', [\n              'sqlite3*',\n              'int',\n              '*',\n              'int',\n              'int',\n            ]);\n            this.ip = wasm.xWrap('sqlite3__wasm_db_config_ip', 'int', [\n              'sqlite3*',\n              'int',\n              'int',\n              '*',\n            ]);\n          }\n          switch (op) {\n            case capi.SQLITE_DBCONFIG_ENABLE_FKEY:\n            case capi.SQLITE_DBCONFIG_ENABLE_TRIGGER:\n            case capi.SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER:\n            case capi.SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION:\n            case capi.SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE:\n            case capi.SQLITE_DBCONFIG_ENABLE_QPSG:\n            case capi.SQLITE_DBCONFIG_TRIGGER_EQP:\n            case capi.SQLITE_DBCONFIG_RESET_DATABASE:\n            case capi.SQLITE_DBCONFIG_DEFENSIVE:\n            case capi.SQLITE_DBCONFIG_WRITABLE_SCHEMA:\n            case capi.SQLITE_DBCONFIG_LEGACY_ALTER_TABLE:\n            case capi.SQLITE_DBCONFIG_DQS_DML:\n            case capi.SQLITE_DBCONFIG_DQS_DDL:\n            case capi.SQLITE_DBCONFIG_ENABLE_VIEW:\n            case capi.SQLITE_DBCONFIG_LEGACY_FILE_FORMAT:\n            case capi.SQLITE_DBCONFIG_TRUSTED_SCHEMA:\n            case capi.SQLITE_DBCONFIG_STMT_SCANSTATUS:\n            case capi.SQLITE_DBCONFIG_REVERSE_SCANORDER:\n              return this.ip(pDb, op, args[0], args[1] || 0);\n            case capi.SQLITE_DBCONFIG_LOOKASIDE:\n              return this.pii(pDb, op, args[0], args[1], args[2]);\n            case capi.SQLITE_DBCONFIG_MAINDBNAME:\n              return this.s(pDb, op, args[0]);\n            default:\n              return capi.SQLITE_MISUSE;\n          }\n        }.bind(Object.create(null));\n\n        capi.sqlite3_value_to_js = function (\n          pVal,\n          throwIfCannotConvert = true,\n        ) {\n          let arg;\n          const valType = capi.sqlite3_value_type(pVal);\n          switch (valType) {\n            case capi.SQLITE_INTEGER:\n              if (wasm.bigIntEnabled) {\n                arg = capi.sqlite3_value_int64(pVal);\n                if (util.bigIntFitsDouble(arg)) arg = Number(arg);\n              } else arg = capi.sqlite3_value_double(pVal);\n              break;\n            case capi.SQLITE_FLOAT:\n              arg = capi.sqlite3_value_double(pVal);\n              break;\n            case capi.SQLITE_TEXT:\n              arg = capi.sqlite3_value_text(pVal);\n              break;\n            case capi.SQLITE_BLOB: {\n              const n = capi.sqlite3_value_bytes(pVal);\n              const pBlob = capi.sqlite3_value_blob(pVal);\n              if (n && !pBlob)\n                sqlite3.WasmAllocError.toss(\n                  'Cannot allocate memory for blob argument of',\n                  n,\n                  'byte(s)',\n                );\n              arg = n ? wasm.heap8u().slice(pBlob, pBlob + Number(n)) : null;\n              break;\n            }\n            case capi.SQLITE_NULL:\n              arg = null;\n              break;\n            default:\n              if (throwIfCannotConvert) {\n                toss3(\n                  capi.SQLITE_MISMATCH,\n                  'Unhandled sqlite3_value_type():',\n                  valType,\n                );\n              }\n              arg = undefined;\n          }\n          return arg;\n        };\n\n        capi.sqlite3_values_to_js = function (\n          argc,\n          pArgv,\n          throwIfCannotConvert = true,\n        ) {\n          let i;\n          const tgt = [];\n          for (i = 0; i < argc; ++i) {\n            tgt.push(\n              capi.sqlite3_value_to_js(\n                wasm.peekPtr(pArgv + wasm.ptrSizeof * i),\n                throwIfCannotConvert,\n              ),\n            );\n          }\n          return tgt;\n        };\n\n        capi.sqlite3_result_error_js = function (pCtx, e) {\n          if (e instanceof WasmAllocError) {\n            capi.sqlite3_result_error_nomem(pCtx);\n          } else {\n            capi.sqlite3_result_error(pCtx, '' + e, -1);\n          }\n        };\n\n        capi.sqlite3_result_js = function (pCtx, val) {\n          if (val instanceof Error) {\n            capi.sqlite3_result_error_js(pCtx, val);\n            return;\n          }\n          try {\n            switch (typeof val) {\n              case 'undefined':\n                break;\n              case 'boolean':\n                capi.sqlite3_result_int(pCtx, val ? 1 : 0);\n                break;\n              case 'bigint':\n                if (util.bigIntFits32(val)) {\n                  capi.sqlite3_result_int(pCtx, Number(val));\n                } else if (util.bigIntFitsDouble(val)) {\n                  capi.sqlite3_result_double(pCtx, Number(val));\n                } else if (wasm.bigIntEnabled) {\n                  if (util.bigIntFits64(val))\n                    capi.sqlite3_result_int64(pCtx, val);\n                  else\n                    toss3(\n                      'BigInt value',\n                      val.toString(),\n                      'is too BigInt for int64.',\n                    );\n                } else {\n                  toss3('BigInt value', val.toString(), 'is too BigInt.');\n                }\n                break;\n              case 'number': {\n                let f;\n                if (util.isInt32(val)) {\n                  f = capi.sqlite3_result_int;\n                } else if (\n                  wasm.bigIntEnabled &&\n                  Number.isInteger(val) &&\n                  util.bigIntFits64(BigInt(val))\n                ) {\n                  f = capi.sqlite3_result_int64;\n                } else {\n                  f = capi.sqlite3_result_double;\n                }\n                f(pCtx, val);\n                break;\n              }\n              case 'string': {\n                const [p, n] = wasm.allocCString(val, true);\n                capi.sqlite3_result_text(pCtx, p, n, capi.SQLITE_WASM_DEALLOC);\n                break;\n              }\n              case 'object':\n                if (null === val) {\n                  capi.sqlite3_result_null(pCtx);\n                  break;\n                } else if (util.isBindableTypedArray(val)) {\n                  const pBlob = wasm.allocFromTypedArray(val);\n                  capi.sqlite3_result_blob(\n                    pCtx,\n                    pBlob,\n                    val.byteLength,\n                    capi.SQLITE_WASM_DEALLOC,\n                  );\n                  break;\n                }\n\n              default:\n                toss3(\n                  \"Don't not how to handle this UDF result value:\",\n                  typeof val,\n                  val,\n                );\n            }\n          } catch (e) {\n            capi.sqlite3_result_error_js(pCtx, e);\n          }\n        };\n\n        capi.sqlite3_column_js = function (\n          pStmt,\n          iCol,\n          throwIfCannotConvert = true,\n        ) {\n          const v = capi.sqlite3_column_value(pStmt, iCol);\n          return 0 === v\n            ? undefined\n            : capi.sqlite3_value_to_js(v, throwIfCannotConvert);\n        };\n\n        const __newOldValue = function (pObj, iCol, impl) {\n          impl = capi[impl];\n          if (!this.ptr) this.ptr = wasm.allocPtr();\n          else wasm.pokePtr(this.ptr, 0);\n          const rc = impl(pObj, iCol, this.ptr);\n          if (rc)\n            return SQLite3Error.toss(\n              rc,\n              arguments[2] + '() failed with code ' + rc,\n            );\n          const pv = wasm.peekPtr(this.ptr);\n          return pv ? capi.sqlite3_value_to_js(pv, true) : undefined;\n        }.bind(Object.create(null));\n\n        capi.sqlite3_preupdate_new_js = (pDb, iCol) =>\n          __newOldValue(pDb, iCol, 'sqlite3_preupdate_new');\n\n        capi.sqlite3_preupdate_old_js = (pDb, iCol) =>\n          __newOldValue(pDb, iCol, 'sqlite3_preupdate_old');\n\n        capi.sqlite3changeset_new_js = (pChangesetIter, iCol) =>\n          __newOldValue(pChangesetIter, iCol, 'sqlite3changeset_new');\n\n        capi.sqlite3changeset_old_js = (pChangesetIter, iCol) =>\n          __newOldValue(pChangesetIter, iCol, 'sqlite3changeset_old');\n\n        const sqlite3 = {\n          WasmAllocError: WasmAllocError,\n          SQLite3Error: SQLite3Error,\n          capi,\n          util,\n          wasm,\n          config,\n\n          version: Object.create(null),\n\n          client: undefined,\n\n          asyncPostInit: async function ff() {\n            if (ff.isReady instanceof Promise) return ff.isReady;\n            let lia = sqlite3ApiBootstrap.initializersAsync;\n            delete sqlite3ApiBootstrap.initializersAsync;\n            const postInit = async () => {\n              if (!sqlite3.__isUnderTest) {\n                delete sqlite3.util;\n\n                delete sqlite3.StructBinder;\n              }\n              return sqlite3;\n            };\n            const catcher = (e) => {\n              config.error('an async sqlite3 initializer failed:', e);\n              throw e;\n            };\n            if (!lia || !lia.length) {\n              return (ff.isReady = postInit().catch(catcher));\n            }\n            lia = lia.map((f) => {\n              return f instanceof Function ? async (x) => f(sqlite3) : f;\n            });\n            lia.push(postInit);\n            let p = Promise.resolve(sqlite3);\n            while (lia.length) p = p.then(lia.shift());\n            return (ff.isReady = p.catch(catcher));\n          },\n\n          scriptInfo: undefined,\n        };\n        try {\n          sqlite3ApiBootstrap.initializers.forEach((f) => {\n            f(sqlite3);\n          });\n        } catch (e) {\n          console.error('sqlite3 bootstrap initializer threw:', e);\n          throw e;\n        }\n        delete sqlite3ApiBootstrap.initializers;\n        sqlite3ApiBootstrap.sqlite3 = sqlite3;\n        return sqlite3;\n      };\n\n      globalThis.sqlite3ApiBootstrap.initializers = [];\n\n      globalThis.sqlite3ApiBootstrap.initializersAsync = [];\n\n      globalThis.sqlite3ApiBootstrap.defaultConfig = Object.create(null);\n\n      globalThis.sqlite3ApiBootstrap.sqlite3 = undefined;\n\n      globalThis.WhWasmUtilInstaller = function (target) {\n        'use strict';\n        if (undefined === target.bigIntEnabled) {\n          target.bigIntEnabled = !!globalThis['BigInt64Array'];\n        }\n\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n\n        if (!target.exports) {\n          Object.defineProperty(target, 'exports', {\n            enumerable: true,\n            configurable: true,\n            get: () => target.instance && target.instance.exports,\n          });\n        }\n\n        const ptrIR = target.pointerIR || 'i32';\n        const ptrSizeof = (target.ptrSizeof =\n          'i32' === ptrIR\n            ? 4\n            : 'i64' === ptrIR\n              ? 8\n              : toss('Unhandled ptrSizeof:', ptrIR));\n\n        const cache = Object.create(null);\n\n        cache.heapSize = 0;\n\n        cache.memory = null;\n\n        cache.freeFuncIndexes = [];\n\n        cache.scopedAlloc = [];\n\n        cache.utf8Decoder = new TextDecoder();\n        cache.utf8Encoder = new TextEncoder('utf-8');\n\n        target.sizeofIR = (n) => {\n          switch (n) {\n            case 'i8':\n              return 1;\n            case 'i16':\n              return 2;\n            case 'i32':\n            case 'f32':\n            case 'float':\n              return 4;\n            case 'i64':\n            case 'f64':\n            case 'double':\n              return 8;\n            case '*':\n              return ptrSizeof;\n            default:\n              return ('' + n).endsWith('*') ? ptrSizeof : undefined;\n          }\n        };\n\n        const heapWrappers = function () {\n          if (!cache.memory) {\n            cache.memory =\n              target.memory instanceof WebAssembly.Memory\n                ? target.memory\n                : target.exports.memory;\n          } else if (cache.heapSize === cache.memory.buffer.byteLength) {\n            return cache;\n          }\n\n          const b = cache.memory.buffer;\n          cache.HEAP8 = new Int8Array(b);\n          cache.HEAP8U = new Uint8Array(b);\n          cache.HEAP16 = new Int16Array(b);\n          cache.HEAP16U = new Uint16Array(b);\n          cache.HEAP32 = new Int32Array(b);\n          cache.HEAP32U = new Uint32Array(b);\n          if (target.bigIntEnabled) {\n            cache.HEAP64 = new BigInt64Array(b);\n            cache.HEAP64U = new BigUint64Array(b);\n          }\n          cache.HEAP32F = new Float32Array(b);\n          cache.HEAP64F = new Float64Array(b);\n          cache.heapSize = b.byteLength;\n          return cache;\n        };\n\n        target.heap8 = () => heapWrappers().HEAP8;\n\n        target.heap8u = () => heapWrappers().HEAP8U;\n\n        target.heap16 = () => heapWrappers().HEAP16;\n\n        target.heap16u = () => heapWrappers().HEAP16U;\n\n        target.heap32 = () => heapWrappers().HEAP32;\n\n        target.heap32u = () => heapWrappers().HEAP32U;\n\n        target.heapForSize = function (n, unsigned = true) {\n          let ctor;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          switch (n) {\n            case Int8Array:\n              return c.HEAP8;\n            case Uint8Array:\n              return c.HEAP8U;\n            case Int16Array:\n              return c.HEAP16;\n            case Uint16Array:\n              return c.HEAP16U;\n            case Int32Array:\n              return c.HEAP32;\n            case Uint32Array:\n              return c.HEAP32U;\n            case 8:\n              return unsigned ? c.HEAP8U : c.HEAP8;\n            case 16:\n              return unsigned ? c.HEAP16U : c.HEAP16;\n            case 32:\n              return unsigned ? c.HEAP32U : c.HEAP32;\n            case 64:\n              if (c.HEAP64) return unsigned ? c.HEAP64U : c.HEAP64;\n              break;\n            default:\n              if (target.bigIntEnabled) {\n                if (n === globalThis['BigUint64Array']) return c.HEAP64U;\n                else if (n === globalThis['BigInt64Array']) return c.HEAP64;\n                break;\n              }\n          }\n          toss(\n            'Invalid heapForSize() size: expecting 8, 16, 32,',\n            'or (if BigInt is enabled) 64.',\n          );\n        };\n\n        target.functionTable = function () {\n          return target.exports.__indirect_function_table;\n        };\n\n        target.functionEntry = function (fptr) {\n          const ft = target.functionTable();\n          return fptr < ft.length ? ft.get(fptr) : undefined;\n        };\n\n        target.jsFuncToWasm = function f(func, sig) {\n          if (!f._) {\n            f._ = {\n              sigTypes: Object.assign(Object.create(null), {\n                i: 'i32',\n                p: 'i32',\n                P: 'i32',\n                s: 'i32',\n                j: 'i64',\n                f: 'f32',\n                d: 'f64',\n              }),\n\n              typeCodes: Object.assign(Object.create(null), {\n                f64: 0x7c,\n                f32: 0x7d,\n                i64: 0x7e,\n                i32: 0x7f,\n              }),\n\n              uleb128Encode: function (tgt, method, n) {\n                if (n < 128) tgt[method](n);\n                else tgt[method](n % 128 | 128, n >> 7);\n              },\n\n              rxJSig: /^(\\w)\\((\\w*)\\)$/,\n\n              sigParams: function (sig) {\n                const m = f._.rxJSig.exec(sig);\n                return m ? m[2] : sig.substr(1);\n              },\n\n              letterType: (x) =>\n                f._.sigTypes[x] || toss('Invalid signature letter:', x),\n\n              pushSigType: (dest, letter) =>\n                dest.push(f._.typeCodes[f._.letterType(letter)]),\n            };\n          }\n          if ('string' === typeof func) {\n            const x = sig;\n            sig = func;\n            func = x;\n          }\n          const sigParams = f._.sigParams(sig);\n          const wasmCode = [0x01, 0x60];\n          f._.uleb128Encode(wasmCode, 'push', sigParams.length);\n          for (const x of sigParams) f._.pushSigType(wasmCode, x);\n          if ('v' === sig[0]) wasmCode.push(0);\n          else {\n            wasmCode.push(1);\n            f._.pushSigType(wasmCode, sig[0]);\n          }\n          f._.uleb128Encode(wasmCode, 'unshift', wasmCode.length);\n          wasmCode.unshift(\n            0x00,\n            0x61,\n            0x73,\n            0x6d,\n            0x01,\n            0x00,\n            0x00,\n            0x00,\n            0x01,\n          );\n          wasmCode.push(\n            0x02,\n            0x07,\n\n            0x01,\n            0x01,\n            0x65,\n            0x01,\n            0x66,\n            0x00,\n            0x00,\n            0x07,\n            0x05,\n\n            0x01,\n            0x01,\n            0x66,\n            0x00,\n            0x00,\n          );\n          return new WebAssembly.Instance(\n            new WebAssembly.Module(new Uint8Array(wasmCode)),\n            {\n              e: { f: func },\n            },\n          ).exports['f'];\n        };\n\n        const __installFunction = function f(func, sig, scoped) {\n          if (scoped && !cache.scopedAlloc.length) {\n            toss('No scopedAllocPush() scope is active.');\n          }\n          if ('string' === typeof func) {\n            const x = sig;\n            sig = func;\n            func = x;\n          }\n          if ('string' !== typeof sig || !(func instanceof Function)) {\n            toss(\n              'Invalid arguments: expecting (function,signature) ' +\n                'or (signature,function).',\n            );\n          }\n          const ft = target.functionTable();\n          const oldLen = ft.length;\n          let ptr;\n          while (cache.freeFuncIndexes.length) {\n            ptr = cache.freeFuncIndexes.pop();\n            if (ft.get(ptr)) {\n              ptr = null;\n              continue;\n            } else {\n              break;\n            }\n          }\n          if (!ptr) {\n            ptr = oldLen;\n            ft.grow(1);\n          }\n          try {\n            ft.set(ptr, func);\n            if (scoped) {\n              cache.scopedAlloc[cache.scopedAlloc.length - 1].push(ptr);\n            }\n            return ptr;\n          } catch (e) {\n            if (!(e instanceof TypeError)) {\n              if (ptr === oldLen) cache.freeFuncIndexes.push(oldLen);\n              throw e;\n            }\n          }\n\n          try {\n            const fptr = target.jsFuncToWasm(func, sig);\n            ft.set(ptr, fptr);\n            if (scoped) {\n              cache.scopedAlloc[cache.scopedAlloc.length - 1].push(ptr);\n            }\n          } catch (e) {\n            if (ptr === oldLen) cache.freeFuncIndexes.push(oldLen);\n            throw e;\n          }\n          return ptr;\n        };\n\n        target.installFunction = (func, sig) =>\n          __installFunction(func, sig, false);\n\n        target.scopedInstallFunction = (func, sig) =>\n          __installFunction(func, sig, true);\n\n        target.uninstallFunction = function (ptr) {\n          if (!ptr && 0 !== ptr) return undefined;\n          const fi = cache.freeFuncIndexes;\n          const ft = target.functionTable();\n          fi.push(ptr);\n          const rc = ft.get(ptr);\n          ft.set(ptr, null);\n          return rc;\n        };\n\n        target.peek = function f(ptr, type = 'i8') {\n          if (type.endsWith('*')) type = ptrIR;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          const list = Array.isArray(ptr) ? [] : undefined;\n          let rc;\n          do {\n            if (list) ptr = arguments[0].shift();\n            switch (type) {\n              case 'i1':\n              case 'i8':\n                rc = c.HEAP8[ptr >> 0];\n                break;\n              case 'i16':\n                rc = c.HEAP16[ptr >> 1];\n                break;\n              case 'i32':\n                rc = c.HEAP32[ptr >> 2];\n                break;\n              case 'float':\n              case 'f32':\n                rc = c.HEAP32F[ptr >> 2];\n                break;\n              case 'double':\n              case 'f64':\n                rc = Number(c.HEAP64F[ptr >> 3]);\n                break;\n              case 'i64':\n                if (target.bigIntEnabled) {\n                  rc = BigInt(c.HEAP64[ptr >> 3]);\n                  break;\n                }\n\n              default:\n                toss('Invalid type for peek():', type);\n            }\n            if (list) list.push(rc);\n          } while (list && arguments[0].length);\n          return list || rc;\n        };\n\n        target.poke = function (ptr, value, type = 'i8') {\n          if (type.endsWith('*')) type = ptrIR;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          for (const p of Array.isArray(ptr) ? ptr : [ptr]) {\n            switch (type) {\n              case 'i1':\n              case 'i8':\n                c.HEAP8[p >> 0] = value;\n                continue;\n              case 'i16':\n                c.HEAP16[p >> 1] = value;\n                continue;\n              case 'i32':\n                c.HEAP32[p >> 2] = value;\n                continue;\n              case 'float':\n              case 'f32':\n                c.HEAP32F[p >> 2] = value;\n                continue;\n              case 'double':\n              case 'f64':\n                c.HEAP64F[p >> 3] = value;\n                continue;\n              case 'i64':\n                if (c.HEAP64) {\n                  c.HEAP64[p >> 3] = BigInt(value);\n                  continue;\n                }\n\n              default:\n                toss('Invalid type for poke(): ' + type);\n            }\n          }\n          return this;\n        };\n\n        target.peekPtr = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, ptrIR);\n\n        target.pokePtr = (ptr, value = 0) => target.poke(ptr, value, ptrIR);\n\n        target.peek8 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i8');\n\n        target.poke8 = (ptr, value) => target.poke(ptr, value, 'i8');\n\n        target.peek16 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i16');\n\n        target.poke16 = (ptr, value) => target.poke(ptr, value, 'i16');\n\n        target.peek32 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i32');\n\n        target.poke32 = (ptr, value) => target.poke(ptr, value, 'i32');\n\n        target.peek64 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i64');\n\n        target.poke64 = (ptr, value) => target.poke(ptr, value, 'i64');\n\n        target.peek32f = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'f32');\n\n        target.poke32f = (ptr, value) => target.poke(ptr, value, 'f32');\n\n        target.peek64f = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'f64');\n\n        target.poke64f = (ptr, value) => target.poke(ptr, value, 'f64');\n\n        target.getMemValue = target.peek;\n\n        target.getPtrValue = target.peekPtr;\n\n        target.setMemValue = target.poke;\n\n        target.setPtrValue = target.pokePtr;\n\n        target.isPtr32 = (ptr) =>\n          'number' === typeof ptr && ptr === (ptr | 0) && ptr >= 0;\n\n        target.isPtr = target.isPtr32;\n\n        target.cstrlen = function (ptr) {\n          if (!ptr || !target.isPtr(ptr)) return null;\n          const h = heapWrappers().HEAP8U;\n          let pos = ptr;\n          for (; h[pos] !== 0; ++pos) {}\n          return pos - ptr;\n        };\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n        const __utf8Decode = function (arrayBuffer, begin, end) {\n          return cache.utf8Decoder.decode(\n            arrayBuffer.buffer instanceof __SAB\n              ? arrayBuffer.slice(begin, end)\n              : arrayBuffer.subarray(begin, end),\n          );\n        };\n\n        target.cstrToJs = function (ptr) {\n          const n = target.cstrlen(ptr);\n          return n\n            ? __utf8Decode(heapWrappers().HEAP8U, ptr, ptr + n)\n            : null === n\n              ? n\n              : '';\n        };\n\n        target.jstrlen = function (str) {\n          if ('string' !== typeof str) return null;\n          const n = str.length;\n          let len = 0;\n          for (let i = 0; i < n; ++i) {\n            let u = str.charCodeAt(i);\n            if (u >= 0xd800 && u <= 0xdfff) {\n              u =\n                (0x10000 + ((u & 0x3ff) << 10)) | (str.charCodeAt(++i) & 0x3ff);\n            }\n            if (u <= 0x7f) ++len;\n            else if (u <= 0x7ff) len += 2;\n            else if (u <= 0xffff) len += 3;\n            else len += 4;\n          }\n          return len;\n        };\n\n        target.jstrcpy = function (\n          jstr,\n          tgt,\n          offset = 0,\n          maxBytes = -1,\n          addNul = true,\n        ) {\n          if (\n            !tgt ||\n            (!(tgt instanceof Int8Array) && !(tgt instanceof Uint8Array))\n          ) {\n            toss('jstrcpy() target must be an Int8Array or Uint8Array.');\n          }\n          if (maxBytes < 0) maxBytes = tgt.length - offset;\n          if (!(maxBytes > 0) || !(offset >= 0)) return 0;\n          let i = 0,\n            max = jstr.length;\n          const begin = offset,\n            end = offset + maxBytes - (addNul ? 1 : 0);\n          for (; i < max && offset < end; ++i) {\n            let u = jstr.charCodeAt(i);\n            if (u >= 0xd800 && u <= 0xdfff) {\n              u =\n                (0x10000 + ((u & 0x3ff) << 10)) |\n                (jstr.charCodeAt(++i) & 0x3ff);\n            }\n            if (u <= 0x7f) {\n              if (offset >= end) break;\n              tgt[offset++] = u;\n            } else if (u <= 0x7ff) {\n              if (offset + 1 >= end) break;\n              tgt[offset++] = 0xc0 | (u >> 6);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            } else if (u <= 0xffff) {\n              if (offset + 2 >= end) break;\n              tgt[offset++] = 0xe0 | (u >> 12);\n              tgt[offset++] = 0x80 | ((u >> 6) & 0x3f);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            } else {\n              if (offset + 3 >= end) break;\n              tgt[offset++] = 0xf0 | (u >> 18);\n              tgt[offset++] = 0x80 | ((u >> 12) & 0x3f);\n              tgt[offset++] = 0x80 | ((u >> 6) & 0x3f);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            }\n          }\n          if (addNul) tgt[offset++] = 0;\n          return offset - begin;\n        };\n\n        target.cstrncpy = function (tgtPtr, srcPtr, n) {\n          if (!tgtPtr || !srcPtr)\n            toss('cstrncpy() does not accept NULL strings.');\n          if (n < 0) n = target.cstrlen(strPtr) + 1;\n          else if (!(n > 0)) return 0;\n          const heap = target.heap8u();\n          let i = 0,\n            ch;\n          for (; i < n && (ch = heap[srcPtr + i]); ++i) {\n            heap[tgtPtr + i] = ch;\n          }\n          if (i < n) heap[tgtPtr + i++] = 0;\n          return i;\n        };\n\n        target.jstrToUintArray = (str, addNul = false) => {\n          return cache.utf8Encoder.encode(addNul ? str + '\\0' : str);\n        };\n\n        const __affirmAlloc = (obj, funcName) => {\n          if (\n            !(obj.alloc instanceof Function) ||\n            !(obj.dealloc instanceof Function)\n          ) {\n            toss(\n              'Object is missing alloc() and/or dealloc() function(s)',\n              'required by',\n              funcName + '().',\n            );\n          }\n        };\n\n        const __allocCStr = function (\n          jstr,\n          returnWithLength,\n          allocator,\n          funcName,\n        ) {\n          __affirmAlloc(target, funcName);\n          if ('string' !== typeof jstr) return null;\n          if (0) {\n            const n = target.jstrlen(jstr),\n              ptr = allocator(n + 1);\n            target.jstrcpy(jstr, target.heap8u(), ptr, n + 1, true);\n            return returnWithLength ? [ptr, n] : ptr;\n          } else {\n            const u = cache.utf8Encoder.encode(jstr),\n              ptr = allocator(u.length + 1),\n              heap = heapWrappers().HEAP8U;\n            heap.set(u, ptr);\n            heap[ptr + u.length] = 0;\n            return returnWithLength ? [ptr, u.length] : ptr;\n          }\n        };\n\n        target.allocCString = (jstr, returnWithLength = false) =>\n          __allocCStr(jstr, returnWithLength, target.alloc, 'allocCString()');\n\n        target.scopedAllocPush = function () {\n          __affirmAlloc(target, 'scopedAllocPush');\n          const a = [];\n          cache.scopedAlloc.push(a);\n          return a;\n        };\n\n        target.scopedAllocPop = function (state) {\n          __affirmAlloc(target, 'scopedAllocPop');\n          const n = arguments.length\n            ? cache.scopedAlloc.indexOf(state)\n            : cache.scopedAlloc.length - 1;\n          if (n < 0) toss('Invalid state object for scopedAllocPop().');\n          if (0 === arguments.length) state = cache.scopedAlloc[n];\n          cache.scopedAlloc.splice(n, 1);\n          for (let p; (p = state.pop()); ) {\n            if (target.functionEntry(p)) {\n              target.uninstallFunction(p);\n            } else target.dealloc(p);\n          }\n        };\n\n        target.scopedAlloc = function (n) {\n          if (!cache.scopedAlloc.length) {\n            toss('No scopedAllocPush() scope is active.');\n          }\n          const p = target.alloc(n);\n          cache.scopedAlloc[cache.scopedAlloc.length - 1].push(p);\n          return p;\n        };\n\n        Object.defineProperty(target.scopedAlloc, 'level', {\n          configurable: false,\n          enumerable: false,\n          get: () => cache.scopedAlloc.length,\n          set: () => toss(\"The 'active' property is read-only.\"),\n        });\n\n        target.scopedAllocCString = (jstr, returnWithLength = false) =>\n          __allocCStr(\n            jstr,\n            returnWithLength,\n            target.scopedAlloc,\n            'scopedAllocCString()',\n          );\n\n        const __allocMainArgv = function (isScoped, list) {\n          const pList = target[isScoped ? 'scopedAlloc' : 'alloc'](\n            (list.length + 1) * target.ptrSizeof,\n          );\n          let i = 0;\n          list.forEach((e) => {\n            target.pokePtr(\n              pList + target.ptrSizeof * i++,\n              target[isScoped ? 'scopedAllocCString' : 'allocCString']('' + e),\n            );\n          });\n          target.pokePtr(pList + target.ptrSizeof * i, 0);\n          return pList;\n        };\n\n        target.scopedAllocMainArgv = (list) => __allocMainArgv(true, list);\n\n        target.allocMainArgv = (list) => __allocMainArgv(false, list);\n\n        target.cArgvToJs = (argc, pArgv) => {\n          const list = [];\n          for (let i = 0; i < argc; ++i) {\n            const arg = target.peekPtr(pArgv + target.ptrSizeof * i);\n            list.push(arg ? target.cstrToJs(arg) : null);\n          }\n          return list;\n        };\n\n        target.scopedAllocCall = function (func) {\n          target.scopedAllocPush();\n          try {\n            return func();\n          } finally {\n            target.scopedAllocPop();\n          }\n        };\n\n        const __allocPtr = function (howMany, safePtrSize, method) {\n          __affirmAlloc(target, method);\n          const pIr = safePtrSize ? 'i64' : ptrIR;\n          let m = target[method](howMany * (safePtrSize ? 8 : ptrSizeof));\n          target.poke(m, 0, pIr);\n          if (1 === howMany) {\n            return m;\n          }\n          const a = [m];\n          for (let i = 1; i < howMany; ++i) {\n            m += safePtrSize ? 8 : ptrSizeof;\n            a[i] = m;\n            target.poke(m, 0, pIr);\n          }\n          return a;\n        };\n\n        target.allocPtr = (howMany = 1, safePtrSize = true) =>\n          __allocPtr(howMany, safePtrSize, 'alloc');\n\n        target.scopedAllocPtr = (howMany = 1, safePtrSize = true) =>\n          __allocPtr(howMany, safePtrSize, 'scopedAlloc');\n\n        target.xGet = function (name) {\n          return (\n            target.exports[name] || toss('Cannot find exported symbol:', name)\n          );\n        };\n\n        const __argcMismatch = (f, n) =>\n          toss(f + '() requires', n, 'argument(s).');\n\n        target.xCall = function (fname, ...args) {\n          const f = fname instanceof Function ? fname : target.xGet(fname);\n          if (!(f instanceof Function))\n            toss('Exported symbol', fname, 'is not a function.');\n          if (f.length !== args.length)\n            __argcMismatch(f === fname ? f.name : fname, f.length);\n          return 2 === arguments.length && Array.isArray(arguments[1])\n            ? f.apply(null, arguments[1])\n            : f.apply(null, args);\n        };\n\n        cache.xWrap = Object.create(null);\n        cache.xWrap.convert = Object.create(null);\n\n        cache.xWrap.convert.arg = new Map();\n\n        cache.xWrap.convert.result = new Map();\n        const xArg = cache.xWrap.convert.arg,\n          xResult = cache.xWrap.convert.result;\n\n        if (target.bigIntEnabled) {\n          xArg.set('i64', (i) => BigInt(i));\n        }\n        const __xArgPtr =\n          'i32' === ptrIR ? (i) => i | 0 : (i) => BigInt(i) | BigInt(0);\n        xArg\n          .set('i32', __xArgPtr)\n          .set('i16', (i) => (i | 0) & 0xffff)\n          .set('i8', (i) => (i | 0) & 0xff)\n          .set('f32', (i) => Number(i).valueOf())\n          .set('float', xArg.get('f32'))\n          .set('f64', xArg.get('f32'))\n          .set('double', xArg.get('f64'))\n          .set('int', xArg.get('i32'))\n          .set('null', (i) => i)\n          .set(null, xArg.get('null'))\n          .set('**', __xArgPtr)\n          .set('*', __xArgPtr);\n        xResult\n          .set('*', __xArgPtr)\n          .set('pointer', __xArgPtr)\n          .set('number', (v) => Number(v))\n          .set('void', (v) => undefined)\n          .set('null', (v) => v)\n          .set(null, xResult.get('null'));\n\n        {\n          const copyToResult = [\n            'i8',\n            'i16',\n            'i32',\n            'int',\n            'f32',\n            'float',\n            'f64',\n            'double',\n          ];\n          if (target.bigIntEnabled) copyToResult.push('i64');\n          const adaptPtr = xArg.get(ptrIR);\n          for (const t of copyToResult) {\n            xArg.set(t + '*', adaptPtr);\n            xResult.set(t + '*', adaptPtr);\n            xResult.set(t, xArg.get(t) || toss('Missing arg converter:', t));\n          }\n        }\n\n        const __xArgString = function (v) {\n          if ('string' === typeof v) return target.scopedAllocCString(v);\n          return v ? __xArgPtr(v) : null;\n        };\n        xArg\n          .set('string', __xArgString)\n          .set('utf8', __xArgString)\n          .set('pointer', __xArgString);\n\n        xResult\n          .set('string', (i) => target.cstrToJs(i))\n          .set('utf8', xResult.get('string'))\n          .set('string:dealloc', (i) => {\n            try {\n              return i ? target.cstrToJs(i) : null;\n            } finally {\n              target.dealloc(i);\n            }\n          })\n          .set('utf8:dealloc', xResult.get('string:dealloc'))\n          .set('json', (i) => JSON.parse(target.cstrToJs(i)))\n          .set('json:dealloc', (i) => {\n            try {\n              return i ? JSON.parse(target.cstrToJs(i)) : null;\n            } finally {\n              target.dealloc(i);\n            }\n          });\n\n        const AbstractArgAdapter = class {\n          constructor(opt) {\n            this.name = opt.name || 'unnamed adapter';\n          }\n\n          convertArg(v, argv, argIndex) {\n            toss('AbstractArgAdapter must be subclassed.');\n          }\n        };\n\n        xArg.FuncPtrAdapter = class FuncPtrAdapter extends AbstractArgAdapter {\n          constructor(opt) {\n            super(opt);\n            if (xArg.FuncPtrAdapter.warnOnUse) {\n              console.warn(\n                'xArg.FuncPtrAdapter is an internal-only API',\n                'and is not intended to be invoked from',\n                'client-level code. Invoked with:',\n                opt,\n              );\n            }\n            this.name = opt.name || 'unnamed';\n            this.signature = opt.signature;\n            if (opt.contextKey instanceof Function) {\n              this.contextKey = opt.contextKey;\n              if (!opt.bindScope) opt.bindScope = 'context';\n            }\n            this.bindScope =\n              opt.bindScope ||\n              toss(\n                'FuncPtrAdapter options requires a bindScope (explicit or implied).',\n              );\n            if (FuncPtrAdapter.bindScopes.indexOf(opt.bindScope) < 0) {\n              toss(\n                'Invalid options.bindScope (' +\n                  opt.bindMod +\n                  ') for FuncPtrAdapter. ' +\n                  'Expecting one of: (' +\n                  FuncPtrAdapter.bindScopes.join(', ') +\n                  ')',\n              );\n            }\n            this.isTransient = 'transient' === this.bindScope;\n            this.isContext = 'context' === this.bindScope;\n            this.isPermanent = 'permanent' === this.bindScope;\n            this.singleton = 'singleton' === this.bindScope ? [] : undefined;\n\n            this.callProxy =\n              opt.callProxy instanceof Function ? opt.callProxy : undefined;\n          }\n\n          contextKey(argv, argIndex) {\n            return this;\n          }\n\n          contextMap(key) {\n            const cm = this.__cmap || (this.__cmap = new Map());\n            let rc = cm.get(key);\n            if (undefined === rc) cm.set(key, (rc = []));\n            return rc;\n          }\n\n          convertArg(v, argv, argIndex) {\n            let pair = this.singleton;\n            if (!pair && this.isContext) {\n              pair = this.contextMap(this.contextKey(argv, argIndex));\n            }\n            if (pair && pair[0] === v) return pair[1];\n            if (v instanceof Function) {\n              if (this.callProxy) v = this.callProxy(v);\n              const fp = __installFunction(v, this.signature, this.isTransient);\n              if (FuncPtrAdapter.debugFuncInstall) {\n                FuncPtrAdapter.debugOut(\n                  'FuncPtrAdapter installed',\n                  this,\n                  this.contextKey(argv, argIndex),\n                  '@' + fp,\n                  v,\n                );\n              }\n              if (pair) {\n                if (pair[1]) {\n                  if (FuncPtrAdapter.debugFuncInstall) {\n                    FuncPtrAdapter.debugOut(\n                      'FuncPtrAdapter uninstalling',\n                      this,\n                      this.contextKey(argv, argIndex),\n                      '@' + pair[1],\n                      v,\n                    );\n                  }\n                  try {\n                    cache.scopedAlloc[cache.scopedAlloc.length - 1].push(\n                      pair[1],\n                    );\n                  } catch (e) {}\n                }\n                pair[0] = v;\n                pair[1] = fp;\n              }\n              return fp;\n            } else if (target.isPtr(v) || null === v || undefined === v) {\n              if (pair && pair[1] && pair[1] !== v) {\n                if (FuncPtrAdapter.debugFuncInstall) {\n                  FuncPtrAdapter.debugOut(\n                    'FuncPtrAdapter uninstalling',\n                    this,\n                    this.contextKey(argv, argIndex),\n                    '@' + pair[1],\n                    v,\n                  );\n                }\n                try {\n                  cache.scopedAlloc[cache.scopedAlloc.length - 1].push(pair[1]);\n                } catch (e) {}\n                pair[0] = pair[1] = v | 0;\n              }\n              return v || 0;\n            } else {\n              throw new TypeError(\n                'Invalid FuncPtrAdapter argument type. ' +\n                  'Expecting a function pointer or a ' +\n                  (this.name ? this.name + ' ' : '') +\n                  'function matching signature ' +\n                  this.signature +\n                  '.',\n              );\n            }\n          }\n        };\n\n        xArg.FuncPtrAdapter.warnOnUse = false;\n\n        xArg.FuncPtrAdapter.debugFuncInstall = false;\n\n        xArg.FuncPtrAdapter.debugOut = console.debug.bind(console);\n\n        xArg.FuncPtrAdapter.bindScopes = [\n          'transient',\n          'context',\n          'singleton',\n          'permanent',\n        ];\n\n        const __xArgAdapterCheck = (t) =>\n          xArg.get(t) || toss('Argument adapter not found:', t);\n\n        const __xResultAdapterCheck = (t) =>\n          xResult.get(t) || toss('Result adapter not found:', t);\n\n        cache.xWrap.convertArg = (t, ...args) => __xArgAdapterCheck(t)(...args);\n\n        cache.xWrap.convertArgNoCheck = (t, ...args) => xArg.get(t)(...args);\n\n        cache.xWrap.convertResult = (t, v) =>\n          null === t ? v : t ? __xResultAdapterCheck(t)(v) : undefined;\n\n        cache.xWrap.convertResultNoCheck = (t, v) =>\n          null === t ? v : t ? xResult.get(t)(v) : undefined;\n\n        target.xWrap = function (fArg, resultType, ...argTypes) {\n          if (3 === arguments.length && Array.isArray(arguments[2])) {\n            argTypes = arguments[2];\n          }\n          if (target.isPtr(fArg)) {\n            fArg =\n              target.functionEntry(fArg) ||\n              toss('Function pointer not found in WASM function table.');\n          }\n          const fIsFunc = fArg instanceof Function;\n          const xf = fIsFunc ? fArg : target.xGet(fArg);\n          if (fIsFunc) fArg = xf.name || 'unnamed function';\n          if (argTypes.length !== xf.length) __argcMismatch(fArg, xf.length);\n          if (null === resultType && 0 === xf.length) {\n            return xf;\n          }\n          if (undefined !== resultType && null !== resultType)\n            __xResultAdapterCheck(resultType);\n          for (const t of argTypes) {\n            if (t instanceof AbstractArgAdapter)\n              xArg.set(t, (...args) => t.convertArg(...args));\n            else __xArgAdapterCheck(t);\n          }\n          const cxw = cache.xWrap;\n          if (0 === xf.length) {\n            return (...args) =>\n              args.length\n                ? __argcMismatch(fArg, xf.length)\n                : cxw.convertResult(resultType, xf.call(null));\n          }\n          return function (...args) {\n            if (args.length !== xf.length) __argcMismatch(fArg, xf.length);\n            const scope = target.scopedAllocPush();\n            try {\n              let i = 0;\n              for (; i < args.length; ++i)\n                args[i] = cxw.convertArgNoCheck(argTypes[i], args[i], args, i);\n              return cxw.convertResultNoCheck(resultType, xf.apply(null, args));\n            } finally {\n              target.scopedAllocPop(scope);\n            }\n          };\n        };\n\n        const __xAdapter = function (\n          func,\n          argc,\n          typeName,\n          adapter,\n          modeName,\n          xcvPart,\n        ) {\n          if ('string' === typeof typeName) {\n            if (1 === argc) return xcvPart.get(typeName);\n            else if (2 === argc) {\n              if (!adapter) {\n                delete xcvPart.get(typeName);\n                return func;\n              } else if (!(adapter instanceof Function)) {\n                toss(modeName, 'requires a function argument.');\n              }\n              xcvPart.set(typeName, adapter);\n              return func;\n            }\n          }\n          toss('Invalid arguments to', modeName);\n        };\n\n        target.xWrap.resultAdapter = function f(typeName, adapter) {\n          return __xAdapter(\n            f,\n            arguments.length,\n            typeName,\n            adapter,\n            'resultAdapter()',\n            xResult,\n          );\n        };\n\n        target.xWrap.argAdapter = function f(typeName, adapter) {\n          return __xAdapter(\n            f,\n            arguments.length,\n            typeName,\n            adapter,\n            'argAdapter()',\n            xArg,\n          );\n        };\n\n        target.xWrap.FuncPtrAdapter = xArg.FuncPtrAdapter;\n\n        target.xCallWrapped = function (fArg, resultType, argTypes, ...args) {\n          if (Array.isArray(arguments[3])) args = arguments[3];\n          return target\n            .xWrap(fArg, resultType, argTypes || [])\n            .apply(null, args || []);\n        };\n\n        target.xWrap.testConvertArg = cache.xWrap.convertArg;\n\n        target.xWrap.testConvertResult = cache.xWrap.convertResult;\n\n        return target;\n      };\n\n      globalThis.WhWasmUtilInstaller.yawl = function (config) {\n        const wfetch = () => fetch(config.uri, { credentials: 'same-origin' });\n        const wui = this;\n        const finalThen = function (arg) {\n          if (config.wasmUtilTarget) {\n            const toss = (...args) => {\n              throw new Error(args.join(' '));\n            };\n            const tgt = config.wasmUtilTarget;\n            tgt.module = arg.module;\n            tgt.instance = arg.instance;\n\n            if (!tgt.instance.exports.memory) {\n              tgt.memory =\n                (config.imports &&\n                  config.imports.env &&\n                  config.imports.env.memory) ||\n                toss(\"Missing 'memory' object!\");\n            }\n            if (!tgt.alloc && arg.instance.exports.malloc) {\n              const exports = arg.instance.exports;\n              tgt.alloc = function (n) {\n                return (\n                  exports.malloc(n) || toss('Allocation of', n, 'bytes failed.')\n                );\n              };\n              tgt.dealloc = function (m) {\n                exports.free(m);\n              };\n            }\n            wui(tgt);\n          }\n          if (config.onload) config.onload(arg, config);\n          return arg;\n        };\n        const loadWasm = WebAssembly.instantiateStreaming\n          ? function loadWasmStreaming() {\n              return WebAssembly.instantiateStreaming(\n                wfetch(),\n                config.imports || {},\n              ).then(finalThen);\n            }\n          : function loadWasmOldSchool() {\n              return wfetch()\n                .then((response) => response.arrayBuffer())\n                .then((bytes) =>\n                  WebAssembly.instantiate(bytes, config.imports || {}),\n                )\n                .then(finalThen);\n            };\n        return loadWasm;\n      }.bind(globalThis.WhWasmUtilInstaller);\n\n      ('use strict');\n      globalThis.Jaccwabyt = function StructBinderFactory(config) {\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n\n        if (\n          !(config.heap instanceof WebAssembly.Memory) &&\n          !(config.heap instanceof Function)\n        ) {\n          toss(\n            'config.heap must be WebAssembly.Memory instance or a function.',\n          );\n        }\n        ['alloc', 'dealloc'].forEach(function (k) {\n          config[k] instanceof Function ||\n            toss(\"Config option '\" + k + \"' must be a function.\");\n        });\n        const SBF = StructBinderFactory;\n        const heap =\n            config.heap instanceof Function\n              ? config.heap\n              : () => new Uint8Array(config.heap.buffer),\n          alloc = config.alloc,\n          dealloc = config.dealloc,\n          log = config.log || console.log.bind(console),\n          memberPrefix = config.memberPrefix || '',\n          memberSuffix = config.memberSuffix || '',\n          bigIntEnabled =\n            undefined === config.bigIntEnabled\n              ? !!globalThis['BigInt64Array']\n              : !!config.bigIntEnabled,\n          BigInt = globalThis['BigInt'],\n          BigInt64Array = globalThis['BigInt64Array'],\n          ptrSizeof = config.ptrSizeof || 4,\n          ptrIR = config.ptrIR || 'i32';\n        if (!SBF.debugFlags) {\n          SBF.__makeDebugFlags = function (deriveFrom = null) {\n            if (deriveFrom && deriveFrom.__flags)\n              deriveFrom = deriveFrom.__flags;\n            const f = function f(flags) {\n              if (0 === arguments.length) {\n                return f.__flags;\n              }\n              if (flags < 0) {\n                delete f.__flags.getter;\n                delete f.__flags.setter;\n                delete f.__flags.alloc;\n                delete f.__flags.dealloc;\n              } else {\n                f.__flags.getter = 0 !== (0x01 & flags);\n                f.__flags.setter = 0 !== (0x02 & flags);\n                f.__flags.alloc = 0 !== (0x04 & flags);\n                f.__flags.dealloc = 0 !== (0x08 & flags);\n              }\n              return f._flags;\n            };\n            Object.defineProperty(f, '__flags', {\n              iterable: false,\n              writable: false,\n              value: Object.create(deriveFrom),\n            });\n            if (!deriveFrom) f(0);\n            return f;\n          };\n          SBF.debugFlags = SBF.__makeDebugFlags();\n        }\n\n        const isLittleEndian = (function () {\n          const buffer = new ArrayBuffer(2);\n          new DataView(buffer).setInt16(0, 256, true);\n\n          return new Int16Array(buffer)[0] === 256;\n        })();\n\n        const isFuncSig = (s) => '(' === s[1];\n\n        const isPtrSig = (s) => 'p' === s || 'P' === s;\n        const isAutoPtrSig = (s) => 'P' === s;\n        const sigLetter = (s) => (isFuncSig(s) ? 'p' : s[0]);\n\n        const sigIR = function (s) {\n          switch (sigLetter(s)) {\n            case 'c':\n            case 'C':\n              return 'i8';\n            case 'i':\n              return 'i32';\n            case 'p':\n            case 'P':\n            case 's':\n              return ptrIR;\n            case 'j':\n              return 'i64';\n            case 'f':\n              return 'float';\n            case 'd':\n              return 'double';\n          }\n          toss('Unhandled signature IR:', s);\n        };\n\n        const affirmBigIntArray = BigInt64Array\n          ? () => true\n          : () => toss('BigInt64Array is not available.');\n\n        const sigDVGetter = function (s) {\n          switch (sigLetter(s)) {\n            case 'p':\n            case 'P':\n            case 's': {\n              switch (ptrSizeof) {\n                case 4:\n                  return 'getInt32';\n                case 8:\n                  return affirmBigIntArray() && 'getBigInt64';\n              }\n              break;\n            }\n            case 'i':\n              return 'getInt32';\n            case 'c':\n              return 'getInt8';\n            case 'C':\n              return 'getUint8';\n            case 'j':\n              return affirmBigIntArray() && 'getBigInt64';\n            case 'f':\n              return 'getFloat32';\n            case 'd':\n              return 'getFloat64';\n          }\n          toss('Unhandled DataView getter for signature:', s);\n        };\n\n        const sigDVSetter = function (s) {\n          switch (sigLetter(s)) {\n            case 'p':\n            case 'P':\n            case 's': {\n              switch (ptrSizeof) {\n                case 4:\n                  return 'setInt32';\n                case 8:\n                  return affirmBigIntArray() && 'setBigInt64';\n              }\n              break;\n            }\n            case 'i':\n              return 'setInt32';\n            case 'c':\n              return 'setInt8';\n            case 'C':\n              return 'setUint8';\n            case 'j':\n              return affirmBigIntArray() && 'setBigInt64';\n            case 'f':\n              return 'setFloat32';\n            case 'd':\n              return 'setFloat64';\n          }\n          toss('Unhandled DataView setter for signature:', s);\n        };\n\n        const sigDVSetWrapper = function (s) {\n          switch (sigLetter(s)) {\n            case 'i':\n            case 'f':\n            case 'c':\n            case 'C':\n            case 'd':\n              return Number;\n            case 'j':\n              return affirmBigIntArray() && BigInt;\n            case 'p':\n            case 'P':\n            case 's':\n              switch (ptrSizeof) {\n                case 4:\n                  return Number;\n                case 8:\n                  return affirmBigIntArray() && BigInt;\n              }\n              break;\n          }\n          toss('Unhandled DataView set wrapper for signature:', s);\n        };\n\n        const sPropName = (s, k) => s + '::' + k;\n\n        const __propThrowOnSet = function (structName, propName) {\n          return () => toss(sPropName(structName, propName), 'is read-only.');\n        };\n\n        const __instancePointerMap = new WeakMap();\n\n        const xPtrPropName = '(pointer-is-external)';\n\n        const __freeStruct = function (ctor, obj, m) {\n          if (!m) m = __instancePointerMap.get(obj);\n          if (m) {\n            __instancePointerMap.delete(obj);\n            if (Array.isArray(obj.ondispose)) {\n              let x;\n              while ((x = obj.ondispose.shift())) {\n                try {\n                  if (x instanceof Function) x.call(obj);\n                  else if (x instanceof StructType) x.dispose();\n                  else if ('number' === typeof x) dealloc(x);\n                } catch (e) {\n                  console.warn(\n                    'ondispose() for',\n                    ctor.structName,\n                    '@',\n                    m,\n                    'threw. NOT propagating it.',\n                    e,\n                  );\n                }\n              }\n            } else if (obj.ondispose instanceof Function) {\n              try {\n                obj.ondispose();\n              } catch (e) {\n                console.warn(\n                  'ondispose() for',\n                  ctor.structName,\n                  '@',\n                  m,\n                  'threw. NOT propagating it.',\n                  e,\n                );\n              }\n            }\n            delete obj.ondispose;\n            if (ctor.debugFlags.__flags.dealloc) {\n              log(\n                'debug.dealloc:',\n                obj[xPtrPropName] ? 'EXTERNAL' : '',\n                ctor.structName,\n                'instance:',\n                ctor.structInfo.sizeof,\n                'bytes @' + m,\n              );\n            }\n            if (!obj[xPtrPropName]) dealloc(m);\n          }\n        };\n\n        const rop = (v) => {\n          return {\n            configurable: false,\n            writable: false,\n            iterable: false,\n            value: v,\n          };\n        };\n\n        const __allocStruct = function (ctor, obj, m) {\n          let fill = !m;\n          if (m) Object.defineProperty(obj, xPtrPropName, rop(m));\n          else {\n            m = alloc(ctor.structInfo.sizeof);\n            if (!m) toss('Allocation of', ctor.structName, 'structure failed.');\n          }\n          try {\n            if (ctor.debugFlags.__flags.alloc) {\n              log(\n                'debug.alloc:',\n                fill ? '' : 'EXTERNAL',\n                ctor.structName,\n                'instance:',\n                ctor.structInfo.sizeof,\n                'bytes @' + m,\n              );\n            }\n            if (fill) heap().fill(0, m, m + ctor.structInfo.sizeof);\n            __instancePointerMap.set(obj, m);\n          } catch (e) {\n            __freeStruct(ctor, obj, m);\n            throw e;\n          }\n        };\n\n        const __memoryDump = function () {\n          const p = this.pointer;\n          return p\n            ? new Uint8Array(heap().slice(p, p + this.structInfo.sizeof))\n            : null;\n        };\n\n        const __memberKey = (k) => memberPrefix + k + memberSuffix;\n        const __memberKeyProp = rop(__memberKey);\n\n        const __lookupMember = function (\n          structInfo,\n          memberName,\n          tossIfNotFound = true,\n        ) {\n          let m = structInfo.members[memberName];\n          if (!m && (memberPrefix || memberSuffix)) {\n            for (const v of Object.values(structInfo.members)) {\n              if (v.key === memberName) {\n                m = v;\n                break;\n              }\n            }\n            if (!m && tossIfNotFound) {\n              toss(\n                sPropName(structInfo.name, memberName),\n                'is not a mapped struct member.',\n              );\n            }\n          }\n          return m;\n        };\n\n        const __memberSignature = function f(\n          obj,\n          memberName,\n          emscriptenFormat = false,\n        ) {\n          if (!f._)\n            f._ = (x) =>\n              x.replace(/[^vipPsjrdcC]/g, '').replace(/[pPscC]/g, 'i');\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          return emscriptenFormat ? f._(m.signature) : m.signature;\n        };\n\n        const __ptrPropDescriptor = {\n          configurable: false,\n          enumerable: false,\n          get: function () {\n            return __instancePointerMap.get(this);\n          },\n          set: () => toss(\"Cannot assign the 'pointer' property of a struct.\"),\n        };\n\n        const __structMemberKeys = rop(function () {\n          const a = [];\n          for (const k of Object.keys(this.structInfo.members)) {\n            a.push(this.memberKey(k));\n          }\n          return a;\n        });\n\n        const __utf8Decoder = new TextDecoder('utf-8');\n        const __utf8Encoder = new TextEncoder();\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n        const __utf8Decode = function (arrayBuffer, begin, end) {\n          return __utf8Decoder.decode(\n            arrayBuffer.buffer instanceof __SAB\n              ? arrayBuffer.slice(begin, end)\n              : arrayBuffer.subarray(begin, end),\n          );\n        };\n\n        const __memberIsString = function (\n          obj,\n          memberName,\n          tossIfNotFound = false,\n        ) {\n          const m = __lookupMember(obj.structInfo, memberName, tossIfNotFound);\n          return m && 1 === m.signature.length && 's' === m.signature[0]\n            ? m\n            : false;\n        };\n\n        const __affirmCStringSignature = function (member) {\n          if ('s' === member.signature) return;\n          toss(\n            'Invalid member type signature for C-string value:',\n            JSON.stringify(member),\n          );\n        };\n\n        const __memberToJsString = function f(obj, memberName) {\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          __affirmCStringSignature(m);\n          const addr = obj[m.key];\n\n          if (!addr) return null;\n          let pos = addr;\n          const mem = heap();\n          for (; mem[pos] !== 0; ++pos) {}\n\n          return addr === pos ? '' : __utf8Decode(mem, addr, pos);\n        };\n\n        const __addOnDispose = function (obj, ...v) {\n          if (obj.ondispose) {\n            if (!Array.isArray(obj.ondispose)) {\n              obj.ondispose = [obj.ondispose];\n            }\n          } else {\n            obj.ondispose = [];\n          }\n          obj.ondispose.push(...v);\n        };\n\n        const __allocCString = function (str) {\n          const u = __utf8Encoder.encode(str);\n          const mem = alloc(u.length + 1);\n          if (!mem) toss('Allocation error while duplicating string:', str);\n          const h = heap();\n\n          h.set(u, mem);\n          h[mem + u.length] = 0;\n\n          return mem;\n        };\n\n        const __setMemberCString = function (obj, memberName, str) {\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          __affirmCStringSignature(m);\n\n          const mem = __allocCString(str);\n          obj[m.key] = mem;\n          __addOnDispose(obj, mem);\n          return obj;\n        };\n\n        const StructType = function ctor(structName, structInfo) {\n          if (arguments[2] !== rop) {\n            toss(\n              'Do not call the StructType constructor',\n              'from client-level code.',\n            );\n          }\n          Object.defineProperties(this, {\n            structName: rop(structName),\n            structInfo: rop(structInfo),\n          });\n        };\n\n        StructType.prototype = Object.create(null, {\n          dispose: rop(function () {\n            __freeStruct(this.constructor, this);\n          }),\n          lookupMember: rop(function (memberName, tossIfNotFound = true) {\n            return __lookupMember(this.structInfo, memberName, tossIfNotFound);\n          }),\n          memberToJsString: rop(function (memberName) {\n            return __memberToJsString(this, memberName);\n          }),\n          memberIsString: rop(function (memberName, tossIfNotFound = true) {\n            return __memberIsString(this, memberName, tossIfNotFound);\n          }),\n          memberKey: __memberKeyProp,\n          memberKeys: __structMemberKeys,\n          memberSignature: rop(function (memberName, emscriptenFormat = false) {\n            return __memberSignature(this, memberName, emscriptenFormat);\n          }),\n          memoryDump: rop(__memoryDump),\n          pointer: __ptrPropDescriptor,\n          setMemberCString: rop(function (memberName, str) {\n            return __setMemberCString(this, memberName, str);\n          }),\n        });\n\n        Object.assign(StructType.prototype, {\n          addOnDispose: function (...v) {\n            __addOnDispose(this, ...v);\n            return this;\n          },\n        });\n\n        Object.defineProperties(StructType, {\n          allocCString: rop(__allocCString),\n          isA: rop((v) => v instanceof StructType),\n          hasExternalPointer: rop(\n            (v) => v instanceof StructType && !!v[xPtrPropName],\n          ),\n          memberKey: __memberKeyProp,\n        });\n\n        const isNumericValue = (v) =>\n          Number.isFinite(v) || v instanceof (BigInt || Number);\n\n        const makeMemberWrapper = function f(ctor, name, descr) {\n          if (!f._) {\n            f._ = { getters: {}, setters: {}, sw: {} };\n            const a = ['i', 'c', 'C', 'p', 'P', 's', 'f', 'd', 'v()'];\n            if (bigIntEnabled) a.push('j');\n            a.forEach(function (v) {\n              f._.getters[v] = sigDVGetter(v);\n              f._.setters[v] = sigDVSetter(v);\n              f._.sw[v] = sigDVSetWrapper(v);\n            });\n            const rxSig1 = /^[ipPsjfdcC]$/,\n              rxSig2 = /^[vipPsjfdcC]\\([ipPsjfdcC]*\\)$/;\n            f.sigCheck = function (obj, name, key, sig) {\n              if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                toss(obj.structName, 'already has a property named', key + '.');\n              }\n              rxSig1.test(sig) ||\n                rxSig2.test(sig) ||\n                toss(\n                  'Malformed signature for',\n                  sPropName(obj.structName, name) + ':',\n                  sig,\n                );\n            };\n          }\n          const key = ctor.memberKey(name);\n          f.sigCheck(ctor.prototype, name, key, descr.signature);\n          descr.key = key;\n          descr.name = name;\n          const sigGlyph = sigLetter(descr.signature);\n          const xPropName = sPropName(ctor.prototype.structName, key);\n          const dbg = ctor.prototype.debugFlags.__flags;\n\n          const prop = Object.create(null);\n          prop.configurable = false;\n          prop.enumerable = false;\n          prop.get = function () {\n            if (dbg.getter) {\n              log(\n                'debug.getter:',\n                f._.getters[sigGlyph],\n                'for',\n                sigIR(sigGlyph),\n                xPropName,\n                '@',\n                this.pointer,\n                '+',\n                descr.offset,\n                'sz',\n                descr.sizeof,\n              );\n            }\n            let rc = new DataView(\n              heap().buffer,\n              this.pointer + descr.offset,\n              descr.sizeof,\n            )[f._.getters[sigGlyph]](0, isLittleEndian);\n            if (dbg.getter) log('debug.getter:', xPropName, 'result =', rc);\n            return rc;\n          };\n          if (descr.readOnly) {\n            prop.set = __propThrowOnSet(ctor.prototype.structName, key);\n          } else {\n            prop.set = function (v) {\n              if (dbg.setter) {\n                log(\n                  'debug.setter:',\n                  f._.setters[sigGlyph],\n                  'for',\n                  sigIR(sigGlyph),\n                  xPropName,\n                  '@',\n                  this.pointer,\n                  '+',\n                  descr.offset,\n                  'sz',\n                  descr.sizeof,\n                  v,\n                );\n              }\n              if (!this.pointer) {\n                toss('Cannot set struct property on disposed instance.');\n              }\n              if (null === v) v = 0;\n              else\n                while (!isNumericValue(v)) {\n                  if (\n                    isAutoPtrSig(descr.signature) &&\n                    v instanceof StructType\n                  ) {\n                    v = v.pointer || 0;\n                    if (dbg.setter)\n                      log('debug.setter:', xPropName, 'resolved to', v);\n                    break;\n                  }\n                  toss('Invalid value for pointer-type', xPropName + '.');\n                }\n              new DataView(\n                heap().buffer,\n                this.pointer + descr.offset,\n                descr.sizeof,\n              )[f._.setters[sigGlyph]](0, f._.sw[sigGlyph](v), isLittleEndian);\n            };\n          }\n          Object.defineProperty(ctor.prototype, key, prop);\n        };\n\n        const StructBinder = function StructBinder(structName, structInfo) {\n          if (1 === arguments.length) {\n            structInfo = structName;\n            structName = structInfo.name;\n          } else if (!structInfo.name) {\n            structInfo.name = structName;\n          }\n          if (!structName) toss('Struct name is required.');\n          let lastMember = false;\n          Object.keys(structInfo.members).forEach((k) => {\n            const m = structInfo.members[k];\n            if (!m.sizeof) toss(structName, 'member', k, 'is missing sizeof.');\n            else if (m.sizeof === 1) {\n              m.signature === 'c' ||\n                m.signature === 'C' ||\n                toss(\n                  'Unexpected sizeof==1 member',\n                  sPropName(structInfo.name, k),\n                  'with signature',\n                  m.signature,\n                );\n            } else {\n              if (0 !== m.sizeof % 4) {\n                console.warn(\n                  'Invalid struct member description =',\n                  m,\n                  'from',\n                  structInfo,\n                );\n                toss(\n                  structName,\n                  'member',\n                  k,\n                  'sizeof is not aligned. sizeof=' + m.sizeof,\n                );\n              }\n              if (0 !== m.offset % 4) {\n                console.warn(\n                  'Invalid struct member description =',\n                  m,\n                  'from',\n                  structInfo,\n                );\n                toss(\n                  structName,\n                  'member',\n                  k,\n                  'offset is not aligned. offset=' + m.offset,\n                );\n              }\n            }\n            if (!lastMember || lastMember.offset < m.offset) lastMember = m;\n          });\n          if (!lastMember) toss('No member property descriptions found.');\n          else if (structInfo.sizeof < lastMember.offset + lastMember.sizeof) {\n            toss(\n              'Invalid struct config:',\n              structName,\n              'max member offset (' + lastMember.offset + ') ',\n              'extends past end of struct (sizeof=' + structInfo.sizeof + ').',\n            );\n          }\n          const debugFlags = rop(SBF.__makeDebugFlags(StructBinder.debugFlags));\n\n          const StructCtor = function StructCtor(externalMemory) {\n            if (!(this instanceof StructCtor)) {\n              toss(\n                'The',\n                structName,\n                \"constructor may only be called via 'new'.\",\n              );\n            } else if (arguments.length) {\n              if (\n                externalMemory !== (externalMemory | 0) ||\n                externalMemory <= 0\n              ) {\n                toss('Invalid pointer value for', structName, 'constructor.');\n              }\n              __allocStruct(StructCtor, this, externalMemory);\n            } else {\n              __allocStruct(StructCtor, this);\n            }\n          };\n          Object.defineProperties(StructCtor, {\n            debugFlags: debugFlags,\n            isA: rop((v) => v instanceof StructCtor),\n            memberKey: __memberKeyProp,\n            memberKeys: __structMemberKeys,\n            methodInfoForKey: rop(function (mKey) {}),\n            structInfo: rop(structInfo),\n            structName: rop(structName),\n          });\n          StructCtor.prototype = new StructType(structName, structInfo, rop);\n          Object.defineProperties(StructCtor.prototype, {\n            debugFlags: debugFlags,\n            constructor: rop(StructCtor),\n          });\n          Object.keys(structInfo.members).forEach((name) =>\n            makeMemberWrapper(StructCtor, name, structInfo.members[name]),\n          );\n          return StructCtor;\n        };\n        StructBinder.StructType = StructType;\n        StructBinder.config = config;\n        StructBinder.allocCString = __allocCString;\n        if (!StructBinder.debugFlags) {\n          StructBinder.debugFlags = SBF.__makeDebugFlags(SBF.debugFlags);\n        }\n        return StructBinder;\n      };\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        'use strict';\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n        const toss3 = sqlite3.SQLite3Error.toss;\n        const capi = sqlite3.capi,\n          wasm = sqlite3.wasm,\n          util = sqlite3.util;\n        globalThis.WhWasmUtilInstaller(wasm);\n        delete globalThis.WhWasmUtilInstaller;\n\n        if (0) {\n          const dealloc = wasm.exports[sqlite3.config.deallocExportName];\n          const nFunc = wasm.functionTable().length;\n          let i;\n          for (i = 0; i < nFunc; ++i) {\n            const e = wasm.functionEntry(i);\n            if (dealloc === e) {\n              capi.SQLITE_WASM_DEALLOC = i;\n              break;\n            }\n          }\n          if (dealloc !== wasm.functionEntry(capi.SQLITE_WASM_DEALLOC)) {\n            toss(\n              'Internal error: cannot find function pointer for SQLITE_WASM_DEALLOC.',\n            );\n          }\n        }\n\n        wasm.bindingSignatures = [\n          ['sqlite3_aggregate_context', 'void*', 'sqlite3_context*', 'int'],\n\n          ['sqlite3_bind_double', 'int', 'sqlite3_stmt*', 'int', 'f64'],\n          ['sqlite3_bind_int', 'int', 'sqlite3_stmt*', 'int', 'int'],\n          ['sqlite3_bind_null', undefined, 'sqlite3_stmt*', 'int'],\n          ['sqlite3_bind_parameter_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_bind_parameter_index', 'int', 'sqlite3_stmt*', 'string'],\n          [\n            'sqlite3_bind_pointer',\n            'int',\n            'sqlite3_stmt*',\n            'int',\n            '*',\n            'string:static',\n            '*',\n          ],\n          [\n            'sqlite3_busy_handler',\n            'int',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                signature: 'i(pi)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_busy_timeout', 'int', 'sqlite3*', 'int'],\n\n          ['sqlite3_changes', 'int', 'sqlite3*'],\n          ['sqlite3_clear_bindings', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_collation_needed', 'int', 'sqlite3*', '*', '*'],\n          ['sqlite3_column_blob', '*', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_bytes', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_column_double', 'f64', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_int', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_name', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_text', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_type', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_value', 'sqlite3_value*', 'sqlite3_stmt*', 'int'],\n          [\n            'sqlite3_commit_hook',\n            'void*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_commit_hook',\n                signature: 'i(p)',\n                contextKey: (argv) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_compileoption_get', 'string', 'int'],\n          ['sqlite3_compileoption_used', 'int', 'string'],\n          ['sqlite3_complete', 'int', 'string:flexible'],\n          ['sqlite3_context_db_handle', 'sqlite3*', 'sqlite3_context*'],\n\n          ['sqlite3_data_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_db_filename', 'string', 'sqlite3*', 'string'],\n          ['sqlite3_db_handle', 'sqlite3*', 'sqlite3_stmt*'],\n          ['sqlite3_db_name', 'string', 'sqlite3*', 'int'],\n          ['sqlite3_db_status', 'int', 'sqlite3*', 'int', '*', '*', 'int'],\n          ['sqlite3_errcode', 'int', 'sqlite3*'],\n          ['sqlite3_errmsg', 'string', 'sqlite3*'],\n          ['sqlite3_error_offset', 'int', 'sqlite3*'],\n          ['sqlite3_errstr', 'string', 'int'],\n          [\n            'sqlite3_exec',\n            'int',\n            [\n              'sqlite3*',\n              'string:flexible',\n              new wasm.xWrap.FuncPtrAdapter({\n                signature: 'i(pipp)',\n                bindScope: 'transient',\n                callProxy: (callback) => {\n                  let aNames;\n                  return (pVoid, nCols, pColVals, pColNames) => {\n                    try {\n                      const aVals = wasm.cArgvToJs(nCols, pColVals);\n                      if (!aNames) aNames = wasm.cArgvToJs(nCols, pColNames);\n                      return callback(aVals, aNames) | 0;\n                    } catch (e) {\n                      return e.resultCode || capi.SQLITE_ERROR;\n                    }\n                  };\n                },\n              }),\n              '*',\n              '**',\n            ],\n          ],\n          ['sqlite3_expanded_sql', 'string', 'sqlite3_stmt*'],\n          ['sqlite3_extended_errcode', 'int', 'sqlite3*'],\n          ['sqlite3_extended_result_codes', 'int', 'sqlite3*', 'int'],\n          ['sqlite3_file_control', 'int', 'sqlite3*', 'string', 'int', '*'],\n          ['sqlite3_finalize', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_free', undefined, '*'],\n          ['sqlite3_get_autocommit', 'int', 'sqlite3*'],\n          ['sqlite3_get_auxdata', '*', 'sqlite3_context*', 'int'],\n          ['sqlite3_initialize', undefined],\n\n          ['sqlite3_keyword_count', 'int'],\n          ['sqlite3_keyword_name', 'int', ['int', '**', '*']],\n          ['sqlite3_keyword_check', 'int', ['string', 'int']],\n          ['sqlite3_libversion', 'string'],\n          ['sqlite3_libversion_number', 'int'],\n          ['sqlite3_limit', 'int', ['sqlite3*', 'int', 'int']],\n          ['sqlite3_malloc', '*', 'int'],\n          ['sqlite3_open', 'int', 'string', '*'],\n          ['sqlite3_open_v2', 'int', 'string', '*', 'int', 'string'],\n\n          [\n            'sqlite3_progress_handler',\n            undefined,\n            [\n              'sqlite3*',\n              'int',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xProgressHandler',\n                signature: 'i(p)',\n                bindScope: 'context',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_realloc', '*', '*', 'int'],\n          ['sqlite3_reset', 'int', 'sqlite3_stmt*'],\n\n          [\n            'sqlite3_result_blob',\n            undefined,\n            'sqlite3_context*',\n            '*',\n            'int',\n            '*',\n          ],\n          ['sqlite3_result_double', undefined, 'sqlite3_context*', 'f64'],\n          [\n            'sqlite3_result_error',\n            undefined,\n            'sqlite3_context*',\n            'string',\n            'int',\n          ],\n          ['sqlite3_result_error_code', undefined, 'sqlite3_context*', 'int'],\n          ['sqlite3_result_error_nomem', undefined, 'sqlite3_context*'],\n          ['sqlite3_result_error_toobig', undefined, 'sqlite3_context*'],\n          ['sqlite3_result_int', undefined, 'sqlite3_context*', 'int'],\n          ['sqlite3_result_null', undefined, 'sqlite3_context*'],\n          [\n            'sqlite3_result_pointer',\n            undefined,\n            'sqlite3_context*',\n            '*',\n            'string:static',\n            '*',\n          ],\n          ['sqlite3_result_subtype', undefined, 'sqlite3_value*', 'int'],\n          [\n            'sqlite3_result_text',\n            undefined,\n            'sqlite3_context*',\n            'string',\n            'int',\n            '*',\n          ],\n          ['sqlite3_result_zeroblob', undefined, 'sqlite3_context*', 'int'],\n          [\n            'sqlite3_rollback_hook',\n            'void*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_rollback_hook',\n                signature: 'v(p)',\n                contextKey: (argv) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          [\n            'sqlite3_set_authorizer',\n            'int',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_set_authorizer::xAuth',\n                signature: 'i(pi' + 'ssss)',\n                contextKey: (argv, argIndex) => argv[0],\n                callProxy: (callback) => {\n                  return (pV, iCode, s0, s1, s2, s3) => {\n                    try {\n                      s0 = s0 && wasm.cstrToJs(s0);\n                      s1 = s1 && wasm.cstrToJs(s1);\n                      s2 = s2 && wasm.cstrToJs(s2);\n                      s3 = s3 && wasm.cstrToJs(s3);\n                      return callback(pV, iCode, s0, s1, s2, s3) || 0;\n                    } catch (e) {\n                      return e.resultCode || capi.SQLITE_ERROR;\n                    }\n                  };\n                },\n              }),\n              '*',\n            ],\n          ],\n          [\n            'sqlite3_set_auxdata',\n            undefined,\n            [\n              'sqlite3_context*',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroyAuxData',\n                signature: 'v(*)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n            ],\n          ],\n          ['sqlite3_shutdown', undefined],\n          ['sqlite3_sourceid', 'string'],\n          ['sqlite3_sql', 'string', 'sqlite3_stmt*'],\n          ['sqlite3_status', 'int', 'int', '*', '*', 'int'],\n          ['sqlite3_step', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_stmt_isexplain', 'int', ['sqlite3_stmt*']],\n          ['sqlite3_stmt_readonly', 'int', ['sqlite3_stmt*']],\n          ['sqlite3_stmt_status', 'int', 'sqlite3_stmt*', 'int', 'int'],\n          ['sqlite3_strglob', 'int', 'string', 'string'],\n          ['sqlite3_stricmp', 'int', 'string', 'string'],\n          ['sqlite3_strlike', 'int', 'string', 'string', 'int'],\n          ['sqlite3_strnicmp', 'int', 'string', 'string', 'int'],\n          [\n            'sqlite3_table_column_metadata',\n            'int',\n            'sqlite3*',\n            'string',\n            'string',\n            'string',\n            '**',\n            '**',\n            '*',\n            '*',\n            '*',\n          ],\n          ['sqlite3_total_changes', 'int', 'sqlite3*'],\n          [\n            'sqlite3_trace_v2',\n            'int',\n            [\n              'sqlite3*',\n              'int',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_trace_v2::callback',\n                signature: 'i(ippp)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_txn_state', 'int', ['sqlite3*', 'string']],\n\n          ['sqlite3_uri_boolean', 'int', 'sqlite3_filename', 'string', 'int'],\n          ['sqlite3_uri_key', 'string', 'sqlite3_filename', 'int'],\n          ['sqlite3_uri_parameter', 'string', 'sqlite3_filename', 'string'],\n          ['sqlite3_user_data', 'void*', 'sqlite3_context*'],\n          ['sqlite3_value_blob', '*', 'sqlite3_value*'],\n          ['sqlite3_value_bytes', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_double', 'f64', 'sqlite3_value*'],\n          ['sqlite3_value_dup', 'sqlite3_value*', 'sqlite3_value*'],\n          ['sqlite3_value_free', undefined, 'sqlite3_value*'],\n          ['sqlite3_value_frombind', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_int', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_nochange', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_numeric_type', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_pointer', '*', 'sqlite3_value*', 'string:static'],\n          ['sqlite3_value_subtype', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_text', 'string', 'sqlite3_value*'],\n          ['sqlite3_value_type', 'int', 'sqlite3_value*'],\n          ['sqlite3_vfs_find', '*', 'string'],\n          ['sqlite3_vfs_register', 'int', 'sqlite3_vfs*', 'int'],\n          ['sqlite3_vfs_unregister', 'int', 'sqlite3_vfs*'],\n        ];\n\n        if (false && wasm.compileOptionUsed('SQLITE_ENABLE_NORMALIZE')) {\n          wasm.bindingSignatures.push([\n            'sqlite3_normalized_sql',\n            'string',\n            'sqlite3_stmt*',\n          ]);\n        }\n\n        wasm.bindingSignatures.int64 = [\n          ['sqlite3_bind_int64', 'int', ['sqlite3_stmt*', 'int', 'i64']],\n          ['sqlite3_changes64', 'i64', ['sqlite3*']],\n          ['sqlite3_column_int64', 'i64', ['sqlite3_stmt*', 'int']],\n          [\n            'sqlite3_create_module',\n            'int',\n            ['sqlite3*', 'string', 'sqlite3_module*', '*'],\n          ],\n          [\n            'sqlite3_create_module_v2',\n            'int',\n            ['sqlite3*', 'string', 'sqlite3_module*', '*', '*'],\n          ],\n          ['sqlite3_declare_vtab', 'int', ['sqlite3*', 'string:flexible']],\n          [\n            'sqlite3_deserialize',\n            'int',\n            'sqlite3*',\n            'string',\n            '*',\n            'i64',\n            'i64',\n            'int',\n          ],\n          ['sqlite3_drop_modules', 'int', ['sqlite3*', '**']],\n          ['sqlite3_last_insert_rowid', 'i64', ['sqlite3*']],\n          ['sqlite3_malloc64', '*', 'i64'],\n          ['sqlite3_msize', 'i64', '*'],\n          ['sqlite3_overload_function', 'int', ['sqlite3*', 'string', 'int']],\n          ['sqlite3_preupdate_blobwrite', 'int', 'sqlite3*'],\n          ['sqlite3_preupdate_count', 'int', 'sqlite3*'],\n          ['sqlite3_preupdate_depth', 'int', 'sqlite3*'],\n          [\n            'sqlite3_preupdate_hook',\n            '*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_preupdate_hook',\n                signature: 'v(ppippjj)',\n                contextKey: (argv) => argv[0],\n                callProxy: (callback) => {\n                  return (p, db, op, zDb, zTbl, iKey1, iKey2) => {\n                    callback(\n                      p,\n                      db,\n                      op,\n                      wasm.cstrToJs(zDb),\n                      wasm.cstrToJs(zTbl),\n                      iKey1,\n                      iKey2,\n                    );\n                  };\n                },\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_preupdate_new', 'int', ['sqlite3*', 'int', '**']],\n          ['sqlite3_preupdate_old', 'int', ['sqlite3*', 'int', '**']],\n          ['sqlite3_realloc64', '*', '*', 'i64'],\n          ['sqlite3_result_int64', undefined, '*', 'i64'],\n          ['sqlite3_result_zeroblob64', 'int', '*', 'i64'],\n          ['sqlite3_serialize', '*', 'sqlite3*', 'string', '*', 'int'],\n          ['sqlite3_set_last_insert_rowid', undefined, ['sqlite3*', 'i64']],\n          ['sqlite3_status64', 'int', 'int', '*', '*', 'int'],\n          ['sqlite3_total_changes64', 'i64', ['sqlite3*']],\n          [\n            'sqlite3_update_hook',\n            '*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_update_hook',\n                signature: 'v(iippj)',\n                contextKey: (argv) => argv[0],\n                callProxy: (callback) => {\n                  return (p, op, z0, z1, rowid) => {\n                    callback(\n                      p,\n                      op,\n                      wasm.cstrToJs(z0),\n                      wasm.cstrToJs(z1),\n                      rowid,\n                    );\n                  };\n                },\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_uri_int64', 'i64', ['sqlite3_filename', 'string', 'i64']],\n          ['sqlite3_value_int64', 'i64', 'sqlite3_value*'],\n          ['sqlite3_vtab_collation', 'string', 'sqlite3_index_info*', 'int'],\n          ['sqlite3_vtab_distinct', 'int', 'sqlite3_index_info*'],\n          ['sqlite3_vtab_in', 'int', 'sqlite3_index_info*', 'int', 'int'],\n          ['sqlite3_vtab_in_first', 'int', 'sqlite3_value*', '**'],\n          ['sqlite3_vtab_in_next', 'int', 'sqlite3_value*', '**'],\n\n          ['sqlite3_vtab_nochange', 'int', 'sqlite3_context*'],\n          ['sqlite3_vtab_on_conflict', 'int', 'sqlite3*'],\n          ['sqlite3_vtab_rhs_value', 'int', 'sqlite3_index_info*', 'int', '**'],\n        ];\n\n        if (wasm.bigIntEnabled && !!wasm.exports.sqlite3changegroup_add) {\n          const __ipsProxy = {\n            signature: 'i(ps)',\n            callProxy: (callback) => {\n              return (p, s) => {\n                try {\n                  return callback(p, wasm.cstrToJs(s)) | 0;\n                } catch (e) {\n                  return e.resultCode || capi.SQLITE_ERROR;\n                }\n              };\n            },\n          };\n\n          wasm.bindingSignatures.int64.push(\n            ...[\n              [\n                'sqlite3changegroup_add',\n                'int',\n                ['sqlite3_changegroup*', 'int', 'void*'],\n              ],\n              [\n                'sqlite3changegroup_add_strm',\n                'int',\n                [\n                  'sqlite3_changegroup*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changegroup_delete',\n                undefined,\n                ['sqlite3_changegroup*'],\n              ],\n              ['sqlite3changegroup_new', 'int', ['**']],\n              [\n                'sqlite3changegroup_output',\n                'int',\n                ['sqlite3_changegroup*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changegroup_output_strm',\n                'int',\n                [\n                  'sqlite3_changegroup*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply',\n                'int',\n                [\n                  'sqlite3*',\n                  'int',\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_strm',\n                'int',\n                [\n                  'sqlite3*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_v2',\n                'int',\n                [\n                  'sqlite3*',\n                  'int',\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  '**',\n                  'int*',\n                  'int',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_v2_strm',\n                'int',\n                [\n                  'sqlite3*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  '**',\n                  'int*',\n                  'int',\n                ],\n              ],\n              [\n                'sqlite3changeset_concat',\n                'int',\n                ['int', 'void*', 'int', 'void*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changeset_concat_strm',\n                'int',\n                [\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInputA',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInputB',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_conflict',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              ['sqlite3changeset_finalize', 'int', ['sqlite3_changeset_iter*']],\n              [\n                'sqlite3changeset_fk_conflicts',\n                'int',\n                ['sqlite3_changeset_iter*', 'int*'],\n              ],\n              [\n                'sqlite3changeset_invert',\n                'int',\n                ['int', 'void*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changeset_invert_strm',\n                'int',\n                [\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_new',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              ['sqlite3changeset_next', 'int', ['sqlite3_changeset_iter*']],\n              [\n                'sqlite3changeset_old',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              [\n                'sqlite3changeset_op',\n                'int',\n                ['sqlite3_changeset_iter*', '**', 'int*', 'int*', 'int*'],\n              ],\n              [\n                'sqlite3changeset_pk',\n                'int',\n                ['sqlite3_changeset_iter*', '**', 'int*'],\n              ],\n              ['sqlite3changeset_start', 'int', ['**', 'int', '*']],\n              [\n                'sqlite3changeset_start_strm',\n                'int',\n                [\n                  '**',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              ['sqlite3changeset_start_v2', 'int', ['**', 'int', '*', 'int']],\n              [\n                'sqlite3changeset_start_v2_strm',\n                'int',\n                [\n                  '**',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  'int',\n                ],\n              ],\n              ['sqlite3session_attach', 'int', ['sqlite3_session*', 'string']],\n              [\n                'sqlite3session_changeset',\n                'int',\n                ['sqlite3_session*', 'int*', '**'],\n              ],\n              ['sqlite3session_changeset_size', 'i64', ['sqlite3_session*']],\n              [\n                'sqlite3session_changeset_strm',\n                'int',\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              ['sqlite3session_config', 'int', ['int', 'void*']],\n              ['sqlite3session_create', 'int', ['sqlite3*', 'string', '**']],\n\n              [\n                'sqlite3session_diff',\n                'int',\n                ['sqlite3_session*', 'string', 'string', '**'],\n              ],\n              ['sqlite3session_enable', 'int', ['sqlite3_session*', 'int']],\n              ['sqlite3session_indirect', 'int', ['sqlite3_session*', 'int']],\n              ['sqlite3session_isempty', 'int', ['sqlite3_session*']],\n              ['sqlite3session_memory_used', 'i64', ['sqlite3_session*']],\n              [\n                'sqlite3session_object_config',\n                'int',\n                ['sqlite3_session*', 'int', 'void*'],\n              ],\n              [\n                'sqlite3session_patchset',\n                'int',\n                ['sqlite3_session*', '*', '**'],\n              ],\n              [\n                'sqlite3session_patchset_strm',\n                'int',\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3session_table_filter',\n                undefined,\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    ...__ipsProxy,\n                    contextKey: (argv, argIndex) => argv[0],\n                  }),\n                  '*',\n                ],\n              ],\n            ],\n          );\n        }\n\n        wasm.bindingSignatures.wasmInternal = [\n          ['sqlite3__wasm_db_reset', 'int', 'sqlite3*'],\n          ['sqlite3__wasm_db_vfs', 'sqlite3_vfs*', 'sqlite3*', 'string'],\n          [\n            'sqlite3__wasm_vfs_create_file',\n            'int',\n            'sqlite3_vfs*',\n            'string',\n            '*',\n            'int',\n          ],\n          ['sqlite3__wasm_posix_create_file', 'int', 'string', '*', 'int'],\n          ['sqlite3__wasm_vfs_unlink', 'int', 'sqlite3_vfs*', 'string'],\n          ['sqlite3__wasm_qfmt_token', 'string:dealloc', 'string', 'int'],\n        ];\n\n        sqlite3.StructBinder = globalThis.Jaccwabyt({\n          heap: 0 ? wasm.memory : wasm.heap8u,\n          alloc: wasm.alloc,\n          dealloc: wasm.dealloc,\n          bigIntEnabled: wasm.bigIntEnabled,\n          memberPrefix: '$',\n        });\n        delete globalThis.Jaccwabyt;\n\n        {\n          const __xString = wasm.xWrap.argAdapter('string');\n          wasm.xWrap.argAdapter('string:flexible', (v) =>\n            __xString(util.flexibleString(v)),\n          );\n\n          wasm.xWrap.argAdapter(\n            'string:static',\n            function (v) {\n              if (wasm.isPtr(v)) return v;\n              v = '' + v;\n              let rc = this[v];\n              return rc || (this[v] = wasm.allocCString(v));\n            }.bind(Object.create(null)),\n          );\n\n          const __xArgPtr = wasm.xWrap.argAdapter('*');\n          const nilType = function () {};\n          wasm.xWrap.argAdapter('sqlite3_filename', __xArgPtr)(\n            'sqlite3_context*',\n            __xArgPtr,\n          )('sqlite3_value*', __xArgPtr)('void*', __xArgPtr)(\n            'sqlite3_changegroup*',\n            __xArgPtr,\n          )('sqlite3_changeset_iter*', __xArgPtr)(\n            'sqlite3_session*',\n            __xArgPtr,\n          )('sqlite3_stmt*', (v) =>\n            __xArgPtr(\n              v instanceof (sqlite3?.oo1?.Stmt || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3*', (v) =>\n            __xArgPtr(\n              v instanceof (sqlite3?.oo1?.DB || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3_index_info*', (v) =>\n            __xArgPtr(\n              v instanceof (capi.sqlite3_index_info || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3_module*', (v) =>\n            __xArgPtr(\n              v instanceof (capi.sqlite3_module || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3_vfs*', (v) => {\n            if ('string' === typeof v) {\n              return (\n                capi.sqlite3_vfs_find(v) ||\n                sqlite3.SQLite3Error.toss(\n                  capi.SQLITE_NOTFOUND,\n                  'Unknown sqlite3_vfs name:',\n                  v,\n                )\n              );\n            }\n            return __xArgPtr(\n              v instanceof (capi.sqlite3_vfs || nilType) ? v.pointer : v,\n            );\n          });\n\n          const __xRcPtr = wasm.xWrap.resultAdapter('*');\n          wasm.xWrap.resultAdapter('sqlite3*', __xRcPtr)(\n            'sqlite3_context*',\n            __xRcPtr,\n          )('sqlite3_stmt*', __xRcPtr)('sqlite3_value*', __xRcPtr)(\n            'sqlite3_vfs*',\n            __xRcPtr,\n          )('void*', __xRcPtr);\n\n          if (0 === wasm.exports.sqlite3_step.length) {\n            wasm.xWrap.doArgcCheck = false;\n            sqlite3.config.warn(\n              'Disabling sqlite3.wasm.xWrap.doArgcCheck due to environmental quirks.',\n            );\n          }\n          for (const e of wasm.bindingSignatures) {\n            capi[e[0]] = wasm.xWrap.apply(null, e);\n          }\n          for (const e of wasm.bindingSignatures.wasmInternal) {\n            util[e[0]] = wasm.xWrap.apply(null, e);\n          }\n\n          const fI64Disabled = function (fname) {\n            return () =>\n              toss(\n                fname + '() is unavailable due to lack',\n                'of BigInt support in this build.',\n              );\n          };\n          for (const e of wasm.bindingSignatures.int64) {\n            capi[e[0]] = wasm.bigIntEnabled\n              ? wasm.xWrap.apply(null, e)\n              : fI64Disabled(e[0]);\n          }\n\n          delete wasm.bindingSignatures;\n\n          if (wasm.exports.sqlite3__wasm_db_error) {\n            const __db_err = wasm.xWrap(\n              'sqlite3__wasm_db_error',\n              'int',\n              'sqlite3*',\n              'int',\n              'string',\n            );\n\n            util.sqlite3__wasm_db_error = function (pDb, resultCode, message) {\n              if (resultCode instanceof sqlite3.WasmAllocError) {\n                resultCode = capi.SQLITE_NOMEM;\n                message = 0;\n              } else if (resultCode instanceof Error) {\n                message = message || '' + resultCode;\n                resultCode = resultCode.resultCode || capi.SQLITE_ERROR;\n              }\n              return pDb ? __db_err(pDb, resultCode, message) : resultCode;\n            };\n          } else {\n            util.sqlite3__wasm_db_error = function (pDb, errCode, msg) {\n              console.warn(\n                'sqlite3__wasm_db_error() is not exported.',\n                arguments,\n              );\n              return errCode;\n            };\n          }\n        }\n\n        {\n          const cJson = wasm.xCall('sqlite3__wasm_enum_json');\n          if (!cJson) {\n            toss(\n              \"Maintenance required: increase sqlite3__wasm_enum_json()'s\",\n              'static buffer size!',\n            );\n          }\n\n          wasm.ctype = JSON.parse(wasm.cstrToJs(cJson));\n\n          const defineGroups = [\n            'access',\n            'authorizer',\n            'blobFinalizers',\n            'changeset',\n            'config',\n            'dataTypes',\n            'dbConfig',\n            'dbStatus',\n            'encodings',\n            'fcntl',\n            'flock',\n            'ioCap',\n            'limits',\n            'openFlags',\n            'prepareFlags',\n            'resultCodes',\n            'sqlite3Status',\n            'stmtStatus',\n            'syncFlags',\n            'trace',\n            'txnState',\n            'udfFlags',\n            'version',\n          ];\n          if (wasm.bigIntEnabled) {\n            defineGroups.push('serialize', 'session', 'vtab');\n          }\n          for (const t of defineGroups) {\n            for (const e of Object.entries(wasm.ctype[t])) {\n              capi[e[0]] = e[1];\n            }\n          }\n          if (!wasm.functionEntry(capi.SQLITE_WASM_DEALLOC)) {\n            toss(\n              'Internal error: cannot resolve exported function',\n              'entry SQLITE_WASM_DEALLOC (==' + capi.SQLITE_WASM_DEALLOC + ').',\n            );\n          }\n          const __rcMap = Object.create(null);\n          for (const t of ['resultCodes']) {\n            for (const e of Object.entries(wasm.ctype[t])) {\n              __rcMap[e[1]] = e[0];\n            }\n          }\n\n          capi.sqlite3_js_rc_str = (rc) => __rcMap[rc];\n\n          const notThese = Object.assign(Object.create(null), {\n            WasmTestStruct: true,\n\n            sqlite3_kvvfs_methods: !util.isUIThread(),\n\n            sqlite3_index_info: !wasm.bigIntEnabled,\n            sqlite3_index_constraint: !wasm.bigIntEnabled,\n            sqlite3_index_orderby: !wasm.bigIntEnabled,\n            sqlite3_index_constraint_usage: !wasm.bigIntEnabled,\n          });\n          for (const s of wasm.ctype.structs) {\n            if (!notThese[s.name]) {\n              capi[s.name] = sqlite3.StructBinder(s);\n            }\n          }\n          if (capi.sqlite3_index_info) {\n            for (const k of [\n              'sqlite3_index_constraint',\n              'sqlite3_index_orderby',\n              'sqlite3_index_constraint_usage',\n            ]) {\n              capi.sqlite3_index_info[k] = capi[k];\n              delete capi[k];\n            }\n            capi.sqlite3_vtab_config = wasm.xWrap(\n              'sqlite3__wasm_vtab_config',\n              'int',\n              ['sqlite3*', 'int', 'int'],\n            );\n          }\n        }\n\n        const __dbArgcMismatch = (pDb, f, n) => {\n          return util.sqlite3__wasm_db_error(\n            pDb,\n            capi.SQLITE_MISUSE,\n            f + '() requires ' + n + ' argument' + (1 === n ? '' : 's') + '.',\n          );\n        };\n\n        const __errEncoding = (pDb) => {\n          return util.sqlite3__wasm_db_error(\n            pDb,\n            capi.SQLITE_FORMAT,\n            'SQLITE_UTF8 is the only supported encoding.',\n          );\n        };\n\n        const __argPDb = (pDb) => wasm.xWrap.argAdapter('sqlite3*')(pDb);\n        const __argStr = (str) => (wasm.isPtr(str) ? wasm.cstrToJs(str) : str);\n        const __dbCleanupMap = function (pDb, mode) {\n          pDb = __argPDb(pDb);\n          let m = this.dbMap.get(pDb);\n          if (!mode) {\n            this.dbMap.delete(pDb);\n            return m;\n          } else if (!m && mode > 0) {\n            this.dbMap.set(pDb, (m = Object.create(null)));\n          }\n          return m;\n        }.bind(\n          Object.assign(Object.create(null), {\n            dbMap: new Map(),\n          }),\n        );\n\n        __dbCleanupMap.addCollation = function (pDb, name) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.collation) m.collation = new Set();\n          m.collation.add(__argStr(name).toLowerCase());\n        };\n\n        __dbCleanupMap._addUDF = function (pDb, name, arity, map) {\n          name = __argStr(name).toLowerCase();\n          let u = map.get(name);\n          if (!u) map.set(name, (u = new Set()));\n          u.add(arity < 0 ? -1 : arity);\n        };\n\n        __dbCleanupMap.addFunction = function (pDb, name, arity) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.udf) m.udf = new Map();\n          this._addUDF(pDb, name, arity, m.udf);\n        };\n\n        __dbCleanupMap.addWindowFunc = function (pDb, name, arity) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.wudf) m.wudf = new Map();\n          this._addUDF(pDb, name, arity, m.wudf);\n        };\n\n        __dbCleanupMap.cleanup = function (pDb) {\n          pDb = __argPDb(pDb);\n\n          const closeArgs = [pDb];\n          for (const name of [\n            'sqlite3_busy_handler',\n            'sqlite3_commit_hook',\n            'sqlite3_preupdate_hook',\n            'sqlite3_progress_handler',\n            'sqlite3_rollback_hook',\n            'sqlite3_set_authorizer',\n            'sqlite3_trace_v2',\n            'sqlite3_update_hook',\n          ]) {\n            const x = wasm.exports[name];\n            closeArgs.length = x.length;\n            try {\n              capi[name](...closeArgs);\n            } catch (e) {\n              console.warn(\n                'close-time call of',\n                name + '(',\n                closeArgs,\n                ') threw:',\n                e,\n              );\n            }\n          }\n          const m = __dbCleanupMap(pDb, 0);\n          if (!m) return;\n          if (m.collation) {\n            for (const name of m.collation) {\n              try {\n                capi.sqlite3_create_collation_v2(\n                  pDb,\n                  name,\n                  capi.SQLITE_UTF8,\n                  0,\n                  0,\n                  0,\n                );\n              } catch (e) {}\n            }\n            delete m.collation;\n          }\n          let i;\n          for (i = 0; i < 2; ++i) {\n            const fmap = i ? m.wudf : m.udf;\n            if (!fmap) continue;\n            const func = i\n              ? capi.sqlite3_create_window_function\n              : capi.sqlite3_create_function_v2;\n            for (const e of fmap) {\n              const name = e[0],\n                arities = e[1];\n              const fargs = [pDb, name, 0, capi.SQLITE_UTF8, 0, 0, 0, 0, 0];\n              if (i) fargs.push(0);\n              for (const arity of arities) {\n                try {\n                  fargs[2] = arity;\n                  func.apply(null, fargs);\n                } catch (e) {}\n              }\n              arities.clear();\n            }\n            fmap.clear();\n          }\n          delete m.udf;\n          delete m.wudf;\n        };\n\n        {\n          const __sqlite3CloseV2 = wasm.xWrap(\n            'sqlite3_close_v2',\n            'int',\n            'sqlite3*',\n          );\n          capi.sqlite3_close_v2 = function (pDb) {\n            if (1 !== arguments.length)\n              return __dbArgcMismatch(pDb, 'sqlite3_close_v2', 1);\n            if (pDb) {\n              try {\n                __dbCleanupMap.cleanup(pDb);\n              } catch (e) {}\n            }\n            return __sqlite3CloseV2(pDb);\n          };\n        }\n\n        if (capi.sqlite3session_table_filter) {\n          const __sqlite3SessionDelete = wasm.xWrap(\n            'sqlite3session_delete',\n            undefined,\n            ['sqlite3_session*'],\n          );\n          capi.sqlite3session_delete = function (pSession) {\n            if (1 !== arguments.length) {\n              return __dbArgcMismatch(pDb, 'sqlite3session_delete', 1);\n            } else if (pSession) {\n              capi.sqlite3session_table_filter(pSession, 0, 0);\n            }\n            __sqlite3SessionDelete(pSession);\n          };\n        }\n\n        {\n          const contextKey = (argv, argIndex) => {\n            return (\n              'argv[' +\n              argIndex +\n              ']:' +\n              argv[0] +\n              ':' +\n              wasm.cstrToJs(argv[1]).toLowerCase()\n            );\n          };\n          const __sqlite3CreateCollationV2 = wasm.xWrap(\n            'sqlite3_create_collation_v2',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xCompare',\n                signature: 'i(pipip)',\n                contextKey,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                signature: 'v(p)',\n                contextKey,\n              }),\n            ],\n          );\n\n          capi.sqlite3_create_collation_v2 = function (\n            pDb,\n            zName,\n            eTextRep,\n            pArg,\n            xCompare,\n            xDestroy,\n          ) {\n            if (6 !== arguments.length)\n              return __dbArgcMismatch(pDb, 'sqlite3_create_collation_v2', 6);\n            else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateCollationV2(\n                pDb,\n                zName,\n                eTextRep,\n                pArg,\n                xCompare,\n                xDestroy,\n              );\n              if (0 === rc && xCompare instanceof Function) {\n                __dbCleanupMap.addCollation(pDb, zName);\n              }\n              return rc;\n            } catch (e) {\n              return util.sqlite3__wasm_db_error(pDb, e);\n            }\n          };\n\n          capi.sqlite3_create_collation = (\n            pDb,\n            zName,\n            eTextRep,\n            pArg,\n            xCompare,\n          ) => {\n            return 5 === arguments.length\n              ? capi.sqlite3_create_collation_v2(\n                  pDb,\n                  zName,\n                  eTextRep,\n                  pArg,\n                  xCompare,\n                  0,\n                )\n              : __dbArgcMismatch(pDb, 'sqlite3_create_collation', 5);\n          };\n        }\n\n        {\n          const contextKey = function (argv, argIndex) {\n            return (\n              argv[0] +\n              ':' +\n              (argv[2] < 0 ? -1 : argv[2]) +\n              ':' +\n              argIndex +\n              ':' +\n              wasm.cstrToJs(argv[1]).toLowerCase()\n            );\n          };\n\n          const __cfProxy = Object.assign(Object.create(null), {\n            xInverseAndStep: {\n              signature: 'v(pip)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx, argc, pArgv) => {\n                  try {\n                    callback(pCtx, ...capi.sqlite3_values_to_js(argc, pArgv));\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xFinalAndValue: {\n              signature: 'v(p)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx) => {\n                  try {\n                    capi.sqlite3_result_js(pCtx, callback(pCtx));\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xFunc: {\n              signature: 'v(pip)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx, argc, pArgv) => {\n                  try {\n                    capi.sqlite3_result_js(\n                      pCtx,\n                      callback(pCtx, ...capi.sqlite3_values_to_js(argc, pArgv)),\n                    );\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xDestroy: {\n              signature: 'v(p)',\n              contextKey,\n\n              callProxy: (callback) => {\n                return (pVoid) => {\n                  try {\n                    callback(pVoid);\n                  } catch (e) {\n                    console.error('UDF xDestroy method threw:', e);\n                  }\n                };\n              },\n            },\n          });\n\n          const __sqlite3CreateFunction = wasm.xWrap(\n            'sqlite3_create_function_v2',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFunc',\n                ...__cfProxy.xFunc,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xStep',\n                ...__cfProxy.xInverseAndStep,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFinal',\n                ...__cfProxy.xFinalAndValue,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                ...__cfProxy.xDestroy,\n              }),\n            ],\n          );\n\n          const __sqlite3CreateWindowFunction = wasm.xWrap(\n            'sqlite3_create_window_function',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xStep',\n                ...__cfProxy.xInverseAndStep,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFinal',\n                ...__cfProxy.xFinalAndValue,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xValue',\n                ...__cfProxy.xFinalAndValue,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xInverse',\n                ...__cfProxy.xInverseAndStep,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                ...__cfProxy.xDestroy,\n              }),\n            ],\n          );\n\n          capi.sqlite3_create_function_v2 = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                pDb,\n                'sqlite3_create_function_v2',\n                f.length,\n              );\n            } else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateFunction(\n                pDb,\n                funcName,\n                nArg,\n                eTextRep,\n                pApp,\n                xFunc,\n                xStep,\n                xFinal,\n                xDestroy,\n              );\n              if (\n                0 === rc &&\n                (xFunc instanceof Function ||\n                  xStep instanceof Function ||\n                  xFinal instanceof Function ||\n                  xDestroy instanceof Function)\n              ) {\n                __dbCleanupMap.addFunction(pDb, funcName, nArg);\n              }\n              return rc;\n            } catch (e) {\n              console.error('sqlite3_create_function_v2() setup threw:', e);\n              return util.sqlite3__wasm_db_error(\n                pDb,\n                e,\n                'Creation of UDF threw: ' + e,\n              );\n            }\n          };\n\n          capi.sqlite3_create_function = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n          ) {\n            return f.length === arguments.length\n              ? capi.sqlite3_create_function_v2(\n                  pDb,\n                  funcName,\n                  nArg,\n                  eTextRep,\n                  pApp,\n                  xFunc,\n                  xStep,\n                  xFinal,\n                  0,\n                )\n              : __dbArgcMismatch(pDb, 'sqlite3_create_function', f.length);\n          };\n\n          capi.sqlite3_create_window_function = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xStep,\n            xFinal,\n            xValue,\n            xInverse,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                pDb,\n                'sqlite3_create_window_function',\n                f.length,\n              );\n            } else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateWindowFunction(\n                pDb,\n                funcName,\n                nArg,\n                eTextRep,\n                pApp,\n                xStep,\n                xFinal,\n                xValue,\n                xInverse,\n                xDestroy,\n              );\n              if (\n                0 === rc &&\n                (xStep instanceof Function ||\n                  xFinal instanceof Function ||\n                  xValue instanceof Function ||\n                  xInverse instanceof Function ||\n                  xDestroy instanceof Function)\n              ) {\n                __dbCleanupMap.addWindowFunc(pDb, funcName, nArg);\n              }\n              return rc;\n            } catch (e) {\n              console.error('sqlite3_create_window_function() setup threw:', e);\n              return util.sqlite3__wasm_db_error(\n                pDb,\n                e,\n                'Creation of UDF threw: ' + e,\n              );\n            }\n          };\n\n          capi.sqlite3_create_function_v2.udfSetResult =\n            capi.sqlite3_create_function.udfSetResult =\n            capi.sqlite3_create_window_function.udfSetResult =\n              capi.sqlite3_result_js;\n\n          capi.sqlite3_create_function_v2.udfConvertArgs =\n            capi.sqlite3_create_function.udfConvertArgs =\n            capi.sqlite3_create_window_function.udfConvertArgs =\n              capi.sqlite3_values_to_js;\n\n          capi.sqlite3_create_function_v2.udfSetError =\n            capi.sqlite3_create_function.udfSetError =\n            capi.sqlite3_create_window_function.udfSetError =\n              capi.sqlite3_result_error_js;\n        }\n\n        {\n          const __flexiString = (v, n) => {\n            if ('string' === typeof v) {\n              n = -1;\n            } else if (util.isSQLableTypedArray(v)) {\n              n = v.byteLength;\n              v = util.typedArrayToString(\n                v instanceof ArrayBuffer ? new Uint8Array(v) : v,\n              );\n            } else if (Array.isArray(v)) {\n              v = v.join('');\n              n = -1;\n            }\n            return [v, n];\n          };\n\n          const __prepare = {\n            basic: wasm.xWrap('sqlite3_prepare_v3', 'int', [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '**',\n              '**',\n            ]),\n\n            full: wasm.xWrap('sqlite3_prepare_v3', 'int', [\n              'sqlite3*',\n              '*',\n              'int',\n              'int',\n              '**',\n              '**',\n            ]),\n          };\n\n          capi.sqlite3_prepare_v3 = function f(\n            pDb,\n            sql,\n            sqlLen,\n            prepFlags,\n            ppStmt,\n            pzTail,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(pDb, 'sqlite3_prepare_v3', f.length);\n            }\n            const [xSql, xSqlLen] = __flexiString(sql, sqlLen);\n            switch (typeof xSql) {\n              case 'string':\n                return __prepare.basic(\n                  pDb,\n                  xSql,\n                  xSqlLen,\n                  prepFlags,\n                  ppStmt,\n                  null,\n                );\n              case 'number':\n                return __prepare.full(\n                  pDb,\n                  xSql,\n                  xSqlLen,\n                  prepFlags,\n                  ppStmt,\n                  pzTail,\n                );\n              default:\n                return util.sqlite3__wasm_db_error(\n                  pDb,\n                  capi.SQLITE_MISUSE,\n                  'Invalid SQL argument type for sqlite3_prepare_v2/v3().',\n                );\n            }\n          };\n\n          capi.sqlite3_prepare_v2 = function f(\n            pDb,\n            sql,\n            sqlLen,\n            ppStmt,\n            pzTail,\n          ) {\n            return f.length === arguments.length\n              ? capi.sqlite3_prepare_v3(pDb, sql, sqlLen, 0, ppStmt, pzTail)\n              : __dbArgcMismatch(pDb, 'sqlite3_prepare_v2', f.length);\n          };\n        }\n\n        {\n          const __bindText = wasm.xWrap('sqlite3_bind_text', 'int', [\n            'sqlite3_stmt*',\n            'int',\n            'string',\n            'int',\n            '*',\n          ]);\n          const __bindBlob = wasm.xWrap('sqlite3_bind_blob', 'int', [\n            'sqlite3_stmt*',\n            'int',\n            '*',\n            'int',\n            '*',\n          ]);\n\n          capi.sqlite3_bind_text = function f(\n            pStmt,\n            iCol,\n            text,\n            nText,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                capi.sqlite3_db_handle(pStmt),\n                'sqlite3_bind_text',\n                f.length,\n              );\n            } else if (wasm.isPtr(text) || null === text) {\n              return __bindText(pStmt, iCol, text, nText, xDestroy);\n            } else if (text instanceof ArrayBuffer) {\n              text = new Uint8Array(text);\n            } else if (Array.isArray(pMem)) {\n              text = pMem.join('');\n            }\n            let p, n;\n            try {\n              if (util.isSQLableTypedArray(text)) {\n                p = wasm.allocFromTypedArray(text);\n                n = text.byteLength;\n              } else if ('string' === typeof text) {\n                [p, n] = wasm.allocCString(text);\n              } else {\n                return util.sqlite3__wasm_db_error(\n                  capi.sqlite3_db_handle(pStmt),\n                  capi.SQLITE_MISUSE,\n                  'Invalid 3rd argument type for sqlite3_bind_text().',\n                );\n              }\n              return __bindText(pStmt, iCol, p, n, capi.SQLITE_WASM_DEALLOC);\n            } catch (e) {\n              wasm.dealloc(p);\n              return util.sqlite3__wasm_db_error(\n                capi.sqlite3_db_handle(pStmt),\n                e,\n              );\n            }\n          };\n\n          capi.sqlite3_bind_blob = function f(\n            pStmt,\n            iCol,\n            pMem,\n            nMem,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                capi.sqlite3_db_handle(pStmt),\n                'sqlite3_bind_blob',\n                f.length,\n              );\n            } else if (wasm.isPtr(pMem) || null === pMem) {\n              return __bindBlob(pStmt, iCol, pMem, nMem, xDestroy);\n            } else if (pMem instanceof ArrayBuffer) {\n              pMem = new Uint8Array(pMem);\n            } else if (Array.isArray(pMem)) {\n              pMem = pMem.join('');\n            }\n            let p, n;\n            try {\n              if (util.isBindableTypedArray(pMem)) {\n                p = wasm.allocFromTypedArray(pMem);\n                n = nMem >= 0 ? nMem : pMem.byteLength;\n              } else if ('string' === typeof pMem) {\n                [p, n] = wasm.allocCString(pMem);\n              } else {\n                return util.sqlite3__wasm_db_error(\n                  capi.sqlite3_db_handle(pStmt),\n                  capi.SQLITE_MISUSE,\n                  'Invalid 3rd argument type for sqlite3_bind_blob().',\n                );\n              }\n              return __bindBlob(pStmt, iCol, p, n, capi.SQLITE_WASM_DEALLOC);\n            } catch (e) {\n              wasm.dealloc(p);\n              return util.sqlite3__wasm_db_error(\n                capi.sqlite3_db_handle(pStmt),\n                e,\n              );\n            }\n          };\n        }\n\n        {\n          capi.sqlite3_config = function (op, ...args) {\n            if (arguments.length < 2) return capi.SQLITE_MISUSE;\n            switch (op) {\n              case capi.SQLITE_CONFIG_COVERING_INDEX_SCAN:\n              case capi.SQLITE_CONFIG_MEMSTATUS:\n              case capi.SQLITE_CONFIG_SMALL_MALLOC:\n              case capi.SQLITE_CONFIG_SORTERREF_SIZE:\n              case capi.SQLITE_CONFIG_STMTJRNL_SPILL:\n              case capi.SQLITE_CONFIG_URI:\n                return wasm.exports.sqlite3__wasm_config_i(op, args[0]);\n              case capi.SQLITE_CONFIG_LOOKASIDE:\n                return wasm.exports.sqlite3__wasm_config_ii(\n                  op,\n                  args[0],\n                  args[1],\n                );\n              case capi.SQLITE_CONFIG_MEMDB_MAXSIZE:\n                return wasm.exports.sqlite3__wasm_config_j(op, args[0]);\n              case capi.SQLITE_CONFIG_GETMALLOC:\n              case capi.SQLITE_CONFIG_GETMUTEX:\n              case capi.SQLITE_CONFIG_GETPCACHE2:\n              case capi.SQLITE_CONFIG_GETPCACHE:\n              case capi.SQLITE_CONFIG_HEAP:\n              case capi.SQLITE_CONFIG_LOG:\n              case capi.SQLITE_CONFIG_MALLOC:\n              case capi.SQLITE_CONFIG_MMAP_SIZE:\n              case capi.SQLITE_CONFIG_MULTITHREAD:\n              case capi.SQLITE_CONFIG_MUTEX:\n              case capi.SQLITE_CONFIG_PAGECACHE:\n              case capi.SQLITE_CONFIG_PCACHE2:\n              case capi.SQLITE_CONFIG_PCACHE:\n              case capi.SQLITE_CONFIG_PCACHE_HDRSZ:\n              case capi.SQLITE_CONFIG_PMASZ:\n              case capi.SQLITE_CONFIG_SERIALIZED:\n              case capi.SQLITE_CONFIG_SINGLETHREAD:\n              case capi.SQLITE_CONFIG_SQLLOG:\n              case capi.SQLITE_CONFIG_WIN32_HEAPSIZE:\n              default:\n                return capi.SQLITE_NOTFOUND;\n            }\n          };\n        }\n\n        {\n          const __autoExtFptr = new Set();\n\n          capi.sqlite3_auto_extension = function (fPtr) {\n            if (fPtr instanceof Function) {\n              fPtr = wasm.installFunction('i(ppp)', fPtr);\n            } else if (1 !== arguments.length || !wasm.isPtr(fPtr)) {\n              return capi.SQLITE_MISUSE;\n            }\n            const rc = wasm.exports.sqlite3_auto_extension(fPtr);\n            if (fPtr !== arguments[0]) {\n              if (0 === rc) __autoExtFptr.add(fPtr);\n              else wasm.uninstallFunction(fPtr);\n            }\n            return rc;\n          };\n\n          capi.sqlite3_cancel_auto_extension = function (fPtr) {\n            if (!fPtr || 1 !== arguments.length || !wasm.isPtr(fPtr)) return 0;\n            return wasm.exports.sqlite3_cancel_auto_extension(fPtr);\n          };\n\n          capi.sqlite3_reset_auto_extension = function () {\n            wasm.exports.sqlite3_reset_auto_extension();\n            for (const fp of __autoExtFptr) wasm.uninstallFunction(fp);\n            __autoExtFptr.clear();\n          };\n        }\n\n        const pKvvfs = capi.sqlite3_vfs_find('kvvfs');\n        if (pKvvfs) {\n          if (util.isUIThread()) {\n            const kvvfsMethods = new capi.sqlite3_kvvfs_methods(\n              wasm.exports.sqlite3__wasm_kvvfs_methods(),\n            );\n            delete capi.sqlite3_kvvfs_methods;\n\n            const kvvfsMakeKey =\n                wasm.exports.sqlite3__wasm_kvvfsMakeKeyOnPstack,\n              pstack = wasm.pstack;\n\n            const kvvfsStorage = (zClass) =>\n              115 === wasm.peek(zClass) ? sessionStorage : localStorage;\n\n            const kvvfsImpls = {\n              xRead: (zClass, zKey, zBuf, nBuf) => {\n                const stack = pstack.pointer,\n                  astack = wasm.scopedAllocPush();\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return -3;\n                  const jKey = wasm.cstrToJs(zXKey);\n                  const jV = kvvfsStorage(zClass).getItem(jKey);\n                  if (!jV) return -1;\n                  const nV = jV.length;\n                  if (nBuf <= 0) return nV;\n                  else if (1 === nBuf) {\n                    wasm.poke(zBuf, 0);\n                    return nV;\n                  }\n                  const zV = wasm.scopedAllocCString(jV);\n                  if (nBuf > nV + 1) nBuf = nV + 1;\n                  wasm.heap8u().copyWithin(zBuf, zV, zV + nBuf - 1);\n                  wasm.poke(zBuf + nBuf - 1, 0);\n                  return nBuf - 1;\n                } catch (e) {\n                  console.error('kvstorageRead()', e);\n                  return -2;\n                } finally {\n                  pstack.restore(stack);\n                  wasm.scopedAllocPop(astack);\n                }\n              },\n              xWrite: (zClass, zKey, zData) => {\n                const stack = pstack.pointer;\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return 1;\n                  const jKey = wasm.cstrToJs(zXKey);\n                  kvvfsStorage(zClass).setItem(jKey, wasm.cstrToJs(zData));\n                  return 0;\n                } catch (e) {\n                  console.error('kvstorageWrite()', e);\n                  return capi.SQLITE_IOERR;\n                } finally {\n                  pstack.restore(stack);\n                }\n              },\n              xDelete: (zClass, zKey) => {\n                const stack = pstack.pointer;\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return 1;\n                  kvvfsStorage(zClass).removeItem(wasm.cstrToJs(zXKey));\n                  return 0;\n                } catch (e) {\n                  console.error('kvstorageDelete()', e);\n                  return capi.SQLITE_IOERR;\n                } finally {\n                  pstack.restore(stack);\n                }\n              },\n            };\n            for (const k of Object.keys(kvvfsImpls)) {\n              kvvfsMethods[kvvfsMethods.memberKey(k)] = wasm.installFunction(\n                kvvfsMethods.memberSignature(k),\n                kvvfsImpls[k],\n              );\n            }\n          } else {\n            capi.sqlite3_vfs_unregister(pKvvfs);\n          }\n        }\n\n        wasm.xWrap.FuncPtrAdapter.warnOnUse = true;\n\n        const StructBinder = sqlite3.StructBinder;\n        const installMethod = function callee(\n          tgt,\n          name,\n          func,\n          applyArgcCheck = callee.installMethodArgcCheck,\n        ) {\n          if (!(tgt instanceof StructBinder.StructType)) {\n            toss('Usage error: target object is-not-a StructType.');\n          } else if (!(func instanceof Function) && !wasm.isPtr(func)) {\n            toss('Usage errror: expecting a Function or WASM pointer to one.');\n          }\n          if (1 === arguments.length) {\n            return (n, f) => callee(tgt, n, f, applyArgcCheck);\n          }\n          if (!callee.argcProxy) {\n            callee.argcProxy = function (tgt, funcName, func, sig) {\n              return function (...args) {\n                if (func.length !== arguments.length) {\n                  toss(\n                    'Argument mismatch for',\n                    tgt.structInfo.name +\n                      '::' +\n                      funcName +\n                      ': Native signature is:',\n                    sig,\n                  );\n                }\n                return func.apply(this, args);\n              };\n            };\n\n            callee.removeFuncList = function () {\n              if (this.ondispose.__removeFuncList) {\n                this.ondispose.__removeFuncList.forEach((v, ndx) => {\n                  if ('number' === typeof v) {\n                    try {\n                      wasm.uninstallFunction(v);\n                    } catch (e) {}\n                  }\n                });\n                delete this.ondispose.__removeFuncList;\n              }\n            };\n          }\n          const sigN = tgt.memberSignature(name);\n          if (sigN.length < 2) {\n            toss(\n              'Member',\n              name,\n              'does not have a function pointer signature:',\n              sigN,\n            );\n          }\n          const memKey = tgt.memberKey(name);\n          const fProxy =\n            applyArgcCheck && !wasm.isPtr(func)\n              ? callee.argcProxy(tgt, memKey, func, sigN)\n              : func;\n          if (wasm.isPtr(fProxy)) {\n            if (fProxy && !wasm.functionEntry(fProxy)) {\n              toss('Pointer', fProxy, 'is not a WASM function table entry.');\n            }\n            tgt[memKey] = fProxy;\n          } else {\n            const pFunc = wasm.installFunction(\n              fProxy,\n              tgt.memberSignature(name, true),\n            );\n            tgt[memKey] = pFunc;\n            if (!tgt.ondispose || !tgt.ondispose.__removeFuncList) {\n              tgt.addOnDispose(\n                'ondispose.__removeFuncList handler',\n                callee.removeFuncList,\n              );\n              tgt.ondispose.__removeFuncList = [];\n            }\n            tgt.ondispose.__removeFuncList.push(memKey, pFunc);\n          }\n          return (n, f) => callee(tgt, n, f, applyArgcCheck);\n        };\n        installMethod.installMethodArgcCheck = false;\n\n        const installMethods = function (\n          structInstance,\n          methods,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          const seen = new Map();\n          for (const k of Object.keys(methods)) {\n            const m = methods[k];\n            const prior = seen.get(m);\n            if (prior) {\n              const mkey = structInstance.memberKey(k);\n              structInstance[mkey] =\n                structInstance[structInstance.memberKey(prior)];\n            } else {\n              installMethod(structInstance, k, m, applyArgcCheck);\n              seen.set(m, k);\n            }\n          }\n          return structInstance;\n        };\n\n        StructBinder.StructType.prototype.installMethod = function callee(\n          name,\n          func,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          return arguments.length < 3 && name && 'object' === typeof name\n            ? installMethods(this, ...arguments)\n            : installMethod(this, ...arguments);\n        };\n\n        StructBinder.StructType.prototype.installMethods = function (\n          methods,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          return installMethods(this, methods, applyArgcCheck);\n        };\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        sqlite3.version = {\n          libVersion: '3.46.1',\n          libVersionNumber: 3046001,\n          sourceId:\n            '2024-08-13 09:16:08 c9c2ab54ba1f5f46360f1b4f35d849cd3f080e6fc2b6c60e91b16c63f69a1e33',\n          downloadVersion: 3460100,\n        };\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n        const toss3 = (...args) => {\n          throw new sqlite3.SQLite3Error(...args);\n        };\n\n        const capi = sqlite3.capi,\n          wasm = sqlite3.wasm,\n          util = sqlite3.util;\n\n        const __ptrMap = new WeakMap();\n\n        const __stmtMap = new WeakMap();\n\n        const getOwnOption = (opts, p, dflt) => {\n          const d = Object.getOwnPropertyDescriptor(opts, p);\n          return d ? d.value : dflt;\n        };\n\n        const checkSqlite3Rc = function (dbPtr, sqliteResultCode) {\n          if (sqliteResultCode) {\n            if (dbPtr instanceof DB) dbPtr = dbPtr.pointer;\n            toss3(\n              sqliteResultCode,\n              'sqlite3 result code',\n              sqliteResultCode + ':',\n              dbPtr\n                ? capi.sqlite3_errmsg(dbPtr)\n                : capi.sqlite3_errstr(sqliteResultCode),\n            );\n          }\n          return arguments[0];\n        };\n\n        const __dbTraceToConsole = wasm.installFunction(\n          'i(ippp)',\n          function (t, c, p, x) {\n            if (capi.SQLITE_TRACE_STMT === t) {\n              console.log(\n                'SQL TRACE #' + ++this.counter + ' via sqlite3@' + c + ':',\n                wasm.cstrToJs(x),\n              );\n            }\n          }.bind({ counter: 0 }),\n        );\n\n        const __vfsPostOpenSql = Object.create(null);\n\n        const dbCtorHelper = function ctor(...args) {\n          if (!ctor._name2vfs) {\n            ctor._name2vfs = Object.create(null);\n            const isWorkerThread =\n              'function' === typeof importScripts\n                ? (n) =>\n                    toss3(\n                      'The VFS for',\n                      n,\n                      'is only available in the main window thread.',\n                    )\n                : false;\n            ctor._name2vfs[':localStorage:'] = {\n              vfs: 'kvvfs',\n              filename: isWorkerThread || (() => 'local'),\n            };\n            ctor._name2vfs[':sessionStorage:'] = {\n              vfs: 'kvvfs',\n              filename: isWorkerThread || (() => 'session'),\n            };\n          }\n          const opt = ctor.normalizeArgs(...args);\n          let fn = opt.filename,\n            vfsName = opt.vfs,\n            flagsStr = opt.flags;\n          if (\n            ('string' !== typeof fn && 'number' !== typeof fn) ||\n            'string' !== typeof flagsStr ||\n            (vfsName &&\n              'string' !== typeof vfsName &&\n              'number' !== typeof vfsName)\n          ) {\n            sqlite3.config.error('Invalid DB ctor args', opt, arguments);\n            toss3('Invalid arguments for DB constructor.');\n          }\n          let fnJs = 'number' === typeof fn ? wasm.cstrToJs(fn) : fn;\n          const vfsCheck = ctor._name2vfs[fnJs];\n          if (vfsCheck) {\n            vfsName = vfsCheck.vfs;\n            fn = fnJs = vfsCheck.filename(fnJs);\n          }\n          let pDb,\n            oflags = 0;\n          if (flagsStr.indexOf('c') >= 0) {\n            oflags |= capi.SQLITE_OPEN_CREATE | capi.SQLITE_OPEN_READWRITE;\n          }\n          if (flagsStr.indexOf('w') >= 0) oflags |= capi.SQLITE_OPEN_READWRITE;\n          if (0 === oflags) oflags |= capi.SQLITE_OPEN_READONLY;\n          oflags |= capi.SQLITE_OPEN_EXRESCODE;\n          const stack = wasm.pstack.pointer;\n          try {\n            const pPtr = wasm.pstack.allocPtr();\n            let rc = capi.sqlite3_open_v2(fn, pPtr, oflags, vfsName || 0);\n            pDb = wasm.peekPtr(pPtr);\n            checkSqlite3Rc(pDb, rc);\n            capi.sqlite3_extended_result_codes(pDb, 1);\n            if (flagsStr.indexOf('t') >= 0) {\n              capi.sqlite3_trace_v2(\n                pDb,\n                capi.SQLITE_TRACE_STMT,\n                __dbTraceToConsole,\n                pDb,\n              );\n            }\n          } catch (e) {\n            if (pDb) capi.sqlite3_close_v2(pDb);\n            throw e;\n          } finally {\n            wasm.pstack.restore(stack);\n          }\n          this.filename = fnJs;\n          __ptrMap.set(this, pDb);\n          __stmtMap.set(this, Object.create(null));\n          try {\n            const pVfs =\n              capi.sqlite3_js_db_vfs(pDb) ||\n              toss3('Internal error: cannot get VFS for new db handle.');\n            const postInitSql = __vfsPostOpenSql[pVfs];\n            if (postInitSql) {\n              if (postInitSql instanceof Function) {\n                postInitSql(this, sqlite3);\n              } else {\n                checkSqlite3Rc(\n                  pDb,\n                  capi.sqlite3_exec(pDb, postInitSql, 0, 0, 0),\n                );\n              }\n            }\n          } catch (e) {\n            this.close();\n            throw e;\n          }\n        };\n\n        dbCtorHelper.setVfsPostOpenSql = function (pVfs, sql) {\n          __vfsPostOpenSql[pVfs] = sql;\n        };\n\n        dbCtorHelper.normalizeArgs = function (\n          filename = ':memory:',\n          flags = 'c',\n          vfs = null,\n        ) {\n          const arg = {};\n          if (\n            1 === arguments.length &&\n            arguments[0] &&\n            'object' === typeof arguments[0]\n          ) {\n            Object.assign(arg, arguments[0]);\n            if (undefined === arg.flags) arg.flags = 'c';\n            if (undefined === arg.vfs) arg.vfs = null;\n            if (undefined === arg.filename) arg.filename = ':memory:';\n          } else {\n            arg.filename = filename;\n            arg.flags = flags;\n            arg.vfs = vfs;\n          }\n          return arg;\n        };\n\n        const DB = function (...args) {\n          dbCtorHelper.apply(this, args);\n        };\n        DB.dbCtorHelper = dbCtorHelper;\n\n        const BindTypes = {\n          null: 1,\n          number: 2,\n          string: 3,\n          boolean: 4,\n          blob: 5,\n        };\n        BindTypes['undefined'] == BindTypes.null;\n        if (wasm.bigIntEnabled) {\n          BindTypes.bigint = BindTypes.number;\n        }\n\n        const Stmt = function () {\n          if (BindTypes !== arguments[2]) {\n            toss3(\n              capi.SQLITE_MISUSE,\n              'Do not call the Stmt constructor directly. Use DB.prepare().',\n            );\n          }\n          this.db = arguments[0];\n          __ptrMap.set(this, arguments[1]);\n          this.parameterCount = capi.sqlite3_bind_parameter_count(this.pointer);\n        };\n\n        const affirmDbOpen = function (db) {\n          if (!db.pointer) toss3('DB has been closed.');\n          return db;\n        };\n\n        const affirmColIndex = function (stmt, ndx) {\n          if (ndx !== (ndx | 0) || ndx < 0 || ndx >= stmt.columnCount) {\n            toss3('Column index', ndx, 'is out of range.');\n          }\n          return stmt;\n        };\n\n        const parseExecArgs = function (db, args) {\n          const out = Object.create(null);\n          out.opt = Object.create(null);\n          switch (args.length) {\n            case 1:\n              if (\n                'string' === typeof args[0] ||\n                util.isSQLableTypedArray(args[0])\n              ) {\n                out.sql = args[0];\n              } else if (Array.isArray(args[0])) {\n                out.sql = args[0];\n              } else if (args[0] && 'object' === typeof args[0]) {\n                out.opt = args[0];\n                out.sql = out.opt.sql;\n              }\n              break;\n            case 2:\n              out.sql = args[0];\n              out.opt = args[1];\n              break;\n            default:\n              toss3('Invalid argument count for exec().');\n          }\n          out.sql = util.flexibleString(out.sql);\n          if ('string' !== typeof out.sql) {\n            toss3('Missing SQL argument or unsupported SQL value type.');\n          }\n          const opt = out.opt;\n          switch (opt.returnValue) {\n            case 'resultRows':\n              if (!opt.resultRows) opt.resultRows = [];\n              out.returnVal = () => opt.resultRows;\n              break;\n            case 'saveSql':\n              if (!opt.saveSql) opt.saveSql = [];\n              out.returnVal = () => opt.saveSql;\n              break;\n            case undefined:\n            case 'this':\n              out.returnVal = () => db;\n              break;\n            default:\n              toss3('Invalid returnValue value:', opt.returnValue);\n          }\n          if (!opt.callback && !opt.returnValue && undefined !== opt.rowMode) {\n            if (!opt.resultRows) opt.resultRows = [];\n            out.returnVal = () => opt.resultRows;\n          }\n          if (opt.callback || opt.resultRows) {\n            switch (undefined === opt.rowMode ? 'array' : opt.rowMode) {\n              case 'object':\n                out.cbArg = (stmt, cache) => {\n                  if (!cache.columnNames)\n                    cache.columnNames = stmt.getColumnNames([]);\n\n                  const row = stmt.get([]);\n                  const rv = Object.create(null);\n                  for (const i in cache.columnNames)\n                    rv[cache.columnNames[i]] = row[i];\n                  return rv;\n                };\n                break;\n              case 'array':\n                out.cbArg = (stmt) => stmt.get([]);\n                break;\n              case 'stmt':\n                if (Array.isArray(opt.resultRows)) {\n                  toss3(\n                    'exec(): invalid rowMode for a resultRows array: must',\n                    \"be one of 'array', 'object',\",\n                    'a result column number, or column name reference.',\n                  );\n                }\n                out.cbArg = (stmt) => stmt;\n                break;\n              default:\n                if (util.isInt32(opt.rowMode)) {\n                  out.cbArg = (stmt) => stmt.get(opt.rowMode);\n                  break;\n                } else if (\n                  'string' === typeof opt.rowMode &&\n                  opt.rowMode.length > 1 &&\n                  '$' === opt.rowMode[0]\n                ) {\n                  const $colName = opt.rowMode.substr(1);\n                  out.cbArg = (stmt) => {\n                    const rc = stmt.get(Object.create(null))[$colName];\n                    return undefined === rc\n                      ? toss3(\n                          capi.SQLITE_NOTFOUND,\n                          'exec(): unknown result column:',\n                          $colName,\n                        )\n                      : rc;\n                  };\n                  break;\n                }\n                toss3('Invalid rowMode:', opt.rowMode);\n            }\n          }\n          return out;\n        };\n\n        const __selectFirstRow = (db, sql, bind, ...getArgs) => {\n          const stmt = db.prepare(sql);\n          try {\n            const rc = stmt.bind(bind).step()\n              ? stmt.get(...getArgs)\n              : undefined;\n            stmt.reset();\n            return rc;\n          } finally {\n            stmt.finalize();\n          }\n        };\n\n        const __selectAll = (db, sql, bind, rowMode) =>\n          db.exec({\n            sql,\n            bind,\n            rowMode,\n            returnValue: 'resultRows',\n          });\n\n        DB.checkRc = (db, resultCode) => checkSqlite3Rc(db, resultCode);\n\n        DB.prototype = {\n          isOpen: function () {\n            return !!this.pointer;\n          },\n\n          affirmOpen: function () {\n            return affirmDbOpen(this);\n          },\n\n          close: function () {\n            if (this.pointer) {\n              if (this.onclose && this.onclose.before instanceof Function) {\n                try {\n                  this.onclose.before(this);\n                } catch (e) {}\n              }\n              const pDb = this.pointer;\n              Object.keys(__stmtMap.get(this)).forEach((k, s) => {\n                if (s && s.pointer) {\n                  try {\n                    s.finalize();\n                  } catch (e) {}\n                }\n              });\n              __ptrMap.delete(this);\n              __stmtMap.delete(this);\n              capi.sqlite3_close_v2(pDb);\n              if (this.onclose && this.onclose.after instanceof Function) {\n                try {\n                  this.onclose.after(this);\n                } catch (e) {}\n              }\n              delete this.filename;\n            }\n          },\n\n          changes: function (total = false, sixtyFour = false) {\n            const p = affirmDbOpen(this).pointer;\n            if (total) {\n              return sixtyFour\n                ? capi.sqlite3_total_changes64(p)\n                : capi.sqlite3_total_changes(p);\n            } else {\n              return sixtyFour\n                ? capi.sqlite3_changes64(p)\n                : capi.sqlite3_changes(p);\n            }\n          },\n\n          dbFilename: function (dbName = 'main') {\n            return capi.sqlite3_db_filename(affirmDbOpen(this).pointer, dbName);\n          },\n\n          dbName: function (dbNumber = 0) {\n            return capi.sqlite3_db_name(affirmDbOpen(this).pointer, dbNumber);\n          },\n\n          dbVfsName: function (dbName = 0) {\n            let rc;\n            const pVfs = capi.sqlite3_js_db_vfs(\n              affirmDbOpen(this).pointer,\n              dbName,\n            );\n            if (pVfs) {\n              const v = new capi.sqlite3_vfs(pVfs);\n              try {\n                rc = wasm.cstrToJs(v.$zName);\n              } finally {\n                v.dispose();\n              }\n            }\n            return rc;\n          },\n\n          prepare: function (sql) {\n            affirmDbOpen(this);\n            const stack = wasm.pstack.pointer;\n            let ppStmt, pStmt;\n            try {\n              ppStmt = wasm.pstack.alloc(8);\n              DB.checkRc(\n                this,\n                capi.sqlite3_prepare_v2(this.pointer, sql, -1, ppStmt, null),\n              );\n              pStmt = wasm.peekPtr(ppStmt);\n            } finally {\n              wasm.pstack.restore(stack);\n            }\n            if (!pStmt) toss3('Cannot prepare empty SQL.');\n            const stmt = new Stmt(this, pStmt, BindTypes);\n            __stmtMap.get(this)[pStmt] = stmt;\n            return stmt;\n          },\n\n          exec: function () {\n            affirmDbOpen(this);\n            const arg = parseExecArgs(this, arguments);\n            if (!arg.sql) {\n              return toss3('exec() requires an SQL string.');\n            }\n            const opt = arg.opt;\n            const callback = opt.callback;\n            const resultRows = Array.isArray(opt.resultRows)\n              ? opt.resultRows\n              : undefined;\n            let stmt;\n            let bind = opt.bind;\n            let evalFirstResult = !!(\n              arg.cbArg ||\n              opt.columnNames ||\n              resultRows\n            );\n            const stack = wasm.scopedAllocPush();\n            const saveSql = Array.isArray(opt.saveSql)\n              ? opt.saveSql\n              : undefined;\n            try {\n              const isTA = util.isSQLableTypedArray(arg.sql);\n              let sqlByteLen = isTA\n                ? arg.sql.byteLength\n                : wasm.jstrlen(arg.sql);\n              const ppStmt = wasm.scopedAlloc(\n                2 * wasm.ptrSizeof + (sqlByteLen + 1),\n              );\n              const pzTail = ppStmt + wasm.ptrSizeof;\n              let pSql = pzTail + wasm.ptrSizeof;\n              const pSqlEnd = pSql + sqlByteLen;\n              if (isTA) wasm.heap8().set(arg.sql, pSql);\n              else wasm.jstrcpy(arg.sql, wasm.heap8(), pSql, sqlByteLen, false);\n              wasm.poke(pSql + sqlByteLen, 0);\n              while (pSql && wasm.peek(pSql, 'i8')) {\n                wasm.pokePtr([ppStmt, pzTail], 0);\n                DB.checkRc(\n                  this,\n                  capi.sqlite3_prepare_v3(\n                    this.pointer,\n                    pSql,\n                    sqlByteLen,\n                    0,\n                    ppStmt,\n                    pzTail,\n                  ),\n                );\n                const pStmt = wasm.peekPtr(ppStmt);\n                pSql = wasm.peekPtr(pzTail);\n                sqlByteLen = pSqlEnd - pSql;\n                if (!pStmt) continue;\n                if (saveSql) saveSql.push(capi.sqlite3_sql(pStmt).trim());\n                stmt = new Stmt(this, pStmt, BindTypes);\n                if (bind && stmt.parameterCount) {\n                  stmt.bind(bind);\n                  bind = null;\n                }\n                if (evalFirstResult && stmt.columnCount) {\n                  let gotColNames = Array.isArray(opt.columnNames) ? 0 : 1;\n                  evalFirstResult = false;\n                  if (arg.cbArg || resultRows) {\n                    const cbArgCache = Object.create(null);\n                    for (; stmt.step(); stmt._lockedByExec = false) {\n                      if (0 === gotColNames++) {\n                        stmt.getColumnNames(\n                          (cbArgCache.columnNames = opt.columnNames || []),\n                        );\n                      }\n                      stmt._lockedByExec = true;\n                      const row = arg.cbArg(stmt, cbArgCache);\n                      if (resultRows) resultRows.push(row);\n                      if (callback && false === callback.call(opt, row, stmt)) {\n                        break;\n                      }\n                    }\n                    stmt._lockedByExec = false;\n                  }\n                  if (0 === gotColNames) {\n                    stmt.getColumnNames(opt.columnNames);\n                  }\n                } else {\n                  stmt.step();\n                }\n                stmt.reset().finalize();\n                stmt = null;\n              }\n            } finally {\n              wasm.scopedAllocPop(stack);\n              if (stmt) {\n                delete stmt._lockedByExec;\n                stmt.finalize();\n              }\n            }\n            return arg.returnVal();\n          },\n\n          createFunction: function f(name, xFunc, opt) {\n            const isFunc = (f) => f instanceof Function;\n            switch (arguments.length) {\n              case 1:\n                opt = name;\n                name = opt.name;\n                xFunc = opt.xFunc || 0;\n                break;\n              case 2:\n                if (!isFunc(xFunc)) {\n                  opt = xFunc;\n                  xFunc = opt.xFunc || 0;\n                }\n                break;\n              case 3:\n                break;\n              default:\n                break;\n            }\n            if (!opt) opt = {};\n            if ('string' !== typeof name) {\n              toss3('Invalid arguments: missing function name.');\n            }\n            let xStep = opt.xStep || 0;\n            let xFinal = opt.xFinal || 0;\n            const xValue = opt.xValue || 0;\n            const xInverse = opt.xInverse || 0;\n            let isWindow = undefined;\n            if (isFunc(xFunc)) {\n              isWindow = false;\n              if (isFunc(xStep) || isFunc(xFinal)) {\n                toss3('Ambiguous arguments: scalar or aggregate?');\n              }\n              xStep = xFinal = null;\n            } else if (isFunc(xStep)) {\n              if (!isFunc(xFinal)) {\n                toss3('Missing xFinal() callback for aggregate or window UDF.');\n              }\n              xFunc = null;\n            } else if (isFunc(xFinal)) {\n              toss3('Missing xStep() callback for aggregate or window UDF.');\n            } else {\n              toss3('Missing function-type properties.');\n            }\n            if (false === isWindow) {\n              if (isFunc(xValue) || isFunc(xInverse)) {\n                toss3(\n                  'xValue and xInverse are not permitted for non-window UDFs.',\n                );\n              }\n            } else if (isFunc(xValue)) {\n              if (!isFunc(xInverse)) {\n                toss3('xInverse must be provided if xValue is.');\n              }\n              isWindow = true;\n            } else if (isFunc(xInverse)) {\n              toss3('xValue must be provided if xInverse is.');\n            }\n            const pApp = opt.pApp;\n            if (\n              undefined !== pApp &&\n              null !== pApp &&\n              ('number' !== typeof pApp || !util.isInt32(pApp))\n            ) {\n              toss3(\n                'Invalid value for pApp property. Must be a legal WASM pointer value.',\n              );\n            }\n            const xDestroy = opt.xDestroy || 0;\n            if (xDestroy && !isFunc(xDestroy)) {\n              toss3('xDestroy property must be a function.');\n            }\n            let fFlags = 0;\n            if (getOwnOption(opt, 'deterministic'))\n              fFlags |= capi.SQLITE_DETERMINISTIC;\n            if (getOwnOption(opt, 'directOnly'))\n              fFlags |= capi.SQLITE_DIRECTONLY;\n            if (getOwnOption(opt, 'innocuous')) fFlags |= capi.SQLITE_INNOCUOUS;\n            name = name.toLowerCase();\n            const xArity = xFunc || xStep;\n            const arity = getOwnOption(opt, 'arity');\n            const arityArg =\n              'number' === typeof arity\n                ? arity\n                : xArity.length\n                  ? xArity.length - 1\n                  : 0;\n            let rc;\n            if (isWindow) {\n              rc = capi.sqlite3_create_window_function(\n                this.pointer,\n                name,\n                arityArg,\n                capi.SQLITE_UTF8 | fFlags,\n                pApp || 0,\n                xStep,\n                xFinal,\n                xValue,\n                xInverse,\n                xDestroy,\n              );\n            } else {\n              rc = capi.sqlite3_create_function_v2(\n                this.pointer,\n                name,\n                arityArg,\n                capi.SQLITE_UTF8 | fFlags,\n                pApp || 0,\n                xFunc,\n                xStep,\n                xFinal,\n                xDestroy,\n              );\n            }\n            DB.checkRc(this, rc);\n            return this;\n          },\n\n          selectValue: function (sql, bind, asType) {\n            return __selectFirstRow(this, sql, bind, 0, asType);\n          },\n\n          selectValues: function (sql, bind, asType) {\n            const stmt = this.prepare(sql),\n              rc = [];\n            try {\n              stmt.bind(bind);\n              while (stmt.step()) rc.push(stmt.get(0, asType));\n              stmt.reset();\n            } finally {\n              stmt.finalize();\n            }\n            return rc;\n          },\n\n          selectArray: function (sql, bind) {\n            return __selectFirstRow(this, sql, bind, []);\n          },\n\n          selectObject: function (sql, bind) {\n            return __selectFirstRow(this, sql, bind, {});\n          },\n\n          selectArrays: function (sql, bind) {\n            return __selectAll(this, sql, bind, 'array');\n          },\n\n          selectObjects: function (sql, bind) {\n            return __selectAll(this, sql, bind, 'object');\n          },\n\n          openStatementCount: function () {\n            return this.pointer ? Object.keys(__stmtMap.get(this)).length : 0;\n          },\n\n          transaction: function (callback) {\n            let opener = 'BEGIN';\n            if (arguments.length > 1) {\n              if (/[^a-zA-Z]/.test(arguments[0])) {\n                toss3(\n                  capi.SQLITE_MISUSE,\n                  'Invalid argument for BEGIN qualifier.',\n                );\n              }\n              opener += ' ' + arguments[0];\n              callback = arguments[1];\n            }\n            affirmDbOpen(this).exec(opener);\n            try {\n              const rc = callback(this);\n              this.exec('COMMIT');\n              return rc;\n            } catch (e) {\n              this.exec('ROLLBACK');\n              throw e;\n            }\n          },\n\n          savepoint: function (callback) {\n            affirmDbOpen(this).exec('SAVEPOINT oo1');\n            try {\n              const rc = callback(this);\n              this.exec('RELEASE oo1');\n              return rc;\n            } catch (e) {\n              this.exec('ROLLBACK to SAVEPOINT oo1; RELEASE SAVEPOINT oo1');\n              throw e;\n            }\n          },\n\n          checkRc: function (resultCode) {\n            return checkSqlite3Rc(this, resultCode);\n          },\n        };\n\n        const affirmStmtOpen = function (stmt) {\n          if (!stmt.pointer) toss3('Stmt has been closed.');\n          return stmt;\n        };\n\n        const isSupportedBindType = function (v) {\n          let t = BindTypes[null === v || undefined === v ? 'null' : typeof v];\n          switch (t) {\n            case BindTypes.boolean:\n            case BindTypes.null:\n            case BindTypes.number:\n            case BindTypes.string:\n              return t;\n            case BindTypes.bigint:\n              if (wasm.bigIntEnabled) return t;\n\n            default:\n              return util.isBindableTypedArray(v) ? BindTypes.blob : undefined;\n          }\n        };\n\n        const affirmSupportedBindType = function (v) {\n          return (\n            isSupportedBindType(v) ||\n            toss3('Unsupported bind() argument type:', typeof v)\n          );\n        };\n\n        const affirmParamIndex = function (stmt, key) {\n          const n =\n            'number' === typeof key\n              ? key\n              : capi.sqlite3_bind_parameter_index(stmt.pointer, key);\n          if (0 === n || !util.isInt32(n)) {\n            toss3('Invalid bind() parameter name: ' + key);\n          } else if (n < 1 || n > stmt.parameterCount)\n            toss3('Bind index', key, 'is out of range.');\n          return n;\n        };\n\n        const affirmNotLockedByExec = function (stmt, currentOpName) {\n          if (stmt._lockedByExec) {\n            toss3(\n              'Operation is illegal when statement is locked:',\n              currentOpName,\n            );\n          }\n          return stmt;\n        };\n\n        const bindOne = function f(stmt, ndx, bindType, val) {\n          affirmNotLockedByExec(affirmStmtOpen(stmt), 'bind()');\n          if (!f._) {\n            f._tooBigInt = (v) =>\n              toss3(\n                'BigInt value is too big to store without precision loss:',\n                v,\n              );\n            f._ = {\n              string: function (stmt, ndx, val, asBlob) {\n                const [pStr, n] = wasm.allocCString(val, true);\n                const f = asBlob\n                  ? capi.sqlite3_bind_blob\n                  : capi.sqlite3_bind_text;\n                return f(stmt.pointer, ndx, pStr, n, capi.SQLITE_WASM_DEALLOC);\n              },\n            };\n          }\n          affirmSupportedBindType(val);\n          ndx = affirmParamIndex(stmt, ndx);\n          let rc = 0;\n          switch (\n            null === val || undefined === val ? BindTypes.null : bindType\n          ) {\n            case BindTypes.null:\n              rc = capi.sqlite3_bind_null(stmt.pointer, ndx);\n              break;\n            case BindTypes.string:\n              rc = f._.string(stmt, ndx, val, false);\n              break;\n            case BindTypes.number: {\n              let m;\n              if (util.isInt32(val)) m = capi.sqlite3_bind_int;\n              else if ('bigint' === typeof val) {\n                if (!util.bigIntFits64(val)) {\n                  f._tooBigInt(val);\n                } else if (wasm.bigIntEnabled) {\n                  m = capi.sqlite3_bind_int64;\n                } else if (util.bigIntFitsDouble(val)) {\n                  val = Number(val);\n                  m = capi.sqlite3_bind_double;\n                } else {\n                  f._tooBigInt(val);\n                }\n              } else {\n                val = Number(val);\n                if (wasm.bigIntEnabled && Number.isInteger(val)) {\n                  m = capi.sqlite3_bind_int64;\n                } else {\n                  m = capi.sqlite3_bind_double;\n                }\n              }\n              rc = m(stmt.pointer, ndx, val);\n              break;\n            }\n            case BindTypes.boolean:\n              rc = capi.sqlite3_bind_int(stmt.pointer, ndx, val ? 1 : 0);\n              break;\n            case BindTypes.blob: {\n              if ('string' === typeof val) {\n                rc = f._.string(stmt, ndx, val, true);\n                break;\n              } else if (val instanceof ArrayBuffer) {\n                val = new Uint8Array(val);\n              } else if (!util.isBindableTypedArray(val)) {\n                toss3(\n                  'Binding a value as a blob requires',\n                  'that it be a string, Uint8Array, Int8Array, or ArrayBuffer.',\n                );\n              }\n              const pBlob = wasm.alloc(val.byteLength || 1);\n              wasm.heap8().set(val.byteLength ? val : [0], pBlob);\n              rc = capi.sqlite3_bind_blob(\n                stmt.pointer,\n                ndx,\n                pBlob,\n                val.byteLength,\n                capi.SQLITE_WASM_DEALLOC,\n              );\n              break;\n            }\n            default:\n              sqlite3.config.warn('Unsupported bind() argument type:', val);\n              toss3('Unsupported bind() argument type: ' + typeof val);\n          }\n          if (rc) DB.checkRc(stmt.db.pointer, rc);\n          stmt._mayGet = false;\n          return stmt;\n        };\n\n        Stmt.prototype = {\n          finalize: function () {\n            if (this.pointer) {\n              affirmNotLockedByExec(this, 'finalize()');\n              const rc = capi.sqlite3_finalize(this.pointer);\n              delete __stmtMap.get(this.db)[this.pointer];\n              __ptrMap.delete(this);\n              delete this._mayGet;\n              delete this.parameterCount;\n              delete this._lockedByExec;\n              delete this.db;\n              return rc;\n            }\n          },\n\n          clearBindings: function () {\n            affirmNotLockedByExec(affirmStmtOpen(this), 'clearBindings()');\n            capi.sqlite3_clear_bindings(this.pointer);\n            this._mayGet = false;\n            return this;\n          },\n\n          reset: function (alsoClearBinds) {\n            affirmNotLockedByExec(this, 'reset()');\n            if (alsoClearBinds) this.clearBindings();\n            const rc = capi.sqlite3_reset(affirmStmtOpen(this).pointer);\n            this._mayGet = false;\n            checkSqlite3Rc(this.db, rc);\n            return this;\n          },\n\n          bind: function () {\n            affirmStmtOpen(this);\n            let ndx, arg;\n            switch (arguments.length) {\n              case 1:\n                ndx = 1;\n                arg = arguments[0];\n                break;\n              case 2:\n                ndx = arguments[0];\n                arg = arguments[1];\n                break;\n              default:\n                toss3('Invalid bind() arguments.');\n            }\n            if (undefined === arg) {\n              return this;\n            } else if (!this.parameterCount) {\n              toss3('This statement has no bindable parameters.');\n            }\n            this._mayGet = false;\n            if (null === arg) {\n              return bindOne(this, ndx, BindTypes.null, arg);\n            } else if (Array.isArray(arg)) {\n              if (1 !== arguments.length) {\n                toss3(\n                  'When binding an array, an index argument is not permitted.',\n                );\n              }\n              arg.forEach((v, i) =>\n                bindOne(this, i + 1, affirmSupportedBindType(v), v),\n              );\n              return this;\n            } else if (arg instanceof ArrayBuffer) {\n              arg = new Uint8Array(arg);\n            }\n            if ('object' === typeof arg && !util.isBindableTypedArray(arg)) {\n              if (1 !== arguments.length) {\n                toss3(\n                  'When binding an object, an index argument is not permitted.',\n                );\n              }\n              Object.keys(arg).forEach((k) =>\n                bindOne(this, k, affirmSupportedBindType(arg[k]), arg[k]),\n              );\n              return this;\n            } else {\n              return bindOne(this, ndx, affirmSupportedBindType(arg), arg);\n            }\n            toss3('Should not reach this point.');\n          },\n\n          bindAsBlob: function (ndx, arg) {\n            affirmStmtOpen(this);\n            if (1 === arguments.length) {\n              arg = ndx;\n              ndx = 1;\n            }\n            const t = affirmSupportedBindType(arg);\n            if (\n              BindTypes.string !== t &&\n              BindTypes.blob !== t &&\n              BindTypes.null !== t\n            ) {\n              toss3('Invalid value type for bindAsBlob()');\n            }\n            return bindOne(this, ndx, BindTypes.blob, arg);\n          },\n\n          step: function () {\n            affirmNotLockedByExec(this, 'step()');\n            const rc = capi.sqlite3_step(affirmStmtOpen(this).pointer);\n            switch (rc) {\n              case capi.SQLITE_DONE:\n                return (this._mayGet = false);\n              case capi.SQLITE_ROW:\n                return (this._mayGet = true);\n              default:\n                this._mayGet = false;\n                sqlite3.config.warn(\n                  'sqlite3_step() rc=',\n                  rc,\n                  capi.sqlite3_js_rc_str(rc),\n                  'SQL =',\n                  capi.sqlite3_sql(this.pointer),\n                );\n                DB.checkRc(this.db.pointer, rc);\n            }\n          },\n\n          stepReset: function () {\n            this.step();\n            return this.reset();\n          },\n\n          stepFinalize: function () {\n            try {\n              const rc = this.step();\n              this.reset();\n              return rc;\n            } finally {\n              try {\n                this.finalize();\n              } catch (e) {}\n            }\n          },\n\n          get: function (ndx, asType) {\n            if (!affirmStmtOpen(this)._mayGet) {\n              toss3('Stmt.step() has not (recently) returned true.');\n            }\n            if (Array.isArray(ndx)) {\n              let i = 0;\n              const n = this.columnCount;\n              while (i < n) {\n                ndx[i] = this.get(i++);\n              }\n              return ndx;\n            } else if (ndx && 'object' === typeof ndx) {\n              let i = 0;\n              const n = this.columnCount;\n              while (i < n) {\n                ndx[capi.sqlite3_column_name(this.pointer, i)] = this.get(i++);\n              }\n              return ndx;\n            }\n            affirmColIndex(this, ndx);\n            switch (\n              undefined === asType\n                ? capi.sqlite3_column_type(this.pointer, ndx)\n                : asType\n            ) {\n              case capi.SQLITE_NULL:\n                return null;\n              case capi.SQLITE_INTEGER: {\n                if (wasm.bigIntEnabled) {\n                  const rc = capi.sqlite3_column_int64(this.pointer, ndx);\n                  if (\n                    rc >= Number.MIN_SAFE_INTEGER &&\n                    rc <= Number.MAX_SAFE_INTEGER\n                  ) {\n                    return Number(rc).valueOf();\n                  }\n                  return rc;\n                } else {\n                  const rc = capi.sqlite3_column_double(this.pointer, ndx);\n                  if (\n                    rc > Number.MAX_SAFE_INTEGER ||\n                    rc < Number.MIN_SAFE_INTEGER\n                  ) {\n                    toss3(\n                      'Integer is out of range for JS integer range: ' + rc,\n                    );\n                  }\n\n                  return util.isInt32(rc) ? rc | 0 : rc;\n                }\n              }\n              case capi.SQLITE_FLOAT:\n                return capi.sqlite3_column_double(this.pointer, ndx);\n              case capi.SQLITE_TEXT:\n                return capi.sqlite3_column_text(this.pointer, ndx);\n              case capi.SQLITE_BLOB: {\n                const n = capi.sqlite3_column_bytes(this.pointer, ndx),\n                  ptr = capi.sqlite3_column_blob(this.pointer, ndx),\n                  rc = new Uint8Array(n);\n\n                if (n) rc.set(wasm.heap8u().slice(ptr, ptr + n), 0);\n\n                if (n && this.db._blobXfer instanceof Array) {\n                  this.db._blobXfer.push(rc.buffer);\n                }\n                return rc;\n              }\n              default:\n                toss3(\n                  \"Don't know how to translate\",\n                  'type of result column #' + ndx + '.',\n                );\n            }\n            toss3('Not reached.');\n          },\n\n          getInt: function (ndx) {\n            return this.get(ndx, capi.SQLITE_INTEGER);\n          },\n\n          getFloat: function (ndx) {\n            return this.get(ndx, capi.SQLITE_FLOAT);\n          },\n\n          getString: function (ndx) {\n            return this.get(ndx, capi.SQLITE_TEXT);\n          },\n\n          getBlob: function (ndx) {\n            return this.get(ndx, capi.SQLITE_BLOB);\n          },\n\n          getJSON: function (ndx) {\n            const s = this.get(ndx, capi.SQLITE_STRING);\n            return null === s ? s : JSON.parse(s);\n          },\n\n          getColumnName: function (ndx) {\n            return capi.sqlite3_column_name(\n              affirmColIndex(affirmStmtOpen(this), ndx).pointer,\n              ndx,\n            );\n          },\n\n          getColumnNames: function (tgt = []) {\n            affirmColIndex(affirmStmtOpen(this), 0);\n            const n = this.columnCount;\n            for (let i = 0; i < n; ++i) {\n              tgt.push(capi.sqlite3_column_name(this.pointer, i));\n            }\n            return tgt;\n          },\n\n          getParamIndex: function (name) {\n            return affirmStmtOpen(this).parameterCount\n              ? capi.sqlite3_bind_parameter_index(this.pointer, name)\n              : undefined;\n          },\n        };\n\n        {\n          const prop = {\n            enumerable: true,\n            get: function () {\n              return __ptrMap.get(this);\n            },\n            set: () => toss3('The pointer property is read-only.'),\n          };\n          Object.defineProperty(Stmt.prototype, 'pointer', prop);\n          Object.defineProperty(DB.prototype, 'pointer', prop);\n        }\n\n        Object.defineProperty(Stmt.prototype, 'columnCount', {\n          enumerable: false,\n          get: function () {\n            return capi.sqlite3_column_count(this.pointer);\n          },\n          set: () => toss3('The columnCount property is read-only.'),\n        });\n\n        sqlite3.oo1 = {\n          DB,\n          Stmt,\n        };\n\n        if (util.isUIThread()) {\n          sqlite3.oo1.JsStorageDb = function (storageName = 'session') {\n            const opt = dbCtorHelper.normalizeArgs(...arguments);\n            storageName = opt.filename;\n            if ('session' !== storageName && 'local' !== storageName) {\n              toss3(\"JsStorageDb db name must be one of 'session' or 'local'.\");\n            }\n            opt.vfs = 'kvvfs';\n            dbCtorHelper.call(this, opt);\n          };\n          const jdb = sqlite3.oo1.JsStorageDb;\n          jdb.prototype = Object.create(DB.prototype);\n\n          jdb.clearStorage = capi.sqlite3_js_kvvfs_clear;\n\n          jdb.prototype.clearStorage = function () {\n            return jdb.clearStorage(affirmDbOpen(this).filename);\n          };\n\n          jdb.storageSize = capi.sqlite3_js_kvvfs_size;\n\n          jdb.prototype.storageSize = function () {\n            return jdb.storageSize(affirmDbOpen(this).filename);\n          };\n        }\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const util = sqlite3.util;\n        sqlite3.initWorker1API = function () {\n          'use strict';\n          const toss = (...args) => {\n            throw new Error(args.join(' '));\n          };\n          if (!(globalThis.WorkerGlobalScope instanceof Function)) {\n            toss('initWorker1API() must be run from a Worker thread.');\n          }\n          const sqlite3 = this.sqlite3 || toss('Missing this.sqlite3 object.');\n          const DB = sqlite3.oo1.DB;\n\n          const getDbId = function (db) {\n            let id = wState.idMap.get(db);\n            if (id) return id;\n            id = 'db#' + ++wState.idSeq + '@' + db.pointer;\n\n            wState.idMap.set(db, id);\n            return id;\n          };\n\n          const wState = {\n            dbList: [],\n\n            idSeq: 0,\n\n            idMap: new WeakMap(),\n\n            xfer: [],\n            open: function (opt) {\n              const db = new DB(opt);\n              this.dbs[getDbId(db)] = db;\n              if (this.dbList.indexOf(db) < 0) this.dbList.push(db);\n              return db;\n            },\n            close: function (db, alsoUnlink) {\n              if (db) {\n                delete this.dbs[getDbId(db)];\n                const filename = db.filename;\n                const pVfs = util.sqlite3__wasm_db_vfs(db.pointer, 0);\n                db.close();\n                const ddNdx = this.dbList.indexOf(db);\n                if (ddNdx >= 0) this.dbList.splice(ddNdx, 1);\n                if (alsoUnlink && filename && pVfs) {\n                  util.sqlite3__wasm_vfs_unlink(pVfs, filename);\n                }\n              }\n            },\n\n            post: function (msg, xferList) {\n              if (xferList && xferList.length) {\n                globalThis.postMessage(msg, Array.from(xferList));\n                xferList.length = 0;\n              } else {\n                globalThis.postMessage(msg);\n              }\n            },\n\n            dbs: Object.create(null),\n\n            getDb: function (id, require = true) {\n              return (\n                this.dbs[id] ||\n                (require ? toss('Unknown (or closed) DB ID:', id) : undefined)\n              );\n            },\n          };\n\n          const affirmDbOpen = function (db = wState.dbList[0]) {\n            return db && db.pointer ? db : toss('DB is not opened.');\n          };\n\n          const getMsgDb = function (msgData, affirmExists = true) {\n            const db = wState.getDb(msgData.dbId, false) || wState.dbList[0];\n            return affirmExists ? affirmDbOpen(db) : db;\n          };\n\n          const getDefaultDbId = function () {\n            return wState.dbList[0] && getDbId(wState.dbList[0]);\n          };\n\n          const isSpecialDbFilename = (n) => {\n            return '' === n || ':' === n[0];\n          };\n\n          const wMsgHandler = {\n            open: function (ev) {\n              const oargs = Object.create(null),\n                args = ev.args || Object.create(null);\n              if (args.simulateError) {\n                toss('Throwing because of simulateError flag.');\n              }\n              const rc = Object.create(null);\n              oargs.vfs = args.vfs;\n              oargs.filename = args.filename || '';\n              const db = wState.open(oargs);\n              rc.filename = db.filename;\n              rc.persistent = !!sqlite3.capi.sqlite3_js_db_uses_vfs(\n                db.pointer,\n                'opfs',\n              );\n              rc.dbId = getDbId(db);\n              rc.vfs = db.dbVfsName();\n              return rc;\n            },\n\n            close: function (ev) {\n              const db = getMsgDb(ev, false);\n              const response = {\n                filename: db && db.filename,\n              };\n              if (db) {\n                const doUnlink =\n                  ev.args && 'object' === typeof ev.args\n                    ? !!ev.args.unlink\n                    : false;\n                wState.close(db, doUnlink);\n              }\n              return response;\n            },\n\n            exec: function (ev) {\n              const rc =\n                'string' === typeof ev.args\n                  ? { sql: ev.args }\n                  : ev.args || Object.create(null);\n              if ('stmt' === rc.rowMode) {\n                toss(\n                  \"Invalid rowMode for 'exec': stmt mode\",\n                  'does not work in the Worker API.',\n                );\n              } else if (!rc.sql) {\n                toss(\"'exec' requires input SQL.\");\n              }\n              const db = getMsgDb(ev);\n              if (rc.callback || Array.isArray(rc.resultRows)) {\n                db._blobXfer = wState.xfer;\n              }\n              const theCallback = rc.callback;\n              let rowNumber = 0;\n              const hadColNames = !!rc.columnNames;\n              if ('string' === typeof theCallback) {\n                if (!hadColNames) rc.columnNames = [];\n\n                rc.callback = function (row, stmt) {\n                  wState.post(\n                    {\n                      type: theCallback,\n                      columnNames: rc.columnNames,\n                      rowNumber: ++rowNumber,\n                      row: row,\n                    },\n                    wState.xfer,\n                  );\n                };\n              }\n              try {\n                const changeCount = !!rc.countChanges\n                  ? db.changes(true, 64 === rc.countChanges)\n                  : undefined;\n                db.exec(rc);\n                if (undefined !== changeCount) {\n                  rc.changeCount =\n                    db.changes(true, 64 === rc.countChanges) - changeCount;\n                }\n                if (rc.callback instanceof Function) {\n                  rc.callback = theCallback;\n\n                  wState.post({\n                    type: theCallback,\n                    columnNames: rc.columnNames,\n                    rowNumber: null,\n                    row: undefined,\n                  });\n                }\n              } finally {\n                delete db._blobXfer;\n                if (rc.callback) rc.callback = theCallback;\n              }\n              return rc;\n            },\n\n            'config-get': function () {\n              const rc = Object.create(null),\n                src = sqlite3.config;\n              ['bigIntEnabled'].forEach(function (k) {\n                if (Object.getOwnPropertyDescriptor(src, k)) rc[k] = src[k];\n              });\n              rc.version = sqlite3.version;\n              rc.vfsList = sqlite3.capi.sqlite3_js_vfs_list();\n              rc.opfsEnabled = !!sqlite3.opfs;\n              return rc;\n            },\n\n            export: function (ev) {\n              const db = getMsgDb(ev);\n              const response = {\n                byteArray: sqlite3.capi.sqlite3_js_db_export(db.pointer),\n                filename: db.filename,\n                mimetype: 'application/x-sqlite3',\n              };\n              wState.xfer.push(response.byteArray.buffer);\n              return response;\n            },\n\n            toss: function (ev) {\n              toss('Testing worker exception');\n            },\n\n            'opfs-tree': async function (ev) {\n              if (!sqlite3.opfs) toss('OPFS support is unavailable.');\n              const response = await sqlite3.opfs.treeList();\n              return response;\n            },\n          };\n\n          globalThis.onmessage = async function (ev) {\n            ev = ev.data;\n            let result,\n              dbId = ev.dbId,\n              evType = ev.type;\n            const arrivalTime = performance.now();\n            try {\n              if (\n                wMsgHandler.hasOwnProperty(evType) &&\n                wMsgHandler[evType] instanceof Function\n              ) {\n                result = await wMsgHandler[evType](ev);\n              } else {\n                toss('Unknown db worker message type:', ev.type);\n              }\n            } catch (err) {\n              evType = 'error';\n              result = {\n                operation: ev.type,\n                message: err.message,\n                errorClass: err.name,\n                input: ev,\n              };\n              if (err.stack) {\n                result.stack =\n                  'string' === typeof err.stack\n                    ? err.stack.split(/\\n\\s*/)\n                    : err.stack;\n              }\n              if (0)\n                sqlite3.config.warn(\n                  'Worker is propagating an exception to main thread.',\n                  'Reporting it _here_ for the stack trace:',\n                  err,\n                  result,\n                );\n            }\n            if (!dbId) {\n              dbId = result.dbId || getDefaultDbId();\n            }\n\n            wState.post(\n              {\n                type: evType,\n                dbId: dbId,\n                messageId: ev.messageId,\n                workerReceivedTime: arrivalTime,\n                workerRespondTime: performance.now(),\n                departureTime: ev.departureTime,\n\n                result: result,\n              },\n              wState.xfer,\n            );\n          };\n          globalThis.postMessage({\n            type: 'sqlite3-api',\n            result: 'worker1-ready',\n          });\n        }.bind({ sqlite3 });\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const wasm = sqlite3.wasm,\n          capi = sqlite3.capi,\n          toss = sqlite3.util.toss3;\n        const vfs = Object.create(null);\n        sqlite3.vfs = vfs;\n\n        capi.sqlite3_vfs.prototype.registerVfs = function (asDefault = false) {\n          if (!(this instanceof sqlite3.capi.sqlite3_vfs)) {\n            toss('Expecting a sqlite3_vfs-type argument.');\n          }\n          const rc = capi.sqlite3_vfs_register(this, asDefault ? 1 : 0);\n          if (rc) {\n            toss('sqlite3_vfs_register(', this, ') failed with rc', rc);\n          }\n          if (this.pointer !== capi.sqlite3_vfs_find(this.$zName)) {\n            toss(\n              'BUG: sqlite3_vfs_find(vfs.$zName) failed for just-installed VFS',\n              this,\n            );\n          }\n          return this;\n        };\n\n        vfs.installVfs = function (opt) {\n          let count = 0;\n          const propList = ['io', 'vfs'];\n          for (const key of propList) {\n            const o = opt[key];\n            if (o) {\n              ++count;\n              o.struct.installMethods(o.methods, !!o.applyArgcCheck);\n              if ('vfs' === key) {\n                if (!o.struct.$zName && 'string' === typeof o.name) {\n                  o.struct.addOnDispose(\n                    (o.struct.$zName = wasm.allocCString(o.name)),\n                  );\n                }\n                o.struct.registerVfs(!!o.asDefault);\n              }\n            }\n          }\n          if (!count)\n            toss(\n              'Misuse: installVfs() options object requires at least',\n              'one of:',\n              propList,\n            );\n          return this;\n        };\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const wasm = sqlite3.wasm,\n          capi = sqlite3.capi,\n          toss = sqlite3.util.toss3;\n        const vtab = Object.create(null);\n        sqlite3.vtab = vtab;\n\n        const sii = capi.sqlite3_index_info;\n\n        sii.prototype.nthConstraint = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nConstraint) return false;\n          const ptr =\n            this.$aConstraint +\n            sii.sqlite3_index_constraint.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_constraint(ptr);\n        };\n\n        sii.prototype.nthConstraintUsage = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nConstraint) return false;\n          const ptr =\n            this.$aConstraintUsage +\n            sii.sqlite3_index_constraint_usage.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_constraint_usage(ptr);\n        };\n\n        sii.prototype.nthOrderBy = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nOrderBy) return false;\n          const ptr =\n            this.$aOrderBy + sii.sqlite3_index_orderby.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_orderby(ptr);\n        };\n\n        const __xWrapFactory = function (methodName, StructType) {\n          return function (ptr, removeMapping = false) {\n            if (0 === arguments.length) ptr = new StructType();\n            if (ptr instanceof StructType) {\n              this.set(ptr.pointer, ptr);\n              return ptr;\n            } else if (!wasm.isPtr(ptr)) {\n              sqlite3.SQLite3Error.toss(\n                'Invalid argument to',\n                methodName + '()',\n              );\n            }\n            let rc = this.get(ptr);\n            if (removeMapping) this.delete(ptr);\n            return rc;\n          }.bind(new Map());\n        };\n\n        const StructPtrMapper = function (name, StructType) {\n          const __xWrap = __xWrapFactory(name, StructType);\n\n          return Object.assign(Object.create(null), {\n            StructType,\n\n            create: (ppOut) => {\n              const rc = __xWrap();\n              wasm.pokePtr(ppOut, rc.pointer);\n              return rc;\n            },\n\n            get: (pCObj) => __xWrap(pCObj),\n\n            unget: (pCObj) => __xWrap(pCObj, true),\n\n            dispose: (pCObj) => {\n              const o = __xWrap(pCObj, true);\n              if (o) o.dispose();\n            },\n          });\n        };\n\n        vtab.xVtab = StructPtrMapper('xVtab', capi.sqlite3_vtab);\n\n        vtab.xCursor = StructPtrMapper('xCursor', capi.sqlite3_vtab_cursor);\n\n        vtab.xIndexInfo = (pIdxInfo) => new capi.sqlite3_index_info(pIdxInfo);\n\n        vtab.xError = function f(methodName, err, defaultRc) {\n          if (f.errorReporter instanceof Function) {\n            try {\n              f.errorReporter(\n                'sqlite3_module::' + methodName + '(): ' + err.message,\n              );\n            } catch (e) {}\n          }\n          let rc;\n          if (err instanceof sqlite3.WasmAllocError) rc = capi.SQLITE_NOMEM;\n          else if (arguments.length > 2) rc = defaultRc;\n          else if (err instanceof sqlite3.SQLite3Error) rc = err.resultCode;\n          return rc || capi.SQLITE_ERROR;\n        };\n        vtab.xError.errorReporter = 1 ? console.error.bind(console) : false;\n\n        vtab.xRowid = (ppRowid64, value) => wasm.poke(ppRowid64, value, 'i64');\n\n        vtab.setupModule = function (opt) {\n          let createdMod = false;\n          const mod =\n            this instanceof capi.sqlite3_module\n              ? this\n              : opt.struct || (createdMod = new capi.sqlite3_module());\n          try {\n            const methods = opt.methods || toss(\"Missing 'methods' object.\");\n            for (const e of Object.entries({\n              xConnect: 'xCreate',\n              xDisconnect: 'xDestroy',\n            })) {\n              const k = e[0],\n                v = e[1];\n              if (true === methods[k]) methods[k] = methods[v];\n              else if (true === methods[v]) methods[v] = methods[k];\n            }\n            if (opt.catchExceptions) {\n              const fwrap = function (methodName, func) {\n                if (['xConnect', 'xCreate'].indexOf(methodName) >= 0) {\n                  return function (pDb, pAux, argc, argv, ppVtab, pzErr) {\n                    try {\n                      return func(...arguments) || 0;\n                    } catch (e) {\n                      if (!(e instanceof sqlite3.WasmAllocError)) {\n                        wasm.dealloc(wasm.peekPtr(pzErr));\n                        wasm.pokePtr(pzErr, wasm.allocCString(e.message));\n                      }\n                      return vtab.xError(methodName, e);\n                    }\n                  };\n                } else {\n                  return function (...args) {\n                    try {\n                      return func(...args) || 0;\n                    } catch (e) {\n                      return vtab.xError(methodName, e);\n                    }\n                  };\n                }\n              };\n              const mnames = [\n                'xCreate',\n                'xConnect',\n                'xBestIndex',\n                'xDisconnect',\n                'xDestroy',\n                'xOpen',\n                'xClose',\n                'xFilter',\n                'xNext',\n                'xEof',\n                'xColumn',\n                'xRowid',\n                'xUpdate',\n                'xBegin',\n                'xSync',\n                'xCommit',\n                'xRollback',\n                'xFindFunction',\n                'xRename',\n                'xSavepoint',\n                'xRelease',\n                'xRollbackTo',\n                'xShadowName',\n              ];\n              const remethods = Object.create(null);\n              for (const k of mnames) {\n                const m = methods[k];\n                if (!(m instanceof Function)) continue;\n                else if ('xConnect' === k && methods.xCreate === m) {\n                  remethods[k] = methods.xCreate;\n                } else if ('xCreate' === k && methods.xConnect === m) {\n                  remethods[k] = methods.xConnect;\n                } else {\n                  remethods[k] = fwrap(k, m);\n                }\n              }\n              mod.installMethods(remethods, false);\n            } else {\n              mod.installMethods(methods, !!opt.applyArgcCheck);\n            }\n            if (0 === mod.$iVersion) {\n              let v;\n              if ('number' === typeof opt.iVersion) v = opt.iVersion;\n              else if (mod.$xShadowName) v = 3;\n              else if (mod.$xSavePoint || mod.$xRelease || mod.$xRollbackTo)\n                v = 2;\n              else v = 1;\n              mod.$iVersion = v;\n            }\n          } catch (e) {\n            if (createdMod) createdMod.dispose();\n            throw e;\n          }\n          return mod;\n        };\n\n        capi.sqlite3_module.prototype.setupModule = function (opt) {\n          return vtab.setupModule.call(this, opt);\n        };\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const installOpfsVfs = function callee(options) {\n          if (!globalThis.SharedArrayBuffer || !globalThis.Atomics) {\n            return Promise.reject(\n              new Error(\n                'Cannot install OPFS: Missing SharedArrayBuffer and/or Atomics. ' +\n                  'The server must emit the COOP/COEP response headers to enable those. ' +\n                  'See https://sqlite.org/wasm/doc/trunk/persistence.md#coop-coep',\n              ),\n            );\n          } else if ('undefined' === typeof WorkerGlobalScope) {\n            return Promise.reject(\n              new Error(\n                'The OPFS sqlite3_vfs cannot run in the main thread ' +\n                  'because it requires Atomics.wait().',\n              ),\n            );\n          } else if (\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle ||\n            !globalThis.FileSystemFileHandle.prototype.createSyncAccessHandle ||\n            !navigator?.storage?.getDirectory\n          ) {\n            return Promise.reject(new Error('Missing required OPFS APIs.'));\n          }\n          if (!options || 'object' !== typeof options) {\n            options = Object.create(null);\n          }\n          const urlParams = new URL(globalThis.location.href).searchParams;\n          if (urlParams.has('opfs-disable')) {\n            return Promise.resolve(sqlite3);\n          }\n          if (undefined === options.verbose) {\n            options.verbose = urlParams.has('opfs-verbose')\n              ? +urlParams.get('opfs-verbose') || 2\n              : 1;\n          }\n          if (undefined === options.sanityChecks) {\n            options.sanityChecks = urlParams.has('opfs-sanity-check');\n          }\n          if (undefined === options.proxyUri) {\n            options.proxyUri = callee.defaultProxyUri;\n          }\n\n          if ('function' === typeof options.proxyUri) {\n            options.proxyUri = options.proxyUri();\n          }\n          const thePromise = new Promise(function (\n            promiseResolve_,\n            promiseReject_,\n          ) {\n            const loggers = [\n              sqlite3.config.error,\n              sqlite3.config.warn,\n              sqlite3.config.log,\n            ];\n            const logImpl = (level, ...args) => {\n              if (options.verbose > level)\n                loggers[level]('OPFS syncer:', ...args);\n            };\n            const log = (...args) => logImpl(2, ...args);\n            const warn = (...args) => logImpl(1, ...args);\n            const error = (...args) => logImpl(0, ...args);\n            const toss = sqlite3.util.toss;\n            const capi = sqlite3.capi;\n            const util = sqlite3.util;\n            const wasm = sqlite3.wasm;\n            const sqlite3_vfs = capi.sqlite3_vfs;\n            const sqlite3_file = capi.sqlite3_file;\n            const sqlite3_io_methods = capi.sqlite3_io_methods;\n\n            const opfsUtil = Object.create(null);\n\n            const thisThreadHasOPFS = () => {\n              return (\n                globalThis.FileSystemHandle &&\n                globalThis.FileSystemDirectoryHandle &&\n                globalThis.FileSystemFileHandle &&\n                globalThis.FileSystemFileHandle.prototype\n                  .createSyncAccessHandle &&\n                navigator?.storage?.getDirectory\n              );\n            };\n\n            opfsUtil.metrics = {\n              dump: function () {\n                let k,\n                  n = 0,\n                  t = 0,\n                  w = 0;\n                for (k in state.opIds) {\n                  const m = metrics[k];\n                  n += m.count;\n                  t += m.time;\n                  w += m.wait;\n                  m.avgTime = m.count && m.time ? m.time / m.count : 0;\n                  m.avgWait = m.count && m.wait ? m.wait / m.count : 0;\n                }\n                sqlite3.config.log(\n                  globalThis.location.href,\n                  'metrics for',\n                  globalThis.location.href,\n                  ':',\n                  metrics,\n                  '\\nTotal of',\n                  n,\n                  'op(s) for',\n                  t,\n                  'ms (incl. ' + w + ' ms of waiting on the async side)',\n                );\n                sqlite3.config.log('Serialization metrics:', metrics.s11n);\n                W.postMessage({ type: 'opfs-async-metrics' });\n              },\n              reset: function () {\n                let k;\n                const r = (m) => (m.count = m.time = m.wait = 0);\n                for (k in state.opIds) {\n                  r((metrics[k] = Object.create(null)));\n                }\n                let s = (metrics.s11n = Object.create(null));\n                s = s.serialize = Object.create(null);\n                s.count = s.time = 0;\n                s = metrics.s11n.deserialize = Object.create(null);\n                s.count = s.time = 0;\n              },\n            };\n            const opfsIoMethods = new sqlite3_io_methods();\n            const opfsVfs = new sqlite3_vfs().addOnDispose(() =>\n              opfsIoMethods.dispose(),\n            );\n            let promiseWasRejected = undefined;\n            const promiseReject = (err) => {\n              promiseWasRejected = true;\n              opfsVfs.dispose();\n              return promiseReject_(err);\n            };\n            const promiseResolve = () => {\n              promiseWasRejected = false;\n              return promiseResolve_(sqlite3);\n            };\n            const W = new Worker(\n              new URL('sqlite3-opfs-async-proxy.js', import.meta.url),\n            );\n            setTimeout(() => {\n              if (undefined === promiseWasRejected) {\n                promiseReject(\n                  new Error(\n                    'Timeout while waiting for OPFS async proxy worker.',\n                  ),\n                );\n              }\n            }, 4000);\n            W._originalOnError = W.onerror;\n            W.onerror = function (err) {\n              error('Error initializing OPFS asyncer:', err);\n              promiseReject(\n                new Error(\n                  'Loading OPFS async Worker failed for unknown reasons.',\n                ),\n              );\n            };\n            const pDVfs = capi.sqlite3_vfs_find(null);\n            const dVfs = pDVfs ? new sqlite3_vfs(pDVfs) : null;\n            opfsIoMethods.$iVersion = 1;\n            opfsVfs.$iVersion = 2;\n            opfsVfs.$szOsFile = capi.sqlite3_file.structInfo.sizeof;\n            opfsVfs.$mxPathname = 1024;\n            opfsVfs.$zName = wasm.allocCString('opfs');\n\n            opfsVfs.$xDlOpen =\n              opfsVfs.$xDlError =\n              opfsVfs.$xDlSym =\n              opfsVfs.$xDlClose =\n                null;\n            opfsVfs.addOnDispose(\n              '$zName',\n              opfsVfs.$zName,\n              'cleanup default VFS wrapper',\n              () => (dVfs ? dVfs.dispose() : null),\n            );\n\n            const state = Object.create(null);\n            state.verbose = options.verbose;\n            state.littleEndian = (() => {\n              const buffer = new ArrayBuffer(2);\n              new DataView(buffer).setInt16(0, 256, true);\n\n              return new Int16Array(buffer)[0] === 256;\n            })();\n\n            state.asyncIdleWaitTime = 150;\n\n            state.asyncS11nExceptions = 1;\n\n            state.fileBufferSize = 1024 * 64;\n            state.sabS11nOffset = state.fileBufferSize;\n\n            state.sabS11nSize = opfsVfs.$mxPathname * 2;\n\n            state.sabIO = new SharedArrayBuffer(\n              state.fileBufferSize + state.sabS11nSize,\n            );\n            state.opIds = Object.create(null);\n            const metrics = Object.create(null);\n            {\n              let i = 0;\n\n              state.opIds.whichOp = i++;\n\n              state.opIds.rc = i++;\n\n              state.opIds.xAccess = i++;\n              state.opIds.xClose = i++;\n              state.opIds.xDelete = i++;\n              state.opIds.xDeleteNoWait = i++;\n              state.opIds.xFileSize = i++;\n              state.opIds.xLock = i++;\n              state.opIds.xOpen = i++;\n              state.opIds.xRead = i++;\n              state.opIds.xSleep = i++;\n              state.opIds.xSync = i++;\n              state.opIds.xTruncate = i++;\n              state.opIds.xUnlock = i++;\n              state.opIds.xWrite = i++;\n              state.opIds.mkdir = i++;\n              state.opIds['opfs-async-metrics'] = i++;\n              state.opIds['opfs-async-shutdown'] = i++;\n\n              state.opIds.retry = i++;\n              state.sabOP = new SharedArrayBuffer(i * 4);\n              opfsUtil.metrics.reset();\n            }\n\n            state.sq3Codes = Object.create(null);\n            [\n              'SQLITE_ACCESS_EXISTS',\n              'SQLITE_ACCESS_READWRITE',\n              'SQLITE_BUSY',\n              'SQLITE_CANTOPEN',\n              'SQLITE_ERROR',\n              'SQLITE_IOERR',\n              'SQLITE_IOERR_ACCESS',\n              'SQLITE_IOERR_CLOSE',\n              'SQLITE_IOERR_DELETE',\n              'SQLITE_IOERR_FSYNC',\n              'SQLITE_IOERR_LOCK',\n              'SQLITE_IOERR_READ',\n              'SQLITE_IOERR_SHORT_READ',\n              'SQLITE_IOERR_TRUNCATE',\n              'SQLITE_IOERR_UNLOCK',\n              'SQLITE_IOERR_WRITE',\n              'SQLITE_LOCK_EXCLUSIVE',\n              'SQLITE_LOCK_NONE',\n              'SQLITE_LOCK_PENDING',\n              'SQLITE_LOCK_RESERVED',\n              'SQLITE_LOCK_SHARED',\n              'SQLITE_LOCKED',\n              'SQLITE_MISUSE',\n              'SQLITE_NOTFOUND',\n              'SQLITE_OPEN_CREATE',\n              'SQLITE_OPEN_DELETEONCLOSE',\n              'SQLITE_OPEN_MAIN_DB',\n              'SQLITE_OPEN_READONLY',\n            ].forEach((k) => {\n              if (undefined === (state.sq3Codes[k] = capi[k])) {\n                toss('Maintenance required: not found:', k);\n              }\n            });\n            state.opfsFlags = Object.assign(Object.create(null), {\n              OPFS_UNLOCK_ASAP: 0x01,\n\n              OPFS_UNLINK_BEFORE_OPEN: 0x02,\n\n              defaultUnlockAsap: false,\n            });\n\n            const opRun = (op, ...args) => {\n              const opNdx = state.opIds[op] || toss('Invalid op ID:', op);\n              state.s11n.serialize(...args);\n              Atomics.store(state.sabOPView, state.opIds.rc, -1);\n              Atomics.store(state.sabOPView, state.opIds.whichOp, opNdx);\n              Atomics.notify(state.sabOPView, state.opIds.whichOp);\n              const t = performance.now();\n              while (\n                'not-equal' !==\n                Atomics.wait(state.sabOPView, state.opIds.rc, -1)\n              ) {}\n\n              const rc = Atomics.load(state.sabOPView, state.opIds.rc);\n              metrics[op].wait += performance.now() - t;\n              if (rc && state.asyncS11nExceptions) {\n                const err = state.s11n.deserialize();\n                if (err) error(op + '() async error:', ...err);\n              }\n              return rc;\n            };\n\n            opfsUtil.debug = {\n              asyncShutdown: () => {\n                warn(\n                  'Shutting down OPFS async listener. The OPFS VFS will no longer work.',\n                );\n                opRun('opfs-async-shutdown');\n              },\n              asyncRestart: () => {\n                warn(\n                  'Attempting to restart OPFS VFS async listener. Might work, might not.',\n                );\n                W.postMessage({ type: 'opfs-async-restart' });\n              },\n            };\n\n            const initS11n = () => {\n              if (state.s11n) return state.s11n;\n              const textDecoder = new TextDecoder(),\n                textEncoder = new TextEncoder('utf-8'),\n                viewU8 = new Uint8Array(\n                  state.sabIO,\n                  state.sabS11nOffset,\n                  state.sabS11nSize,\n                ),\n                viewDV = new DataView(\n                  state.sabIO,\n                  state.sabS11nOffset,\n                  state.sabS11nSize,\n                );\n              state.s11n = Object.create(null);\n\n              const TypeIds = Object.create(null);\n              TypeIds.number = {\n                id: 1,\n                size: 8,\n                getter: 'getFloat64',\n                setter: 'setFloat64',\n              };\n              TypeIds.bigint = {\n                id: 2,\n                size: 8,\n                getter: 'getBigInt64',\n                setter: 'setBigInt64',\n              };\n              TypeIds.boolean = {\n                id: 3,\n                size: 4,\n                getter: 'getInt32',\n                setter: 'setInt32',\n              };\n              TypeIds.string = { id: 4 };\n\n              const getTypeId = (v) =>\n                TypeIds[typeof v] ||\n                toss(\n                  'Maintenance required: this value type cannot be serialized.',\n                  v,\n                );\n              const getTypeIdById = (tid) => {\n                switch (tid) {\n                  case TypeIds.number.id:\n                    return TypeIds.number;\n                  case TypeIds.bigint.id:\n                    return TypeIds.bigint;\n                  case TypeIds.boolean.id:\n                    return TypeIds.boolean;\n                  case TypeIds.string.id:\n                    return TypeIds.string;\n                  default:\n                    toss('Invalid type ID:', tid);\n                }\n              };\n\n              state.s11n.deserialize = function (clear = false) {\n                ++metrics.s11n.deserialize.count;\n                const t = performance.now();\n                const argc = viewU8[0];\n                const rc = argc ? [] : null;\n                if (argc) {\n                  const typeIds = [];\n                  let offset = 1,\n                    i,\n                    n,\n                    v;\n                  for (i = 0; i < argc; ++i, ++offset) {\n                    typeIds.push(getTypeIdById(viewU8[offset]));\n                  }\n                  for (i = 0; i < argc; ++i) {\n                    const t = typeIds[i];\n                    if (t.getter) {\n                      v = viewDV[t.getter](offset, state.littleEndian);\n                      offset += t.size;\n                    } else {\n                      n = viewDV.getInt32(offset, state.littleEndian);\n                      offset += 4;\n                      v = textDecoder.decode(viewU8.slice(offset, offset + n));\n                      offset += n;\n                    }\n                    rc.push(v);\n                  }\n                }\n                if (clear) viewU8[0] = 0;\n\n                metrics.s11n.deserialize.time += performance.now() - t;\n                return rc;\n              };\n\n              state.s11n.serialize = function (...args) {\n                const t = performance.now();\n                ++metrics.s11n.serialize.count;\n                if (args.length) {\n                  const typeIds = [];\n                  let i = 0,\n                    offset = 1;\n                  viewU8[0] = args.length & 0xff;\n                  for (; i < args.length; ++i, ++offset) {\n                    typeIds.push(getTypeId(args[i]));\n                    viewU8[offset] = typeIds[i].id;\n                  }\n                  for (i = 0; i < args.length; ++i) {\n                    const t = typeIds[i];\n                    if (t.setter) {\n                      viewDV[t.setter](offset, args[i], state.littleEndian);\n                      offset += t.size;\n                    } else {\n                      const s = textEncoder.encode(args[i]);\n                      viewDV.setInt32(offset, s.byteLength, state.littleEndian);\n                      offset += 4;\n                      viewU8.set(s, offset);\n                      offset += s.byteLength;\n                    }\n                  }\n                } else {\n                  viewU8[0] = 0;\n                }\n                metrics.s11n.serialize.time += performance.now() - t;\n              };\n              return state.s11n;\n            };\n\n            const randomFilename = function f(len = 16) {\n              if (!f._chars) {\n                f._chars =\n                  'abcdefghijklmnopqrstuvwxyz' +\n                  'ABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n                  '012346789';\n                f._n = f._chars.length;\n              }\n              const a = [];\n              let i = 0;\n              for (; i < len; ++i) {\n                const ndx = (Math.random() * (f._n * 64)) % f._n | 0;\n                a[i] = f._chars[ndx];\n              }\n              return a.join('');\n            };\n\n            const __openFiles = Object.create(null);\n\n            const opTimer = Object.create(null);\n            opTimer.op = undefined;\n            opTimer.start = undefined;\n            const mTimeStart = (op) => {\n              opTimer.start = performance.now();\n              opTimer.op = op;\n              ++metrics[op].count;\n            };\n            const mTimeEnd = () =>\n              (metrics[opTimer.op].time += performance.now() - opTimer.start);\n\n            const ioSyncWrappers = {\n              xCheckReservedLock: function (pFile, pOut) {\n                if (1) {\n                  wasm.poke(pOut, 0, 'i32');\n                } else {\n                  const f = __openFiles[pFile];\n                  wasm.poke(pOut, f.lockType ? 1 : 0, 'i32');\n                }\n                return 0;\n              },\n              xClose: function (pFile) {\n                mTimeStart('xClose');\n                let rc = 0;\n                const f = __openFiles[pFile];\n                if (f) {\n                  delete __openFiles[pFile];\n                  rc = opRun('xClose', pFile);\n                  if (f.sq3File) f.sq3File.dispose();\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xDeviceCharacteristics: function (pFile) {\n                return capi.SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN;\n              },\n              xFileControl: function (pFile, opId, pArg) {\n                return capi.SQLITE_NOTFOUND;\n              },\n              xFileSize: function (pFile, pSz64) {\n                mTimeStart('xFileSize');\n                let rc = opRun('xFileSize', pFile);\n                if (0 == rc) {\n                  try {\n                    const sz = state.s11n.deserialize()[0];\n                    wasm.poke(pSz64, sz, 'i64');\n                  } catch (e) {\n                    error('Unexpected error reading xFileSize() result:', e);\n                    rc = state.sq3Codes.SQLITE_IOERR;\n                  }\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xLock: function (pFile, lockType) {\n                mTimeStart('xLock');\n                const f = __openFiles[pFile];\n                let rc = 0;\n\n                if (!f.lockType) {\n                  rc = opRun('xLock', pFile, lockType);\n                  if (0 === rc) f.lockType = lockType;\n                } else {\n                  f.lockType = lockType;\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xRead: function (pFile, pDest, n, offset64) {\n                mTimeStart('xRead');\n                const f = __openFiles[pFile];\n                let rc;\n                try {\n                  rc = opRun('xRead', pFile, n, Number(offset64));\n                  if (0 === rc || capi.SQLITE_IOERR_SHORT_READ === rc) {\n                    wasm.heap8u().set(f.sabView.subarray(0, n), pDest);\n                  }\n                } catch (e) {\n                  error('xRead(', arguments, ') failed:', e, f);\n                  rc = capi.SQLITE_IOERR_READ;\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xSync: function (pFile, flags) {\n                mTimeStart('xSync');\n                ++metrics.xSync.count;\n                const rc = opRun('xSync', pFile, flags);\n                mTimeEnd();\n                return rc;\n              },\n              xTruncate: function (pFile, sz64) {\n                mTimeStart('xTruncate');\n                const rc = opRun('xTruncate', pFile, Number(sz64));\n                mTimeEnd();\n                return rc;\n              },\n              xUnlock: function (pFile, lockType) {\n                mTimeStart('xUnlock');\n                const f = __openFiles[pFile];\n                let rc = 0;\n                if (capi.SQLITE_LOCK_NONE === lockType && f.lockType) {\n                  rc = opRun('xUnlock', pFile, lockType);\n                }\n                if (0 === rc) f.lockType = lockType;\n                mTimeEnd();\n                return rc;\n              },\n              xWrite: function (pFile, pSrc, n, offset64) {\n                mTimeStart('xWrite');\n                const f = __openFiles[pFile];\n                let rc;\n                try {\n                  f.sabView.set(wasm.heap8u().subarray(pSrc, pSrc + n));\n                  rc = opRun('xWrite', pFile, n, Number(offset64));\n                } catch (e) {\n                  error('xWrite(', arguments, ') failed:', e, f);\n                  rc = capi.SQLITE_IOERR_WRITE;\n                }\n                mTimeEnd();\n                return rc;\n              },\n            };\n\n            const vfsSyncWrappers = {\n              xAccess: function (pVfs, zName, flags, pOut) {\n                mTimeStart('xAccess');\n                const rc = opRun('xAccess', wasm.cstrToJs(zName));\n                wasm.poke(pOut, rc ? 0 : 1, 'i32');\n                mTimeEnd();\n                return 0;\n              },\n              xCurrentTime: function (pVfs, pOut) {\n                wasm.poke(\n                  pOut,\n                  2440587.5 + new Date().getTime() / 86400000,\n                  'double',\n                );\n                return 0;\n              },\n              xCurrentTimeInt64: function (pVfs, pOut) {\n                wasm.poke(\n                  pOut,\n                  2440587.5 * 86400000 + new Date().getTime(),\n                  'i64',\n                );\n                return 0;\n              },\n              xDelete: function (pVfs, zName, doSyncDir) {\n                mTimeStart('xDelete');\n                const rc = opRun(\n                  'xDelete',\n                  wasm.cstrToJs(zName),\n                  doSyncDir,\n                  false,\n                );\n                mTimeEnd();\n                return rc;\n              },\n              xFullPathname: function (pVfs, zName, nOut, pOut) {\n                const i = wasm.cstrncpy(pOut, zName, nOut);\n                return i < nOut ? 0 : capi.SQLITE_CANTOPEN;\n              },\n              xGetLastError: function (pVfs, nOut, pOut) {\n                warn('OPFS xGetLastError() has nothing sensible to return.');\n                return 0;\n              },\n\n              xOpen: function f(pVfs, zName, pFile, flags, pOutFlags) {\n                mTimeStart('xOpen');\n                let opfsFlags = 0;\n                if (0 === zName) {\n                  zName = randomFilename();\n                } else if (wasm.isPtr(zName)) {\n                  if (capi.sqlite3_uri_boolean(zName, 'opfs-unlock-asap', 0)) {\n                    opfsFlags |= state.opfsFlags.OPFS_UNLOCK_ASAP;\n                  }\n                  if (\n                    capi.sqlite3_uri_boolean(zName, 'delete-before-open', 0)\n                  ) {\n                    opfsFlags |= state.opfsFlags.OPFS_UNLINK_BEFORE_OPEN;\n                  }\n                  zName = wasm.cstrToJs(zName);\n                }\n                const fh = Object.create(null);\n                fh.fid = pFile;\n                fh.filename = zName;\n                fh.sab = new SharedArrayBuffer(state.fileBufferSize);\n                fh.flags = flags;\n                const rc = opRun('xOpen', pFile, zName, flags, opfsFlags);\n                if (!rc) {\n                  if (fh.readOnly) {\n                    wasm.poke(pOutFlags, capi.SQLITE_OPEN_READONLY, 'i32');\n                  }\n                  __openFiles[pFile] = fh;\n                  fh.sabView = state.sabFileBufView;\n                  fh.sq3File = new sqlite3_file(pFile);\n                  fh.sq3File.$pMethods = opfsIoMethods.pointer;\n                  fh.lockType = capi.SQLITE_LOCK_NONE;\n                }\n                mTimeEnd();\n                return rc;\n              },\n            };\n\n            if (dVfs) {\n              opfsVfs.$xRandomness = dVfs.$xRandomness;\n              opfsVfs.$xSleep = dVfs.$xSleep;\n            }\n            if (!opfsVfs.$xRandomness) {\n              vfsSyncWrappers.xRandomness = function (pVfs, nOut, pOut) {\n                const heap = wasm.heap8u();\n                let i = 0;\n                for (; i < nOut; ++i)\n                  heap[pOut + i] = (Math.random() * 255000) & 0xff;\n                return i;\n              };\n            }\n            if (!opfsVfs.$xSleep) {\n              vfsSyncWrappers.xSleep = function (pVfs, ms) {\n                Atomics.wait(state.sabOPView, state.opIds.xSleep, 0, ms);\n                return 0;\n              };\n            }\n\n            opfsUtil.getResolvedPath = function (filename, splitIt) {\n              const p = new URL(filename, 'file://irrelevant').pathname;\n              return splitIt ? p.split('/').filter((v) => !!v) : p;\n            };\n\n            opfsUtil.getDirForFilename = async function f(\n              absFilename,\n              createDirs = false,\n            ) {\n              const path = opfsUtil.getResolvedPath(absFilename, true);\n              const filename = path.pop();\n              let dh = opfsUtil.rootDirectory;\n              for (const dirName of path) {\n                if (dirName) {\n                  dh = await dh.getDirectoryHandle(dirName, {\n                    create: !!createDirs,\n                  });\n                }\n              }\n              return [dh, filename];\n            };\n\n            opfsUtil.mkdir = async function (absDirName) {\n              try {\n                await opfsUtil.getDirForFilename(\n                  absDirName + '/filepart',\n                  true,\n                );\n                return true;\n              } catch (e) {\n                return false;\n              }\n            };\n\n            opfsUtil.entryExists = async function (fsEntryName) {\n              try {\n                const [dh, fn] = await opfsUtil.getDirForFilename(fsEntryName);\n                await dh.getFileHandle(fn);\n                return true;\n              } catch (e) {\n                return false;\n              }\n            };\n\n            opfsUtil.randomFilename = randomFilename;\n\n            opfsUtil.treeList = async function () {\n              const doDir = async function callee(dirHandle, tgt) {\n                tgt.name = dirHandle.name;\n                tgt.dirs = [];\n                tgt.files = [];\n                for await (const handle of dirHandle.values()) {\n                  if ('directory' === handle.kind) {\n                    const subDir = Object.create(null);\n                    tgt.dirs.push(subDir);\n                    await callee(handle, subDir);\n                  } else {\n                    tgt.files.push(handle.name);\n                  }\n                }\n              };\n              const root = Object.create(null);\n              await doDir(opfsUtil.rootDirectory, root);\n              return root;\n            };\n\n            opfsUtil.rmfr = async function () {\n              const dir = opfsUtil.rootDirectory,\n                opt = { recurse: true };\n              for await (const handle of dir.values()) {\n                dir.removeEntry(handle.name, opt);\n              }\n            };\n\n            opfsUtil.unlink = async function (\n              fsEntryName,\n              recursive = false,\n              throwOnError = false,\n            ) {\n              try {\n                const [hDir, filenamePart] = await opfsUtil.getDirForFilename(\n                  fsEntryName,\n                  false,\n                );\n                await hDir.removeEntry(filenamePart, { recursive });\n                return true;\n              } catch (e) {\n                if (throwOnError) {\n                  throw new Error(\n                    'unlink(',\n                    arguments[0],\n                    ') failed: ' + e.message,\n                    {\n                      cause: e,\n                    },\n                  );\n                }\n                return false;\n              }\n            };\n\n            opfsUtil.traverse = async function (opt) {\n              const defaultOpt = {\n                recursive: true,\n                directory: opfsUtil.rootDirectory,\n              };\n              if ('function' === typeof opt) {\n                opt = { callback: opt };\n              }\n              opt = Object.assign(defaultOpt, opt || {});\n              const doDir = async function callee(dirHandle, depth) {\n                for await (const handle of dirHandle.values()) {\n                  if (false === opt.callback(handle, dirHandle, depth))\n                    return false;\n                  else if (opt.recursive && 'directory' === handle.kind) {\n                    if (false === (await callee(handle, depth + 1))) break;\n                  }\n                }\n              };\n              doDir(opt.directory, 0);\n            };\n\n            const importDbChunked = async function (filename, callback) {\n              const [hDir, fnamePart] = await opfsUtil.getDirForFilename(\n                filename,\n                true,\n              );\n              const hFile = await hDir.getFileHandle(fnamePart, {\n                create: true,\n              });\n              let sah = await hFile.createSyncAccessHandle();\n              let nWrote = 0,\n                chunk,\n                checkedHeader = false,\n                err = false;\n              try {\n                sah.truncate(0);\n                while (undefined !== (chunk = await callback())) {\n                  if (chunk instanceof ArrayBuffer)\n                    chunk = new Uint8Array(chunk);\n                  if (0 === nWrote && chunk.byteLength >= 15) {\n                    util.affirmDbHeader(chunk);\n                    checkedHeader = true;\n                  }\n                  sah.write(chunk, { at: nWrote });\n                  nWrote += chunk.byteLength;\n                }\n                if (nWrote < 512 || 0 !== nWrote % 512) {\n                  toss(\n                    'Input size',\n                    nWrote,\n                    'is not correct for an SQLite database.',\n                  );\n                }\n                if (!checkedHeader) {\n                  const header = new Uint8Array(20);\n                  sah.read(header, { at: 0 });\n                  util.affirmDbHeader(header);\n                }\n                sah.write(new Uint8Array([1, 1]), { at: 18 });\n                return nWrote;\n              } catch (e) {\n                await sah.close();\n                sah = undefined;\n                await hDir.removeEntry(fnamePart).catch(() => {});\n                throw e;\n              } finally {\n                if (sah) await sah.close();\n              }\n            };\n\n            opfsUtil.importDb = async function (filename, bytes) {\n              if (bytes instanceof Function) {\n                return importDbChunked(filename, bytes);\n              }\n              if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n              util.affirmIsDb(bytes);\n              const n = bytes.byteLength;\n              const [hDir, fnamePart] = await opfsUtil.getDirForFilename(\n                filename,\n                true,\n              );\n              let sah,\n                err,\n                nWrote = 0;\n              try {\n                const hFile = await hDir.getFileHandle(fnamePart, {\n                  create: true,\n                });\n                sah = await hFile.createSyncAccessHandle();\n                sah.truncate(0);\n                nWrote = sah.write(bytes, { at: 0 });\n                if (nWrote != n) {\n                  toss(\n                    'Expected to write ' +\n                      n +\n                      ' bytes but wrote ' +\n                      nWrote +\n                      '.',\n                  );\n                }\n                sah.write(new Uint8Array([1, 1]), { at: 18 });\n                return nWrote;\n              } catch (e) {\n                if (sah) {\n                  await sah.close();\n                  sah = undefined;\n                }\n                await hDir.removeEntry(fnamePart).catch(() => {});\n                throw e;\n              } finally {\n                if (sah) await sah.close();\n              }\n            };\n\n            if (sqlite3.oo1) {\n              const OpfsDb = function (...args) {\n                const opt = sqlite3.oo1.DB.dbCtorHelper.normalizeArgs(...args);\n                opt.vfs = opfsVfs.$zName;\n                sqlite3.oo1.DB.dbCtorHelper.call(this, opt);\n              };\n              OpfsDb.prototype = Object.create(sqlite3.oo1.DB.prototype);\n              sqlite3.oo1.OpfsDb = OpfsDb;\n              OpfsDb.importDb = opfsUtil.importDb;\n              sqlite3.oo1.DB.dbCtorHelper.setVfsPostOpenSql(\n                opfsVfs.pointer,\n                function (oo1Db, sqlite3) {\n                  sqlite3.capi.sqlite3_busy_timeout(oo1Db, 10000);\n                  sqlite3.capi.sqlite3_exec(\n                    oo1Db,\n                    [\n                      'pragma journal_mode=DELETE;',\n\n                      'pragma cache_size=-16384;',\n                    ],\n                    0,\n                    0,\n                    0,\n                  );\n                },\n              );\n            }\n\n            const sanityCheck = function () {\n              const scope = wasm.scopedAllocPush();\n              const sq3File = new sqlite3_file();\n              try {\n                const fid = sq3File.pointer;\n                const openFlags =\n                  capi.SQLITE_OPEN_CREATE |\n                  capi.SQLITE_OPEN_READWRITE |\n                  capi.SQLITE_OPEN_MAIN_DB;\n                const pOut = wasm.scopedAlloc(8);\n                const dbFile = '/sanity/check/file' + randomFilename(8);\n                const zDbFile = wasm.scopedAllocCString(dbFile);\n                let rc;\n                state.s11n.serialize('This is \u00E4 string.');\n                rc = state.s11n.deserialize();\n                log('deserialize() says:', rc);\n                if ('This is \u00E4 string.' !== rc[0]) toss('String d13n error.');\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                log('xAccess(', dbFile, ') exists ?=', rc);\n                rc = vfsSyncWrappers.xOpen(\n                  opfsVfs.pointer,\n                  zDbFile,\n                  fid,\n                  openFlags,\n                  pOut,\n                );\n                log(\n                  'open rc =',\n                  rc,\n                  'state.sabOPView[xOpen] =',\n                  state.sabOPView[state.opIds.xOpen],\n                );\n                if (0 !== rc) {\n                  error('open failed with code', rc);\n                  return;\n                }\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                if (!rc) toss('xAccess() failed to detect file.');\n                rc = ioSyncWrappers.xSync(sq3File.pointer, 0);\n                if (rc) toss('sync failed w/ rc', rc);\n                rc = ioSyncWrappers.xTruncate(sq3File.pointer, 1024);\n                if (rc) toss('truncate failed w/ rc', rc);\n                wasm.poke(pOut, 0, 'i64');\n                rc = ioSyncWrappers.xFileSize(sq3File.pointer, pOut);\n                if (rc) toss('xFileSize failed w/ rc', rc);\n                log('xFileSize says:', wasm.peek(pOut, 'i64'));\n                rc = ioSyncWrappers.xWrite(sq3File.pointer, zDbFile, 10, 1);\n                if (rc) toss('xWrite() failed!');\n                const readBuf = wasm.scopedAlloc(16);\n                rc = ioSyncWrappers.xRead(sq3File.pointer, readBuf, 6, 2);\n                wasm.poke(readBuf + 6, 0);\n                let jRead = wasm.cstrToJs(readBuf);\n                log('xRead() got:', jRead);\n                if ('sanity' !== jRead) toss('Unexpected xRead() value.');\n                if (vfsSyncWrappers.xSleep) {\n                  log('xSleep()ing before close()ing...');\n                  vfsSyncWrappers.xSleep(opfsVfs.pointer, 2000);\n                  log('waking up from xSleep()');\n                }\n                rc = ioSyncWrappers.xClose(fid);\n                log('xClose rc =', rc, 'sabOPView =', state.sabOPView);\n                log('Deleting file:', dbFile);\n                vfsSyncWrappers.xDelete(opfsVfs.pointer, zDbFile, 0x1234);\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                if (rc)\n                  toss(\n                    'Expecting 0 from xAccess(',\n                    dbFile,\n                    ') after xDelete().',\n                  );\n                warn('End of OPFS sanity checks.');\n              } finally {\n                sq3File.dispose();\n                wasm.scopedAllocPop(scope);\n              }\n            };\n\n            W.onmessage = function ({ data }) {\n              switch (data.type) {\n                case 'opfs-unavailable':\n                  promiseReject(new Error(data.payload.join(' ')));\n                  break;\n                case 'opfs-async-loaded':\n                  W.postMessage({ type: 'opfs-async-init', args: state });\n                  break;\n                case 'opfs-async-inited': {\n                  if (true === promiseWasRejected) {\n                    break;\n                  }\n                  try {\n                    sqlite3.vfs.installVfs({\n                      io: { struct: opfsIoMethods, methods: ioSyncWrappers },\n                      vfs: { struct: opfsVfs, methods: vfsSyncWrappers },\n                    });\n                    state.sabOPView = new Int32Array(state.sabOP);\n                    state.sabFileBufView = new Uint8Array(\n                      state.sabIO,\n                      0,\n                      state.fileBufferSize,\n                    );\n                    state.sabS11nView = new Uint8Array(\n                      state.sabIO,\n                      state.sabS11nOffset,\n                      state.sabS11nSize,\n                    );\n                    initS11n();\n                    if (options.sanityChecks) {\n                      warn(\n                        'Running sanity checks because of opfs-sanity-check URL arg...',\n                      );\n                      sanityCheck();\n                    }\n                    if (thisThreadHasOPFS()) {\n                      navigator.storage\n                        .getDirectory()\n                        .then((d) => {\n                          W.onerror = W._originalOnError;\n                          delete W._originalOnError;\n                          sqlite3.opfs = opfsUtil;\n                          opfsUtil.rootDirectory = d;\n                          log('End of OPFS sqlite3_vfs setup.', opfsVfs);\n                          promiseResolve();\n                        })\n                        .catch(promiseReject);\n                    } else {\n                      promiseResolve();\n                    }\n                  } catch (e) {\n                    error(e);\n                    promiseReject(e);\n                  }\n                  break;\n                }\n                default: {\n                  const errMsg =\n                    'Unexpected message from the OPFS async worker: ' +\n                    JSON.stringify(data);\n                  error(errMsg);\n                  promiseReject(new Error(errMsg));\n                  break;\n                }\n              }\n            };\n          });\n          return thePromise;\n        };\n        installOpfsVfs.defaultProxyUri = 'sqlite3-opfs-async-proxy.js';\n        globalThis.sqlite3ApiBootstrap.initializersAsync.push(\n          async (sqlite3) => {\n            try {\n              let proxyJs = installOpfsVfs.defaultProxyUri;\n              if (sqlite3.scriptInfo.sqlite3Dir) {\n                installOpfsVfs.defaultProxyUri =\n                  sqlite3.scriptInfo.sqlite3Dir + proxyJs;\n              }\n              return installOpfsVfs().catch((e) => {\n                sqlite3.config.warn(\n                  'Ignoring inability to install OPFS sqlite3_vfs:',\n                  e.message,\n                );\n              });\n            } catch (e) {\n              sqlite3.config.error('installOpfsVfs() exception:', e);\n              return Promise.reject(e);\n            }\n          },\n        );\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        'use strict';\n        const toss = sqlite3.util.toss;\n        const toss3 = sqlite3.util.toss3;\n        const initPromises = Object.create(null);\n        const capi = sqlite3.capi;\n        const util = sqlite3.util;\n        const wasm = sqlite3.wasm;\n\n        const SECTOR_SIZE = 4096;\n        const HEADER_MAX_PATH_SIZE = 512;\n        const HEADER_FLAGS_SIZE = 4;\n        const HEADER_DIGEST_SIZE = 8;\n        const HEADER_CORPUS_SIZE = HEADER_MAX_PATH_SIZE + HEADER_FLAGS_SIZE;\n        const HEADER_OFFSET_FLAGS = HEADER_MAX_PATH_SIZE;\n        const HEADER_OFFSET_DIGEST = HEADER_CORPUS_SIZE;\n        const HEADER_OFFSET_DATA = SECTOR_SIZE;\n\n        const PERSISTENT_FILE_TYPES =\n          capi.SQLITE_OPEN_MAIN_DB |\n          capi.SQLITE_OPEN_MAIN_JOURNAL |\n          capi.SQLITE_OPEN_SUPER_JOURNAL |\n          capi.SQLITE_OPEN_WAL;\n\n        const OPAQUE_DIR_NAME = '.opaque';\n\n        const getRandomName = () => Math.random().toString(36).slice(2);\n\n        const textDecoder = new TextDecoder();\n        const textEncoder = new TextEncoder();\n\n        const optionDefaults = Object.assign(Object.create(null), {\n          name: 'opfs-sahpool',\n          directory: undefined,\n          initialCapacity: 6,\n          clearOnInit: false,\n\n          verbosity: 2,\n        });\n\n        const loggers = [\n          sqlite3.config.error,\n          sqlite3.config.warn,\n          sqlite3.config.log,\n        ];\n        const log = sqlite3.config.log;\n        const warn = sqlite3.config.warn;\n        const error = sqlite3.config.error;\n\n        const __mapVfsToPool = new Map();\n        const getPoolForVfs = (pVfs) => __mapVfsToPool.get(pVfs);\n        const setPoolForVfs = (pVfs, pool) => {\n          if (pool) __mapVfsToPool.set(pVfs, pool);\n          else __mapVfsToPool.delete(pVfs);\n        };\n\n        const __mapSqlite3File = new Map();\n        const getPoolForPFile = (pFile) => __mapSqlite3File.get(pFile);\n        const setPoolForPFile = (pFile, pool) => {\n          if (pool) __mapSqlite3File.set(pFile, pool);\n          else __mapSqlite3File.delete(pFile);\n        };\n\n        const ioMethods = {\n          xCheckReservedLock: function (pFile, pOut) {\n            const pool = getPoolForPFile(pFile);\n            pool.log('xCheckReservedLock');\n            pool.storeErr();\n            wasm.poke32(pOut, 1);\n            return 0;\n          },\n          xClose: function (pFile) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            if (file) {\n              try {\n                pool.log(`xClose ${file.path}`);\n                pool.mapS3FileToOFile(pFile, false);\n                file.sah.flush();\n                if (file.flags & capi.SQLITE_OPEN_DELETEONCLOSE) {\n                  pool.deletePath(file.path);\n                }\n              } catch (e) {\n                return pool.storeErr(e, capi.SQLITE_IOERR);\n              }\n            }\n            return 0;\n          },\n          xDeviceCharacteristics: function (pFile) {\n            return capi.SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN;\n          },\n          xFileControl: function (pFile, opId, pArg) {\n            return capi.SQLITE_NOTFOUND;\n          },\n          xFileSize: function (pFile, pSz64) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xFileSize`);\n            const file = pool.getOFileForS3File(pFile);\n            const size = file.sah.getSize() - HEADER_OFFSET_DATA;\n\n            wasm.poke64(pSz64, BigInt(size));\n            return 0;\n          },\n          xLock: function (pFile, lockType) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xLock ${lockType}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            file.lockType = lockType;\n            return 0;\n          },\n          xRead: function (pFile, pDest, n, offset64) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            pool.log(`xRead ${file.path} ${n} @ ${offset64}`);\n            try {\n              const nRead = file.sah.read(\n                wasm.heap8u().subarray(pDest, pDest + n),\n                { at: HEADER_OFFSET_DATA + Number(offset64) },\n              );\n              if (nRead < n) {\n                wasm.heap8u().fill(0, pDest + nRead, pDest + n);\n                return capi.SQLITE_IOERR_SHORT_READ;\n              }\n              return 0;\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n          xSectorSize: function (pFile) {\n            return SECTOR_SIZE;\n          },\n          xSync: function (pFile, flags) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xSync ${flags}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n\n            try {\n              file.sah.flush();\n              return 0;\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n          xTruncate: function (pFile, sz64) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xTruncate ${sz64}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n\n            try {\n              file.sah.truncate(HEADER_OFFSET_DATA + Number(sz64));\n              return 0;\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n          xUnlock: function (pFile, lockType) {\n            const pool = getPoolForPFile(pFile);\n            pool.log('xUnlock');\n            const file = pool.getOFileForS3File(pFile);\n            file.lockType = lockType;\n            return 0;\n          },\n          xWrite: function (pFile, pSrc, n, offset64) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            pool.log(`xWrite ${file.path} ${n} ${offset64}`);\n            try {\n              const nBytes = file.sah.write(\n                wasm.heap8u().subarray(pSrc, pSrc + n),\n                { at: HEADER_OFFSET_DATA + Number(offset64) },\n              );\n              return n === nBytes ? 0 : toss('Unknown write() failure.');\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n        };\n\n        const opfsIoMethods = new capi.sqlite3_io_methods();\n        opfsIoMethods.$iVersion = 1;\n        sqlite3.vfs.installVfs({\n          io: { struct: opfsIoMethods, methods: ioMethods },\n        });\n\n        const vfsMethods = {\n          xAccess: function (pVfs, zName, flags, pOut) {\n            const pool = getPoolForVfs(pVfs);\n            pool.storeErr();\n            try {\n              const name = pool.getPath(zName);\n              wasm.poke32(pOut, pool.hasFilename(name) ? 1 : 0);\n            } catch (e) {\n              wasm.poke32(pOut, 0);\n            }\n            return 0;\n          },\n          xCurrentTime: function (pVfs, pOut) {\n            wasm.poke(\n              pOut,\n              2440587.5 + new Date().getTime() / 86400000,\n              'double',\n            );\n            return 0;\n          },\n          xCurrentTimeInt64: function (pVfs, pOut) {\n            wasm.poke(pOut, 2440587.5 * 86400000 + new Date().getTime(), 'i64');\n            return 0;\n          },\n          xDelete: function (pVfs, zName, doSyncDir) {\n            const pool = getPoolForVfs(pVfs);\n            pool.log(`xDelete ${wasm.cstrToJs(zName)}`);\n            pool.storeErr();\n            try {\n              pool.deletePath(pool.getPath(zName));\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_IOERR_DELETE;\n            }\n          },\n          xFullPathname: function (pVfs, zName, nOut, pOut) {\n            const i = wasm.cstrncpy(pOut, zName, nOut);\n            return i < nOut ? 0 : capi.SQLITE_CANTOPEN;\n          },\n          xGetLastError: function (pVfs, nOut, pOut) {\n            const pool = getPoolForVfs(pVfs);\n            const e = pool.popErr();\n            pool.log(`xGetLastError ${nOut} e =`, e);\n            if (e) {\n              const scope = wasm.scopedAllocPush();\n              try {\n                const [cMsg, n] = wasm.scopedAllocCString(e.message, true);\n                wasm.cstrncpy(pOut, cMsg, nOut);\n                if (n > nOut) wasm.poke8(pOut + nOut - 1, 0);\n              } catch (e) {\n                return capi.SQLITE_NOMEM;\n              } finally {\n                wasm.scopedAllocPop(scope);\n              }\n            }\n            return e ? e.sqlite3Rc || capi.SQLITE_IOERR : 0;\n          },\n\n          xOpen: function f(pVfs, zName, pFile, flags, pOutFlags) {\n            const pool = getPoolForVfs(pVfs);\n            try {\n              pool.log(`xOpen ${wasm.cstrToJs(zName)} ${flags}`);\n\n              const path =\n                zName && wasm.peek8(zName)\n                  ? pool.getPath(zName)\n                  : getRandomName();\n              let sah = pool.getSAHForPath(path);\n              if (!sah && flags & capi.SQLITE_OPEN_CREATE) {\n                if (pool.getFileCount() < pool.getCapacity()) {\n                  sah = pool.nextAvailableSAH();\n                  pool.setAssociatedPath(sah, path, flags);\n                } else {\n                  toss('SAH pool is full. Cannot create file', path);\n                }\n              }\n              if (!sah) {\n                toss('file not found:', path);\n              }\n\n              const file = { path, flags, sah };\n              pool.mapS3FileToOFile(pFile, file);\n              file.lockType = capi.SQLITE_LOCK_NONE;\n              const sq3File = new capi.sqlite3_file(pFile);\n              sq3File.$pMethods = opfsIoMethods.pointer;\n              sq3File.dispose();\n              wasm.poke32(pOutFlags, flags);\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_CANTOPEN;\n            }\n          },\n        };\n\n        const createOpfsVfs = function (vfsName) {\n          if (sqlite3.capi.sqlite3_vfs_find(vfsName)) {\n            toss3('VFS name is already registered:', vfsName);\n          }\n          const opfsVfs = new capi.sqlite3_vfs();\n\n          const pDVfs = capi.sqlite3_vfs_find(null);\n          const dVfs = pDVfs ? new capi.sqlite3_vfs(pDVfs) : null;\n          opfsVfs.$iVersion = 2;\n          opfsVfs.$szOsFile = capi.sqlite3_file.structInfo.sizeof;\n          opfsVfs.$mxPathname = HEADER_MAX_PATH_SIZE;\n          opfsVfs.addOnDispose(\n            (opfsVfs.$zName = wasm.allocCString(vfsName)),\n            () => setPoolForVfs(opfsVfs.pointer, 0),\n          );\n\n          if (dVfs) {\n            opfsVfs.$xRandomness = dVfs.$xRandomness;\n            opfsVfs.$xSleep = dVfs.$xSleep;\n            dVfs.dispose();\n          }\n          if (!opfsVfs.$xRandomness && !vfsMethods.xRandomness) {\n            vfsMethods.xRandomness = function (pVfs, nOut, pOut) {\n              const heap = wasm.heap8u();\n              let i = 0;\n              for (; i < nOut; ++i)\n                heap[pOut + i] = (Math.random() * 255000) & 0xff;\n              return i;\n            };\n          }\n          if (!opfsVfs.$xSleep && !vfsMethods.xSleep) {\n            vfsMethods.xSleep = (pVfs, ms) => 0;\n          }\n          sqlite3.vfs.installVfs({\n            vfs: { struct: opfsVfs, methods: vfsMethods },\n          });\n          return opfsVfs;\n        };\n\n        class OpfsSAHPool {\n          vfsDir;\n\n          #dhVfsRoot;\n\n          #dhOpaque;\n\n          #dhVfsParent;\n\n          #mapSAHToName = new Map();\n\n          #mapFilenameToSAH = new Map();\n\n          #availableSAH = new Set();\n\n          #mapS3FileToOFile_ = new Map();\n\n          #apBody = new Uint8Array(HEADER_CORPUS_SIZE);\n\n          #dvBody;\n\n          #cVfs;\n\n          #verbosity;\n\n          constructor(options = Object.create(null)) {\n            this.#verbosity = options.verbosity ?? optionDefaults.verbosity;\n            this.vfsName = options.name || optionDefaults.name;\n            this.#cVfs = createOpfsVfs(this.vfsName);\n            setPoolForVfs(this.#cVfs.pointer, this);\n            this.vfsDir = options.directory || '.' + this.vfsName;\n            this.#dvBody = new DataView(\n              this.#apBody.buffer,\n              this.#apBody.byteOffset,\n            );\n            this.isReady = this.reset(\n              !!(options.clearOnInit ?? optionDefaults.clearOnInit),\n            ).then(() => {\n              if (this.$error) throw this.$error;\n              return this.getCapacity()\n                ? Promise.resolve(undefined)\n                : this.addCapacity(\n                    options.initialCapacity || optionDefaults.initialCapacity,\n                  );\n            });\n          }\n\n          #logImpl(level, ...args) {\n            if (this.#verbosity > level)\n              loggers[level](this.vfsName + ':', ...args);\n          }\n          log(...args) {\n            this.#logImpl(2, ...args);\n          }\n          warn(...args) {\n            this.#logImpl(1, ...args);\n          }\n          error(...args) {\n            this.#logImpl(0, ...args);\n          }\n\n          getVfs() {\n            return this.#cVfs;\n          }\n\n          getCapacity() {\n            return this.#mapSAHToName.size;\n          }\n\n          getFileCount() {\n            return this.#mapFilenameToSAH.size;\n          }\n\n          getFileNames() {\n            const rc = [];\n            const iter = this.#mapFilenameToSAH.keys();\n            for (const n of iter) rc.push(n);\n            return rc;\n          }\n\n          async addCapacity(n) {\n            for (let i = 0; i < n; ++i) {\n              const name = getRandomName();\n              const h = await this.#dhOpaque.getFileHandle(name, {\n                create: true,\n              });\n              const ah = await h.createSyncAccessHandle();\n              this.#mapSAHToName.set(ah, name);\n              this.setAssociatedPath(ah, '', 0);\n            }\n            return this.getCapacity();\n          }\n\n          async reduceCapacity(n) {\n            let nRm = 0;\n            for (const ah of Array.from(this.#availableSAH)) {\n              if (nRm === n || this.getFileCount() === this.getCapacity()) {\n                break;\n              }\n              const name = this.#mapSAHToName.get(ah);\n\n              ah.close();\n              await this.#dhOpaque.removeEntry(name);\n              this.#mapSAHToName.delete(ah);\n              this.#availableSAH.delete(ah);\n              ++nRm;\n            }\n            return nRm;\n          }\n\n          releaseAccessHandles() {\n            for (const ah of this.#mapSAHToName.keys()) ah.close();\n            this.#mapSAHToName.clear();\n            this.#mapFilenameToSAH.clear();\n            this.#availableSAH.clear();\n          }\n\n          async acquireAccessHandles(clearFiles) {\n            const files = [];\n            for await (const [name, h] of this.#dhOpaque) {\n              if ('file' === h.kind) {\n                files.push([name, h]);\n              }\n            }\n            return Promise.all(\n              files.map(async ([name, h]) => {\n                try {\n                  const ah = await h.createSyncAccessHandle();\n                  this.#mapSAHToName.set(ah, name);\n                  if (clearFiles) {\n                    ah.truncate(HEADER_OFFSET_DATA);\n                    this.setAssociatedPath(ah, '', 0);\n                  } else {\n                    const path = this.getAssociatedPath(ah);\n                    if (path) {\n                      this.#mapFilenameToSAH.set(path, ah);\n                    } else {\n                      this.#availableSAH.add(ah);\n                    }\n                  }\n                } catch (e) {\n                  this.storeErr(e);\n                  this.releaseAccessHandles();\n                  throw e;\n                }\n              }),\n            );\n          }\n\n          getAssociatedPath(sah) {\n            sah.read(this.#apBody, { at: 0 });\n\n            const flags = this.#dvBody.getUint32(HEADER_OFFSET_FLAGS);\n            if (\n              this.#apBody[0] &&\n              (flags & capi.SQLITE_OPEN_DELETEONCLOSE ||\n                (flags & PERSISTENT_FILE_TYPES) === 0)\n            ) {\n              warn(\n                `Removing file with unexpected flags ${flags.toString(16)}`,\n                this.#apBody,\n              );\n              this.setAssociatedPath(sah, '', 0);\n              return '';\n            }\n\n            const fileDigest = new Uint32Array(HEADER_DIGEST_SIZE / 4);\n            sah.read(fileDigest, { at: HEADER_OFFSET_DIGEST });\n            const compDigest = this.computeDigest(this.#apBody);\n            if (fileDigest.every((v, i) => v === compDigest[i])) {\n              const pathBytes = this.#apBody.findIndex((v) => 0 === v);\n              if (0 === pathBytes) {\n                sah.truncate(HEADER_OFFSET_DATA);\n              }\n              return pathBytes\n                ? textDecoder.decode(this.#apBody.subarray(0, pathBytes))\n                : '';\n            } else {\n              warn('Disassociating file with bad digest.');\n              this.setAssociatedPath(sah, '', 0);\n              return '';\n            }\n          }\n\n          setAssociatedPath(sah, path, flags) {\n            const enc = textEncoder.encodeInto(path, this.#apBody);\n            if (HEADER_MAX_PATH_SIZE <= enc.written + 1) {\n              toss('Path too long:', path);\n            }\n            this.#apBody.fill(0, enc.written, HEADER_MAX_PATH_SIZE);\n            this.#dvBody.setUint32(HEADER_OFFSET_FLAGS, flags);\n\n            const digest = this.computeDigest(this.#apBody);\n            sah.write(this.#apBody, { at: 0 });\n            sah.write(digest, { at: HEADER_OFFSET_DIGEST });\n            sah.flush();\n\n            if (path) {\n              this.#mapFilenameToSAH.set(path, sah);\n              this.#availableSAH.delete(sah);\n            } else {\n              sah.truncate(HEADER_OFFSET_DATA);\n              this.#availableSAH.add(sah);\n            }\n          }\n\n          computeDigest(byteArray) {\n            let h1 = 0xdeadbeef;\n            let h2 = 0x41c6ce57;\n            for (const v of byteArray) {\n              h1 = 31 * h1 + v * 307;\n              h2 = 31 * h2 + v * 307;\n            }\n            return new Uint32Array([h1 >>> 0, h2 >>> 0]);\n          }\n\n          async reset(clearFiles) {\n            await this.isReady;\n            let h = await navigator.storage.getDirectory();\n            let prev, prevName;\n            for (const d of this.vfsDir.split('/')) {\n              if (d) {\n                prev = h;\n                h = await h.getDirectoryHandle(d, { create: true });\n              }\n            }\n            this.#dhVfsRoot = h;\n            this.#dhVfsParent = prev;\n            this.#dhOpaque = await this.#dhVfsRoot.getDirectoryHandle(\n              OPAQUE_DIR_NAME,\n              { create: true },\n            );\n            this.releaseAccessHandles();\n            return this.acquireAccessHandles(clearFiles);\n          }\n\n          getPath(arg) {\n            if (wasm.isPtr(arg)) arg = wasm.cstrToJs(arg);\n            return (\n              arg instanceof URL ? arg : new URL(arg, 'file://localhost/')\n            ).pathname;\n          }\n\n          deletePath(path) {\n            const sah = this.#mapFilenameToSAH.get(path);\n            if (sah) {\n              this.#mapFilenameToSAH.delete(path);\n              this.setAssociatedPath(sah, '', 0);\n            }\n            return !!sah;\n          }\n\n          storeErr(e, code) {\n            if (e) {\n              e.sqlite3Rc = code || capi.SQLITE_IOERR;\n              this.error(e);\n            }\n            this.$error = e;\n            return code;\n          }\n\n          popErr() {\n            const rc = this.$error;\n            this.$error = undefined;\n            return rc;\n          }\n\n          nextAvailableSAH() {\n            const [rc] = this.#availableSAH.keys();\n            return rc;\n          }\n\n          getOFileForS3File(pFile) {\n            return this.#mapS3FileToOFile_.get(pFile);\n          }\n\n          mapS3FileToOFile(pFile, file) {\n            if (file) {\n              this.#mapS3FileToOFile_.set(pFile, file);\n              setPoolForPFile(pFile, this);\n            } else {\n              this.#mapS3FileToOFile_.delete(pFile);\n              setPoolForPFile(pFile, false);\n            }\n          }\n\n          hasFilename(name) {\n            return this.#mapFilenameToSAH.has(name);\n          }\n\n          getSAHForPath(path) {\n            return this.#mapFilenameToSAH.get(path);\n          }\n\n          async removeVfs() {\n            if (!this.#cVfs.pointer || !this.#dhOpaque) return false;\n            capi.sqlite3_vfs_unregister(this.#cVfs.pointer);\n            this.#cVfs.dispose();\n            try {\n              this.releaseAccessHandles();\n              await this.#dhVfsRoot.removeEntry(OPAQUE_DIR_NAME, {\n                recursive: true,\n              });\n              this.#dhOpaque = undefined;\n              await this.#dhVfsParent.removeEntry(this.#dhVfsRoot.name, {\n                recursive: true,\n              });\n              this.#dhVfsRoot = this.#dhVfsParent = undefined;\n            } catch (e) {\n              sqlite3.config.error(this.vfsName, 'removeVfs() failed:', e);\n            }\n            return true;\n          }\n\n          exportFile(name) {\n            const sah =\n              this.#mapFilenameToSAH.get(name) || toss('File not found:', name);\n            const n = sah.getSize() - HEADER_OFFSET_DATA;\n            const b = new Uint8Array(n > 0 ? n : 0);\n            if (n > 0) {\n              const nRead = sah.read(b, { at: HEADER_OFFSET_DATA });\n              if (nRead != n) {\n                toss(\n                  'Expected to read ' + n + ' bytes but read ' + nRead + '.',\n                );\n              }\n            }\n            return b;\n          }\n\n          async importDbChunked(name, callback) {\n            const sah =\n              this.#mapFilenameToSAH.get(name) ||\n              this.nextAvailableSAH() ||\n              toss('No available handles to import to.');\n            sah.truncate(0);\n            let nWrote = 0,\n              chunk,\n              checkedHeader = false,\n              err = false;\n            try {\n              while (undefined !== (chunk = await callback())) {\n                if (chunk instanceof ArrayBuffer) chunk = new Uint8Array(chunk);\n                if (0 === nWrote && chunk.byteLength >= 15) {\n                  util.affirmDbHeader(chunk);\n                  checkedHeader = true;\n                }\n                sah.write(chunk, { at: HEADER_OFFSET_DATA + nWrote });\n                nWrote += chunk.byteLength;\n              }\n              if (nWrote < 512 || 0 !== nWrote % 512) {\n                toss(\n                  'Input size',\n                  nWrote,\n                  'is not correct for an SQLite database.',\n                );\n              }\n              if (!checkedHeader) {\n                const header = new Uint8Array(20);\n                sah.read(header, { at: 0 });\n                util.affirmDbHeader(header);\n              }\n              sah.write(new Uint8Array([1, 1]), {\n                at: HEADER_OFFSET_DATA + 18,\n              });\n            } catch (e) {\n              this.setAssociatedPath(sah, '', 0);\n              throw e;\n            }\n            this.setAssociatedPath(sah, name, capi.SQLITE_OPEN_MAIN_DB);\n            return nWrote;\n          }\n\n          importDb(name, bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            else if (bytes instanceof Function)\n              return this.importDbChunked(name, bytes);\n            const sah =\n              this.#mapFilenameToSAH.get(name) ||\n              this.nextAvailableSAH() ||\n              toss('No available handles to import to.');\n            const n = bytes.byteLength;\n            if (n < 512 || n % 512 != 0) {\n              toss('Byte array size is invalid for an SQLite db.');\n            }\n            const header = 'SQLite format 3';\n            for (let i = 0; i < header.length; ++i) {\n              if (header.charCodeAt(i) !== bytes[i]) {\n                toss('Input does not contain an SQLite database header.');\n              }\n            }\n            const nWrote = sah.write(bytes, { at: HEADER_OFFSET_DATA });\n            if (nWrote != n) {\n              this.setAssociatedPath(sah, '', 0);\n              toss(\n                'Expected to write ' + n + ' bytes but wrote ' + nWrote + '.',\n              );\n            } else {\n              sah.write(new Uint8Array([1, 1]), {\n                at: HEADER_OFFSET_DATA + 18,\n              });\n              this.setAssociatedPath(sah, name, capi.SQLITE_OPEN_MAIN_DB);\n            }\n            return nWrote;\n          }\n        }\n\n        class OpfsSAHPoolUtil {\n          #p;\n\n          constructor(sahPool) {\n            this.#p = sahPool;\n            this.vfsName = sahPool.vfsName;\n          }\n\n          async addCapacity(n) {\n            return this.#p.addCapacity(n);\n          }\n\n          async reduceCapacity(n) {\n            return this.#p.reduceCapacity(n);\n          }\n\n          getCapacity() {\n            return this.#p.getCapacity(this.#p);\n          }\n\n          getFileCount() {\n            return this.#p.getFileCount();\n          }\n          getFileNames() {\n            return this.#p.getFileNames();\n          }\n\n          async reserveMinimumCapacity(min) {\n            const c = this.#p.getCapacity();\n            return c < min ? this.#p.addCapacity(min - c) : c;\n          }\n\n          exportFile(name) {\n            return this.#p.exportFile(name);\n          }\n\n          importDb(name, bytes) {\n            return this.#p.importDb(name, bytes);\n          }\n\n          async wipeFiles() {\n            return this.#p.reset(true);\n          }\n\n          unlink(filename) {\n            return this.#p.deletePath(filename);\n          }\n\n          async removeVfs() {\n            return this.#p.removeVfs();\n          }\n        }\n\n        const apiVersionCheck = async () => {\n          const dh = await navigator.storage.getDirectory();\n          const fn = '.opfs-sahpool-sync-check-' + getRandomName();\n          const fh = await dh.getFileHandle(fn, { create: true });\n          const ah = await fh.createSyncAccessHandle();\n          const close = ah.close();\n          await close;\n          await dh.removeEntry(fn);\n          if (close?.then) {\n            toss(\n              'The local OPFS API is too old for opfs-sahpool:',\n              'it has an async FileSystemSyncAccessHandle.close() method.',\n            );\n          }\n          return true;\n        };\n\n        let instanceCounter = 0;\n\n        sqlite3.installOpfsSAHPoolVfs = async function (\n          options = Object.create(null),\n        ) {\n          const vfsName = options.name || optionDefaults.name;\n          if (0 && 2 === ++instanceCounter) {\n            throw new Error('Just testing rejection.');\n          }\n          if (initPromises[vfsName]) {\n            return initPromises[vfsName];\n          }\n          if (\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle ||\n            !globalThis.FileSystemFileHandle.prototype.createSyncAccessHandle ||\n            !navigator?.storage?.getDirectory\n          ) {\n            return (initPromises[vfsName] = Promise.reject(\n              new Error('Missing required OPFS APIs.'),\n            ));\n          }\n\n          return (initPromises[vfsName] = apiVersionCheck()\n            .then(async function () {\n              if (options.$testThrowInInit) {\n                throw options.$testThrowInInit;\n              }\n              const thePool = new OpfsSAHPool(options);\n              return thePool.isReady\n                .then(async () => {\n                  const poolUtil = new OpfsSAHPoolUtil(thePool);\n                  if (sqlite3.oo1) {\n                    const oo1 = sqlite3.oo1;\n                    const theVfs = thePool.getVfs();\n                    const OpfsSAHPoolDb = function (...args) {\n                      const opt = oo1.DB.dbCtorHelper.normalizeArgs(...args);\n                      opt.vfs = theVfs.$zName;\n                      oo1.DB.dbCtorHelper.call(this, opt);\n                    };\n                    OpfsSAHPoolDb.prototype = Object.create(oo1.DB.prototype);\n\n                    poolUtil.OpfsSAHPoolDb = OpfsSAHPoolDb;\n                    oo1.DB.dbCtorHelper.setVfsPostOpenSql(\n                      theVfs.pointer,\n                      function (oo1Db, sqlite3) {\n                        sqlite3.capi.sqlite3_exec(\n                          oo1Db,\n                          [\n                            'pragma journal_mode=DELETE;',\n                            'pragma cache_size=-16384;',\n                          ],\n                          0,\n                          0,\n                          0,\n                        );\n                      },\n                    );\n                  }\n                  thePool.log('VFS initialized.');\n                  return poolUtil;\n                })\n                .catch(async (e) => {\n                  await thePool.removeVfs().catch(() => {});\n                  throw e;\n                });\n            })\n            .catch((err) => {\n              return (initPromises[vfsName] = Promise.reject(err));\n            }));\n        };\n      });\n\n      ('use strict');\n      if ('undefined' !== typeof Module) {\n        const SABC = Object.assign(\n          Object.create(null),\n          {\n            exports:\n              'undefined' === typeof wasmExports ? Module['asm'] : wasmExports,\n            memory: Module.wasmMemory,\n          },\n          globalThis.sqlite3ApiConfig || {},\n        );\n\n        globalThis.sqlite3ApiConfig = SABC;\n        let sqlite3;\n        try {\n          sqlite3 = globalThis.sqlite3ApiBootstrap();\n        } catch (e) {\n          console.error('sqlite3ApiBootstrap() error:', e);\n          throw e;\n        } finally {\n          delete globalThis.sqlite3ApiBootstrap;\n          delete globalThis.sqlite3ApiConfig;\n        }\n\n        Module.sqlite3 = sqlite3;\n      } else {\n        console.warn(\n          'This is not running in an Emscripten module context, so',\n          'globalThis.sqlite3ApiBootstrap() is _not_ being called due to lack',\n          'of config info for the WASM environment.',\n          'It must be called manually.',\n        );\n      }\n    });\n\n    return sqlite3InitModule.ready;\n  };\n})();\n\nconst toExportForESM = (function () {\n  const originalInit = sqlite3InitModule;\n  if (!originalInit) {\n    throw new Error(\n      'Expecting globalThis.sqlite3InitModule to be defined by the Emscripten build.',\n    );\n  }\n\n  const initModuleState = (globalThis.sqlite3InitModuleState = Object.assign(\n    Object.create(null),\n    {\n      moduleScript: globalThis?.document?.currentScript,\n      isWorker: 'undefined' !== typeof WorkerGlobalScope,\n      location: globalThis.location,\n      urlParams: globalThis?.location?.href\n        ? new URL(globalThis.location.href).searchParams\n        : new URLSearchParams(),\n    },\n  ));\n  initModuleState.debugModule = initModuleState.urlParams.has(\n    'sqlite3.debugModule',\n  )\n    ? (...args) => console.warn('sqlite3.debugModule:', ...args)\n    : () => {};\n\n  if (initModuleState.urlParams.has('sqlite3.dir')) {\n    initModuleState.sqlite3Dir =\n      initModuleState.urlParams.get('sqlite3.dir') + '/';\n  } else if (initModuleState.moduleScript) {\n    const li = initModuleState.moduleScript.src.split('/');\n    li.pop();\n    initModuleState.sqlite3Dir = li.join('/') + '/';\n  }\n\n  globalThis.sqlite3InitModule = function ff(...args) {\n    return originalInit(...args)\n      .then((EmscriptenModule) => {\n        const s = EmscriptenModule.sqlite3;\n        s.scriptInfo = initModuleState;\n\n        if (ff.__isUnderTest) s.__isUnderTest = true;\n        const f = s.asyncPostInit;\n        delete s.asyncPostInit;\n        return f();\n      })\n      .catch((e) => {\n        console.error('Exception loading sqlite3 module:', e);\n        throw e;\n      });\n  };\n  globalThis.sqlite3InitModule.ready = originalInit.ready;\n\n  if (globalThis.sqlite3InitModuleState.moduleScript) {\n    const sim = globalThis.sqlite3InitModuleState;\n    let src = sim.moduleScript.src.split('/');\n    src.pop();\n    sim.scriptDir = src.join('/') + '/';\n  }\n  initModuleState.debugModule('sqlite3InitModuleState =', initModuleState);\n  if (0) {\n    console.warn('Replaced sqlite3InitModule()');\n    console.warn('globalThis.location.href =', globalThis.location.href);\n    if ('undefined' !== typeof document) {\n      console.warn(\n        'document.currentScript.src =',\n        document?.currentScript?.src,\n      );\n    }\n  }\n  return globalThis.sqlite3InitModule;\n})();\nsqlite3InitModule = toExportForESM;\nexport default sqlite3InitModule;\n", "/*\n  2022-08-24\n\n  The author disclaims copyright to this source code.  In place of a\n  legal notice, here is a blessing:\n\n  *   May you do good and not evil.\n  *   May you find forgiveness for yourself and forgive others.\n  *   May you share freely, never taking more than you give.\n\n  ***********************************************************************\n\n  This file implements a Promise-based proxy for the sqlite3 Worker\n  API #1. It is intended to be included either from the main thread or\n  a Worker, but only if (A) the environment supports nested Workers\n  and (B) it's _not_ a Worker which loads the sqlite3 WASM/JS\n  module. This file's features will load that module and provide a\n  slightly simpler client-side interface than the slightly-lower-level\n  Worker API does.\n\n  This script necessarily exposes one global symbol, but clients may\n  freely `delete` that symbol after calling it.\n*/\n'use strict';\n\nglobalThis.sqlite3Worker1Promiser = function callee(\n  config = callee.defaultConfig,\n) {\n  if (1 === arguments.length && 'function' === typeof arguments[0]) {\n    const f = config;\n    config = Object.assign(Object.create(null), callee.defaultConfig);\n    config.onready = f;\n  } else {\n    config = Object.assign(Object.create(null), callee.defaultConfig, config);\n  }\n  const handlerMap = Object.create(null);\n  const noop = function () {};\n  const err = config.onerror || noop;\n  const debug = config.debug || noop;\n  const idTypeMap = config.generateMessageId ? undefined : Object.create(null);\n  const genMsgId =\n    config.generateMessageId ||\n    function (msg) {\n      return (\n        msg.type + '#' + (idTypeMap[msg.type] = (idTypeMap[msg.type] || 0) + 1)\n      );\n    };\n  const toss = (...args) => {\n    throw new Error(args.join(' '));\n  };\n  if (!config.worker) config.worker = callee.defaultConfig.worker;\n  if ('function' === typeof config.worker) config.worker = config.worker();\n  let dbId;\n  let promiserFunc;\n  config.worker.onmessage = function (ev) {\n    ev = ev.data;\n    debug('worker1.onmessage', ev);\n    let msgHandler = handlerMap[ev.messageId];\n    if (!msgHandler) {\n      if (ev && 'sqlite3-api' === ev.type && 'worker1-ready' === ev.result) {\n        if (config.onready) config.onready(promiserFunc);\n        return;\n      }\n      msgHandler = handlerMap[ev.type];\n      if (msgHandler && msgHandler.onrow) {\n        msgHandler.onrow(ev);\n        return;\n      }\n      if (config.onunhandled) config.onunhandled(arguments[0]);\n      else err('sqlite3Worker1Promiser() unhandled worker message:', ev);\n      return;\n    }\n    delete handlerMap[ev.messageId];\n    switch (ev.type) {\n      case 'error':\n        msgHandler.reject(ev);\n        return;\n      case 'open':\n        if (!dbId) dbId = ev.dbId;\n        break;\n      case 'close':\n        if (ev.dbId === dbId) dbId = undefined;\n        break;\n      default:\n        break;\n    }\n    try {\n      msgHandler.resolve(ev);\n    } catch (e) {\n      msgHandler.reject(e);\n    }\n  };\n  return (promiserFunc = function () {\n    let msg;\n    if (1 === arguments.length) {\n      msg = arguments[0];\n    } else if (2 === arguments.length) {\n      msg = Object.create(null);\n      msg.type = arguments[0];\n      msg.args = arguments[1];\n      msg.dbId = msg.args.dbId;\n    } else {\n      toss('Invalid arguments for sqlite3Worker1Promiser()-created factory.');\n    }\n    if (!msg.dbId && msg.type !== 'open') msg.dbId = dbId;\n    msg.messageId = genMsgId(msg);\n    msg.departureTime = performance.now();\n    const proxy = Object.create(null);\n    proxy.message = msg;\n    let rowCallbackId;\n    if ('exec' === msg.type && msg.args) {\n      if ('function' === typeof msg.args.callback) {\n        rowCallbackId = msg.messageId + ':row';\n        proxy.onrow = msg.args.callback;\n        msg.args.callback = rowCallbackId;\n        handlerMap[rowCallbackId] = proxy;\n      } else if ('string' === typeof msg.args.callback) {\n        toss(\n          'exec callback may not be a string when using the Promise interface.',\n        );\n      }\n    }\n\n    let p = new Promise(function (resolve, reject) {\n      proxy.resolve = resolve;\n      proxy.reject = reject;\n      handlerMap[msg.messageId] = proxy;\n      debug(\n        'Posting',\n        msg.type,\n        'message to Worker dbId=' + (dbId || 'default') + ':',\n        msg,\n      );\n      config.worker.postMessage(msg);\n    });\n    if (rowCallbackId) p = p.finally(() => delete handlerMap[rowCallbackId]);\n    return p;\n  });\n};\n\nglobalThis.sqlite3Worker1Promiser.defaultConfig = {\n  worker: function () {\n    return new Worker(\n      new URL('sqlite3-worker1-bundler-friendly.mjs', import.meta.url),\n      {\n        type: 'module',\n      },\n    );\n  },\n  onerror: (...args) => console.error('worker1 promiser error', ...args),\n};\n\nsqlite3Worker1Promiser.v2 = function (config) {\n  let oldFunc;\n  if ('function' == typeof config) {\n    oldFunc = config;\n    config = {};\n  } else if ('function' === typeof config?.onready) {\n    oldFunc = config.onready;\n    delete config.onready;\n  }\n  const promiseProxy = Object.create(null);\n  config = Object.assign(config || Object.create(null), {\n    onready: async function (func) {\n      try {\n        if (oldFunc) await oldFunc(func);\n        promiseProxy.resolve(func);\n      } catch (e) {\n        promiseProxy.reject(e);\n      }\n    },\n  });\n  const p = new Promise(function (resolve, reject) {\n    promiseProxy.resolve = resolve;\n    promiseProxy.reject = reject;\n  });\n  try {\n    this.original(config);\n  } catch (e) {\n    promiseProxy.reject(e);\n  }\n  return p;\n}.bind({\n  original: sqlite3Worker1Promiser,\n});\n\nexport default sqlite3Worker1Promiser.v2;\n", "import { default as sqlite3InitModule } from './sqlite-wasm/jswasm/sqlite3-bundler-friendly.mjs';\nimport './sqlite-wasm/jswasm/sqlite3-worker1-promiser.mjs';\n\nconst sqlite3Worker1Promiser = self.sqlite3Worker1Promiser;\n\nexport default sqlite3InitModule;\nexport { sqlite3Worker1Promiser };\n", "import EventEmitter from './index.js'\n\nexport { EventEmitter }\nexport default EventEmitter\n", "import { EventEmitter } from \"eventemitter3\";\n\nexport type WorkerMessageCommand =\n  | \"reply\"\n  | \"init\"\n  | \"event\"\n  | \"req\"\n  | \"count\"\n  | \"summary\"\n  | \"close\"\n  | \"dumpDb\"\n  | \"emit-event\"\n  | \"forYouFeed\"\n  | \"setEventMetadata\"\n  | \"debug\"\n  | \"delete\"\n  | \"wipe\";\n\nexport interface WorkerMessage<T> {\n  id: string;\n  cmd: WorkerMessageCommand;\n  args: T;\n}\n\nexport interface NostrEvent {\n  id: string;\n  pubkey: string;\n  created_at: number;\n  kind: number;\n  tags: Array<Array<string>>;\n  content: string;\n  sig: string;\n  relays?: Array<string>;\n}\n\nexport interface EventMetadata {\n  seen_at?: number;\n}\n\nexport type ReqCommand = [\"REQ\", id: string, ...filters: Array<ReqFilter>];\n\nexport interface ReqFilter {\n  ids?: string[];\n  authors?: string[];\n  kinds?: number[];\n  search?: string;\n  since?: number;\n  until?: number;\n  limit?: number;\n  [key: string]: Array<string> | Array<number> | string | number | undefined | boolean;\n}\n\nexport interface OkResponse {\n  ok: boolean;\n  id: string;\n  relay: string;\n  message?: string;\n  event: NostrEvent;\n}\n\nexport interface RelayHandler extends EventEmitter<RelayHandlerEvents> {\n  init(path: string, path2Wasm?: string): Promise<void>;\n  close(): void;\n  event(ev: NostrEvent): boolean;\n  eventBatch(evs: Array<NostrEvent>): boolean;\n\n  /**\n   * Run any SQL command\n   */\n  sql(sql: string, params: Array<string | number>): Array<Array<string | number>>;\n  req(id: string, req: ReqFilter): Array<NostrEvent | string>;\n  count(req: ReqFilter): number;\n  summary(): Record<string, number>;\n  dump(): Promise<Uint8Array>;\n  delete(req: ReqFilter): Array<string>;\n  setEventMetadata(id: string, meta: EventMetadata): void;\n  wipe(): Promise<void>;\n}\n\nexport interface RelayHandlerEvents {\n  event: (evs: Array<NostrEvent>) => void;\n}\n\nexport function unixNowMs() {\n  return new Date().getTime();\n}\n\nexport function eventMatchesFilter(ev: NostrEvent, filter: ReqFilter) {\n  if (filter.since && ev.created_at < filter.since) {\n    return false;\n  }\n  if (filter.until && ev.created_at > filter.until) {\n    return false;\n  }\n  if (!(filter.ids?.includes(ev.id) ?? true)) {\n    return false;\n  }\n  if (!(filter.authors?.includes(ev.pubkey) ?? true)) {\n    return false;\n  }\n  if (!(filter.kinds?.includes(ev.kind) ?? true)) {\n    return false;\n  }\n  const tags = Object.entries(filter).filter(([k]) => k.startsWith(\"#\"));\n  for (const [k, v] of tags) {\n    const vargs = v as Array<string>;\n    for (const x of vargs) {\n      if (!ev.tags.find(a => a[0] === k.slice(1) && a[1] === x)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n", "let debug = false;\nexport function debugLog(scope: string, msg: string, ...args: Array<any>) {\n  if (!debug) return;\n  console.log(scope, msg, ...args);\n}\n\nexport function setLogging(v: boolean) {\n  debug = v;\n}\n", "import { NostrEvent } from \"../types\";\nimport { SqliteRelay } from \"./sqlite-relay\";\nimport { debugLog } from \"../debug\";\n\nconst log = (msg: string, ...args: Array<any>) => debugLog(\"SqliteRelay:migrations\", msg, ...args);\n\nconst migrations = [\n  { version: 1, script: migrate_v1 },\n  { version: 2, script: migrate_v2 },\n  { version: 3, script: migrate_v3 },\n  { version: 4, script: migrate_v4 },\n  { version: 5, script: migrate_v5 },\n  { version: 6, script: migrate_v6 },\n];\n\nasync function migrate(relay: SqliteRelay) {\n  if (!relay.db) throw new Error(\"DB must be open\");\n\n  relay.db.exec(\n    \"CREATE TABLE IF NOT EXISTS __migration (\\\n    version INTEGER PRIMARY KEY, \\\n    migrated_at INTEGER \\\n  )\",\n  );\n  const res = relay.db.exec(\"SELECT MAX(version) FROM __migration\", { returnValue: \"resultRows\" });\n  let currentVersion = (res[0][0] as number | undefined) ?? 0;\n\n  for (const { version, script } of migrations) {\n    if (currentVersion < version) {\n      log(`Migrating to v${version}`);\n      await script(relay);\n      currentVersion = version;\n    }\n  }\n}\n\nfunction migrate_v1(relay: SqliteRelay) {\n  return relay.db?.transaction(db => {\n    db.exec(\n      \"CREATE TABLE events (\\\n      id TEXT(64) PRIMARY KEY, \\\n      pubkey TEXT(64), \\\n      created INTEGER, \\\n      kind INTEGER, \\\n      json TEXT \\\n    )\",\n    );\n    db.exec(\n      \"CREATE TABLE tags (\\\n      event_id TEXT(64), \\\n      key TEXT, \\\n      value TEXT, \\\n      CONSTRAINT tags_FK FOREIGN KEY (event_id) REFERENCES events(id) ON DELETE CASCADE \\\n      )\",\n    );\n    db.exec(\"CREATE INDEX tags_key_IDX ON tags (key,value)\");\n    db.exec(\"insert into __migration values(1, ?)\", {\n      bind: [new Date().getTime() / 1000],\n    });\n  });\n}\n\nfunction migrate_v2(relay: SqliteRelay) {\n  relay.db?.transaction(db => {\n    db.exec(\"CREATE INDEX pubkey_kind_IDX ON events (pubkey,kind)\");\n    db.exec(\"CREATE INDEX pubkey_created_IDX ON events (pubkey,created)\");\n    db.exec(\"insert into __migration values(2, ?)\", {\n      bind: [new Date().getTime() / 1000],\n    });\n  });\n}\n\nfunction migrate_v3(relay: SqliteRelay) {\n  relay.db?.transaction(db => {\n    db.exec(\"CREATE VIRTUAL TABLE search_content using fts5(id UNINDEXED, content)\");\n    const events = db.selectArrays(\"select json from events where kind in (?,?)\", [0, 1]);\n    for (const json of events) {\n      const ev = JSON.parse(json[0] as string) as NostrEvent;\n      if (ev) {\n        relay.insertIntoSearchIndex(db, ev);\n      }\n    }\n    db.exec(\"insert into __migration values(3, ?)\", {\n      bind: [new Date().getTime() / 1000],\n    });\n  });\n}\n\nasync function migrate_v4(relay: SqliteRelay) {\n  relay.db?.transaction(db => {\n    db.exec(\"ALTER TABLE events ADD COLUMN seen_at INTEGER\");\n    db.exec(\"insert into __migration values(4, ?)\", {\n      bind: [new Date().getTime() / 1000],\n    });\n  });\n}\n\nasync function migrate_v5(relay: SqliteRelay) {\n  relay.db?.transaction(db => {\n    db.exec(\"CREATE INDEX seen_at_IDX ON events (seen_at)\");\n    db.exec(\"insert into __migration values(5, ?)\", {\n      bind: [new Date().getTime() / 1000],\n    });\n  });\n}\n\nasync function migrate_v6(relay: SqliteRelay) {\n  relay.db?.transaction(db => {\n    db.exec(\"ALTER TABLE events ADD COLUMN relays TEXT\");\n    db.exec(\"insert into __migration values(6, ?)\", {\n      bind: [new Date().getTime() / 1000],\n    });\n  });\n}\n\nexport default migrate;\n", "import sqlite3InitModule, { Database, SAHPoolUtil, Sqlite3Static } from \"@sqlite.org/sqlite-wasm\";\nimport { EventEmitter } from \"eventemitter3\";\nimport { EventMetadata, NostrEvent, RelayHandler, RelayHandlerEvents, ReqFilter, unixNowMs } from \"../types\";\nimport migrate from \"./migrations\";\nimport { debugLog } from \"../debug\";\n\n// import wasm file directly, this needs to be copied from https://sqlite.org/download.html\nimport SqlitePath from \"./sqlite3.wasm?url\";\nimport { runFixers } from \"./fixers\";\n\nexport class SqliteRelay extends EventEmitter<RelayHandlerEvents> implements RelayHandler {\n  #sqlite?: Sqlite3Static;\n  #log = (msg: string, ...args: Array<any>) => debugLog(\"SqliteRelay\", msg, ...args);\n  db?: Database;\n  #pool?: SAHPoolUtil;\n  #seenInserts = new Set<string>();\n\n  /**\n   * Initialize the SQLite driver\n   */\n  async init(path: string) {\n    if (this.#sqlite) return;\n    this.#sqlite = await sqlite3InitModule({\n      locateFile: (path, prefix) => {\n        if (path === \"sqlite3.wasm\") {\n          return SqlitePath;\n        }\n        return prefix + path;\n      },\n      print: msg => this.#log(msg),\n      printErr: msg => this.#log(msg),\n    });\n    this.#log(`Got SQLite version: ${this.#sqlite.version.libVersion}`);\n    await this.#open(path);\n    if (this.db) {\n      await migrate(this);\n      // dont await to avoid timeout\n      runFixers(this);\n    }\n  }\n\n  /**\n   * Open the database from its path\n   */\n  async #open(path: string) {\n    if (!this.#sqlite) throw new Error(\"Must call init first\");\n    if (this.db) return;\n\n    this.#pool = await this.#sqlite.installOpfsSAHPoolVfs({});\n    this.db = new this.#pool.OpfsSAHPoolDb(path);\n    this.#log(`Opened ${this.db.filename}`);\n    /*this.db.exec(\n      `PRAGMA cache_size=${32 * 1024\n      }; PRAGMA page_size=8192; PRAGMA journal_mode=MEMORY; PRAGMA temp_store=MEMORY;`,\n    );*/\n  }\n\n  /**\n   * Delete all data\n   */\n  async wipe() {\n    if (this.#pool && this.db) {\n      const dbName = this.db.filename;\n      this.close();\n      await this.#pool.wipeFiles();\n      await this.#open(dbName);\n      await migrate(this);\n    }\n  }\n\n  close() {\n    this.db?.close();\n    this.db = undefined;\n  }\n\n  /**\n   * Insert an event to the database\n   */\n  event(ev: NostrEvent) {\n    if (this.#insertEvent(this.db!, ev)) {\n      this.#log(`Inserted: kind=${ev.kind},authors=${ev.pubkey},id=${ev.id}`);\n      this.emit(\"event\", [ev]);\n      return true;\n    }\n    return false;\n  }\n\n  sql(sql: string, params: Array<any>) {\n    return this.db?.selectArrays(sql, params) as Array<Array<string | number>>;\n  }\n\n  /**\n   * Write multiple events\n   */\n  eventBatch(evs: Array<NostrEvent>) {\n    const start = unixNowMs();\n    let eventsInserted: Array<NostrEvent> = [];\n    this.db?.transaction(db => {\n      for (const ev of evs) {\n        if (this.#insertEvent(db, ev)) {\n          eventsInserted.push(ev);\n        }\n      }\n    });\n    if (eventsInserted.length > 0) {\n      this.#log(`Inserted Batch: ${eventsInserted.length}/${evs.length}, ${(unixNowMs() - start).toLocaleString()}ms`);\n      this.emit(\"event\", eventsInserted);\n    }\n    return eventsInserted.length > 0;\n  }\n\n  setEventMetadata(id: string, meta: EventMetadata) {\n    if (meta.seen_at) {\n      this.db?.exec(\"update events set seen_at = ? where id = ?\", {\n        bind: [meta.seen_at, id],\n      });\n    }\n  }\n\n  #deleteById(db: Database, ids: Array<string>) {\n    if (ids.length === 0) return;\n    db.exec(`delete from events where id in (${this.#repeatParams(ids.length)})`, {\n      bind: ids,\n    });\n    const deleted = db.changes();\n    db.exec(`delete from search_content where id in (${this.#repeatParams(ids.length)})`, {\n      bind: ids,\n    });\n    this.#log(\"Deleted\", ids, deleted);\n  }\n\n  #insertEvent(db: Database, ev: NostrEvent) {\n    if (this.#seenInserts.has(ev.id)) return false;\n\n    const legacyReplacable = [0, 3, 41];\n    if (legacyReplacable.includes(ev.kind) || (ev.kind >= 10_000 && ev.kind < 20_000)) {\n      const oldEvents = db.selectValues(\"select id from events where kind = ? and pubkey = ? and created <= ?\", [\n        ev.kind,\n        ev.pubkey,\n        ev.created_at,\n      ]) as Array<string>;\n      if (oldEvents.includes(ev.id)) {\n        // we already have this event, return\n        this.#seenInserts.add(ev.id);\n        if (oldEvents.length > 1) {\n          const toDelete = oldEvents.filter(a => a !== ev.id);\n          this.#deleteById(db, toDelete);\n        }\n        return false;\n      } else {\n        // delete older versions\n        this.#deleteById(db, oldEvents);\n      }\n    }\n    if (ev.kind >= 30_000 && ev.kind < 40_000) {\n      const dTag = ev.tags.find(a => a[0] === \"d\")![1];\n      const oldEvents = db.selectValues(\n        \"select id from events where id in (select id from events, tags where events.id = tags.event_id and tags.key = ? and tags.value = ?)\",\n        [\"d\", dTag],\n      ) as Array<string>;\n      if (oldEvents.includes(ev.id)) {\n        // we have this version\n        this.#seenInserts.add(ev.id);\n        if (oldEvents.length > 1) {\n          const toDelete = oldEvents.filter(a => a !== ev.id);\n          this.#deleteById(db, toDelete);\n        }\n        return false;\n      } else {\n        // delete older versions\n        this.#deleteById(db, oldEvents);\n      }\n    }\n\n    // remove relays from event json\n    const evInsert = {\n      ...ev,\n    } as NostrEvent;\n    delete evInsert[\"relays\"];\n\n    db.exec(\"insert or ignore into events(id, pubkey, created, kind, json, relays) values(?,?,?,?,?,?)\", {\n      bind: [ev.id, ev.pubkey, ev.created_at, ev.kind, JSON.stringify(evInsert), (ev.relays ?? []).join(\",\")],\n    });\n    const insertedEvents = db.changes();\n    if (insertedEvents > 0) {\n      for (const t of ev.tags.filter(a => a[0].length === 1)) {\n        db.exec(\"insert into tags(event_id, key, value) values(?, ?, ?)\", {\n          bind: [ev.id, t[0], t[1]],\n        });\n      }\n      this.insertIntoSearchIndex(db, ev);\n    } else {\n      this.#updateRelays(db, ev);\n      return 0;\n    }\n    this.#seenInserts.add(ev.id);\n    return insertedEvents;\n  }\n\n  /**\n   * Append relays\n   */\n  #updateRelays(db: Database, ev: NostrEvent) {\n    const relays = db.selectArrays(\"select relays from events where id = ?\", [ev.id]);\n    const oldRelays = new Set((relays?.at(0)?.at(0) as string | null)?.split(\",\") ?? []);\n    let hasNew = false;\n    for (const r of ev.relays ?? []) {\n      if (!oldRelays.has(r)) {\n        oldRelays.add(r);\n        hasNew = true;\n      }\n    }\n    if (hasNew) {\n      db.exec(\"update events set relays = ? where id = ?\", {\n        bind: [[...oldRelays].join(\",\"), ev.id],\n      });\n    }\n  }\n\n  /**\n   * Query relay by nostr filter\n   */\n  req(id: string, req: ReqFilter) {\n    const start = unixNowMs();\n\n    const [sql, params] = this.#buildQuery(req);\n    const res = this.db?.selectArrays(sql, params);\n    const results =\n      res?.map(a => {\n        if (req.ids_only === true) {\n          return a[0] as string;\n        }\n        const ev = JSON.parse(a[0] as string) as NostrEvent;\n        return {\n          ...ev,\n          relays: (a[1] as string | null)?.split(\",\"),\n        };\n      }) ?? [];\n    const time = unixNowMs() - start;\n    this.#log(`Query ${id} results took ${time.toLocaleString()}ms`);\n    return results;\n  }\n\n  /**\n   * Count results by nostr filter\n   */\n  count(req: ReqFilter) {\n    const start = unixNowMs();\n    const [sql, params] = this.#buildQuery(req, true);\n    const rows = this.db?.exec(sql, {\n      bind: params,\n      returnValue: \"resultRows\",\n    });\n    const results = (rows?.at(0)?.at(0) as number | undefined) ?? 0;\n    const time = unixNowMs() - start;\n    this.#log(`Query count results took ${time.toLocaleString()}ms`);\n    return results;\n  }\n\n  /**\n   * Delete events by nostr filter\n   */\n  delete(req: ReqFilter) {\n    this.#log(`Starting delete of ${JSON.stringify(req)}`);\n    const start = unixNowMs();\n    const for_delete = this.req(\"ids-for-delete\", { ...req, ids_only: true }) as Array<string>;\n\n    const grouped = for_delete.reduce(\n      (acc, v, i) => {\n        const batch = (i / 1000).toFixed(0);\n        acc[batch] ??= [];\n        acc[batch].push(v);\n        return acc;\n      },\n      {} as Record<string, Array<string>>,\n    );\n    this.#log(`Starting delete of ${Object.keys(grouped).length} batches`);\n    Object.entries(grouped).forEach(([batch, ids]) => {\n      this.#deleteById(this.db!, ids);\n    });\n    const time = unixNowMs() - start;\n    this.#log(`Delete ${for_delete.length} events took ${time.toLocaleString()}ms`);\n    return for_delete;\n  }\n\n  /**\n   * Get a summary about events table\n   */\n  summary() {\n    const res = this.db?.exec(\"select kind, count(*) from events group by kind\", {\n      returnValue: \"resultRows\",\n    });\n    return Object.fromEntries(res?.map(a => [String(a[0]), a[1] as number]) ?? []);\n  }\n\n  /**\n   * Dump the database file\n   */\n  async dump() {\n    const filePath = String(this.db?.filename ?? \"\");\n    if (this.db && this.#pool) {\n      try {\n        return await this.#pool.exportFile(`/${filePath}`);\n      } catch (e) {\n        console.error(e);\n      } finally {\n        await this.#open(filePath);\n      }\n    }\n    return new Uint8Array();\n  }\n\n  #buildQuery(req: ReqFilter, count = false, remove = false): [string, Array<any>] {\n    const conditions: Array<string> = [];\n    const params: Array<any> = [];\n\n    let resultType = \"json,relays\";\n    if (count) {\n      resultType = \"count(json)\";\n    } else if (req.ids_only === true) {\n      resultType = \"id\";\n    }\n    let operation = `select ${resultType}`;\n    if (remove) {\n      operation = \"delete\";\n    }\n    let sql = `${operation} from events`;\n    const tags = Object.entries(req).filter(([k]) => k.startsWith(\"#\"));\n    let tx = 0;\n    for (const [key, values] of tags) {\n      const vArray = values as Array<string>;\n      sql += ` inner join tags t_${tx} on events.id = t_${tx}.event_id and t_${tx}.key = ? and t_${tx}.value in (${this.#repeatParams(\n        vArray.length,\n      )})`;\n      params.push(key.slice(1));\n      params.push(...vArray);\n      tx++;\n    }\n    if (req.search) {\n      sql += \" inner join search_content on search_content.id = events.id\";\n      conditions.push(\"search_content match ?\");\n      params.push(req.search.replaceAll(\".\", \"+\").replaceAll(\"@\", \"+\"));\n    }\n    if (req.ids) {\n      conditions.push(`id in (${this.#repeatParams(req.ids.length)})`);\n      params.push(...req.ids);\n    }\n    if (req.authors) {\n      conditions.push(`pubkey in (${this.#repeatParams(req.authors.length)})`);\n      params.push(...req.authors);\n    }\n    if (req.kinds) {\n      conditions.push(`kind in (${this.#repeatParams(req.kinds.length)})`);\n      params.push(...req.kinds);\n    }\n    if (req.since) {\n      conditions.push(\"created >= ?\");\n      params.push(req.since);\n    }\n    if (req.until) {\n      conditions.push(\"created < ?\");\n      params.push(req.until);\n    }\n    if (conditions.length > 0) {\n      sql += ` where ${conditions.join(\" and \")}`;\n    }\n    if (req.limit) {\n      sql += ` order by created desc limit ${req.limit}`;\n    }\n    return [sql, params];\n  }\n\n  #repeatParams(n: number) {\n    const ret: Array<string> = [];\n    for (let x = 0; x < n; x++) {\n      ret.push(\"?\");\n    }\n    return ret.join(\", \");\n  }\n\n  #replaceParamsDebug(sql: string, params: Array<number | string>) {\n    let res = \"\";\n    let cIdx = 0;\n    for (const chr of sql) {\n      if (chr === \"?\") {\n        const px = params[cIdx++];\n        if (typeof px === \"number\") {\n          res += px.toString();\n        } else if (typeof px === \"string\") {\n          res += `'${px}'`;\n        }\n      } else {\n        res += chr;\n      }\n    }\n    return res;\n  }\n\n  insertIntoSearchIndex(db: Database, ev: NostrEvent) {\n    if (ev.kind === 0) {\n      const profile = JSON.parse(ev.content) as {\n        name?: string;\n        display_name?: string;\n        lud16?: string;\n        nip05?: string;\n        website?: string;\n        about?: string;\n      };\n      if (profile) {\n        const indexContent = [\n          profile.name,\n          profile.display_name,\n          profile.about,\n          profile.website,\n          profile.lud16,\n          profile.nip05,\n        ].join(\" \");\n        db.exec(\"insert into search_content values(?,?)\", {\n          bind: [ev.id, indexContent],\n        });\n      }\n    } else if (ev.kind === 1) {\n      db.exec(\"insert into search_content values(?,?)\", {\n        bind: [ev.id, ev.content],\n      });\n    }\n  }\n\n  #fixMissingTags(db: Database) {}\n}\n", "import { SqliteRelay } from \"./sqlite-relay\";\n\nexport async function runFixers(relay: SqliteRelay) {}\n", "import { EventEmitter } from \"eventemitter3\";\nimport { NostrEvent, RelayHandler, RelayHandlerEvents, ReqFilter, eventMatchesFilter, EventMetadata } from \"./types\";\nimport { debugLog } from \"./debug\";\n\n/**\n * A very simple dumb fallback relay using a flat table\n */\nexport class InMemoryRelay extends EventEmitter<RelayHandlerEvents> implements RelayHandler {\n  #events: Map<string, NostrEvent> = new Map();\n  #log = (msg: string, ...args: Array<any>) => debugLog(\"InMemoryRelay\", msg, ...args);\n\n  init() {\n    this.#log(\"Using in-memory relay\");\n    return Promise.resolve();\n  }\n\n  count(req: ReqFilter): number {\n    let ret = 0;\n    for (const [, e] of this.#events) {\n      if (eventMatchesFilter(e, req)) {\n        ret++;\n      }\n    }\n    return ret;\n  }\n\n  summary(): Record<string, number> {\n    let ret = {} as Record<string, number>;\n    for (const [k, v] of this.#events) {\n      ret[v.kind.toString()] ??= 0;\n      ret[v.kind.toString()]++;\n    }\n    return ret;\n  }\n\n  dump(): Promise<Uint8Array> {\n    const enc = new TextEncoder();\n    return Promise.resolve(enc.encode(JSON.stringify(this.#events.values())));\n  }\n\n  close(): void {\n    // nothing\n  }\n\n  wipe() {\n    this.#events = new Map();\n    return Promise.resolve();\n  }\n\n  event(ev: NostrEvent) {\n    if (this.#events.has(ev.id)) return false;\n    this.#events.set(ev.id, ev);\n    this.emit(\"event\", [ev]);\n    return true;\n  }\n\n  eventBatch(evs: NostrEvent[]) {\n    const inserted = [];\n    for (const ev of evs) {\n      if (this.#events.has(ev.id)) continue;\n      this.#events.set(ev.id, ev);\n      inserted.push(ev);\n    }\n    if (inserted.length > 0) {\n      this.emit(\"event\", inserted);\n      return true;\n    }\n    return false;\n  }\n\n  sql(sql: string, params: (string | number)[]): (string | number)[][] {\n    return [];\n  }\n\n  req(id: string, filter: ReqFilter) {\n    const ret = [];\n    for (const [, e] of this.#events) {\n      if (eventMatchesFilter(e, filter)) {\n        if (filter.ids_only === true) {\n          ret.push(e.id);\n        } else {\n          ret.push(e);\n        }\n      }\n    }\n    return ret;\n  }\n\n  delete(filter: ReqFilter) {\n    const forDelete = this.req(\"ids-for-delete\", { ...filter, ids_only: true }) as Array<string>;\n    forDelete.forEach(a => this.#events.delete(a));\n\n    return forDelete;\n  }\n\n  setEventMetadata(_id: string, _meta: EventMetadata) {\n    return;\n  }\n}\n", "import { debugLog } from \"./debug\";\nimport { RelayHandler, NostrEvent } from \"./types\";\n\n// import { parseZap } from \"../../system/src/zaps\";\n// placeholder:\nconst parseZap = (_zap: NostrEvent) => {\n  return { event: null } as { event: null | NostrEvent };\n};\n\nconst log = (msg: string, ...args: Array<any>) => debugLog(\"getForYouFeed\", msg, ...args);\n\nexport async function getForYouFeed(relay: RelayHandler, pubkey: string): Promise<NostrEvent[]> {\n  console.time(\"For You feed generation time\");\n\n  log(\"pubkey\", pubkey);\n\n  // Get events reacted to by me\n  const myReactedEventIds = await getMyReactedEvents(relay, pubkey);\n  log(\"my reacted events\", myReactedEventIds);\n\n  const myReactedAuthors = await getMyReactedAuthors(relay, myReactedEventIds, pubkey);\n  log(\"my reacted authors\", myReactedAuthors);\n\n  // Get others who reacted to the same events as me\n  const othersWhoReacted = await getOthersWhoReacted(relay, myReactedEventIds, pubkey);\n  // this tends to be small when the user has just logged in, we should maybe subscribe for more from relays\n  log(\"others who reacted\", othersWhoReacted);\n\n  // Get event ids reacted to by those others\n  const reactedByOthers = await getEventIdsReactedByOthers(relay, othersWhoReacted, myReactedEventIds, pubkey);\n  log(\"reacted by others\", reactedByOthers);\n\n  // Get full events in sorted order\n  const feed = await getFeedEvents(relay, reactedByOthers, myReactedAuthors);\n  log(\"feed.length\", feed.length);\n\n  console.timeEnd(\"For You feed generation time\");\n  return feed;\n}\n\nasync function getMyReactedAuthors(relay: RelayHandler, myReactedEventIds: Set<string>, myPubkey: string) {\n  const myReactedAuthors = new Map<string, number>();\n\n  const myReactions = relay.req(\"getMyReactedAuthors\", {\n    \"#e\": Array.from(myReactedEventIds),\n  }) as NostrEvent[];\n\n  myReactions.forEach(reaction => {\n    if (reaction.pubkey !== myPubkey) {\n      myReactedAuthors.set(reaction.pubkey, (myReactedAuthors.get(reaction.pubkey) || 0) + 1);\n    }\n  });\n\n  return myReactedAuthors;\n}\n\nasync function getMyReactedEvents(relay: RelayHandler, pubkey: string) {\n  const myReactedEventIds = new Set<string>();\n\n  const myEvents = relay.req(\"getMyReactedEventIds\", {\n    authors: [pubkey],\n    kinds: [1, 6, 7, 9735],\n  }) as NostrEvent[];\n  myEvents.forEach(ev => {\n    const targetEventId =\n      ev.kind === 9735 ? parseZap(ev).event?.id : ev.tags.find((tag: string[]) => tag[0] === \"e\")?.[1];\n    if (targetEventId) {\n      myReactedEventIds.add(targetEventId);\n    }\n  });\n\n  return myReactedEventIds;\n}\n\nasync function getOthersWhoReacted(relay: RelayHandler, myReactedEventIds: Set<string>, myPubkey: string) {\n  const othersWhoReacted = new Map<string, number>();\n\n  const otherReactions = relay.req(\"getOthersWhoReacted\", {\n    \"#e\": Array.from(myReactedEventIds),\n  }) as NostrEvent[];\n\n  otherReactions.forEach(reaction => {\n    if (reaction.pubkey !== myPubkey) {\n      othersWhoReacted.set(reaction.pubkey, (othersWhoReacted.get(reaction.pubkey) || 0) + 1);\n    }\n  });\n\n  return othersWhoReacted;\n}\n\nasync function getEventIdsReactedByOthers(\n  relay: RelayHandler,\n  othersWhoReacted: Map<string, number>,\n  myReactedEvents: Set<string>,\n  myPub: string,\n) {\n  const eventIdsReactedByOthers = new Map<string, number>();\n\n  const events = relay.req(\"getEventIdsReactedByOthers\", {\n    authors: [...othersWhoReacted.keys()],\n    kinds: [1, 6, 7, 9735],\n  }) as NostrEvent[];\n\n  events.forEach(event => {\n    if (event.pubkey === myPub || myReactedEvents.has(event.id)) {\n      // NIP-113 NOT filter could improve performance by not selecting these events in the first place\n      return;\n    }\n    event.tags.forEach((tag: string[]) => {\n      if (tag[0] === \"e\") {\n        const score = Math.ceil(Math.sqrt(othersWhoReacted.get(event.pubkey) || 0));\n        eventIdsReactedByOthers.set(tag[1], (eventIdsReactedByOthers.get(tag[1]) || 0) + score);\n      }\n    });\n  });\n\n  return eventIdsReactedByOthers;\n}\n\nasync function getFeedEvents(\n  relay: RelayHandler,\n  reactedToIds: Map<string, number>,\n  reactedToAuthors: Map<string, number>,\n) {\n  const events = relay\n    .sql(\n      `select json from events where id in (${Array.from(reactedToIds.keys())\n        .map(() => \"?\")\n        .join(\", \")}) and kind = 1 order by seen_at ASC, created DESC limit 1000`,\n      Array.from(reactedToIds.keys()),\n    )\n    .map(row => JSON.parse(row[0] as string) as NostrEvent);\n\n  const seen = new Set<string>(events.map(ev => ev.id));\n\n  log(\"reactedToAuthors\", reactedToAuthors);\n\n  const favoriteAuthors = Array.from(reactedToAuthors.keys())\n    .sort((a, b) => reactedToAuthors.get(b)! - reactedToAuthors.get(a)!)\n    .slice(20);\n\n  const eventsByFavoriteAuthors = relay\n    .sql(\n      `select json from events where pubkey in (${favoriteAuthors\n        .map(() => \"?\")\n        .join(\", \")}) and kind = 1 order by seen_at ASC, created DESC limit 100`,\n      favoriteAuthors,\n    )\n    .map(row => JSON.parse(row[0] as string) as NostrEvent);\n\n  eventsByFavoriteAuthors.forEach(ev => {\n    if (!seen.has(ev.id)) {\n      events.push(ev);\n    }\n  });\n\n  // Filter out replies\n  const filteredEvents = events.filter(ev => !ev.tags.some((tag: string[]) => tag[0] === \"e\"));\n\n  // Define constants for normalization\n  // const recentnessWeight = -1;\n  const currentTime = new Date().getTime();\n\n  // Calculate min and max for normalization\n  let minReactions = Infinity,\n    maxReactions = -Infinity;\n  let minAge = Infinity,\n    maxAge = -Infinity;\n\n  filteredEvents.forEach(event => {\n    const reactions = reactedToIds.get(event.id) || 0;\n    minReactions = Math.min(minReactions, reactions);\n    maxReactions = Math.max(maxReactions, reactions);\n\n    const age = currentTime - new Date(event.created_at).getTime();\n    minAge = Math.min(minAge, age);\n    maxAge = Math.max(maxAge, age);\n  });\n\n  const normalize = (value: number, min: number, max: number) => (value - min) / (max - min);\n\n  const maxFavoriteness = Math.max(...Array.from(reactedToAuthors.values()));\n  const favoritenessWeight = 0.5;\n\n  // Normalize and sort events by calculated score\n  filteredEvents.sort((a, b) => {\n    const aReactions = normalize(reactedToIds.get(a.id) || 0, minReactions, maxReactions);\n    const bReactions = normalize(reactedToIds.get(b.id) || 0, minReactions, maxReactions);\n\n    const aAge = normalize(currentTime - new Date(a.created_at).getTime(), minAge, maxAge);\n    const bAge = normalize(currentTime - new Date(b.created_at).getTime(), minAge, maxAge);\n\n    const aFavoriteness = normalize(reactedToAuthors.get(a.pubkey) || 0, 0, maxFavoriteness);\n    const bFavoriteness = normalize(reactedToAuthors.get(b.pubkey) || 0, 0, maxFavoriteness);\n\n    // randomly big or small weight for recentness\n    const recentnessWeight = Math.random() > 0.75 ? -0.1 : -10;\n    const aScore = aReactions + recentnessWeight * aAge + aFavoriteness * favoritenessWeight;\n    const bScore = bReactions + recentnessWeight * bAge + bFavoriteness * favoritenessWeight;\n\n    // Sort by descending score\n    return bScore - aScore;\n  });\n\n  return filteredEvents;\n}\n", "/// <reference lib=\"webworker\" />\n\nimport { SqliteRelay } from \"./sqlite/sqlite-relay\";\nimport { InMemoryRelay } from \"./memory-relay\";\nimport { setLogging } from \"./debug\";\nimport { WorkQueueItem, barrierQueue, processWorkQueue } from \"./queue\";\nimport {\n  NostrEvent,\n  RelayHandler,\n  ReqCommand,\n  ReqFilter,\n  WorkerMessage,\n  unixNowMs,\n  EventMetadata,\n  OkResponse,\n} from \"./types\";\nimport { getForYouFeed } from \"./forYouFeed\";\n\nlet relay: RelayHandler | undefined;\nlet insertBatchSize = 10;\n\n// Event inserter queue\nlet eventWriteQueue: Array<NostrEvent> = [];\nasync function insertBatch() {\n  // Only insert event batches when the command queue is empty\n  // This is to make req's execute first and not block them\n  if (eventWriteQueue.length > 0) {\n    const start = unixNowMs();\n    const timeLimit = 1000;\n    if (relay) {\n      while (eventWriteQueue.length > 0) {\n        if (unixNowMs() - start >= timeLimit) {\n          //console.debug(\"Yield insert, queue length: \", eventWriteQueue.length, \", cmds: \", cmdQueue.length);\n          break;\n        }\n        const batch = eventWriteQueue.splice(0, insertBatchSize);\n        eventWriteQueue = eventWriteQueue.slice(batch.length);\n        relay.eventBatch(batch);\n      }\n    }\n  }\n  setTimeout(() => insertBatch(), 100);\n}\n\nconst cmdQueue: Array<WorkQueueItem> = [];\ntry {\n  setTimeout(() => insertBatch(), 100);\n} catch (e) {\n  console.error(e);\n}\n\ninterface InitAargs {\n  databasePath: string;\n  insertBatchSize?: number;\n}\n\nconst handleMsg = async (port: MessagePort | DedicatedWorkerGlobalScope, ev: MessageEvent) => {\n  async function reply<T>(id: string, obj?: T) {\n    port.postMessage({\n      id,\n      cmd: \"reply\",\n      args: obj,\n    } as WorkerMessage<T>);\n  }\n\n  const msg = ev.data as WorkerMessage<any>;\n  try {\n    switch (msg.cmd) {\n      case \"debug\": {\n        setLogging(true);\n        reply(msg.id, true);\n        break;\n      }\n      case \"init\": {\n        const args = msg.args as InitAargs;\n        insertBatchSize = args.insertBatchSize ?? 10;\n        try {\n          if (\"WebAssembly\" in self) {\n            relay = new SqliteRelay();\n          } else {\n            relay = new InMemoryRelay();\n          }\n          await relay.init(args.databasePath);\n        } catch (e) {\n          console.error(\"Fallback to InMemoryRelay\", e);\n          relay = new InMemoryRelay();\n          await relay.init(args.databasePath);\n        }\n        reply(msg.id, true);\n        break;\n      }\n      case \"event\": {\n        const ev = msg.args as NostrEvent;\n        eventWriteQueue.push(ev);\n        reply(msg.id, {\n          ok: true,\n          id: ev.id,\n          relay: \"\",\n        } as OkResponse);\n        break;\n      }\n      case \"close\": {\n        const res = relay!.close();\n        reply(msg.id, res);\n        break;\n      }\n      case \"req\": {\n        const req = msg.args as ReqCommand;\n        const filters = req.slice(2) as Array<ReqFilter>;\n        const results: Array<string | NostrEvent> = [];\n        const ids = new Set<string>();\n        for (const r of filters) {\n          const rx = relay!.req(req[1], r);\n          for (const x of rx) {\n            if ((typeof x === \"string\" && ids.has(x)) || ids.has((x as NostrEvent).id)) {\n              continue;\n            }\n            ids.add(typeof x === \"string\" ? x : (x as NostrEvent).id);\n            results.push(x);\n          }\n        }\n        reply(msg.id, results);\n        break;\n      }\n      case \"count\": {\n        const req = msg.args as ReqCommand;\n        let results = 0;\n        const filters = req.slice(2) as Array<ReqFilter>;\n        for (const r of filters) {\n          const c = relay!.count(r);\n          results += c;\n        }\n        reply(msg.id, results);\n        break;\n      }\n      case \"delete\": {\n        const req = msg.args as ReqCommand;\n        let results = [];\n        const filters = req.slice(2) as Array<ReqFilter>;\n        for (const r of filters) {\n          const c = relay!.delete(r);\n          results.push(...c);\n        }\n        reply(msg.id, results);\n        break;\n      }\n      case \"summary\": {\n        const res = relay!.summary();\n        reply(msg.id, res);\n        break;\n      }\n      case \"dumpDb\": {\n        const res = await relay!.dump();\n        reply(msg.id, res);\n        break;\n      }\n      case \"wipe\": {\n        await relay!.wipe();\n        reply(msg.id, true);\n        break;\n      }\n      case \"forYouFeed\": {\n        const res = await getForYouFeed(relay!, msg.args as string);\n        reply(msg.id, res);\n        break;\n      }\n      case \"setEventMetadata\": {\n        const [id, metadata] = msg.args as [string, EventMetadata];\n        relay!.setEventMetadata(id, metadata);\n        break;\n      }\n      default: {\n        reply(msg.id, { error: \"Unknown command\" });\n        break;\n      }\n    }\n  } catch (e) {\n    if (e instanceof Error) {\n      reply(msg.id, { error: e.message });\n    } else if (typeof e === \"string\") {\n      reply(msg.id, { error: e });\n    } else {\n      reply(msg.id, \"Unknown error\");\n    }\n  }\n};\n\nif (\"SharedWorkerGlobalScope\" in globalThis) {\n  onconnect = e => {\n    const port = e.ports[0];\n    port.onmessage = msg => handleMsg(port, msg);\n    port.start();\n  };\n}\nif (\"DedicatedWorkerGlobalScope\" in globalThis) {\n  onmessage = e => {\n    handleMsg(self as DedicatedWorkerGlobalScope, e);\n  };\n}\n"],
  "mappings": "0hBAAA,IAAAA,GAAAC,GAAA,CAAAC,GAAAC,KAAA,cAEA,IAAIC,GAAM,OAAO,UAAU,eACvBC,GAAS,IASb,SAASC,IAAS,CAAC,CASf,OAAO,SACTA,GAAO,UAAY,OAAO,OAAO,IAAI,EAMhC,IAAIA,GAAO,EAAE,YAAWD,GAAS,KAYxC,SAASE,GAAGC,EAAIC,EAASC,EAAM,CAC7B,KAAK,GAAKF,EACV,KAAK,QAAUC,EACf,KAAK,KAAOC,GAAQ,EACtB,CAaA,SAASC,GAAYC,EAASC,EAAOL,EAAIC,EAASC,EAAM,CACtD,GAAI,OAAOF,GAAO,WAChB,MAAM,IAAI,UAAU,iCAAiC,EAGvD,IAAIM,EAAW,IAAIP,GAAGC,EAAIC,GAAWG,EAASF,CAAI,EAC9CK,GAAMV,GAASA,GAASQ,EAAQA,EAEpC,OAAKD,EAAQ,QAAQG,EAAG,EACdH,EAAQ,QAAQG,EAAG,EAAE,GAC1BH,EAAQ,QAAQG,EAAG,EAAI,CAACH,EAAQ,QAAQG,EAAG,EAAGD,CAAQ,EADxBF,EAAQ,QAAQG,EAAG,EAAE,KAAKD,CAAQ,GAD1CF,EAAQ,QAAQG,EAAG,EAAID,EAAUF,EAAQ,gBAI7DA,CACT,CASA,SAASI,GAAWJ,EAASG,EAAK,CAC5B,EAAEH,EAAQ,eAAiB,EAAGA,EAAQ,QAAU,IAAIN,GACnD,OAAOM,EAAQ,QAAQG,CAAG,CACjC,CASA,SAASE,IAAe,CACtB,KAAK,QAAU,IAAIX,GACnB,KAAK,aAAe,CACtB,CASAW,GAAa,UAAU,WAAa,UAAsB,CACxD,IAAIC,EAAQ,CAAC,EACTC,EACAC,EAEJ,GAAI,KAAK,eAAiB,EAAG,OAAOF,EAEpC,IAAKE,KAASD,EAAS,KAAK,QACtBf,GAAI,KAAKe,EAAQC,CAAI,GAAGF,EAAM,KAAKb,GAASe,EAAK,MAAM,CAAC,EAAIA,CAAI,EAGtE,OAAI,OAAO,sBACFF,EAAM,OAAO,OAAO,sBAAsBC,CAAM,CAAC,EAGnDD,CACT,EASAD,GAAa,UAAU,UAAY,SAAmBJ,EAAO,CAC3D,IAAIE,EAAMV,GAASA,GAASQ,EAAQA,EAChCQ,EAAW,KAAK,QAAQN,CAAG,EAE/B,GAAI,CAACM,EAAU,MAAO,CAAC,EACvB,GAAIA,EAAS,GAAI,MAAO,CAACA,EAAS,EAAE,EAEpC,QAASC,EAAI,EAAGC,EAAIF,EAAS,OAAQG,GAAK,IAAI,MAAMD,CAAC,EAAGD,EAAIC,EAAGD,IAC7DE,GAAGF,CAAC,EAAID,EAASC,CAAC,EAAE,GAGtB,OAAOE,EACT,EASAP,GAAa,UAAU,cAAgB,SAAuBJ,EAAO,CACnE,IAAIE,EAAMV,GAASA,GAASQ,EAAQA,EAChCY,EAAY,KAAK,QAAQV,CAAG,EAEhC,OAAKU,EACDA,EAAU,GAAW,EAClBA,EAAU,OAFM,CAGzB,EASAR,GAAa,UAAU,KAAO,SAAcJ,EAAOa,EAAIC,EAAIC,EAAIC,EAAIC,GAAI,CACrE,IAAIf,GAAMV,GAASA,GAASQ,EAAQA,EAEpC,GAAI,CAAC,KAAK,QAAQE,EAAG,EAAG,MAAO,GAE/B,IAAIU,GAAY,KAAK,QAAQV,EAAG,EAC5BgB,GAAM,UAAU,OAChBC,GACAV,GAEJ,GAAIG,GAAU,GAAI,CAGhB,OAFIA,GAAU,MAAM,KAAK,eAAeZ,EAAOY,GAAU,GAAI,OAAW,EAAI,EAEpEM,GAAK,CACX,IAAK,GAAG,OAAON,GAAU,GAAG,KAAKA,GAAU,OAAO,EAAG,GACrD,IAAK,GAAG,OAAOA,GAAU,GAAG,KAAKA,GAAU,QAASC,CAAE,EAAG,GACzD,IAAK,GAAG,OAAOD,GAAU,GAAG,KAAKA,GAAU,QAASC,EAAIC,CAAE,EAAG,GAC7D,IAAK,GAAG,OAAOF,GAAU,GAAG,KAAKA,GAAU,QAASC,EAAIC,EAAIC,CAAE,EAAG,GACjE,IAAK,GAAG,OAAOH,GAAU,GAAG,KAAKA,GAAU,QAASC,EAAIC,EAAIC,EAAIC,CAAE,EAAG,GACrE,IAAK,GAAG,OAAOJ,GAAU,GAAG,KAAKA,GAAU,QAASC,EAAIC,EAAIC,EAAIC,EAAIC,EAAE,EAAG,EAC3E,CAEA,IAAKR,GAAI,EAAGU,GAAO,IAAI,MAAMD,GAAK,CAAC,EAAGT,GAAIS,GAAKT,KAC7CU,GAAKV,GAAI,CAAC,EAAI,UAAUA,EAAC,EAG3BG,GAAU,GAAG,MAAMA,GAAU,QAASO,EAAI,CAC5C,KAAO,CACL,IAAIC,GAASR,GAAU,OACnBS,GAEJ,IAAKZ,GAAI,EAAGA,GAAIW,GAAQX,KAGtB,OAFIG,GAAUH,EAAC,EAAE,MAAM,KAAK,eAAeT,EAAOY,GAAUH,EAAC,EAAE,GAAI,OAAW,EAAI,EAE1ES,GAAK,CACX,IAAK,GAAGN,GAAUH,EAAC,EAAE,GAAG,KAAKG,GAAUH,EAAC,EAAE,OAAO,EAAG,MACpD,IAAK,GAAGG,GAAUH,EAAC,EAAE,GAAG,KAAKG,GAAUH,EAAC,EAAE,QAASI,CAAE,EAAG,MACxD,IAAK,GAAGD,GAAUH,EAAC,EAAE,GAAG,KAAKG,GAAUH,EAAC,EAAE,QAASI,EAAIC,CAAE,EAAG,MAC5D,IAAK,GAAGF,GAAUH,EAAC,EAAE,GAAG,KAAKG,GAAUH,EAAC,EAAE,QAASI,EAAIC,EAAIC,CAAE,EAAG,MAChE,QACE,GAAI,CAACI,GAAM,IAAKE,GAAI,EAAGF,GAAO,IAAI,MAAMD,GAAK,CAAC,EAAGG,GAAIH,GAAKG,KACxDF,GAAKE,GAAI,CAAC,EAAI,UAAUA,EAAC,EAG3BT,GAAUH,EAAC,EAAE,GAAG,MAAMG,GAAUH,EAAC,EAAE,QAASU,EAAI,CACpD,CAEJ,CAEA,MAAO,EACT,EAWAf,GAAa,UAAU,GAAK,SAAYJ,EAAOL,EAAIC,EAAS,CAC1D,OAAOE,GAAY,KAAME,EAAOL,EAAIC,EAAS,EAAK,CACpD,EAWAQ,GAAa,UAAU,KAAO,SAAcJ,EAAOL,EAAIC,EAAS,CAC9D,OAAOE,GAAY,KAAME,EAAOL,EAAIC,EAAS,EAAI,CACnD,EAYAQ,GAAa,UAAU,eAAiB,SAAwBJ,EAAOL,EAAIC,EAASC,EAAM,CACxF,IAAIK,EAAMV,GAASA,GAASQ,EAAQA,EAEpC,GAAI,CAAC,KAAK,QAAQE,CAAG,EAAG,OAAO,KAC/B,GAAI,CAACP,EACH,OAAAQ,GAAW,KAAMD,CAAG,EACb,KAGT,IAAIU,GAAY,KAAK,QAAQV,CAAG,EAEhC,GAAIU,GAAU,GAEVA,GAAU,KAAOjB,IAChB,CAACE,GAAQe,GAAU,QACnB,CAAChB,GAAWgB,GAAU,UAAYhB,IAEnCO,GAAW,KAAMD,CAAG,MAEjB,CACL,QAASO,GAAI,EAAGH,GAAS,CAAC,EAAGc,GAASR,GAAU,OAAQH,GAAIW,GAAQX,MAEhEG,GAAUH,EAAC,EAAE,KAAOd,GACnBE,GAAQ,CAACe,GAAUH,EAAC,EAAE,MACtBb,GAAWgB,GAAUH,EAAC,EAAE,UAAYb,IAErCU,GAAO,KAAKM,GAAUH,EAAC,CAAC,EAOxBH,GAAO,OAAQ,KAAK,QAAQJ,CAAG,EAAII,GAAO,SAAW,EAAIA,GAAO,CAAC,EAAIA,GACpEH,GAAW,KAAMD,CAAG,CAC3B,CAEA,OAAO,IACT,EASAE,GAAa,UAAU,mBAAqB,SAA4BJ,EAAO,CAC7E,IAAIE,EAEJ,OAAIF,GACFE,EAAMV,GAASA,GAASQ,EAAQA,EAC5B,KAAK,QAAQE,CAAG,GAAGC,GAAW,KAAMD,CAAG,IAE3C,KAAK,QAAU,IAAIT,GACnB,KAAK,aAAe,GAGf,IACT,EAKAW,GAAa,UAAU,IAAMA,GAAa,UAAU,eACpDA,GAAa,UAAU,YAAcA,GAAa,UAAU,GAK5DA,GAAa,SAAWZ,GAKxBY,GAAa,aAAeA,GAKR,OAAOd,GAAvB,MACFA,GAAO,QAAUc,MC3SnB,IAAIkB,IAAqB,IAAM,CAC7B,IAAIC,EAAa,YAAY,IAE7B,OAAO,SAAUC,EAAQ,CACvB,IAAIF,EAAoBE,GAAU,CAAC,EAE/BC,EACF,OAAOH,EAAqB,IAAcA,EAAoB,CAAC,EAE7DI,EAAqBC,EACzBF,EAAO,MAAW,IAAI,QAAQ,SAAUG,EAASC,EAAQ,CACvDH,EAAsBE,EACtBD,EAAqBE,CACvB,CAAC,EAED,IAAMC,GACJ,WAAW,wBACX,OAAO,OAAO,OAAO,OAAO,IAAI,EAAG,CACjC,YAAa,IAAM,CAAC,CACtB,CAAC,EACH,OAAO,WAAW,uBAClBA,GAAuB,YACrB,wBACA,WAAW,QACb,EAEA,IAAMC,GAEF,uBACJN,EAAOM,EAAsB,EAAI,SAASC,EAAOC,EAASC,EAAW,CACnED,EAAQ,IAAI,IAAM,UAAY,CAAC,EAC/B,IAAME,EAAMV,EAAO,WACjBO,EAAO,IACS,OAAOI,GAAvB,IAAyC,GAAKA,EAChD,EACAN,GAAuB,YAAY,0BAA2BK,CAAG,EACjE,IAAME,EAAS,IAAM,MAAMF,EAAK,CAAE,YAAa,aAAc,CAAC,EAa9D,OAZiB,YAAY,qBACzB,SACS,YAAY,qBAAqBE,EAAO,EAAGJ,CAAO,EAAE,KACxDK,GAAQJ,EAAUI,EAAI,SAAUA,EAAI,MAAM,CAC7C,EAEF,SACSD,EAAO,EACX,KAAME,GAAaA,EAAS,YAAY,CAAC,EACzC,KAAMC,GAAU,YAAY,YAAYA,EAAOP,CAAO,CAAC,EACvD,KAAMK,GAAQJ,EAAUI,EAAI,SAAUA,EAAI,MAAM,CAAC,GAEjD,EACF,CAAC,CACV,EAEAb,EAAOM,EAAsB,EAAE,IAAM,eAErC,IAAIU,GAAkB,OAAO,OAAO,CAAC,EAAGhB,CAAM,EAE1CiB,GAAa,CAAC,EACdC,GAAc,iBACdC,GAAQ,CAACC,EAAQC,IAAY,CAC/B,MAAMA,CACR,EAEIC,GAAqB,OAAO,QAAU,SACtCC,GAAwB,OAAO,eAAiB,WAEhDC,GACF,OAAO,SAAW,UAClB,OAAO,QAAQ,UAAY,UAC3B,OAAO,QAAQ,SAAS,MAAQ,SAC9BC,GACF,CAACH,IAAsB,CAACE,IAAuB,CAACD,GAE9CZ,GAAkB,GACtB,SAASe,GAAWC,EAAM,CACxB,OAAI3B,EAAO,WACFA,EAAO,WAAc2B,EAAMhB,EAAe,EAE5CA,GAAkBgB,CAC3B,CAEA,IAAIC,GAAOC,GAAWC,GAAYC,IAE9BT,IAAsBC,MACpBA,GACFZ,GAAkB,KAAK,SAAS,KACvB,OAAO,SAAY,KAAe,SAAS,gBACpDA,GAAkB,SAAS,cAAc,KAGvCb,IACFa,GAAkBb,GAGhBa,GAAgB,QAAQ,OAAO,IAAM,EACvCA,GAAkBA,GAAgB,OAChC,EACAA,GAAgB,QAAQ,SAAU,EAAE,EAAE,YAAY,GAAG,EAAI,CAC3D,EAEAA,GAAkB,GAIlBiB,GAASI,GAAQ,CACf,IAAIC,EAAM,IAAI,eACd,OAAAA,EAAI,KAAK,MAAOD,EAAK,EAAK,EAC1BC,EAAI,KAAK,IAAI,EACNA,EAAI,YACb,EAEIV,KACFO,GAAcE,GAAQ,CACpB,IAAIC,EAAM,IAAI,eACd,OAAAA,EAAI,KAAK,MAAOD,EAAK,EAAK,EAC1BC,EAAI,aAAe,cACnBA,EAAI,KAAK,IAAI,EACN,IAAI,WAAWA,EAAI,QAAQ,CACpC,GAGFJ,GAAY,CAACG,EAAKE,EAAQC,IAAY,CACpC,IAAIF,EAAM,IAAI,eACdA,EAAI,KAAK,MAAOD,EAAK,EAAI,EACzBC,EAAI,aAAe,cACnBA,EAAI,OAAS,IAAM,CACjB,GAAIA,EAAI,QAAU,KAAQA,EAAI,QAAU,GAAKA,EAAI,SAAW,CAC1DC,EAAOD,EAAI,QAAQ,EACnB,MACF,CACAE,EAAQ,CACV,EACAF,EAAI,QAAUE,EACdF,EAAI,KAAK,IAAI,CACf,EAGFF,GAAkBK,GAAW,SAAS,MAAQA,GAIhD,IAAIC,GAAMrC,EAAO,OAAY,QAAQ,IAAI,KAAK,OAAO,EACjDsC,GAAMtC,EAAO,UAAe,QAAQ,KAAK,KAAK,OAAO,EAEzD,OAAO,OAAOA,EAAQgB,EAAe,EAErCA,GAAkB,KAEdhB,EAAO,YAAciB,GAAajB,EAAO,WAEzCA,EAAO,cAAgBkB,GAAclB,EAAO,aAE5CA,EAAO,OAASmB,GAAQnB,EAAO,MAEnC,IAAIuC,GAAc,GACdC,GAAe,EAEnB,SAASC,GAAkBC,EAAM,CAC/B,OAAQA,EAAM,CACZ,IAAK,KACL,IAAK,KACL,IAAK,KACH,MAAO,GACT,IAAK,MACL,IAAK,MACH,MAAO,GACT,IAAK,MACL,IAAK,MACH,MAAO,GACT,IAAK,MACL,IAAK,MACH,MAAO,GACT,IAAK,QACH,MAAO,GACT,IAAK,SACH,MAAO,GACT,QAAS,CACP,GAAIA,EAAKA,EAAK,OAAS,CAAC,IAAM,IAC5B,OAAOF,GAET,GAAIE,EAAK,CAAC,IAAM,IAAK,CACnB,IAAMC,EAAO,OAAOD,EAAK,OAAO,CAAC,CAAC,EAClC,OAAAE,GACED,EAAO,IAAM,EACb,kCAAoCA,EAAO,UAAYD,CACzD,EACOC,EAAO,CAChB,CACA,MAAO,EACT,CACF,CACF,CAEA,IAAIE,GACA7C,EAAO,aAAe6C,GAAa7C,EAAO,YAC9C,IAAI8C,GAAgB9C,EAAO,eAAoB,GAE3C,OAAO,aAAe,UACxB+C,GAAM,iCAAiC,EAGzC,IAAIC,GAEAC,GAAQ,GAERC,GAEJ,SAASN,GAAOO,EAAWC,EAAM,CAC1BD,GACHJ,GAAMK,CAAI,CAEd,CAEA,IAAIC,GACF,OAAO,YAAe,IAAc,IAAI,YAAY,MAAM,EAAI,OAEhE,SAASC,GAAkBC,EAAaC,EAAKC,EAAgB,CAI3D,QAHIC,EAASF,EAAMC,EACfE,EAASH,EAEND,EAAYI,CAAM,GAAK,EAAEA,GAAUD,IAAS,EAAEC,EAErD,GAAIA,EAASH,EAAM,IAAMD,EAAY,QAAUF,GAC7C,OAAOA,GAAY,OAAOE,EAAY,SAASC,EAAKG,CAAM,CAAC,EAI7D,QAFIC,EAAM,GAEHJ,EAAMG,GAAQ,CACnB,IAAIE,EAAKN,EAAYC,GAAK,EAC1B,GAAI,EAAEK,EAAK,KAAO,CAChBD,GAAO,OAAO,aAAaC,CAAE,EAC7B,QACF,CACA,IAAIC,EAAKP,EAAYC,GAAK,EAAI,GAC9B,IAAKK,EAAK,MAAS,IAAM,CACvBD,GAAO,OAAO,cAAeC,EAAK,KAAO,EAAKC,CAAE,EAChD,QACF,CACA,IAAIC,EAAKR,EAAYC,GAAK,EAAI,GAW9B,IAVKK,EAAK,MAAS,IACjBA,GAAOA,EAAK,KAAO,GAAOC,GAAM,EAAKC,EAErCF,GACIA,EAAK,IAAM,GACZC,GAAM,GACNC,GAAM,EACNR,EAAYC,GAAK,EAAI,GAGtBK,EAAK,MACPD,GAAO,OAAO,aAAaC,CAAE,MACxB,CACL,IAAIG,EAAKH,EAAK,MACdD,GAAO,OAAO,aACZ,MAAUI,GAAM,GAChB,MAAUA,EAAK,IACjB,CACF,CACF,CACA,OAAOJ,CACT,CAEA,SAASK,GAAaC,EAAKT,EAAgB,CACzC,OAAOS,EAAMZ,GAAkBa,GAAQD,EAAKT,CAAc,EAAI,EAChE,CAEA,SAASW,GAAkBR,EAAKS,EAAMC,EAAQC,EAAiB,CAC7D,GAAI,EAAEA,EAAkB,GAAI,MAAO,GAInC,QAFIC,EAAWF,EACXZ,EAASY,EAASC,EAAkB,EAC/BE,EAAI,EAAGA,EAAIb,EAAI,OAAQ,EAAEa,EAAG,CACnC,IAAIC,EAAId,EAAI,WAAWa,CAAC,EACxB,GAAIC,GAAK,OAAUA,GAAK,MAAQ,CAC9B,IAAIZ,EAAKF,EAAI,WAAW,EAAEa,CAAC,EAC3BC,EAAK,QAAYA,EAAI,OAAU,IAAQZ,EAAK,IAC9C,CACA,GAAIY,GAAK,IAAM,CACb,GAAIJ,GAAUZ,EAAQ,MACtBW,EAAKC,GAAQ,EAAII,CACnB,SAAWA,GAAK,KAAO,CACrB,GAAIJ,EAAS,GAAKZ,EAAQ,MAC1BW,EAAKC,GAAQ,EAAI,IAAQI,GAAK,EAC9BL,EAAKC,GAAQ,EAAI,IAAQI,EAAI,EAC/B,SAAWA,GAAK,MAAQ,CACtB,GAAIJ,EAAS,GAAKZ,EAAQ,MAC1BW,EAAKC,GAAQ,EAAI,IAAQI,GAAK,GAC9BL,EAAKC,GAAQ,EAAI,IAASI,GAAK,EAAK,GACpCL,EAAKC,GAAQ,EAAI,IAAQI,EAAI,EAC/B,KAAO,CACL,GAAIJ,EAAS,GAAKZ,EAAQ,MAC1BW,EAAKC,GAAQ,EAAI,IAAQI,GAAK,GAC9BL,EAAKC,GAAQ,EAAI,IAASI,GAAK,GAAM,GACrCL,EAAKC,GAAQ,EAAI,IAASI,GAAK,EAAK,GACpCL,EAAKC,GAAQ,EAAI,IAAQI,EAAI,EAC/B,CACF,CAEA,OAAAL,EAAKC,CAAM,EAAI,EACRA,EAASE,CAClB,CAEA,SAASG,GAAaf,EAAKgB,EAAQL,EAAiB,CAClD,OAAOH,GAAkBR,EAAKO,GAAQS,EAAQL,CAAe,CAC/D,CAEA,SAASM,GAAgBjB,EAAK,CAE5B,QADIkB,EAAM,EACD,EAAI,EAAG,EAAIlB,EAAI,OAAQ,EAAE,EAAG,CACnC,IAAImB,EAAInB,EAAI,WAAW,CAAC,EACpBmB,GAAK,IACPD,IACSC,GAAK,KACdD,GAAO,EACEC,GAAK,OAAUA,GAAK,OAC7BD,GAAO,EACP,EAAE,GAEFA,GAAO,CAEX,CACA,OAAOA,CACT,CAEA,IAAIE,GACFC,GACAd,GACAe,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAEF,SAASC,IAAoB,CAC3B,IAAIC,EAAI3C,GAAW,OACnBhD,EAAO,MAAWiF,GAAQ,IAAI,UAAUU,CAAC,EACzC3F,EAAO,OAAYkF,GAAS,IAAI,WAAWS,CAAC,EAC5C3F,EAAO,OAAYoF,GAAS,IAAI,WAAWO,CAAC,EAC5C3F,EAAO,OAAYmE,GAAS,IAAI,WAAWwB,CAAC,EAC5C3F,EAAO,QAAamF,GAAU,IAAI,YAAYQ,CAAC,EAC/C3F,EAAO,QAAaqF,GAAU,IAAI,YAAYM,CAAC,EAC/C3F,EAAO,QAAasF,GAAU,IAAI,aAAaK,CAAC,EAChD3F,EAAO,QAAayF,GAAU,IAAI,aAAaE,CAAC,EAChD3F,EAAO,OAAYuF,GAAS,IAAI,cAAcI,CAAC,EAC/C3F,EAAO,QAAawF,GAAU,IAAI,eAAeG,CAAC,CACpD,CAEA,IAAIC,GAAa,OAEbC,GAAiB7F,EAAO,gBAAqB,SAE7CA,EAAO,WACTgD,GAAahD,EAAO,WAEpBgD,GAAa,IAAI,YAAY,OAAO,CAClC,QAAS6C,GAAiB,MAE1B,QAAS,KACX,CAAC,EAGHH,GAAkB,EAElBG,GAAiB7C,GAAW,OAAO,WAEnC,IAAI8C,GAEAC,GAAe,CAAC,EAChBC,GAAa,CAAC,EACdC,GAAa,CAAC,EACdC,GAAgB,CAAC,EAEjBC,GAAqB,GAEzB,SAASC,IAAmB,CAC1B,OAAOtD,EACT,CAEA,SAASuD,IAAS,CAChB,GAAIrG,EAAO,OAGT,IAFI,OAAOA,EAAO,QAAa,aAC7BA,EAAO,OAAY,CAACA,EAAO,MAAS,GAC/BA,EAAO,OAAU,QACtBsG,GAAYtG,EAAO,OAAU,MAAM,CAAC,EAIxCuG,GAAqBR,EAAY,CACnC,CAEA,SAASS,IAAc,CACrBL,GAAqB,GAEjB,CAACnG,EAAO,UAAe,CAACyG,EAAG,KAAK,aAAaA,EAAG,KAAK,EACzDA,EAAG,kBAAoB,GAEvBC,GAAI,KAAK,EACTH,GAAqBP,EAAU,CACjC,CAEA,SAASW,IAAU,CACjB,GAAI3G,EAAO,QAGT,IAFI,OAAOA,EAAO,SAAc,aAC9BA,EAAO,QAAa,CAACA,EAAO,OAAU,GACjCA,EAAO,QAAW,QACvB4G,GAAa5G,EAAO,QAAW,MAAM,CAAC,EAI1CuG,GAAqBL,EAAa,CACpC,CAEA,SAASI,GAAYO,EAAI,CACvBd,GAAa,QAAQc,CAAE,CACzB,CAEA,SAASC,GAAUD,EAAI,CACrBb,GAAW,QAAQa,CAAE,CACvB,CAEA,SAASE,GAAUF,EAAI,CAAC,CAExB,SAASD,GAAaC,EAAI,CACxBX,GAAc,QAAQW,CAAE,CAC1B,CAEA,IAAIG,GAAkB,EAClBC,GAAuB,KACvBC,GAAwB,KAE5B,SAASC,GAAuBC,EAAI,CAClC,OAAOA,CACT,CAEA,SAASC,GAAiBD,EAAI,CAC5BJ,KAEIhH,EAAO,wBACTA,EAAO,uBAA0BgH,EAAe,CAEpD,CAEA,SAASM,GAAoBF,EAAI,CAO/B,GANAJ,KAEIhH,EAAO,wBACTA,EAAO,uBAA0BgH,EAAe,EAG9CA,IAAmB,IACjBC,KAAyB,OAC3B,cAAcA,EAAoB,EAClCA,GAAuB,MAErBC,IAAuB,CACzB,IAAIK,EAAWL,GACfA,GAAwB,KACxBK,EAAS,CACX,CAEJ,CAEA,SAASxE,GAAMyE,EAAM,CACfxH,EAAO,SACTA,EAAO,QAAWwH,CAAI,EAGxBA,EAAO,WAAaA,EAAO,IAE3BlF,GAAIkF,CAAI,EAERvE,GAAQ,GACRC,GAAa,EAEbsE,GAAQ,2CAER,IAAIC,EAAI,IAAI,YAAY,aAAaD,CAAI,EAEzC,MAAAtH,EAAmBuH,CAAC,EAEdA,CACR,CAEA,IAAIC,GAAgB,wCAEpB,SAASC,GAAUC,EAAU,CAC3B,OAAOA,EAAS,WAAWF,EAAa,CAC1C,CAEA,SAASG,GAAUD,EAAU,CAC3B,OAAOA,EAAS,WAAW,SAAS,CACtC,CAEA,IAAIE,GACA9H,EAAO,YACT8H,GAAiB,eACZH,GAAUG,EAAc,IAC3BA,GAAiBpG,GAAWoG,EAAc,IAG5CA,GAAiB,IAAI,IAAI,eAAgB,YAAY,GAAG,EAAE,KAG5D,SAASC,GAAUC,EAAM,CACvB,GAAI,CACF,GAAIA,GAAQF,IAAkBjF,GAC5B,OAAO,IAAI,WAAWA,EAAU,EAElC,GAAIf,GACF,OAAOA,GAAWkG,CAAI,EAExB,KAAM,iDACR,OAAS1F,EAAK,CACZS,GAAMT,CAAG,CACX,CACF,CAEA,SAAS2F,IAAmB,CAC1B,MAAI,CAACpF,KAAevB,IAAsBC,KACpC,OAAO,OAAS,WACX,MAAMuG,GAAgB,CAAE,YAAa,aAAc,CAAC,EACxD,KAAK,SAAUhH,EAAU,CACxB,GAAI,CAACA,EAAS,GACZ,KACE,uCAAyCgH,GAAiB,IAG9D,OAAOhH,EAAS,YAAe,CACjC,CAAC,EACA,MAAM,UAAY,CACjB,OAAOiH,GAAUD,EAAc,CACjC,CAAC,EAIA,QAAQ,QAAQ,EAAE,KAAK,UAAY,CACxC,OAAOC,GAAUD,EAAc,CACjC,CAAC,CACH,CAEA,SAASI,IAAa,CACpB,IAAIC,EAAO,CACT,IAAKC,GACL,uBAAwBA,EAC1B,EAEA,SAASC,EAAgBC,EAAUC,EAAQ,CACzC,IAAIC,EAAUF,EAAS,QAEvBtI,EAAO,IAASwI,EAEhB1C,GAAY9F,EAAO,IAAO,0BAE1B8G,GAAU9G,EAAO,IAAO,iBAAoB,EAE5CsH,GAAoB,kBAAkB,CACxC,CAEAD,GAAiB,kBAAkB,EAEnC,SAASoB,EAA2BC,EAAQ,CAC1CL,EAAgBK,EAAO,QAAW,CACpC,CAEA,SAASC,EAAuBC,EAAU,CACxC,OAAOX,GAAiB,EACrB,KAAK,SAAUY,EAAQ,CACtB,OAAO,YAAY,YAAYA,EAAQV,CAAI,CAC7C,CAAC,EACA,KAAK,SAAUG,EAAU,CACxB,OAAOA,CACT,CAAC,EACA,KAAKM,EAAU,SAAUE,EAAQ,CAChCxG,GAAI,0CAA4CwG,CAAM,EAEtD/F,GAAM+F,CAAM,CACd,CAAC,CACL,CAEA,SAASC,GAAmB,CAC1B,MACE,CAAClG,IACD,OAAO,YAAY,sBAAwB,YAC3C,CAAC8E,GAAUG,EAAc,GACzB,OAAO,OAAS,WAET,MAAMA,GAAgB,CAAE,YAAa,aAAc,CAAC,EAAE,KAC3D,SAAUhH,EAAU,CAClB,IAAI4H,EAAS,YAAY,qBAAqB5H,EAAUqH,CAAI,EAE5D,OAAOO,EAAO,KAAKD,EAA4B,SAAUK,EAAQ,CAC/D,OAAAxG,GAAI,kCAAoCwG,CAAM,EAC9CxG,GAAI,2CAA2C,EACxCqG,EAAuBF,CAA0B,CAC1D,CAAC,CACH,CACF,EAEOE,EAAuBF,CAA0B,CAE5D,CAEA,GAAIzI,EAAO,gBACT,GAAI,CACF,IAAIwI,EAAUxI,EAAO,gBAAmBmI,EAAME,CAAe,EAC7D,OAAOG,CACT,OAASf,EAAG,CACVnF,GAAI,sDAAwDmF,CAAC,EAE7DvH,EAAmBuH,CAAC,CACtB,CAGF,OAAAsB,EAAiB,EAAE,MAAM7I,CAAkB,EACpC,CAAC,CACV,CAEA,IAAI8I,GACAC,GAEAC,GAAa,CAAC,EAElB,SAASC,GAAW/H,EAAQ,CAC1B,KAAK,KAAO,aACZ,KAAK,QAAU,gCAAkCA,EAAS,IAC1D,KAAK,OAASA,CAChB,CAEA,SAASmF,GAAqB6C,EAAW,CACvC,KAAOA,EAAU,OAAS,GACxBA,EAAU,MAAM,EAAEpJ,CAAM,CAE5B,CAEA,SAASqJ,GAASnF,EAAKxB,EAAO,KAAM,CAElC,OADIA,EAAK,SAAS,GAAG,IAAGA,EAAO,KACvBA,EAAM,CACZ,IAAK,KACH,OAAOuC,GAAMf,GAAO,CAAC,EACvB,IAAK,KACH,OAAOe,GAAMf,GAAO,CAAC,EACvB,IAAK,MACH,OAAOgB,GAAOhB,GAAO,CAAC,EACxB,IAAK,MACH,OAAOkB,GAAOlB,GAAO,CAAC,EACxB,IAAK,MACH,OAAOqB,GAAOrB,GAAO,CAAC,EACxB,IAAK,QACH,OAAOoB,GAAQpB,GAAO,CAAC,EACzB,IAAK,SACH,OAAOuB,GAAQvB,GAAO,CAAC,EACzB,IAAK,IACH,OAAOmB,GAAQnB,GAAO,CAAC,EACzB,QACEnB,GAAM,8BAAgCL,CAAI,CAC9C,CACA,OAAO,IACT,CAEA,SAAS4G,GAASpF,EAAKqF,EAAO7G,EAAO,KAAM,CAEzC,OADIA,EAAK,SAAS,GAAG,IAAGA,EAAO,KACvBA,EAAM,CACZ,IAAK,KACHuC,GAAMf,GAAO,CAAC,EAAIqF,EAClB,MACF,IAAK,KACHtE,GAAMf,GAAO,CAAC,EAAIqF,EAClB,MACF,IAAK,MACHrE,GAAOhB,GAAO,CAAC,EAAIqF,EACnB,MACF,IAAK,MACHnE,GAAOlB,GAAO,CAAC,EAAIqF,EACnB,MACF,IAAK,MACFN,GAAU,CACTM,IAAU,GACRP,GAAaO,EACf,CAAC,KAAK,IAAIP,EAAU,GAAK,EACrBA,GAAa,GACV,KAAK,IACJ,CAAC,KAAK,MAAMA,GAAa,UAAY,EACrC,UACF,EACE,KACF,EACA,CAAC,CAAC,CAAC,KAAK,MACLA,GAAa,EAAE,CAAC,CAACA,KAAe,IAAM,UACzC,IAAM,EACR,EACN,EACG5D,GAAOlB,GAAO,CAAC,EAAI+E,GAAQ,CAAC,EAC5B7D,GAAQlB,EAAM,GAAM,CAAC,EAAI+E,GAAQ,CAAC,EACrC,MACF,IAAK,QACH3D,GAAQpB,GAAO,CAAC,EAAIqF,EACpB,MACF,IAAK,SACH9D,GAAQvB,GAAO,CAAC,EAAIqF,EACpB,MACF,IAAK,IACHlE,GAAQnB,GAAO,CAAC,EAAIqF,EACpB,MACF,QACExG,GAAM,8BAAgCL,CAAI,CAC9C,CACF,CAEA,IAAI8G,GAAO,CACT,MAAQ7H,GAASA,EAAK,OAAO,CAAC,IAAM,IACpC,UAAYiG,GAAa,CACvB,IAAI6B,EACF,gEACF,OAAOA,EAAY,KAAK7B,CAAQ,EAAE,MAAM,CAAC,CAC3C,EACA,eAAgB,CAAC8B,EAAOC,IAAmB,CAEzC,QADIC,EAAK,EACAnF,EAAIiF,EAAM,OAAS,EAAGjF,GAAK,EAAGA,IAAK,CAC1C,IAAIoF,EAAOH,EAAMjF,CAAC,EACdoF,IAAS,IACXH,EAAM,OAAOjF,EAAG,CAAC,EACRoF,IAAS,MAClBH,EAAM,OAAOjF,EAAG,CAAC,EACjBmF,KACSA,IACTF,EAAM,OAAOjF,EAAG,CAAC,EACjBmF,IAEJ,CAEA,GAAID,EACF,KAAOC,EAAIA,IACTF,EAAM,QAAQ,IAAI,EAGtB,OAAOA,CACT,EACA,UAAY/H,GAAS,CACnB,IAAImI,EAAaN,GAAK,MAAM7H,CAAI,EAC9BoI,EAAgBpI,EAAK,OAAO,EAAE,IAAM,IAEtC,OAAAA,EAAO6H,GAAK,eACV7H,EAAK,MAAM,GAAG,EAAE,OAAQqI,GAAM,CAAC,CAACA,CAAC,EACjC,CAACF,CACH,EAAE,KAAK,GAAG,EACN,CAACnI,GAAQ,CAACmI,IACZnI,EAAO,KAELA,GAAQoI,IACVpI,GAAQ,MAEFmI,EAAa,IAAM,IAAMnI,CACnC,EACA,QAAUA,GAAS,CACjB,IAAI+G,EAASc,GAAK,UAAU7H,CAAI,EAC9BsI,EAAOvB,EAAO,CAAC,EACfwB,EAAMxB,EAAO,CAAC,EAChB,MAAI,CAACuB,GAAQ,CAACC,EACL,KAELA,IACFA,EAAMA,EAAI,OAAO,EAAGA,EAAI,OAAS,CAAC,GAE7BD,EAAOC,EAChB,EACA,SAAWvI,GAAS,CAClB,GAAIA,IAAS,IAAK,MAAO,IACzBA,EAAO6H,GAAK,UAAU7H,CAAI,EAC1BA,EAAOA,EAAK,QAAQ,MAAO,EAAE,EAC7B,IAAIwI,EAAYxI,EAAK,YAAY,GAAG,EACpC,OAAIwI,IAAc,GAAWxI,EACtBA,EAAK,OAAOwI,EAAY,CAAC,CAClC,EACA,KAAM,UAAY,CAChB,IAAIC,EAAQ,MAAM,UAAU,MAAM,KAAK,SAAS,EAChD,OAAOZ,GAAK,UAAUY,EAAM,KAAK,GAAG,CAAC,CACvC,EACA,MAAO,CAACC,EAAGC,IACFd,GAAK,UAAUa,EAAI,IAAMC,CAAC,CAErC,EAEA,SAASC,IAAkB,CACzB,GACE,OAAO,QAAU,UACjB,OAAO,OAAO,iBAAsB,WACpC,CACA,IAAIC,EAAe,IAAI,WAAW,CAAC,EACnC,MAAO,KACL,OAAO,gBAAgBA,CAAY,EAC5BA,EAAa,CAAC,EAEzB,KAAO,OAAO,IAAMzH,GAAM,cAAc,CAC1C,CAEA,IAAI0H,GAAU,CACZ,QAAS,UAAY,CAGnB,QAFIC,EAAe,GACjBC,EAAmB,GACZ,EAAI,UAAU,OAAS,EAAG,GAAK,IAAM,CAACA,EAAkB,IAAK,CACpE,IAAIhJ,EAAO,GAAK,EAAI,UAAU,CAAC,EAAI8E,EAAG,IAAI,EAE1C,GAAI,OAAO9E,GAAQ,SACjB,MAAM,IAAI,UAAU,2CAA2C,EAC1D,GAAI,CAACA,EACV,MAAO,GAET+I,EAAe/I,EAAO,IAAM+I,EAC5BC,EAAmBnB,GAAK,MAAM7H,CAAI,CACpC,CAEA,OAAA+I,EAAelB,GAAK,eAClBkB,EAAa,MAAM,GAAG,EAAE,OAAQV,GAAM,CAAC,CAACA,CAAC,EACzC,CAACW,CACH,EAAE,KAAK,GAAG,GACFA,EAAmB,IAAM,IAAMD,GAAgB,GACzD,EACA,SAAU,CAACE,EAAMC,IAAO,CACtBD,EAAOH,GAAQ,QAAQG,CAAI,EAAE,OAAO,CAAC,EACrCC,EAAKJ,GAAQ,QAAQI,CAAE,EAAE,OAAO,CAAC,EACjC,SAASC,EAAKC,EAAK,CAEjB,QADIC,EAAQ,EACLA,EAAQD,EAAI,QACbA,EAAIC,CAAK,IAAM,GADMA,IACzB,CAGF,QADIC,EAAMF,EAAI,OAAS,EAChBE,GAAO,GACRF,EAAIE,CAAG,IAAM,GADFA,IACf,CAEF,OAAID,EAAQC,EAAY,CAAC,EAClBF,EAAI,MAAMC,EAAOC,EAAMD,EAAQ,CAAC,CACzC,CAKA,QAJIE,EAAYJ,EAAKF,EAAK,MAAM,GAAG,CAAC,EAChCO,EAAUL,EAAKD,EAAG,MAAM,GAAG,CAAC,EAC5BO,EAAS,KAAK,IAAIF,EAAU,OAAQC,EAAQ,MAAM,EAClDE,EAAkBD,EACb3G,EAAI,EAAGA,EAAI2G,EAAQ3G,IAC1B,GAAIyG,EAAUzG,CAAC,IAAM0G,EAAQ1G,CAAC,EAAG,CAC/B4G,EAAkB5G,EAClB,KACF,CAGF,QADI6G,EAAc,CAAC,EACV7G,EAAI4G,EAAiB5G,EAAIyG,EAAU,OAAQzG,IAClD6G,EAAY,KAAK,IAAI,EAEvB,OAAAA,EAAcA,EAAY,OAAOH,EAAQ,MAAME,CAAe,CAAC,EACxDC,EAAY,KAAK,GAAG,CAC7B,CACF,EAEA,SAASC,GAAmBC,EAASC,EAAaL,EAAQ,CACxD,IAAItG,EAAMsG,EAAS,EAAIA,EAASvG,GAAgB2G,CAAO,EAAI,EACvDE,EAAU,IAAI,MAAM5G,CAAG,EACvB6G,EAAkBvH,GACpBoH,EACAE,EACA,EACAA,EAAQ,MACV,EACA,OAAID,IAAaC,EAAQ,OAASC,GAC3BD,CACT,CACA,IAAIhF,GAAM,CACR,KAAM,CAAC,EACP,KAAM,UAAY,CAAC,EACnB,SAAU,UAAY,CAAC,EACvB,SAAU,SAAUkF,EAAKC,EAAK,CAC5BnF,GAAI,KAAKkF,CAAG,EAAI,CAAE,MAAO,CAAC,EAAG,OAAQ,CAAC,EAAG,IAAKC,CAAI,EAClDpF,EAAG,eAAemF,EAAKlF,GAAI,UAAU,CACvC,EACA,WAAY,CACV,KAAM,SAAUoF,EAAQ,CACtB,IAAIC,EAAMrF,GAAI,KAAKoF,EAAO,KAAK,IAAI,EACnC,GAAI,CAACC,EACH,MAAM,IAAItF,EAAG,WAAW,EAAE,EAE5BqF,EAAO,IAAMC,EACbD,EAAO,SAAW,EACpB,EACA,MAAO,SAAUA,EAAQ,CACvBA,EAAO,IAAI,IAAI,MAAMA,EAAO,GAAG,CACjC,EACA,MAAO,SAAUA,EAAQ,CACvBA,EAAO,IAAI,IAAI,MAAMA,EAAO,GAAG,CACjC,EACA,KAAM,SAAUA,EAAQE,EAAQC,EAAQb,EAAQc,EAAK,CACnD,GAAI,CAACJ,EAAO,KAAO,CAACA,EAAO,IAAI,IAAI,SACjC,MAAM,IAAIrF,EAAG,WAAW,EAAE,EAG5B,QADI0F,EAAY,EACP1H,EAAI,EAAGA,EAAI2G,EAAQ3G,IAAK,CAC/B,IAAIiE,EACJ,GAAI,CACFA,EAASoD,EAAO,IAAI,IAAI,SAASA,EAAO,GAAG,CAC7C,MAAY,CACV,MAAM,IAAIrF,EAAG,WAAW,EAAE,CAC5B,CACA,GAAIiC,IAAW,QAAayD,IAAc,EACxC,MAAM,IAAI1F,EAAG,WAAW,CAAC,EAE3B,GAAIiC,GAAW,KAA8B,MAC7CyD,IACAH,EAAOC,EAASxH,CAAC,EAAIiE,CACvB,CACA,OAAIyD,IACFL,EAAO,KAAK,UAAY,KAAK,IAAI,GAE5BK,CACT,EACA,MAAO,SAAUL,EAAQE,EAAQC,EAAQb,EAAQc,EAAK,CACpD,GAAI,CAACJ,EAAO,KAAO,CAACA,EAAO,IAAI,IAAI,SACjC,MAAM,IAAIrF,EAAG,WAAW,EAAE,EAE5B,GAAI,CACF,QAAShC,EAAI,EAAGA,EAAI2G,EAAQ3G,IAC1BqH,EAAO,IAAI,IAAI,SAASA,EAAO,IAAKE,EAAOC,EAASxH,CAAC,CAAC,CAE1D,MAAY,CACV,MAAM,IAAIgC,EAAG,WAAW,EAAE,CAC5B,CACA,OAAI2E,IACFU,EAAO,KAAK,UAAY,KAAK,IAAI,GAE5BrH,CACT,CACF,EACA,gBAAiB,CACf,SAAU,SAAUsH,EAAK,CACvB,GAAI,CAACA,EAAI,MAAM,OAAQ,CACrB,IAAIrD,EAAS,KAeb,GAbE,OAAO,OAAU,KACjB,OAAO,OAAO,QAAU,YAExBA,EAAS,OAAO,OAAO,SAAS,EAC5BA,IAAW,OACbA,GAAU;AAAA,IAEH,OAAO,UAAY,aAC5BA,EAAS,SAAS,EACdA,IAAW,OACbA,GAAU;AAAA,IAGV,CAACA,EACH,OAAO,KAETqD,EAAI,MAAQR,GAAmB7C,EAAQ,EAAI,CAC7C,CACA,OAAOqD,EAAI,MAAM,MAAM,CACzB,EACA,SAAU,SAAUA,EAAKK,EAAK,CACxBA,IAAQ,MAAQA,IAAQ,IAC1B/J,GAAIiB,GAAkByI,EAAI,OAAQ,CAAC,CAAC,EACpCA,EAAI,OAAS,CAAC,GAEVK,GAAO,GAAGL,EAAI,OAAO,KAAKK,CAAG,CAErC,EACA,MAAO,SAAUL,EAAK,CAChBA,EAAI,QAAUA,EAAI,OAAO,OAAS,IACpC1J,GAAIiB,GAAkByI,EAAI,OAAQ,CAAC,CAAC,EACpCA,EAAI,OAAS,CAAC,EAElB,CACF,EACA,iBAAkB,CAChB,SAAU,SAAUA,EAAKK,EAAK,CACxBA,IAAQ,MAAQA,IAAQ,IAC1B9J,GAAIgB,GAAkByI,EAAI,OAAQ,CAAC,CAAC,EACpCA,EAAI,OAAS,CAAC,GAEVK,GAAO,GAAGL,EAAI,OAAO,KAAKK,CAAG,CAErC,EACA,MAAO,SAAUL,EAAK,CAChBA,EAAI,QAAUA,EAAI,OAAO,OAAS,IACpCzJ,GAAIgB,GAAkByI,EAAI,OAAQ,CAAC,CAAC,EACpCA,EAAI,OAAS,CAAC,EAElB,CACF,CACF,EAEA,SAASM,GAAWC,EAASC,EAAM,CACjC,OAAApI,GAAO,KAAK,EAAGmI,EAASA,EAAUC,CAAI,EAC/BD,CACT,CAEA,SAASE,GAAYD,EAAME,EAAW,CACpC,OAAO,KAAK,KAAKF,EAAOE,CAAS,EAAIA,CACvC,CACA,SAASC,GAAUH,EAAM,CACvBA,EAAOC,GAAYD,EAAM,KAAK,EAC9B,IAAIrI,EAAMyI,GAA6B,MAAOJ,CAAI,EAClD,OAAKrI,EACEmI,GAAWnI,EAAKqI,CAAI,EADV,CAEnB,CACA,IAAIK,GAAQ,CACV,UAAW,KACX,MAAO,SAAUC,EAAO,CACtB,OAAOD,GAAM,WAAW,KAAM,IAAK,MAAa,CAAC,CACnD,EACA,WAAY,SAAUE,EAAQC,EAAMC,EAAMpB,EAAK,CAC7C,GAAInF,EAAG,SAASuG,CAAI,GAAKvG,EAAG,OAAOuG,CAAI,EACrC,MAAM,IAAIvG,EAAG,WAAW,EAAE,EAEvBmG,GAAM,YACTA,GAAM,UAAY,CAChB,IAAK,CACH,KAAM,CACJ,QAASA,GAAM,SAAS,QACxB,QAASA,GAAM,SAAS,QACxB,OAAQA,GAAM,SAAS,OACvB,MAAOA,GAAM,SAAS,MACtB,OAAQA,GAAM,SAAS,OACvB,OAAQA,GAAM,SAAS,OACvB,MAAOA,GAAM,SAAS,MACtB,QAASA,GAAM,SAAS,QACxB,QAASA,GAAM,SAAS,OAC1B,EACA,OAAQ,CACN,OAAQA,GAAM,WAAW,MAC3B,CACF,EACA,KAAM,CACJ,KAAM,CACJ,QAASA,GAAM,SAAS,QACxB,QAASA,GAAM,SAAS,OAC1B,EACA,OAAQ,CACN,OAAQA,GAAM,WAAW,OACzB,KAAMA,GAAM,WAAW,KACvB,MAAOA,GAAM,WAAW,MACxB,SAAUA,GAAM,WAAW,SAC3B,KAAMA,GAAM,WAAW,KACvB,MAAOA,GAAM,WAAW,KAC1B,CACF,EACA,KAAM,CACJ,KAAM,CACJ,QAASA,GAAM,SAAS,QACxB,QAASA,GAAM,SAAS,QACxB,SAAUA,GAAM,SAAS,QAC3B,EACA,OAAQ,CAAC,CACX,EACA,OAAQ,CACN,KAAM,CACJ,QAASA,GAAM,SAAS,QACxB,QAASA,GAAM,SAAS,OAC1B,EACA,OAAQnG,EAAG,iBACb,CACF,GAEF,IAAIwG,EAAOxG,EAAG,WAAWqG,EAAQC,EAAMC,EAAMpB,CAAG,EAChD,OAAInF,EAAG,MAAMwG,EAAK,IAAI,GACpBA,EAAK,SAAWL,GAAM,UAAU,IAAI,KACpCK,EAAK,WAAaL,GAAM,UAAU,IAAI,OACtCK,EAAK,SAAW,CAAC,GACRxG,EAAG,OAAOwG,EAAK,IAAI,GAC5BA,EAAK,SAAWL,GAAM,UAAU,KAAK,KACrCK,EAAK,WAAaL,GAAM,UAAU,KAAK,OACvCK,EAAK,UAAY,EAEjBA,EAAK,SAAW,MACPxG,EAAG,OAAOwG,EAAK,IAAI,GAC5BA,EAAK,SAAWL,GAAM,UAAU,KAAK,KACrCK,EAAK,WAAaL,GAAM,UAAU,KAAK,QAC9BnG,EAAG,SAASwG,EAAK,IAAI,IAC9BA,EAAK,SAAWL,GAAM,UAAU,OAAO,KACvCK,EAAK,WAAaL,GAAM,UAAU,OAAO,QAE3CK,EAAK,UAAY,KAAK,IAAI,EAEtBH,IACFA,EAAO,SAASC,CAAI,EAAIE,EACxBH,EAAO,UAAYG,EAAK,WAEnBA,CACT,EACA,wBAAyB,SAAUA,EAAM,CACvC,OAAKA,EAAK,SACNA,EAAK,SAAS,SACTA,EAAK,SAAS,SAAS,EAAGA,EAAK,SAAS,EAC1C,IAAI,WAAWA,EAAK,QAAQ,EAHR,IAAI,WAAW,CAAC,CAI7C,EACA,kBAAmB,SAAUA,EAAMC,EAAa,CAC9C,IAAIC,EAAeF,EAAK,SAAWA,EAAK,SAAS,OAAS,EAC1D,GAAI,EAAAE,GAAgBD,GAEpB,KAAIE,EAAwB,KAAO,KACnCF,EAAc,KAAK,IACjBA,EACCC,GACEA,EAAeC,EAAwB,EAAM,SAC9C,CACJ,EACID,GAAgB,IAAGD,EAAc,KAAK,IAAIA,EAAa,GAAG,GAC9D,IAAIG,EAAcJ,EAAK,SACvBA,EAAK,SAAW,IAAI,WAAWC,CAAW,EACtCD,EAAK,UAAY,GACnBA,EAAK,SAAS,IAAII,EAAY,SAAS,EAAGJ,EAAK,SAAS,EAAG,CAAC,EAChE,EACA,kBAAmB,SAAUA,EAAMK,EAAS,CAC1C,GAAIL,EAAK,WAAaK,EACtB,GAAIA,GAAW,EACbL,EAAK,SAAW,KAChBA,EAAK,UAAY,MACZ,CACL,IAAII,EAAcJ,EAAK,SACvBA,EAAK,SAAW,IAAI,WAAWK,CAAO,EAClCD,GACFJ,EAAK,SAAS,IACZI,EAAY,SAAS,EAAG,KAAK,IAAIC,EAASL,EAAK,SAAS,CAAC,CAC3D,EAEFA,EAAK,UAAYK,CACnB,CACF,EACA,SAAU,CACR,QAAS,SAAUL,EAAM,CACvB,IAAIM,EAAO,CAAC,EAEZ,OAAAA,EAAK,IAAM9G,EAAG,SAASwG,EAAK,IAAI,EAAIA,EAAK,GAAK,EAC9CM,EAAK,IAAMN,EAAK,GAChBM,EAAK,KAAON,EAAK,KACjBM,EAAK,MAAQ,EACbA,EAAK,IAAM,EACXA,EAAK,IAAM,EACXA,EAAK,KAAON,EAAK,KACbxG,EAAG,MAAMwG,EAAK,IAAI,EACpBM,EAAK,KAAO,KACH9G,EAAG,OAAOwG,EAAK,IAAI,EAC5BM,EAAK,KAAON,EAAK,UACRxG,EAAG,OAAOwG,EAAK,IAAI,EAC5BM,EAAK,KAAON,EAAK,KAAK,OAEtBM,EAAK,KAAO,EAEdA,EAAK,MAAQ,IAAI,KAAKN,EAAK,SAAS,EACpCM,EAAK,MAAQ,IAAI,KAAKN,EAAK,SAAS,EACpCM,EAAK,MAAQ,IAAI,KAAKN,EAAK,SAAS,EAEpCM,EAAK,QAAU,KACfA,EAAK,OAAS,KAAK,KAAKA,EAAK,KAAOA,EAAK,OAAO,EACzCA,CACT,EACA,QAAS,SAAUN,EAAMM,EAAM,CACzBA,EAAK,OAAS,SAChBN,EAAK,KAAOM,EAAK,MAEfA,EAAK,YAAc,SACrBN,EAAK,UAAYM,EAAK,WAEpBA,EAAK,OAAS,QAChBX,GAAM,kBAAkBK,EAAMM,EAAK,IAAI,CAE3C,EACA,OAAQ,SAAUT,EAAQC,EAAM,CAC9B,MAAMtG,EAAG,cAAc,EAAE,CAC3B,EACA,MAAO,SAAUqG,EAAQC,EAAMC,EAAMpB,EAAK,CACxC,OAAOgB,GAAM,WAAWE,EAAQC,EAAMC,EAAMpB,CAAG,CACjD,EACA,OAAQ,SAAU4B,EAAUC,EAASC,EAAU,CAC7C,GAAIjH,EAAG,MAAM+G,EAAS,IAAI,EAAG,CAC3B,IAAIG,EACJ,GAAI,CACFA,EAAWlH,EAAG,WAAWgH,EAASC,CAAQ,CAC5C,MAAY,CAAC,CACb,GAAIC,EACF,QAASlJ,KAAKkJ,EAAS,SACrB,MAAM,IAAIlH,EAAG,WAAW,EAAE,CAGhC,CAEA,OAAO+G,EAAS,OAAO,SAASA,EAAS,IAAI,EAC7CA,EAAS,OAAO,UAAY,KAAK,IAAI,EACrCA,EAAS,KAAOE,EAChBD,EAAQ,SAASC,CAAQ,EAAIF,EAC7BC,EAAQ,UAAYD,EAAS,OAAO,UACpCA,EAAS,OAASC,CACpB,EACA,OAAQ,SAAUX,EAAQC,EAAM,CAC9B,OAAOD,EAAO,SAASC,CAAI,EAC3BD,EAAO,UAAY,KAAK,IAAI,CAC9B,EACA,MAAO,SAAUA,EAAQC,EAAM,CAC7B,IAAIE,EAAOxG,EAAG,WAAWqG,EAAQC,CAAI,EACrC,QAAStI,KAAKwI,EAAK,SACjB,MAAM,IAAIxG,EAAG,WAAW,EAAE,EAE5B,OAAOqG,EAAO,SAASC,CAAI,EAC3BD,EAAO,UAAY,KAAK,IAAI,CAC9B,EACA,QAAS,SAAUG,EAAM,CACvB,IAAIW,EAAU,CAAC,IAAK,IAAI,EACxB,QAASC,KAAOZ,EAAK,SACdA,EAAK,SAAS,eAAeY,CAAG,GAGrCD,EAAQ,KAAKC,CAAG,EAElB,OAAOD,CACT,EACA,QAAS,SAAUd,EAAQgB,EAASC,EAAS,CAC3C,IAAId,EAAOL,GAAM,WAAWE,EAAQgB,EAAS,MAAa,CAAC,EAC3D,OAAAb,EAAK,KAAOc,EACLd,CACT,EACA,SAAU,SAAUA,EAAM,CACxB,GAAI,CAACxG,EAAG,OAAOwG,EAAK,IAAI,EACtB,MAAM,IAAIxG,EAAG,WAAW,EAAE,EAE5B,OAAOwG,EAAK,IACd,CACF,EACA,WAAY,CACV,KAAM,SAAUnB,EAAQE,EAAQC,EAAQb,EAAQ4C,EAAU,CACxD,IAAIC,EAAWnC,EAAO,KAAK,SAC3B,GAAIkC,GAAYlC,EAAO,KAAK,UAAW,MAAO,GAC9C,IAAIS,EAAO,KAAK,IAAIT,EAAO,KAAK,UAAYkC,EAAU5C,CAAM,EAC5D,GAAImB,EAAO,GAAK0B,EAAS,SACvBjC,EAAO,IAAIiC,EAAS,SAASD,EAAUA,EAAWzB,CAAI,EAAGN,CAAM,MAE/D,SAASxH,EAAI,EAAGA,EAAI8H,EAAM9H,IACxBuH,EAAOC,EAASxH,CAAC,EAAIwJ,EAASD,EAAWvJ,CAAC,EAE9C,OAAO8H,CACT,EACA,MAAO,SAAUT,EAAQE,EAAQC,EAAQb,EAAQ4C,EAAUE,EAAQ,CAKjE,GAJIlC,EAAO,SAAW/G,GAAM,SAC1BiJ,EAAS,IAGP,CAAC9C,EAAQ,MAAO,GACpB,IAAI6B,EAAOnB,EAAO,KAGlB,GAFAmB,EAAK,UAAY,KAAK,IAAI,EAEtBjB,EAAO,WAAa,CAACiB,EAAK,UAAYA,EAAK,SAAS,UAAW,CACjE,GAAIiB,EACF,OAAAjB,EAAK,SAAWjB,EAAO,SAASC,EAAQA,EAASb,CAAM,EACvD6B,EAAK,UAAY7B,EACVA,EACF,GAAI6B,EAAK,YAAc,GAAKe,IAAa,EAC9C,OAAAf,EAAK,SAAWjB,EAAO,MAAMC,EAAQA,EAASb,CAAM,EACpD6B,EAAK,UAAY7B,EACVA,EACF,GAAI4C,EAAW5C,GAAU6B,EAAK,UACnC,OAAAA,EAAK,SAAS,IACZjB,EAAO,SAASC,EAAQA,EAASb,CAAM,EACvC4C,CACF,EACO5C,CAEX,CAGA,GADAwB,GAAM,kBAAkBK,EAAMe,EAAW5C,CAAM,EAC3C6B,EAAK,SAAS,UAAYjB,EAAO,SACnCiB,EAAK,SAAS,IACZjB,EAAO,SAASC,EAAQA,EAASb,CAAM,EACvC4C,CACF,MAEA,SAASvJ,EAAI,EAAGA,EAAI2G,EAAQ3G,IAC1BwI,EAAK,SAASe,EAAWvJ,CAAC,EAAIuH,EAAOC,EAASxH,CAAC,EAGnD,OAAAwI,EAAK,UAAY,KAAK,IAAIA,EAAK,UAAWe,EAAW5C,CAAM,EACpDA,CACT,EACA,OAAQ,SAAUU,EAAQG,EAAQkC,EAAQ,CACxC,IAAIH,EAAW/B,EAQf,GAPIkC,IAAW,EACbH,GAAYlC,EAAO,SACVqC,IAAW,GAChB1H,EAAG,OAAOqF,EAAO,KAAK,IAAI,IAC5BkC,GAAYlC,EAAO,KAAK,WAGxBkC,EAAW,EACb,MAAM,IAAIvH,EAAG,WAAW,EAAE,EAE5B,OAAOuH,CACT,EACA,SAAU,SAAUlC,EAAQG,EAAQb,EAAQ,CAC1CwB,GAAM,kBAAkBd,EAAO,KAAMG,EAASb,CAAM,EACpDU,EAAO,KAAK,UAAY,KAAK,IAC3BA,EAAO,KAAK,UACZG,EAASb,CACX,CACF,EACA,KAAM,SAAUU,EAAQV,EAAQ4C,EAAUI,EAAMC,EAAO,CACrD,GAAI,CAAC5H,EAAG,OAAOqF,EAAO,KAAK,IAAI,EAC7B,MAAM,IAAIrF,EAAG,WAAW,EAAE,EAE5B,IAAIvC,EACAoK,EACAL,EAAWnC,EAAO,KAAK,SAE3B,GAAI,EAAEuC,EAAQ,IAAMJ,EAAS,SAAWhJ,GAAM,OAC5CqJ,EAAY,GACZpK,EAAM+J,EAAS,eACV,CAcL,IAbID,EAAW,GAAKA,EAAW5C,EAAS6C,EAAS,UAC3CA,EAAS,SACXA,EAAWA,EAAS,SAASD,EAAUA,EAAW5C,CAAM,EAExD6C,EAAW,MAAM,UAAU,MAAM,KAC/BA,EACAD,EACAA,EAAW5C,CACb,GAGJkD,EAAY,GACZpK,EAAMwI,GAAUtB,CAAM,EAClB,CAAClH,EACH,MAAM,IAAIuC,EAAG,WAAW,EAAE,EAE5BxB,GAAM,IAAIgJ,EAAU/J,CAAG,CACzB,CACA,MAAO,CAAE,IAAKA,EAAK,UAAWoK,CAAU,CAC1C,EACA,MAAO,SAAUxC,EAAQE,EAAQC,EAAQb,EAAQmD,EAAW,CAC1D,OAAA3B,GAAM,WAAW,MAAMd,EAAQE,EAAQ,EAAGZ,EAAQa,EAAQ,EAAK,EAExD,CACT,CACF,CACF,EAEA,SAASuC,GAAUxM,EAAKE,EAAQC,EAASsM,EAAU,CACjD,IAAIC,EAAOD,EAAiD,GAAf,MAAQzM,EACrDH,GACEG,EACC2M,GAAgB,CACf/L,GACE+L,EACA,sBAAwB3M,EAAM,4BAChC,EACAE,EAAO,IAAI,WAAWyM,CAAW,CAAC,EAC9BD,GAAKpH,GAAoBoH,CAAG,CAClC,EACCE,GAAU,CACT,GAAIzM,EACFA,EAAQ,MAER,MAAM,sBAAwBH,EAAM,WAExC,CACF,EACI0M,GAAKrH,GAAiBqH,CAAG,CAC/B,CAEA,IAAIjI,EAAK,CACP,KAAM,KACN,OAAQ,CAAC,EACT,QAAS,CAAC,EACV,QAAS,CAAC,EACV,UAAW,EACX,UAAW,KACX,YAAa,IACb,YAAa,GACb,kBAAmB,GACnB,WAAY,KACZ,cAAe,CAAC,EAChB,YAAa,KACb,eAAgB,EAChB,WAAY,CAAC9E,EAAMkN,EAAO,CAAC,IAAM,CAG/B,GAFAlN,EAAO8I,GAAQ,QAAQ9I,CAAI,EAEvB,CAACA,EAAM,MAAO,CAAE,KAAM,GAAI,KAAM,IAAK,EAEzC,IAAImN,EAAW,CACb,aAAc,GACd,cAAe,CACjB,EAGA,GAFAD,EAAO,OAAO,OAAOC,EAAUD,CAAI,EAE/BA,EAAK,cAAgB,EACvB,MAAM,IAAIpI,EAAG,WAAW,EAAE,EAQ5B,QALIiD,EAAQ/H,EAAK,MAAM,GAAG,EAAE,OAAQqI,GAAM,CAAC,CAACA,CAAC,EAEzC+E,EAAUtI,EAAG,KACbuI,EAAe,IAEVvK,EAAI,EAAGA,EAAIiF,EAAM,OAAQjF,IAAK,CACrC,IAAIwK,EAASxK,IAAMiF,EAAM,OAAS,EAClC,GAAIuF,GAAUJ,EAAK,OACjB,MAYF,GATAE,EAAUtI,EAAG,WAAWsI,EAASrF,EAAMjF,CAAC,CAAC,EACzCuK,EAAexF,GAAK,MAAMwF,EAActF,EAAMjF,CAAC,CAAC,EAE5CgC,EAAG,aAAasI,CAAO,IACrB,CAACE,GAAWA,GAAUJ,EAAK,gBAC7BE,EAAUA,EAAQ,QAAQ,MAI1B,CAACE,GAAUJ,EAAK,OAElB,QADIK,EAAQ,EACLzI,EAAG,OAAOsI,EAAQ,IAAI,GAAG,CAC9B,IAAII,EAAO1I,EAAG,SAASuI,CAAY,EACnCA,EAAevE,GAAQ,QAAQjB,GAAK,QAAQwF,CAAY,EAAGG,CAAI,EAE/D,IAAIC,EAAS3I,EAAG,WAAWuI,EAAc,CACvC,cAAeH,EAAK,cAAgB,CACtC,CAAC,EAGD,GAFAE,EAAUK,EAAO,KAEbF,IAAU,GACZ,MAAM,IAAIzI,EAAG,WAAW,EAAE,CAE9B,CAEJ,CAEA,MAAO,CAAE,KAAMuI,EAAc,KAAMD,CAAQ,CAC7C,EACA,QAAU9B,GAAS,CAEjB,QADItL,IACS,CACX,GAAI8E,EAAG,OAAOwG,CAAI,EAAG,CACnB,IAAIJ,EAAQI,EAAK,MAAM,WACvB,OAAKtL,EACEkL,EAAMA,EAAM,OAAS,CAAC,IAAM,IAC/BA,EAAQ,IAAMlL,EACdkL,EAAQlL,EAHMkL,CAIpB,CACAlL,EAAOA,EAAOsL,EAAK,KAAO,IAAMtL,EAAOsL,EAAK,KAC5CA,EAAOA,EAAK,MACd,CACF,EACA,SAAU,CAACoC,EAAUtC,IAAS,CAG5B,QAFIuC,EAAO,EAEF7K,EAAI,EAAGA,EAAIsI,EAAK,OAAQtI,IAC/B6K,GAASA,GAAQ,GAAKA,EAAOvC,EAAK,WAAWtI,CAAC,EAAK,EAErD,OAAS4K,EAAWC,IAAU,GAAK7I,EAAG,UAAU,MAClD,EACA,YAAcwG,GAAS,CACrB,IAAIqC,EAAO7I,EAAG,SAASwG,EAAK,OAAO,GAAIA,EAAK,IAAI,EAChDA,EAAK,UAAYxG,EAAG,UAAU6I,CAAI,EAClC7I,EAAG,UAAU6I,CAAI,EAAIrC,CACvB,EACA,eAAiBA,GAAS,CACxB,IAAIqC,EAAO7I,EAAG,SAASwG,EAAK,OAAO,GAAIA,EAAK,IAAI,EAChD,GAAIxG,EAAG,UAAU6I,CAAI,IAAMrC,EACzBxG,EAAG,UAAU6I,CAAI,EAAIrC,EAAK,cAG1B,SADI8B,EAAUtI,EAAG,UAAU6I,CAAI,EACxBP,GAAS,CACd,GAAIA,EAAQ,YAAc9B,EAAM,CAC9B8B,EAAQ,UAAY9B,EAAK,UACzB,KACF,CACA8B,EAAUA,EAAQ,SACpB,CAEJ,EACA,WAAY,CAACjC,EAAQC,IAAS,CAC5B,IAAIwC,EAAU9I,EAAG,UAAUqG,CAAM,EACjC,GAAIyC,EACF,MAAM,IAAI9I,EAAG,WAAW8I,EAASzC,CAAM,EAGzC,QADIwC,EAAO7I,EAAG,SAASqG,EAAO,GAAIC,CAAI,EAC7BE,EAAOxG,EAAG,UAAU6I,CAAI,EAAGrC,EAAMA,EAAOA,EAAK,UAAW,CAC/D,IAAIuC,EAAWvC,EAAK,KACpB,GAAIA,EAAK,OAAO,KAAOH,EAAO,IAAM0C,IAAazC,EAC/C,OAAOE,CAEX,CAEA,OAAOxG,EAAG,OAAOqG,EAAQC,CAAI,CAC/B,EACA,WAAY,CAACD,EAAQC,EAAMC,EAAMyC,IAAS,CACxC,IAAIxC,EAAO,IAAIxG,EAAG,OAAOqG,EAAQC,EAAMC,EAAMyC,CAAI,EAEjD,OAAAhJ,EAAG,YAAYwG,CAAI,EAEZA,CACT,EACA,YAAcA,GAAS,CACrBxG,EAAG,eAAewG,CAAI,CACxB,EACA,OAASA,GACAA,IAASA,EAAK,OAEvB,aAAeA,GACN,CAAC,CAACA,EAAK,QAEhB,OAASD,IACCA,EAAO,SAAW,MAE5B,MAAQA,IACEA,EAAO,SAAW,MAE5B,OAASA,IACCA,EAAO,SAAW,MAE5B,SAAWA,IACDA,EAAO,SAAW,KAE5B,SAAWA,IACDA,EAAO,SAAW,MAE5B,OAASA,IACCA,EAAO,SAAW,KAE5B,SAAWA,IACDA,EAAO,SAAW,MAE5B,UAAW,CAAE,EAAG,EAAG,KAAM,EAAG,EAAG,IAAK,KAAM,IAAK,EAAG,KAAM,KAAM,IAAK,EACnE,kBAAoBpJ,GAAQ,CAC1B,IAAIyK,EAAQ5H,EAAG,UAAU7C,CAAG,EAC5B,GAAI,OAAOyK,EAAS,IAClB,MAAM,IAAI,MAAM,2BAA6BzK,CAAG,EAElD,OAAOyK,CACT,EACA,wBAA0BqB,GAAS,CACjC,IAAIC,EAAQ,CAAC,IAAK,IAAK,IAAI,EAAED,EAAO,CAAC,EACrC,OAAIA,EAAO,MACTC,GAAS,KAEJA,CACT,EACA,gBAAiB,CAAC1C,EAAM0C,IAClBlJ,EAAG,kBACE,EAGLkJ,EAAM,SAAS,GAAG,GAAK,EAAE1C,EAAK,KAAO,MAE9B0C,EAAM,SAAS,GAAG,GAAK,EAAE1C,EAAK,KAAO,MAErC0C,EAAM,SAAS,GAAG,GAAK,EAAE1C,EAAK,KAAO,IAHvC,EAMF,EAET,UAAY/C,GAAQ,CAClB,IAAIqF,EAAU9I,EAAG,gBAAgByD,EAAK,GAAG,EACzC,OAAIqF,IACCrF,EAAI,SAAS,OACX,EAD0B,EAEnC,EACA,UAAW,CAACA,EAAK6C,IAAS,CACxB,GAAI,CACF,IAAIE,EAAOxG,EAAG,WAAWyD,EAAK6C,CAAI,EAClC,MAAO,GACT,MAAY,CAAC,CACb,OAAOtG,EAAG,gBAAgByD,EAAK,IAAI,CACrC,EACA,UAAW,CAACA,EAAK6C,EAAM6C,IAAU,CAC/B,IAAI3C,EACJ,GAAI,CACFA,EAAOxG,EAAG,WAAWyD,EAAK6C,CAAI,CAChC,OAAStF,EAAG,CACV,OAAOA,EAAE,KACX,CACA,IAAI8H,EAAU9I,EAAG,gBAAgByD,EAAK,IAAI,EAC1C,GAAIqF,EACF,OAAOA,EAET,GAAIK,EAAO,CACT,GAAI,CAACnJ,EAAG,MAAMwG,EAAK,IAAI,EACrB,MAAO,IAET,GAAIxG,EAAG,OAAOwG,CAAI,GAAKxG,EAAG,QAAQwG,CAAI,IAAMxG,EAAG,IAAI,EACjD,MAAO,GAEX,SACMA,EAAG,MAAMwG,EAAK,IAAI,EACpB,MAAO,IAGX,MAAO,EACT,EACA,QAAS,CAACA,EAAMoB,IACTpB,EAGDxG,EAAG,OAAOwG,EAAK,IAAI,EACd,GACExG,EAAG,MAAMwG,EAAK,IAAI,IACvBxG,EAAG,wBAAwB4H,CAAK,IAAM,KAAOA,EAAQ,KAChD,GAGJ5H,EAAG,gBAAgBwG,EAAMxG,EAAG,wBAAwB4H,CAAK,CAAC,EATxD,GAWX,aAAc,KACd,OAAQ,CAACwB,EAAW,EAAGC,EAASrJ,EAAG,eAAiB,CAClD,QAASsJ,EAAKF,EAAUE,GAAMD,EAAQC,IACpC,GAAI,CAACtJ,EAAG,QAAQsJ,CAAE,EAChB,OAAOA,EAGX,MAAM,IAAItJ,EAAG,WAAW,EAAE,CAC5B,EACA,UAAYsJ,GAAOtJ,EAAG,QAAQsJ,CAAE,EAChC,aAAc,CAACjE,EAAQ+D,EAAUC,IAAW,CACrCrJ,EAAG,WACNA,EAAG,SAAW,UAAY,CACxB,KAAK,OAAS,CAAC,CACjB,EACAA,EAAG,SAAS,UAAY,CAAC,EACzB,OAAO,iBAAiBA,EAAG,SAAS,UAAW,CAC7C,OAAQ,CACN,IAAK,UAAY,CACf,OAAO,KAAK,IACd,EAEA,IAAK,SAAU2F,EAAK,CAClB,KAAK,KAAOA,CACd,CACF,EACA,OAAQ,CACN,IAAK,UAAY,CACf,OAAQ,KAAK,MAAQ,WAAa,CACpC,CACF,EACA,QAAS,CACP,IAAK,UAAY,CACf,OAAQ,KAAK,MAAQ,WAAa,CACpC,CACF,EACA,SAAU,CACR,IAAK,UAAY,CACf,OAAO,KAAK,MAAQ,IACtB,CACF,EACA,MAAO,CACL,IAAK,UAAY,CACf,OAAO,KAAK,OAAO,KACrB,EAEA,IAAK,SAAUA,EAAK,CAClB,KAAK,OAAO,MAAQA,CACtB,CACF,EACA,SAAU,CACR,IAAK,UAAY,CACf,OAAO,KAAK,OAAO,QACrB,EAEA,IAAK,SAAUA,EAAK,CAClB,KAAK,OAAO,SAAWA,CACzB,CACF,CACF,CAAC,GAGHN,EAAS,OAAO,OAAO,IAAIrF,EAAG,SAAYqF,CAAM,EAChD,IAAIiE,EAAKtJ,EAAG,OAAOoJ,EAAUC,CAAM,EACnC,OAAAhE,EAAO,GAAKiE,EACZtJ,EAAG,QAAQsJ,CAAE,EAAIjE,EACVA,CACT,EACA,YAAciE,GAAO,CACnBtJ,EAAG,QAAQsJ,CAAE,EAAI,IACnB,EACA,kBAAmB,CACjB,KAAOjE,GAAW,CAChB,IAAIkE,EAASvJ,EAAG,UAAUqF,EAAO,KAAK,IAAI,EAE1CA,EAAO,WAAakE,EAAO,WAEvBlE,EAAO,WAAW,MACpBA,EAAO,WAAW,KAAKA,CAAM,CAEjC,EACA,OAAQ,IAAM,CACZ,MAAM,IAAIrF,EAAG,WAAW,EAAE,CAC5B,CACF,EACA,MAAQmF,GAAQA,GAAO,EACvB,MAAQA,GAAQA,EAAM,IACtB,QAAS,CAACqE,EAAIC,IAAQD,GAAM,EAAKC,EACjC,eAAgB,CAACtE,EAAKC,IAAQ,CAC5BpF,EAAG,QAAQmF,CAAG,EAAI,CAAE,WAAYC,CAAI,CACtC,EACA,UAAYD,GAAQnF,EAAG,QAAQmF,CAAG,EAClC,UAAYiB,GAAU,CAIpB,QAHIsD,EAAS,CAAC,EACVC,EAAQ,CAACvD,CAAK,EAEXuD,EAAM,QAAQ,CACnB,IAAIC,EAAID,EAAM,IAAI,EAElBD,EAAO,KAAKE,CAAC,EAEbD,EAAM,KAAK,MAAMA,EAAOC,EAAE,MAAM,CAClC,CAEA,OAAOF,CACT,EACA,OAAQ,CAACG,EAAU/I,IAAa,CAC1B,OAAO+I,GAAY,aACrB/I,EAAW+I,EACXA,EAAW,IAGb7J,EAAG,iBAECA,EAAG,eAAiB,GACtBnE,GACE,YACEmE,EAAG,eACH,yEACJ,EAGF,IAAI0J,EAAS1J,EAAG,UAAUA,EAAG,KAAK,KAAK,EACnC8J,EAAY,EAEhB,SAASC,EAAWjB,EAAS,CAC3B,OAAA9I,EAAG,iBACIc,EAASgI,CAAO,CACzB,CAEA,SAASkB,EAAKlB,EAAS,CACrB,GAAIA,EACF,OAAKkB,EAAK,QAIV,QAHEA,EAAK,QAAU,GACRD,EAAWjB,CAAO,GAIzB,EAAEgB,GAAaJ,EAAO,QACxBK,EAAW,IAAI,CAEnB,CAEAL,EAAO,QAAStD,GAAU,CACxB,GAAI,CAACA,EAAM,KAAK,OACd,OAAO4D,EAAK,IAAI,EAElB5D,EAAM,KAAK,OAAOA,EAAOyD,EAAUG,CAAI,CACzC,CAAC,CACH,EACA,MAAO,CAAC/N,EAAMmM,EAAM6B,IAAe,CACjC,IAAIzG,EAAOyG,IAAe,IACtBC,EAAS,CAACD,EACVzD,EAEJ,GAAIhD,GAAQxD,EAAG,KACb,MAAM,IAAIA,EAAG,WAAW,EAAE,EACrB,GAAI,CAACwD,GAAQ,CAAC0G,EAAQ,CAC3B,IAAIvB,EAAS3I,EAAG,WAAWiK,EAAY,CAAE,aAAc,EAAM,CAAC,EAK9D,GAHAA,EAAatB,EAAO,KACpBnC,EAAOmC,EAAO,KAEV3I,EAAG,aAAawG,CAAI,EACtB,MAAM,IAAIxG,EAAG,WAAW,EAAE,EAG5B,GAAI,CAACA,EAAG,MAAMwG,EAAK,IAAI,EACrB,MAAM,IAAIxG,EAAG,WAAW,EAAE,CAE9B,CAEA,IAAIoG,EAAQ,CACV,KAAMnK,EACN,KAAMmM,EACN,WAAY6B,EACZ,OAAQ,CAAC,CACX,EAEIE,EAAYlO,EAAK,MAAMmK,CAAK,EAChC,OAAA+D,EAAU,MAAQ/D,EAClBA,EAAM,KAAO+D,EAET3G,EACFxD,EAAG,KAAOmK,EACD3D,IACTA,EAAK,QAAUJ,EAEXI,EAAK,OACPA,EAAK,MAAM,OAAO,KAAKJ,CAAK,GAIzB+D,CACT,EACA,QAAUF,GAAe,CACvB,IAAItB,EAAS3I,EAAG,WAAWiK,EAAY,CAAE,aAAc,EAAM,CAAC,EAE9D,GAAI,CAACjK,EAAG,aAAa2I,EAAO,IAAI,EAC9B,MAAM,IAAI3I,EAAG,WAAW,EAAE,EAG5B,IAAIwG,EAAOmC,EAAO,KACdvC,EAAQI,EAAK,QACbkD,EAAS1J,EAAG,UAAUoG,CAAK,EAE/B,OAAO,KAAKpG,EAAG,SAAS,EAAE,QAAS6I,GAAS,CAG1C,QAFIP,EAAUtI,EAAG,UAAU6I,CAAI,EAExBP,GAAS,CACd,IAAI8B,EAAO9B,EAAQ,UAEfoB,EAAO,SAASpB,EAAQ,KAAK,GAC/BtI,EAAG,YAAYsI,CAAO,EAGxBA,EAAU8B,CACZ,CACF,CAAC,EAED5D,EAAK,QAAU,KAEf,IAAIzJ,EAAMyJ,EAAK,MAAM,OAAO,QAAQJ,CAAK,EACzCI,EAAK,MAAM,OAAO,OAAOzJ,EAAK,CAAC,CACjC,EACA,OAAQ,CAACsJ,EAAQC,IACRD,EAAO,SAAS,OAAOA,EAAQC,CAAI,EAE5C,MAAO,CAACpL,EAAMqL,EAAMpB,IAAQ,CAC1B,IAAIwD,EAAS3I,EAAG,WAAW9E,EAAM,CAAE,OAAQ,EAAK,CAAC,EAC7CmL,EAASsC,EAAO,KAChBrC,EAAOvD,GAAK,SAAS7H,CAAI,EAC7B,GAAI,CAACoL,GAAQA,IAAS,KAAOA,IAAS,KACpC,MAAM,IAAItG,EAAG,WAAW,EAAE,EAE5B,IAAI8I,EAAU9I,EAAG,UAAUqG,EAAQC,CAAI,EACvC,GAAIwC,EACF,MAAM,IAAI9I,EAAG,WAAW8I,CAAO,EAEjC,GAAI,CAACzC,EAAO,SAAS,MACnB,MAAM,IAAIrG,EAAG,WAAW,EAAE,EAE5B,OAAOqG,EAAO,SAAS,MAAMA,EAAQC,EAAMC,EAAMpB,CAAG,CACtD,EACA,OAAQ,CAACjK,EAAMqL,KACbA,EAAOA,IAAS,OAAYA,EAAO,IACnCA,GAAQ,KACRA,GAAQ,MACDvG,EAAG,MAAM9E,EAAMqL,EAAM,CAAC,GAE/B,MAAO,CAACrL,EAAMqL,KACZA,EAAOA,IAAS,OAAYA,EAAO,IACnCA,GAAQ,KACRA,GAAQ,MACDvG,EAAG,MAAM9E,EAAMqL,EAAM,CAAC,GAE/B,UAAW,CAACrL,EAAMqL,IAAS,CAGzB,QAFI8D,EAAOnP,EAAK,MAAM,GAAG,EACrBoP,EAAI,GACCtM,EAAI,EAAGA,EAAIqM,EAAK,OAAQ,EAAErM,EACjC,GAAKqM,EAAKrM,CAAC,EACX,CAAAsM,GAAK,IAAMD,EAAKrM,CAAC,EACjB,GAAI,CACFgC,EAAG,MAAMsK,EAAG/D,CAAI,CAClB,OAASvF,EAAG,CACV,GAAIA,EAAE,OAAS,GAAI,MAAMA,CAC3B,EAEJ,EACA,MAAO,CAAC9F,EAAMqL,EAAMpB,KACd,OAAOA,EAAO,MAChBA,EAAMoB,EACNA,EAAO,KAETA,GAAQ,KACDvG,EAAG,MAAM9E,EAAMqL,EAAMpB,CAAG,GAEjC,QAAS,CAACmC,EAASiD,IAAY,CAC7B,GAAI,CAACvG,GAAQ,QAAQsD,CAAO,EAC1B,MAAM,IAAItH,EAAG,WAAW,EAAE,EAE5B,IAAI2I,EAAS3I,EAAG,WAAWuK,EAAS,CAAE,OAAQ,EAAK,CAAC,EAChDlE,EAASsC,EAAO,KACpB,GAAI,CAACtC,EACH,MAAM,IAAIrG,EAAG,WAAW,EAAE,EAE5B,IAAIqH,EAAUtE,GAAK,SAASwH,CAAO,EAC/BzB,EAAU9I,EAAG,UAAUqG,EAAQgB,CAAO,EAC1C,GAAIyB,EACF,MAAM,IAAI9I,EAAG,WAAW8I,CAAO,EAEjC,GAAI,CAACzC,EAAO,SAAS,QACnB,MAAM,IAAIrG,EAAG,WAAW,EAAE,EAE5B,OAAOqG,EAAO,SAAS,QAAQA,EAAQgB,EAASC,CAAO,CACzD,EACA,OAAQ,CAACkD,EAAUC,IAAa,CAC9B,IAAIC,EAAc3H,GAAK,QAAQyH,CAAQ,EACnCG,EAAc5H,GAAK,QAAQ0H,CAAQ,EACnCG,EAAW7H,GAAK,SAASyH,CAAQ,EACjCvD,EAAWlE,GAAK,SAAS0H,CAAQ,EAEjC9B,EAAQkC,EAAS7D,EAOrB,GALA2B,EAAS3I,EAAG,WAAWwK,EAAU,CAAE,OAAQ,EAAK,CAAC,EACjDK,EAAUlC,EAAO,KACjBA,EAAS3I,EAAG,WAAWyK,EAAU,CAAE,OAAQ,EAAK,CAAC,EACjDzD,EAAU2B,EAAO,KAEb,CAACkC,GAAW,CAAC7D,EAAS,MAAM,IAAIhH,EAAG,WAAW,EAAE,EAEpD,GAAI6K,EAAQ,QAAU7D,EAAQ,MAC5B,MAAM,IAAIhH,EAAG,WAAW,EAAE,EAG5B,IAAI+G,EAAW/G,EAAG,WAAW6K,EAASD,CAAQ,EAE1CE,EAAW9G,GAAQ,SAASwG,EAAUG,CAAW,EACrD,GAAIG,EAAS,OAAO,CAAC,IAAM,IACzB,MAAM,IAAI9K,EAAG,WAAW,EAAE,EAI5B,GADA8K,EAAW9G,GAAQ,SAASyG,EAAUC,CAAW,EAC7CI,EAAS,OAAO,CAAC,IAAM,IACzB,MAAM,IAAI9K,EAAG,WAAW,EAAE,EAG5B,IAAIkH,EACJ,GAAI,CACFA,EAAWlH,EAAG,WAAWgH,EAASC,CAAQ,CAC5C,MAAY,CAAC,CAEb,GAAIF,IAAaG,EAIjB,KAAIiC,EAAQnJ,EAAG,MAAM+G,EAAS,IAAI,EAC9B+B,EAAU9I,EAAG,UAAU6K,EAASD,EAAUzB,CAAK,EACnD,GAAIL,EACF,MAAM,IAAI9I,EAAG,WAAW8I,CAAO,EAMjC,GAHAA,EAAU5B,EACNlH,EAAG,UAAUgH,EAASC,EAAUkC,CAAK,EACrCnJ,EAAG,UAAUgH,EAASC,CAAQ,EAC9B6B,EACF,MAAM,IAAI9I,EAAG,WAAW8I,CAAO,EAEjC,GAAI,CAAC+B,EAAQ,SAAS,OACpB,MAAM,IAAI7K,EAAG,WAAW,EAAE,EAE5B,GACEA,EAAG,aAAa+G,CAAQ,GACvBG,GAAYlH,EAAG,aAAakH,CAAQ,EAErC,MAAM,IAAIlH,EAAG,WAAW,EAAE,EAG5B,GAAIgH,IAAY6D,IACd/B,EAAU9I,EAAG,gBAAgB6K,EAAS,GAAG,EACrC/B,GACF,MAAM,IAAI9I,EAAG,WAAW8I,CAAO,EAInC9I,EAAG,eAAe+G,CAAQ,EAE1B,GAAI,CACF8D,EAAQ,SAAS,OAAO9D,EAAUC,EAASC,CAAQ,CACrD,OAASjG,EAAG,CACV,MAAMA,CACR,QAAE,CACAhB,EAAG,YAAY+G,CAAQ,CACzB,EACF,EACA,MAAQ7L,GAAS,CACf,IAAIyN,EAAS3I,EAAG,WAAW9E,EAAM,CAAE,OAAQ,EAAK,CAAC,EAC7CmL,EAASsC,EAAO,KAChBrC,EAAOvD,GAAK,SAAS7H,CAAI,EACzBsL,EAAOxG,EAAG,WAAWqG,EAAQC,CAAI,EACjCwC,EAAU9I,EAAG,UAAUqG,EAAQC,EAAM,EAAI,EAC7C,GAAIwC,EACF,MAAM,IAAI9I,EAAG,WAAW8I,CAAO,EAEjC,GAAI,CAACzC,EAAO,SAAS,MACnB,MAAM,IAAIrG,EAAG,WAAW,EAAE,EAE5B,GAAIA,EAAG,aAAawG,CAAI,EACtB,MAAM,IAAIxG,EAAG,WAAW,EAAE,EAE5BqG,EAAO,SAAS,MAAMA,EAAQC,CAAI,EAClCtG,EAAG,YAAYwG,CAAI,CACrB,EACA,QAAUtL,GAAS,CACjB,IAAIyN,EAAS3I,EAAG,WAAW9E,EAAM,CAAE,OAAQ,EAAK,CAAC,EAC7CsL,EAAOmC,EAAO,KAClB,GAAI,CAACnC,EAAK,SAAS,QACjB,MAAM,IAAIxG,EAAG,WAAW,EAAE,EAE5B,OAAOwG,EAAK,SAAS,QAAQA,CAAI,CACnC,EACA,OAAStL,GAAS,CAChB,IAAIyN,EAAS3I,EAAG,WAAW9E,EAAM,CAAE,OAAQ,EAAK,CAAC,EAC7CmL,EAASsC,EAAO,KACpB,GAAI,CAACtC,EACH,MAAM,IAAIrG,EAAG,WAAW,EAAE,EAE5B,IAAIsG,EAAOvD,GAAK,SAAS7H,CAAI,EACzBsL,EAAOxG,EAAG,WAAWqG,EAAQC,CAAI,EACjCwC,EAAU9I,EAAG,UAAUqG,EAAQC,EAAM,EAAK,EAC9C,GAAIwC,EACF,MAAM,IAAI9I,EAAG,WAAW8I,CAAO,EAEjC,GAAI,CAACzC,EAAO,SAAS,OACnB,MAAM,IAAIrG,EAAG,WAAW,EAAE,EAE5B,GAAIA,EAAG,aAAawG,CAAI,EACtB,MAAM,IAAIxG,EAAG,WAAW,EAAE,EAE5BqG,EAAO,SAAS,OAAOA,EAAQC,CAAI,EACnCtG,EAAG,YAAYwG,CAAI,CACrB,EACA,SAAWtL,GAAS,CAClB,IAAIyN,EAAS3I,EAAG,WAAW9E,CAAI,EAC3BwN,EAAOC,EAAO,KAClB,GAAI,CAACD,EACH,MAAM,IAAI1I,EAAG,WAAW,EAAE,EAE5B,GAAI,CAAC0I,EAAK,SAAS,SACjB,MAAM,IAAI1I,EAAG,WAAW,EAAE,EAE5B,OAAOgE,GAAQ,QACbhE,EAAG,QAAQ0I,EAAK,MAAM,EACtBA,EAAK,SAAS,SAASA,CAAI,CAC7B,CACF,EACA,KAAM,CAACxN,EAAM6P,IAAe,CAC1B,IAAIpC,EAAS3I,EAAG,WAAW9E,EAAM,CAAE,OAAQ,CAAC6P,CAAW,CAAC,EACpDvE,EAAOmC,EAAO,KAClB,GAAI,CAACnC,EACH,MAAM,IAAIxG,EAAG,WAAW,EAAE,EAE5B,GAAI,CAACwG,EAAK,SAAS,QACjB,MAAM,IAAIxG,EAAG,WAAW,EAAE,EAE5B,OAAOwG,EAAK,SAAS,QAAQA,CAAI,CACnC,EACA,MAAQtL,GACC8E,EAAG,KAAK9E,EAAM,EAAI,EAE3B,MAAO,CAACA,EAAMqL,EAAMwE,IAAe,CACjC,IAAIvE,EACJ,GAAI,OAAOtL,GAAQ,SAAU,CAC3B,IAAIyN,EAAS3I,EAAG,WAAW9E,EAAM,CAAE,OAAQ,CAAC6P,CAAW,CAAC,EACxDvE,EAAOmC,EAAO,IAChB,MACEnC,EAAOtL,EAET,GAAI,CAACsL,EAAK,SAAS,QACjB,MAAM,IAAIxG,EAAG,WAAW,EAAE,EAE5BwG,EAAK,SAAS,QAAQA,EAAM,CAC1B,KAAOD,EAAO,KAASC,EAAK,KAAO,MACnC,UAAW,KAAK,IAAI,CACtB,CAAC,CACH,EACA,OAAQ,CAACtL,EAAMqL,IAAS,CACtBvG,EAAG,MAAM9E,EAAMqL,EAAM,EAAI,CAC3B,EACA,OAAQ,CAAC+C,EAAI/C,IAAS,CACpB,IAAIlB,EAASrF,EAAG,UAAUsJ,CAAE,EAC5B,GAAI,CAACjE,EACH,MAAM,IAAIrF,EAAG,WAAW,CAAC,EAE3BA,EAAG,MAAMqF,EAAO,KAAMkB,CAAI,CAC5B,EACA,MAAO,CAACrL,EAAM8P,EAAKC,EAAKF,IAAe,CACrC,IAAIvE,EACJ,GAAI,OAAOtL,GAAQ,SAAU,CAC3B,IAAIyN,EAAS3I,EAAG,WAAW9E,EAAM,CAAE,OAAQ,CAAC6P,CAAW,CAAC,EACxDvE,EAAOmC,EAAO,IAChB,MACEnC,EAAOtL,EAET,GAAI,CAACsL,EAAK,SAAS,QACjB,MAAM,IAAIxG,EAAG,WAAW,EAAE,EAE5BwG,EAAK,SAAS,QAAQA,EAAM,CAC1B,UAAW,KAAK,IAAI,CACtB,CAAC,CACH,EACA,OAAQ,CAACtL,EAAM8P,EAAKC,IAAQ,CAC1BjL,EAAG,MAAM9E,EAAM8P,EAAKC,EAAK,EAAI,CAC/B,EACA,OAAQ,CAAC3B,EAAI0B,EAAKC,IAAQ,CACxB,IAAI5F,EAASrF,EAAG,UAAUsJ,CAAE,EAC5B,GAAI,CAACjE,EACH,MAAM,IAAIrF,EAAG,WAAW,CAAC,EAE3BA,EAAG,MAAMqF,EAAO,KAAM2F,EAAKC,CAAG,CAChC,EACA,SAAU,CAAC/P,EAAMmD,IAAQ,CACvB,GAAIA,EAAM,EACR,MAAM,IAAI2B,EAAG,WAAW,EAAE,EAE5B,IAAIwG,EACJ,GAAI,OAAOtL,GAAQ,SAAU,CAC3B,IAAIyN,EAAS3I,EAAG,WAAW9E,EAAM,CAAE,OAAQ,EAAK,CAAC,EACjDsL,EAAOmC,EAAO,IAChB,MACEnC,EAAOtL,EAET,GAAI,CAACsL,EAAK,SAAS,QACjB,MAAM,IAAIxG,EAAG,WAAW,EAAE,EAE5B,GAAIA,EAAG,MAAMwG,EAAK,IAAI,EACpB,MAAM,IAAIxG,EAAG,WAAW,EAAE,EAE5B,GAAI,CAACA,EAAG,OAAOwG,EAAK,IAAI,EACtB,MAAM,IAAIxG,EAAG,WAAW,EAAE,EAE5B,IAAI8I,EAAU9I,EAAG,gBAAgBwG,EAAM,GAAG,EAC1C,GAAIsC,EACF,MAAM,IAAI9I,EAAG,WAAW8I,CAAO,EAEjCtC,EAAK,SAAS,QAAQA,EAAM,CAC1B,KAAMnI,EACN,UAAW,KAAK,IAAI,CACtB,CAAC,CACH,EACA,UAAW,CAACiL,EAAIjL,IAAQ,CACtB,IAAIgH,EAASrF,EAAG,UAAUsJ,CAAE,EAC5B,GAAI,CAACjE,EACH,MAAM,IAAIrF,EAAG,WAAW,CAAC,EAE3B,GAAK,EAAAqF,EAAO,MAAQ,SAClB,MAAM,IAAIrF,EAAG,WAAW,EAAE,EAE5BA,EAAG,SAASqF,EAAO,KAAMhH,CAAG,CAC9B,EACA,MAAO,CAACnD,EAAMgQ,EAAOC,IAAU,CAC7B,IAAIxC,EAAS3I,EAAG,WAAW9E,EAAM,CAAE,OAAQ,EAAK,CAAC,EAC7CsL,EAAOmC,EAAO,KAClBnC,EAAK,SAAS,QAAQA,EAAM,CAC1B,UAAW,KAAK,IAAI0E,EAAOC,CAAK,CAClC,CAAC,CACH,EACA,KAAM,CAACjQ,EAAM0M,EAAOrB,IAAS,CAC3B,GAAIrL,IAAS,GACX,MAAM,IAAI8E,EAAG,WAAW,EAAE,EAE5B4H,EAAQ,OAAOA,GAAS,SAAW5H,EAAG,kBAAkB4H,CAAK,EAAIA,EACjErB,EAAO,OAAOA,EAAQ,IAAc,IAAMA,EACtCqB,EAAQ,GACVrB,EAAQA,EAAO,KAAQ,MAEvBA,EAAO,EAET,IAAIC,EACJ,GAAI,OAAOtL,GAAQ,SACjBsL,EAAOtL,MACF,CACLA,EAAO6H,GAAK,UAAU7H,CAAI,EAC1B,GAAI,CACF,IAAIyN,EAAS3I,EAAG,WAAW9E,EAAM,CAC/B,OAAQ,EAAE0M,EAAQ,OACpB,CAAC,EACDpB,EAAOmC,EAAO,IAChB,MAAY,CAAC,CACf,CAEA,IAAIyC,EAAU,GACd,GAAIxD,EAAQ,GACV,GAAIpB,GACF,GAAIoB,EAAQ,IACV,MAAM,IAAI5H,EAAG,WAAW,EAAE,OAG5BwG,EAAOxG,EAAG,MAAM9E,EAAMqL,EAAM,CAAC,EAC7B6E,EAAU,GAGd,GAAI,CAAC5E,EACH,MAAM,IAAIxG,EAAG,WAAW,EAAE,EAO5B,GAJIA,EAAG,SAASwG,EAAK,IAAI,IACvBoB,GAAS,MAGPA,EAAQ,OAAS,CAAC5H,EAAG,MAAMwG,EAAK,IAAI,EACtC,MAAM,IAAIxG,EAAG,WAAW,EAAE,EAG5B,GAAI,CAACoL,EAAS,CACZ,IAAItC,EAAU9I,EAAG,QAAQwG,EAAMoB,CAAK,EACpC,GAAIkB,EACF,MAAM,IAAI9I,EAAG,WAAW8I,CAAO,CAEnC,CAEIlB,EAAQ,KAAO,CAACwD,GAClBpL,EAAG,SAASwG,EAAM,CAAC,EAGrBoB,GAAS,QAET,IAAIvC,EAASrF,EAAG,aAAa,CAC3B,KAAMwG,EACN,KAAMxG,EAAG,QAAQwG,CAAI,EACrB,MAAOoB,EACP,SAAU,GACV,SAAU,EACV,WAAYpB,EAAK,WAEjB,SAAU,CAAC,EACX,MAAO,EACT,CAAC,EAED,OAAInB,EAAO,WAAW,MACpBA,EAAO,WAAW,KAAKA,CAAM,EAE3B9L,EAAO,cAAmB,EAAEqO,EAAQ,KACjC5H,EAAG,YAAWA,EAAG,UAAY,CAAC,GAC7B9E,KAAQ8E,EAAG,YACfA,EAAG,UAAU9E,CAAI,EAAI,IAGlBmK,CACT,EACA,MAAQA,GAAW,CACjB,GAAIrF,EAAG,SAASqF,CAAM,EACpB,MAAM,IAAIrF,EAAG,WAAW,CAAC,EAEvBqF,EAAO,WAAUA,EAAO,SAAW,MACvC,GAAI,CACEA,EAAO,WAAW,OACpBA,EAAO,WAAW,MAAMA,CAAM,CAElC,OAASrE,EAAG,CACV,MAAMA,CACR,QAAE,CACAhB,EAAG,YAAYqF,EAAO,EAAE,CAC1B,CACAA,EAAO,GAAK,IACd,EACA,SAAWA,GACFA,EAAO,KAAO,KAEvB,OAAQ,CAACA,EAAQG,EAAQkC,IAAW,CAClC,GAAI1H,EAAG,SAASqF,CAAM,EACpB,MAAM,IAAIrF,EAAG,WAAW,CAAC,EAE3B,GAAI,CAACqF,EAAO,UAAY,CAACA,EAAO,WAAW,OACzC,MAAM,IAAIrF,EAAG,WAAW,EAAE,EAE5B,GAAI0H,GAAU,GAAKA,GAAU,GAAKA,GAAU,EAC1C,MAAM,IAAI1H,EAAG,WAAW,EAAE,EAE5B,OAAAqF,EAAO,SAAWA,EAAO,WAAW,OAAOA,EAAQG,EAAQkC,CAAM,EACjErC,EAAO,SAAW,CAAC,EACZA,EAAO,QAChB,EACA,KAAM,CAACA,EAAQE,EAAQC,EAAQb,EAAQ4C,IAAa,CAClD,GAAI5C,EAAS,GAAK4C,EAAW,EAC3B,MAAM,IAAIvH,EAAG,WAAW,EAAE,EAE5B,GAAIA,EAAG,SAASqF,CAAM,EACpB,MAAM,IAAIrF,EAAG,WAAW,CAAC,EAE3B,IAAKqF,EAAO,MAAQ,WAAa,EAC/B,MAAM,IAAIrF,EAAG,WAAW,CAAC,EAE3B,GAAIA,EAAG,MAAMqF,EAAO,KAAK,IAAI,EAC3B,MAAM,IAAIrF,EAAG,WAAW,EAAE,EAE5B,GAAI,CAACqF,EAAO,WAAW,KACrB,MAAM,IAAIrF,EAAG,WAAW,EAAE,EAE5B,IAAIqL,EAAU,OAAO9D,EAAY,IACjC,GAAI,CAAC8D,EACH9D,EAAWlC,EAAO,iBACT,CAACA,EAAO,SACjB,MAAM,IAAIrF,EAAG,WAAW,EAAE,EAE5B,IAAI0F,EAAYL,EAAO,WAAW,KAChCA,EACAE,EACAC,EACAb,EACA4C,CACF,EACA,OAAK8D,IAAShG,EAAO,UAAYK,GAC1BA,CACT,EACA,MAAO,CAACL,EAAQE,EAAQC,EAAQb,EAAQ4C,EAAUE,IAAW,CAC3D,GAAI9C,EAAS,GAAK4C,EAAW,EAC3B,MAAM,IAAIvH,EAAG,WAAW,EAAE,EAE5B,GAAIA,EAAG,SAASqF,CAAM,EACpB,MAAM,IAAIrF,EAAG,WAAW,CAAC,EAE3B,GAAK,EAAAqF,EAAO,MAAQ,SAClB,MAAM,IAAIrF,EAAG,WAAW,CAAC,EAE3B,GAAIA,EAAG,MAAMqF,EAAO,KAAK,IAAI,EAC3B,MAAM,IAAIrF,EAAG,WAAW,EAAE,EAE5B,GAAI,CAACqF,EAAO,WAAW,MACrB,MAAM,IAAIrF,EAAG,WAAW,EAAE,EAExBqF,EAAO,UAAYA,EAAO,MAAQ,MACpCrF,EAAG,OAAOqF,EAAQ,EAAG,CAAC,EAExB,IAAIgG,EAAU,OAAO9D,EAAY,IACjC,GAAI,CAAC8D,EACH9D,EAAWlC,EAAO,iBACT,CAACA,EAAO,SACjB,MAAM,IAAIrF,EAAG,WAAW,EAAE,EAE5B,IAAIsL,EAAejG,EAAO,WAAW,MACnCA,EACAE,EACAC,EACAb,EACA4C,EACAE,CACF,EACA,OAAK4D,IAAShG,EAAO,UAAYiG,GAC1BA,CACT,EACA,SAAU,CAACjG,EAAQG,EAAQb,IAAW,CACpC,GAAI3E,EAAG,SAASqF,CAAM,EACpB,MAAM,IAAIrF,EAAG,WAAW,CAAC,EAE3B,GAAIwF,EAAS,GAAKb,GAAU,EAC1B,MAAM,IAAI3E,EAAG,WAAW,EAAE,EAE5B,GAAK,EAAAqF,EAAO,MAAQ,SAClB,MAAM,IAAIrF,EAAG,WAAW,CAAC,EAE3B,GAAI,CAACA,EAAG,OAAOqF,EAAO,KAAK,IAAI,GAAK,CAACrF,EAAG,MAAMqF,EAAO,KAAK,IAAI,EAC5D,MAAM,IAAIrF,EAAG,WAAW,EAAE,EAE5B,GAAI,CAACqF,EAAO,WAAW,SACrB,MAAM,IAAIrF,EAAG,WAAW,GAAG,EAE7BqF,EAAO,WAAW,SAASA,EAAQG,EAAQb,CAAM,CACnD,EACA,KAAM,CAACU,EAAQV,EAAQ4C,EAAUI,EAAMC,IAAU,CAC/C,GACGD,EAAO,GACP,EAAAC,EAAQ,KACRvC,EAAO,MAAQ,WAAa,EAE7B,MAAM,IAAIrF,EAAG,WAAW,CAAC,EAE3B,IAAKqF,EAAO,MAAQ,WAAa,EAC/B,MAAM,IAAIrF,EAAG,WAAW,CAAC,EAE3B,GAAI,CAACqF,EAAO,WAAW,KACrB,MAAM,IAAIrF,EAAG,WAAW,EAAE,EAE5B,OAAOqF,EAAO,WAAW,KAAKA,EAAQV,EAAQ4C,EAAUI,EAAMC,CAAK,CACrE,EACA,MAAO,CAACvC,EAAQE,EAAQC,EAAQb,EAAQmD,IACjCzC,EAAO,WAAW,MAGhBA,EAAO,WAAW,MACvBA,EACAE,EACAC,EACAb,EACAmD,CACF,EARS,EAUX,OAASzC,GAAW,EACpB,MAAO,CAACA,EAAQkG,EAAKnR,IAAQ,CAC3B,GAAI,CAACiL,EAAO,WAAW,MACrB,MAAM,IAAIrF,EAAG,WAAW,EAAE,EAE5B,OAAOqF,EAAO,WAAW,MAAMA,EAAQkG,EAAKnR,CAAG,CACjD,EACA,SAAU,CAACc,EAAMkN,EAAO,CAAC,IAAM,CAG7B,GAFAA,EAAK,MAAQA,EAAK,OAAS,EAC3BA,EAAK,SAAWA,EAAK,UAAY,SAC7BA,EAAK,WAAa,QAAUA,EAAK,WAAa,SAChD,MAAM,IAAI,MAAM,0BAA4BA,EAAK,SAAW,GAAG,EAEjE,IAAIoD,EACAnG,EAASrF,EAAG,KAAK9E,EAAMkN,EAAK,KAAK,EACjCqD,EAAOzL,EAAG,KAAK9E,CAAI,EACnByJ,EAAS8G,EAAK,KACdC,EAAM,IAAI,WAAW/G,CAAM,EAC/B,OAAA3E,EAAG,KAAKqF,EAAQqG,EAAK,EAAG/G,EAAQ,CAAC,EAC7ByD,EAAK,WAAa,OACpBoD,EAAM3O,GAAkB6O,EAAK,CAAC,EACrBtD,EAAK,WAAa,WAC3BoD,EAAME,GAER1L,EAAG,MAAMqF,CAAM,EACRmG,CACT,EACA,UAAW,CAACtQ,EAAMyQ,EAAMvD,EAAO,CAAC,IAAM,CACpCA,EAAK,MAAQA,EAAK,OAAS,IAC3B,IAAI/C,EAASrF,EAAG,KAAK9E,EAAMkN,EAAK,MAAOA,EAAK,IAAI,EAChD,GAAI,OAAOuD,GAAQ,SAAU,CAC3B,IAAID,EAAM,IAAI,WAAWtN,GAAgBuN,CAAI,EAAI,CAAC,EAC9CC,EAAiBjO,GAAkBgO,EAAMD,EAAK,EAAGA,EAAI,MAAM,EAC/D1L,EAAG,MAAMqF,EAAQqG,EAAK,EAAGE,EAAgB,OAAWxD,EAAK,MAAM,CACjE,SAAW,YAAY,OAAOuD,CAAI,EAChC3L,EAAG,MAAMqF,EAAQsG,EAAM,EAAGA,EAAK,WAAY,OAAWvD,EAAK,MAAM,MAEjE,OAAM,IAAI,MAAM,uBAAuB,EAEzCpI,EAAG,MAAMqF,CAAM,CACjB,EACA,IAAK,IAAMrF,EAAG,YACd,MAAQ9E,GAAS,CACf,IAAIyN,EAAS3I,EAAG,WAAW9E,EAAM,CAAE,OAAQ,EAAK,CAAC,EACjD,GAAIyN,EAAO,OAAS,KAClB,MAAM,IAAI3I,EAAG,WAAW,EAAE,EAE5B,GAAI,CAACA,EAAG,MAAM2I,EAAO,KAAK,IAAI,EAC5B,MAAM,IAAI3I,EAAG,WAAW,EAAE,EAE5B,IAAI8I,EAAU9I,EAAG,gBAAgB2I,EAAO,KAAM,GAAG,EACjD,GAAIG,EACF,MAAM,IAAI9I,EAAG,WAAW8I,CAAO,EAEjC9I,EAAG,YAAc2I,EAAO,IAC1B,EACA,yBAA0B,IAAM,CAC9B3I,EAAG,MAAM,MAAM,EACfA,EAAG,MAAM,OAAO,EAChBA,EAAG,MAAM,gBAAgB,CAC3B,EACA,qBAAsB,IAAM,CAC1BA,EAAG,MAAM,MAAM,EAEfA,EAAG,eAAeA,EAAG,QAAQ,EAAG,CAAC,EAAG,CAClC,KAAM,IAAM,EACZ,MAAO,CAACqF,EAAQE,EAAQC,EAAQb,EAAQc,IAAQd,CAClD,CAAC,EACD3E,EAAG,MAAM,YAAaA,EAAG,QAAQ,EAAG,CAAC,CAAC,EAEtCC,GAAI,SAASD,EAAG,QAAQ,EAAG,CAAC,EAAGC,GAAI,eAAe,EAClDA,GAAI,SAASD,EAAG,QAAQ,EAAG,CAAC,EAAGC,GAAI,gBAAgB,EACnDD,EAAG,MAAM,WAAYA,EAAG,QAAQ,EAAG,CAAC,CAAC,EACrCA,EAAG,MAAM,YAAaA,EAAG,QAAQ,EAAG,CAAC,CAAC,EAEtC,IAAI6L,EAAgB/H,GAAgB,EACpC9D,EAAG,aAAa,OAAQ,SAAU6L,CAAa,EAC/C7L,EAAG,aAAa,OAAQ,UAAW6L,CAAa,EAEhD7L,EAAG,MAAM,UAAU,EACnBA,EAAG,MAAM,cAAc,CACzB,EACA,yBAA0B,IAAM,CAC9BA,EAAG,MAAM,OAAO,EAChB,IAAI8L,EAAY9L,EAAG,MAAM,YAAY,EACrCA,EAAG,MAAM,eAAe,EACxBA,EAAG,MACD,CACE,MAAO,IAAM,CACX,IAAIwG,EAAOxG,EAAG,WAAW8L,EAAW,KAAM,MAAa,EAAE,EACzD,OAAAtF,EAAK,SAAW,CACd,OAAQ,CAACH,EAAQC,IAAS,CACxB,IAAIgD,EAAK,CAAChD,EACNjB,EAASrF,EAAG,UAAUsJ,CAAE,EAC5B,GAAI,CAACjE,EAAQ,MAAM,IAAIrF,EAAG,WAAW,CAAC,EACtC,IAAIwL,EAAM,CACR,OAAQ,KACR,MAAO,CAAE,WAAY,MAAO,EAC5B,SAAU,CAAE,SAAU,IAAMnG,EAAO,IAAK,CAC1C,EACA,OAAAmG,EAAI,OAASA,EACNA,CACT,CACF,EACOhF,CACT,CACF,EACA,CAAC,EACD,eACF,CACF,EACA,sBAAuB,IAAM,CACvBjN,EAAO,MACTyG,EAAG,aAAa,OAAQ,QAASzG,EAAO,KAAQ,EAEhDyG,EAAG,QAAQ,WAAY,YAAY,EAEjCzG,EAAO,OACTyG,EAAG,aAAa,OAAQ,SAAU,KAAMzG,EAAO,MAAS,EAExDyG,EAAG,QAAQ,WAAY,aAAa,EAElCzG,EAAO,OACTyG,EAAG,aAAa,OAAQ,SAAU,KAAMzG,EAAO,MAAS,EAExDyG,EAAG,QAAQ,YAAa,aAAa,EAGvC,IAAI+L,EAAQ/L,EAAG,KAAK,aAAc,CAAC,EAC/BgM,EAAShM,EAAG,KAAK,cAAe,CAAC,EACjCiM,EAASjM,EAAG,KAAK,cAAe,CAAC,CACvC,EACA,iBAAkB,IAAM,CAClBA,EAAG,aACPA,EAAG,WAAa,SAAoBkM,EAAO1F,EAAM,CAC/C,KAAK,KAAOA,EACZ,KAAK,SAAW,SAAU0F,EAAO,CAC/B,KAAK,MAAQA,CACf,EACA,KAAK,SAASA,CAAK,EACnB,KAAK,QAAU,UACjB,EACAlM,EAAG,WAAW,UAAY,IAAI,MAC9BA,EAAG,WAAW,UAAU,YAAcA,EAAG,WAEzC,CAAC,EAAE,EAAE,QAASmM,GAAS,CACrBnM,EAAG,cAAcmM,CAAI,EAAI,IAAInM,EAAG,WAAWmM,CAAI,EAC/CnM,EAAG,cAAcmM,CAAI,EAAE,MAAQ,2BACjC,CAAC,EACH,EACA,WAAY,IAAM,CAChBnM,EAAG,iBAAiB,EAEpBA,EAAG,UAAY,IAAI,MAAM,IAAI,EAE7BA,EAAG,MAAMmG,GAAO,CAAC,EAAG,GAAG,EAEvBnG,EAAG,yBAAyB,EAC5BA,EAAG,qBAAqB,EACxBA,EAAG,yBAAyB,EAE5BA,EAAG,YAAc,CACf,MAAOmG,EACT,CACF,EACA,KAAM,CAACiG,EAAOC,EAAQC,IAAU,CAC9BtM,EAAG,KAAK,YAAc,GAEtBA,EAAG,iBAAiB,EAEpBzG,EAAO,MAAW6S,GAAS7S,EAAO,MAClCA,EAAO,OAAY8S,GAAU9S,EAAO,OACpCA,EAAO,OAAY+S,GAAS/S,EAAO,OAEnCyG,EAAG,sBAAsB,CAC3B,EACA,KAAM,IAAM,CACVA,EAAG,KAAK,YAAc,GAEtB,QAAShC,EAAI,EAAGA,EAAIgC,EAAG,QAAQ,OAAQhC,IAAK,CAC1C,IAAIqH,EAASrF,EAAG,QAAQhC,CAAC,EACpBqH,GAGLrF,EAAG,MAAMqF,CAAM,CACjB,CACF,EACA,QAAS,CAACkH,EAASC,IAAa,CAC9B,IAAIjG,EAAO,EACX,OAAIgG,IAAShG,GAAQ,KACjBiG,IAAUjG,GAAQ,KACfA,CACT,EACA,WAAY,CAACrL,EAAMuR,IAAwB,CACzC,IAAIjB,EAAMxL,EAAG,YAAY9E,EAAMuR,CAAmB,EAClD,OAAKjB,EAAI,OAGFA,EAAI,OAFF,IAGX,EACA,YAAa,CAACtQ,EAAMuR,IAAwB,CAC1C,GAAI,CACF,IAAI9D,EAAS3I,EAAG,WAAW9E,EAAM,CAAE,OAAQ,CAACuR,CAAoB,CAAC,EACjEvR,EAAOyN,EAAO,IAChB,MAAY,CAAC,CACb,IAAI6C,EAAM,CACR,OAAQ,GACR,OAAQ,GACR,MAAO,EACP,KAAM,KACN,KAAM,KACN,OAAQ,KACR,aAAc,GACd,WAAY,KACZ,aAAc,IAChB,EACA,GAAI,CACF,IAAI7C,EAAS3I,EAAG,WAAW9E,EAAM,CAAE,OAAQ,EAAK,CAAC,EACjDsQ,EAAI,aAAe,GACnBA,EAAI,WAAa7C,EAAO,KACxB6C,EAAI,aAAe7C,EAAO,KAC1B6C,EAAI,KAAOzI,GAAK,SAAS7H,CAAI,EAC7ByN,EAAS3I,EAAG,WAAW9E,EAAM,CAAE,OAAQ,CAACuR,CAAoB,CAAC,EAC7DjB,EAAI,OAAS,GACbA,EAAI,KAAO7C,EAAO,KAClB6C,EAAI,OAAS7C,EAAO,KACpB6C,EAAI,KAAO7C,EAAO,KAAK,KACvB6C,EAAI,OAAS7C,EAAO,OAAS,GAC/B,OAAS3H,EAAG,CACVwK,EAAI,MAAQxK,EAAE,KAChB,CACA,OAAOwK,CACT,EACA,WAAY,CAACnF,EAAQnL,EAAMqR,EAASC,IAAa,CAC/CnG,EAAS,OAAOA,GAAU,SAAWA,EAASrG,EAAG,QAAQqG,CAAM,EAE/D,QADIpD,EAAQ/H,EAAK,MAAM,GAAG,EAAE,QAAQ,EAC7B+H,EAAM,QAAQ,CACnB,IAAIyJ,EAAOzJ,EAAM,IAAI,EACrB,GAAKyJ,EACL,KAAIpE,EAAUvF,GAAK,MAAMsD,EAAQqG,CAAI,EACrC,GAAI,CACF1M,EAAG,MAAMsI,CAAO,CAClB,MAAY,CAAC,CACbjC,EAASiC,EACX,CACA,OAAOA,CACT,EACA,WAAY,CAACjC,EAAQC,EAAMqG,EAAYJ,EAASC,IAAa,CAC3D,IAAItR,EAAO6H,GAAK,MACd,OAAOsD,GAAU,SAAWA,EAASrG,EAAG,QAAQqG,CAAM,EACtDC,CACF,EACIC,EAAOvG,EAAG,QAAQuM,EAASC,CAAQ,EACvC,OAAOxM,EAAG,OAAO9E,EAAMqL,CAAI,CAC7B,EACA,eAAgB,CAACF,EAAQC,EAAMqF,EAAMY,EAASC,EAAU/E,IAAW,CACjE,IAAIvM,EAAOoL,EACPD,IACFA,EAAS,OAAOA,GAAU,SAAWA,EAASrG,EAAG,QAAQqG,CAAM,EAC/DnL,EAAOoL,EAAOvD,GAAK,MAAMsD,EAAQC,CAAI,EAAID,GAE3C,IAAIE,EAAOvG,EAAG,QAAQuM,EAASC,CAAQ,EACnChG,EAAOxG,EAAG,OAAO9E,EAAMqL,CAAI,EAC/B,GAAIoF,EAAM,CACR,GAAI,OAAOA,GAAQ,SAAU,CAE3B,QADIrH,EAAM,IAAI,MAAMqH,EAAK,MAAM,EACtB3N,EAAI,EAAGK,EAAMsN,EAAK,OAAQ3N,EAAIK,EAAK,EAAEL,EAC5CsG,EAAItG,CAAC,EAAI2N,EAAK,WAAW3N,CAAC,EAC5B2N,EAAOrH,CACT,CAEAtE,EAAG,MAAMwG,EAAMD,EAAO,GAAG,EACzB,IAAIlB,EAASrF,EAAG,KAAKwG,EAAM,GAAG,EAC9BxG,EAAG,MAAMqF,EAAQsG,EAAM,EAAGA,EAAK,OAAQ,EAAGlE,CAAM,EAChDzH,EAAG,MAAMqF,CAAM,EACfrF,EAAG,MAAMwG,EAAMD,CAAI,CACrB,CACA,OAAOC,CACT,EACA,aAAc,CAACH,EAAQC,EAAM8F,EAAOC,IAAW,CAC7C,IAAInR,EAAO6H,GAAK,MACd,OAAOsD,GAAU,SAAWA,EAASrG,EAAG,QAAQqG,CAAM,EACtDC,CACF,EACIC,EAAOvG,EAAG,QAAQ,CAAC,CAACoM,EAAO,CAAC,CAACC,CAAM,EAClCrM,EAAG,aAAa,QAAOA,EAAG,aAAa,MAAQ,IACpD,IAAImF,EAAMnF,EAAG,QAAQA,EAAG,aAAa,QAAS,CAAC,EAE/C,OAAAA,EAAG,eAAemF,EAAK,CACrB,KAAOE,GAAW,CAChBA,EAAO,SAAW,EACpB,EACA,MAAQA,GAAW,CACbgH,GAAUA,EAAO,QAAUA,EAAO,OAAO,QAC3CA,EAAO,EAAE,CAEb,EACA,KAAM,CAAChH,EAAQE,EAAQC,EAAQb,EAAQc,IAAQ,CAE7C,QADIC,EAAY,EACP1H,EAAI,EAAGA,EAAI2G,EAAQ3G,IAAK,CAC/B,IAAIiE,EACJ,GAAI,CACFA,EAASmK,EAAM,CACjB,MAAY,CACV,MAAM,IAAIpM,EAAG,WAAW,EAAE,CAC5B,CACA,GAAIiC,IAAW,QAAayD,IAAc,EACxC,MAAM,IAAI1F,EAAG,WAAW,CAAC,EAE3B,GAAIiC,GAAW,KAA8B,MAC7CyD,IACAH,EAAOC,EAASxH,CAAC,EAAIiE,CACvB,CACA,OAAIyD,IACFL,EAAO,KAAK,UAAY,KAAK,IAAI,GAE5BK,CACT,EACA,MAAO,CAACL,EAAQE,EAAQC,EAAQb,EAAQc,IAAQ,CAC9C,QAASzH,EAAI,EAAGA,EAAI2G,EAAQ3G,IAC1B,GAAI,CACFqO,EAAO9G,EAAOC,EAASxH,CAAC,CAAC,CAC3B,MAAY,CACV,MAAM,IAAIgC,EAAG,WAAW,EAAE,CAC5B,CAEF,OAAI2E,IACFU,EAAO,KAAK,UAAY,KAAK,IAAI,GAE5BrH,CACT,CACF,CAAC,EACMgC,EAAG,MAAM9E,EAAMqL,EAAMpB,CAAG,CACjC,EACA,cAAgByH,GAAQ,CACtB,GAAIA,EAAI,UAAYA,EAAI,UAAYA,EAAI,MAAQA,EAAI,SAClD,MAAO,GACT,GAAI,OAAO,eAAkB,IAC3B,MAAM,IAAI,MACR,kMACF,EACK,GAAIzR,GACT,GAAI,CACFyR,EAAI,SAAW9H,GAAmB3J,GAAMyR,EAAI,GAAG,EAAG,EAAI,EACtDA,EAAI,UAAYA,EAAI,SAAS,MAC/B,MAAY,CACV,MAAM,IAAI5M,EAAG,WAAW,EAAE,CAC5B,KAEA,OAAM,IAAI,MAAM,+CAA+C,CAEnE,EACA,eAAgB,CAACqG,EAAQC,EAAM/K,EAAKgR,EAASC,IAAa,CACxD,SAASK,GAAiB,CACxB,KAAK,YAAc,GACnB,KAAK,OAAS,CAAC,CACjB,CAmGA,GAlGAA,EAAe,UAAU,IAAM,SAA4B9P,EAAK,CAC9D,GAAI,EAAAA,EAAM,KAAK,OAAS,GAAKA,EAAM,GAGnC,KAAI+P,EAAc/P,EAAM,KAAK,UACzBgQ,EAAYhQ,EAAM,KAAK,UAAa,EACxC,OAAO,KAAK,OAAOgQ,CAAQ,EAAED,CAAW,EAC1C,EACAD,EAAe,UAAU,cACvB,SAAsCG,EAAQ,CAC5C,KAAK,OAASA,CAChB,EACFH,EAAe,UAAU,YACvB,UAAsC,CACpC,IAAIrR,EAAM,IAAI,eAGd,GAFAA,EAAI,KAAK,OAAQD,EAAK,EAAK,EAC3BC,EAAI,KAAK,IAAI,EAEX,EAAGA,EAAI,QAAU,KAAOA,EAAI,OAAS,KAAQA,EAAI,SAAW,KAE5D,MAAM,IAAI,MACR,iBAAmBD,EAAM,aAAeC,EAAI,MAC9C,EACF,IAAIyR,EAAa,OAAOzR,EAAI,kBAAkB,gBAAgB,CAAC,EAC3D0R,EACAC,GACDD,EAAS1R,EAAI,kBAAkB,eAAe,IAC/C0R,IAAW,QACTE,GACDF,EAAS1R,EAAI,kBAAkB,kBAAkB,IAClD0R,IAAW,OAETG,EAAY,KAAO,KAElBF,IAAgBE,EAAYJ,GAEjC,IAAIK,EAAQ,CAACnJ,EAAMC,IAAO,CACxB,GAAID,EAAOC,EACT,MAAM,IAAI,MACR,kBACED,EACA,KACAC,EACA,0BACJ,EACF,GAAIA,EAAK6I,EAAa,EACpB,MAAM,IAAI,MACR,QAAUA,EAAa,qCACzB,EAEF,IAAIzR,EAAM,IAAI,eAWd,GAVAA,EAAI,KAAK,MAAOD,EAAK,EAAK,EACtB0R,IAAeI,GACjB7R,EAAI,iBAAiB,QAAS,SAAW2I,EAAO,IAAMC,CAAE,EAE1D5I,EAAI,aAAe,cACfA,EAAI,kBACNA,EAAI,iBAAiB,oCAAoC,EAG3DA,EAAI,KAAK,IAAI,EAEX,EAAGA,EAAI,QAAU,KAAOA,EAAI,OAAS,KAAQA,EAAI,SAAW,KAE5D,MAAM,IAAI,MACR,iBAAmBD,EAAM,aAAeC,EAAI,MAC9C,EACF,OAAIA,EAAI,WAAa,OACZ,IAAI,WAAWA,EAAI,UAAY,CAAC,CAAC,EAEnCsJ,GAAmBtJ,EAAI,cAAgB,GAAI,EAAI,CACxD,EACI+R,EAAY,KAChBA,EAAU,cAAeR,GAAa,CACpC,IAAIxI,EAAQwI,EAAWM,EACnB7I,GAAOuI,EAAW,GAAKM,EAAY,EAKvC,GAJA7I,EAAM,KAAK,IAAIA,EAAKyI,EAAa,CAAC,EAC9B,OAAOM,EAAU,OAAOR,CAAQ,EAAK,MACvCQ,EAAU,OAAOR,CAAQ,EAAIO,EAAM/I,EAAOC,CAAG,GAE3C,OAAO+I,EAAU,OAAOR,CAAQ,EAAK,IACvC,MAAM,IAAI,MAAM,eAAe,EACjC,OAAOQ,EAAU,OAAOR,CAAQ,CAClC,CAAC,GAEGK,GAAY,CAACH,KACfI,EAAYJ,EAAa,EACzBA,EAAa,KAAK,OAAO,CAAC,EAAE,OAC5BI,EAAYJ,EACZrR,GACE,6EACF,GAGF,KAAK,QAAUqR,EACf,KAAK,WAAaI,EAClB,KAAK,YAAc,EACrB,EACE,OAAO,eAAkB,IAAa,CACxC,GAAI,CAACvS,GACH,KAAM,sHACR,IAAIyS,EAAY,IAAIV,EACpB,OAAO,iBAAiBU,EAAW,CACjC,OAAQ,CACN,IAAK,UAAY,CACf,OAAK,KAAK,aACR,KAAK,YAAY,EAEZ,KAAK,OACd,CACF,EACA,UAAW,CACT,IAAK,UAAY,CACf,OAAK,KAAK,aACR,KAAK,YAAY,EAEZ,KAAK,UACd,CACF,CACF,CAAC,EAED,IAAIZ,EAAa,CAAE,SAAU,GAAO,SAAUY,CAAU,CAC1D,KACE,KAAIZ,EAAa,CAAE,SAAU,GAAO,IAAKpR,CAAI,EAG/C,IAAIiL,EAAOxG,EAAG,WAAWqG,EAAQC,EAAMqG,EAAYJ,EAASC,CAAQ,EAEhEG,EAAW,SACbnG,EAAK,SAAWmG,EAAW,SAClBA,EAAW,MACpBnG,EAAK,SAAW,KAChBA,EAAK,IAAMmG,EAAW,KAGxB,OAAO,iBAAiBnG,EAAM,CAC5B,UAAW,CACT,IAAK,UAAY,CACf,OAAO,KAAK,SAAS,MACvB,CACF,CACF,CAAC,EAED,IAAIgH,EAAa,CAAC,EACdC,EAAO,OAAO,KAAKjH,EAAK,UAAU,EACtCiH,EAAK,QAASrG,GAAQ,CACpB,IAAIsG,EAAKlH,EAAK,WAAWY,CAAG,EAC5BoG,EAAWpG,CAAG,EAAI,UAA6B,CAC7C,OAAApH,EAAG,cAAcwG,CAAI,EACdkH,EAAG,MAAM,KAAM,SAAS,CACjC,CACF,CAAC,EACD,SAASC,EAAYtI,EAAQE,EAAQC,EAAQb,EAAQ4C,EAAU,CAC7D,IAAIC,EAAWnC,EAAO,KAAK,SAC3B,GAAIkC,GAAYC,EAAS,OAAQ,MAAO,GACxC,IAAI1B,EAAO,KAAK,IAAI0B,EAAS,OAASD,EAAU5C,CAAM,EACtD,GAAI6C,EAAS,MACX,QAASxJ,EAAI,EAAGA,EAAI8H,EAAM9H,IACxBuH,EAAOC,EAASxH,CAAC,EAAIwJ,EAASD,EAAWvJ,CAAC,MAG5C,SAASA,EAAI,EAAGA,EAAI8H,EAAM9H,IACxBuH,EAAOC,EAASxH,CAAC,EAAIwJ,EAAS,IAAID,EAAWvJ,CAAC,EAGlD,OAAO8H,CACT,CAEA,OAAA0H,EAAW,KAAO,CAACnI,EAAQE,EAAQC,EAAQb,EAAQ4C,KACjDvH,EAAG,cAAcwG,CAAI,EACdmH,EAAYtI,EAAQE,EAAQC,EAAQb,EAAQ4C,CAAQ,GAG7DiG,EAAW,KAAO,CAACnI,EAAQV,EAAQ4C,EAAUI,EAAMC,IAAU,CAC3D5H,EAAG,cAAcwG,CAAI,EACrB,IAAI/I,EAAMwI,GAAUtB,CAAM,EAC1B,GAAI,CAAClH,EACH,MAAM,IAAIuC,EAAG,WAAW,EAAE,EAE5B,OAAA2N,EAAYtI,EAAQ7G,GAAOf,EAAKkH,EAAQ4C,CAAQ,EACzC,CAAE,IAAK9J,EAAK,UAAW,EAAK,CACrC,EACA+I,EAAK,WAAagH,EACXhH,CACT,EACA,oBAAqB,CACnBH,EACAC,EACA/K,EACAgR,EACAC,EACA/Q,EACAC,EACAkS,EACAnG,EACAoG,IACG,CACH,IAAIC,EAAWxH,EACXtC,GAAQ,QAAQjB,GAAK,MAAMsD,EAAQC,CAAI,CAAC,EACxCD,EACA4B,EAA6B,MAAQ6F,EACzC,SAASC,EAAYC,EAAW,CAC9B,SAASC,EAAOD,EAAW,CACrBH,GAAWA,EAAU,EACpBD,GACH5N,EAAG,eACDqG,EACAC,EACA0H,EACAzB,EACAC,EACA/E,CACF,EAEEhM,GAAQA,EAAO,EACnBoF,GAAoBoH,CAAG,CACzB,CAEE,QAAQ,uBAAuB+F,EAAWF,EAAUG,EAAQ,IAAM,CAC5DvS,GAASA,EAAQ,EACrBmF,GAAoBoH,CAAG,CACzB,CAAC,GAIHgG,EAAOD,CAAS,CAClB,CACApN,GAAiBqH,CAAG,EAChB,OAAO1M,GAAO,SAChBwM,GAAUxM,EAAMyS,GAAcD,EAAYC,CAAS,EAAGtS,CAAO,EAE7DqS,EAAYxS,CAAG,CAEnB,EACA,UAAW,IAEP,OAAO,WACP,OAAO,cACP,OAAO,iBACP,OAAO,YAGX,QAAS,IACA,SAAW,OAAO,SAAS,SAEpC,WAAY,GACZ,cAAe,YACf,cAAe,CAACoI,EAAOlI,EAAQC,IAAY,CACzCD,EAASA,IAAW,IAAM,CAAC,GAC3BC,EAAUA,IAAY,IAAM,CAAC,GAC7B,IAAIwS,EAAYlO,EAAG,UAAU,EAC7B,GAAI,CACF,IAAImO,EAAcD,EAAU,KAAKlO,EAAG,QAAQ,EAAGA,EAAG,UAAU,CAC9D,OAASgB,EAAG,CACV,OAAOtF,EAAQsF,CAAC,CAClB,CACAmN,EAAY,gBAAkB,IAAM,CAClCvS,GAAI,aAAa,EACjB,IAAIwS,EAAKD,EAAY,OACrBC,EAAG,kBAAkBpO,EAAG,aAAa,CACvC,EACAmO,EAAY,UAAY,IAAM,CAC5B,IAAIC,EAAKD,EAAY,OACjBE,EAAcD,EAAG,YAAY,CAACpO,EAAG,aAAa,EAAG,WAAW,EAC5DsO,EAAQD,EAAY,YAAYrO,EAAG,aAAa,EAChDuO,EAAK,EACPC,EAAO,EACPC,EAAQ9K,EAAM,OAChB,SAASsK,GAAS,CACZO,GAAQ,EAAG/S,EAAO,EACjBC,EAAQ,CACf,CACAiI,EAAM,QAASzI,GAAS,CACtB,IAAIwT,EAAaJ,EAAM,IACrBtO,EAAG,YAAY9E,CAAI,EAAE,OAAO,SAC5BA,CACF,EACAwT,EAAW,UAAY,IAAM,CAC3BH,IACIA,EAAKC,GAAQC,GAAOR,EAAO,CACjC,EACAS,EAAW,QAAU,IAAM,CACzBF,IACID,EAAKC,GAAQC,GAAOR,EAAO,CACjC,CACF,CAAC,EACDI,EAAY,QAAU3S,CACxB,EACAyS,EAAY,QAAUzS,CACxB,EACA,gBAAiB,CAACiI,EAAOlI,EAAQC,IAAY,CAC3CD,EAASA,IAAW,IAAM,CAAC,GAC3BC,EAAUA,IAAY,IAAM,CAAC,GAC7B,IAAIwS,EAAYlO,EAAG,UAAU,EAC7B,GAAI,CACF,IAAImO,EAAcD,EAAU,KAAKlO,EAAG,QAAQ,EAAGA,EAAG,UAAU,CAC9D,OAASgB,EAAG,CACV,OAAOtF,EAAQsF,CAAC,CAClB,CACAmN,EAAY,gBAAkBzS,EAC9ByS,EAAY,UAAY,IAAM,CAC5B,IAAIC,EAAKD,EAAY,OACrB,GAAI,CACF,IAAIE,EAAcD,EAAG,YAAY,CAACpO,EAAG,aAAa,EAAG,UAAU,CACjE,OAASgB,EAAG,CACVtF,EAAQsF,CAAC,EACT,MACF,CACA,IAAIsN,EAAQD,EAAY,YAAYrO,EAAG,aAAa,EAChDuO,EAAK,EACPC,EAAO,EACPC,EAAQ9K,EAAM,OAChB,SAASsK,GAAS,CACZO,GAAQ,EAAG/S,EAAO,EACjBC,EAAQ,CACf,CACAiI,EAAM,QAASzI,GAAS,CACtB,IAAIyT,EAAaL,EAAM,IAAIpT,CAAI,EAC/ByT,EAAW,UAAY,IAAM,CACvB3O,EAAG,YAAY9E,CAAI,EAAE,QACvB8E,EAAG,OAAO9E,CAAI,EAEhB8E,EAAG,eACD+C,GAAK,QAAQ7H,CAAI,EACjB6H,GAAK,SAAS7H,CAAI,EAClByT,EAAW,OACX,GACA,GACA,EACF,EACAJ,IACIA,EAAKC,GAAQC,GAAOR,EAAO,CACjC,EACAU,EAAW,QAAU,IAAM,CACzBH,IACID,EAAKC,GAAQC,GAAOR,EAAO,CACjC,CACF,CAAC,EACDI,EAAY,QAAU3S,CACxB,EACAyS,EAAY,QAAUzS,CACxB,CACF,EACIkT,GAAW,CACb,iBAAkB,EAClB,YAAa,SAAUC,EAAO3T,EAAM4T,EAAY,CAC9C,GAAI/L,GAAK,MAAM7H,CAAI,EACjB,OAAOA,EAGT,IAAIuI,EACJ,GAAIoL,IAAU,KACZpL,EAAMzD,EAAG,IAAI,MACR,CACL,IAAI+O,EAAYH,GAAS,gBAAgBC,CAAK,EAC9CpL,EAAMsL,EAAU,IAClB,CACA,GAAI7T,EAAK,QAAU,EAAG,CACpB,GAAI,CAAC4T,EACH,MAAM,IAAI9O,EAAG,WAAW,EAAE,EAE5B,OAAOyD,CACT,CACA,OAAOV,GAAK,MAAMU,EAAKvI,CAAI,CAC7B,EACA,OAAQ,SAAU8T,EAAM9T,EAAMwQ,EAAK,CACjC,GAAI,CACF,IAAID,EAAOuD,EAAK9T,CAAI,CACtB,OAAS8F,EAAG,CACV,GACEA,GACAA,EAAE,MACF+B,GAAK,UAAU7H,CAAI,IAAM6H,GAAK,UAAU/C,EAAG,QAAQgB,EAAE,IAAI,CAAC,EAE1D,MAAO,IAET,MAAMA,CACR,CACArC,GAAO+M,GAAO,CAAC,EAAID,EAAK,IACxB9M,GAAQ+M,EAAM,GAAM,CAAC,EAAID,EAAK,IAC9B9M,GAAQ+M,EAAM,IAAO,CAAC,EAAID,EAAK,KAC/B7M,GAAS8M,EAAM,IAAO,CAAC,EAAID,EAAK,MAChC9M,GAAQ+M,EAAM,IAAO,CAAC,EAAID,EAAK,IAC/B9M,GAAQ+M,EAAM,IAAO,CAAC,EAAID,EAAK,IAC/B9M,GAAQ+M,EAAM,IAAO,CAAC,EAAID,EAAK,KAC9BjJ,GAAU,CACTiJ,EAAK,OAAS,GACZlJ,GAAakJ,EAAK,KACpB,CAAC,KAAK,IAAIlJ,EAAU,GAAK,EACrBA,GAAa,GACV,KAAK,IACJ,CAAC,KAAK,MAAMA,GAAa,UAAY,EACrC,UACF,EACE,KACF,EACA,CAAC,CAAC,CAAC,KAAK,MACLA,GAAa,EAAE,CAAC,CAACA,KAAe,IAAM,UACzC,IAAM,EACR,EACN,EACG5D,GAAQ+M,EAAM,IAAO,CAAC,EAAIlJ,GAAQ,CAAC,EACnC7D,GAAQ+M,EAAM,IAAO,CAAC,EAAIlJ,GAAQ,CAAC,EACtC7D,GAAQ+M,EAAM,IAAO,CAAC,EAAI,KAC1B/M,GAAQ+M,EAAM,IAAO,CAAC,EAAID,EAAK,OAC/B,IAAIP,EAAQO,EAAK,MAAM,QAAQ,EAC3BN,EAAQM,EAAK,MAAM,QAAQ,EAC3BwD,EAAQxD,EAAK,MAAM,QAAQ,EAC/B,OAACjJ,GAAU,CACT,KAAK,MAAM0I,EAAQ,GAAI,IAAM,GAC3B3I,GAAa,KAAK,MAAM2I,EAAQ,GAAI,EACtC,CAAC,KAAK,IAAI3I,EAAU,GAAK,EACrBA,GAAa,GACV,KAAK,IACJ,CAAC,KAAK,MAAMA,GAAa,UAAY,EACrC,UACF,EACE,KACF,EACA,CAAC,CAAC,CAAC,KAAK,MACLA,GAAa,EAAE,CAAC,CAACA,KAAe,IAAM,UACzC,IAAM,EACR,EACN,EACG5D,GAAQ+M,EAAM,IAAO,CAAC,EAAIlJ,GAAQ,CAAC,EACnC7D,GAAQ+M,EAAM,IAAO,CAAC,EAAIlJ,GAAQ,CAAC,EACtC5D,GAAS8M,EAAM,IAAO,CAAC,EAAKR,EAAQ,IAAQ,IAC3C1I,GAAU,CACT,KAAK,MAAM2I,EAAQ,GAAI,IAAM,GAC3B5I,GAAa,KAAK,MAAM4I,EAAQ,GAAI,EACtC,CAAC,KAAK,IAAI5I,EAAU,GAAK,EACrBA,GAAa,GACV,KAAK,IACJ,CAAC,KAAK,MAAMA,GAAa,UAAY,EACrC,UACF,EACE,KACF,EACA,CAAC,CAAC,CAAC,KAAK,MACLA,GAAa,EAAE,CAAC,CAACA,KAAe,IAAM,UACzC,IAAM,EACR,EACN,EACG5D,GAAQ+M,EAAM,IAAO,CAAC,EAAIlJ,GAAQ,CAAC,EACnC7D,GAAQ+M,EAAM,IAAO,CAAC,EAAIlJ,GAAQ,CAAC,EACtC5D,GAAS8M,EAAM,IAAO,CAAC,EAAKP,EAAQ,IAAQ,IAC3C3I,GAAU,CACT,KAAK,MAAMyM,EAAQ,GAAI,IAAM,GAC3B1M,GAAa,KAAK,MAAM0M,EAAQ,GAAI,EACtC,CAAC,KAAK,IAAI1M,EAAU,GAAK,EACrBA,GAAa,GACV,KAAK,IACJ,CAAC,KAAK,MAAMA,GAAa,UAAY,EACrC,UACF,EACE,KACF,EACA,CAAC,CAAC,CAAC,KAAK,MACLA,GAAa,EAAE,CAAC,CAACA,KAAe,IAAM,UACzC,IAAM,EACR,EACN,EACG5D,GAAQ+M,EAAM,IAAO,CAAC,EAAIlJ,GAAQ,CAAC,EACnC7D,GAAQ+M,EAAM,IAAO,CAAC,EAAIlJ,GAAQ,CAAC,EACtC5D,GAAS8M,EAAM,IAAO,CAAC,EAAKuD,EAAQ,IAAQ,IAC3CzM,GAAU,CACTiJ,EAAK,MAAQ,GACXlJ,GAAakJ,EAAK,IACpB,CAAC,KAAK,IAAIlJ,EAAU,GAAK,EACrBA,GAAa,GACV,KAAK,IACJ,CAAC,KAAK,MAAMA,GAAa,UAAY,EACrC,UACF,EACE,KACF,EACA,CAAC,CAAC,CAAC,KAAK,MACLA,GAAa,EAAE,CAAC,CAACA,KAAe,IAAM,UACzC,IAAM,EACR,EACN,EACG5D,GAAQ+M,EAAM,KAAQ,CAAC,EAAIlJ,GAAQ,CAAC,EACpC7D,GAAQ+M,EAAM,KAAQ,CAAC,EAAIlJ,GAAQ,CAAC,EAChC,CACT,EACA,QAAS,SAAU0M,EAAM7J,EAAQhH,EAAKuJ,EAAOpC,EAAQ,CACnD,GAAI,CAACxF,EAAG,OAAOqF,EAAO,KAAK,IAAI,EAC7B,MAAM,IAAIrF,EAAG,WAAW,EAAE,EAE5B,GAAI4H,EAAQ,EACV,MAAO,GAET,IAAIrC,EAAS7H,GAAO,MAAMwR,EAAMA,EAAO7Q,CAAG,EAC1C2B,EAAG,MAAMqF,EAAQE,EAAQC,EAAQnH,EAAKuJ,CAAK,CAC7C,EACA,QAAS,OACT,IAAK,UAAY,CACfgH,GAAS,SAAW,EACpB,IAAIpD,EAAM7M,GAAQiQ,GAAS,QAAU,GAAM,CAAC,EAC5C,OAAOpD,CACT,EACA,OAAQ,SAAU/N,EAAK,CACrB,IAAI+N,EAAMhO,GAAaC,CAAG,EAC1B,OAAO+N,CACT,EACA,gBAAiB,SAAUlC,EAAI,CAC7B,IAAIjE,EAASrF,EAAG,UAAUsJ,CAAE,EAC5B,GAAI,CAACjE,EAAQ,MAAM,IAAIrF,EAAG,WAAW,CAAC,EACtC,OAAOqF,CACT,CACF,EACA,SAAS8J,GAAiBjU,EAAMqL,EAAM,CACpC,GAAI,CACF,OAAArL,EAAO0T,GAAS,OAAO1T,CAAI,EAC3B8E,EAAG,MAAM9E,EAAMqL,CAAI,EACZ,CACT,OAASvF,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,MAAO,CAACA,EAAE,KACZ,CACF,CAEA,SAASoO,GAAqBP,EAAO3T,EAAMmU,EAAOzH,EAAO,CACvD,GAAI,CAGF,GAFA1M,EAAO0T,GAAS,OAAO1T,CAAI,EAC3BA,EAAO0T,GAAS,YAAYC,EAAO3T,CAAI,EACnCmU,EAAQ,GACV,MAAO,IAET,IAAI1G,EAAS3I,EAAG,WAAW9E,EAAM,CAAE,OAAQ,EAAK,CAAC,EAC7CsL,EAAOmC,EAAO,KAClB,GAAI,CAACnC,EACH,MAAO,IAET,IAAI0C,EAAQ,GAIZ,OAHImG,EAAQ,IAAGnG,GAAS,KACpBmG,EAAQ,IAAGnG,GAAS,KACpBmG,EAAQ,IAAGnG,GAAS,KACpBA,GAASlJ,EAAG,gBAAgBwG,EAAM0C,CAAK,EAClC,GAEF,CACT,OAASlI,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,MAAO,CAACA,EAAE,KACZ,CACF,CAEA,SAASsO,GAAkBhG,EAAI/C,EAAM,CACnC,GAAI,CACF,OAAAvG,EAAG,OAAOsJ,EAAI/C,CAAI,EACX,CACT,OAASvF,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,MAAO,CAACA,EAAE,KACZ,CACF,CAEA,SAASuO,GAAoBjG,EAAIkG,EAAOC,EAAO,CAC7C,GAAI,CACF,OAAAzP,EAAG,OAAOsJ,EAAIkG,EAAOC,CAAK,EACnB,CACT,OAASzO,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,MAAO,CAACA,EAAE,KACZ,CACF,CAEA,SAAS0O,GAAS5M,EAAO,CACvB,OAAAnE,GAAOgR,GAAkB,GAAK,CAAC,EAAI7M,EAC5BA,CACT,CAEA,SAAS8M,GAAmBtG,EAAIiC,EAAKsE,EAAS,CAC5CjB,GAAS,QAAUiB,EACnB,GAAI,CACF,IAAIxK,EAASuJ,GAAS,gBAAgBtF,CAAE,EACxC,OAAQiC,EAAK,CACX,IAAK,GAAG,CACN,IAAInR,EAAMwU,GAAS,IAAI,EACvB,GAAIxU,EAAM,EACR,MAAO,IAET,IAAI0V,EACJ,OAAAA,EAAY9P,EAAG,aAAaqF,EAAQjL,CAAG,EAChC0V,EAAU,EACnB,CACA,IAAK,GACL,IAAK,GACH,MAAO,GACT,IAAK,GACH,OAAOzK,EAAO,MAChB,IAAK,GAAG,CACN,IAAIjL,EAAMwU,GAAS,IAAI,EACvB,OAAAvJ,EAAO,OAASjL,EACT,CACT,CACA,IAAK,GAAG,CACN,IAAIA,EAAMwU,GAAS,IAAI,EACnBpJ,EAAS,EAEb,OAAA/G,GAAQrE,EAAMoL,GAAW,CAAC,EAAI,EACvB,CACT,CACA,IAAK,GACL,IAAK,GACH,MAAO,GACT,IAAK,IACL,IAAK,GACH,MAAO,IACT,IAAK,GACH,OAAAkK,GAAS,EAAE,EACJ,GACT,QACE,MAAO,GAEX,CACF,OAAS1O,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,MAAO,CAACA,EAAE,KACZ,CACF,CAEA,SAAS+O,GAAmBzG,EAAIoC,EAAK,CACnC,GAAI,CACF,IAAIrG,EAASuJ,GAAS,gBAAgBtF,CAAE,EACxC,OAAOsF,GAAS,OAAO5O,EAAG,KAAMqF,EAAO,KAAMqG,CAAG,CAClD,OAAS1K,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,MAAO,CAACA,EAAE,KACZ,CACF,CAEA,IAAIgP,GAAY,iBAEZC,GAAY,kBAChB,SAASC,GAAmBC,EAAK,CAC/B,OAAOA,EAAMF,IAAaE,EAAMH,GAAY,IAAM,OAAOG,CAAG,CAC9D,CAEA,SAASC,GAAuB9G,EAAI3E,EAAQ,CAC1C,GAAI,CAEF,OADAA,EAASuL,GAAmBvL,CAAM,EAC9B,MAAMA,CAAM,EAAU,KAC1B3E,EAAG,UAAUsJ,EAAI3E,CAAM,EAChB,EACT,OAAS3D,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,MAAO,CAACA,EAAE,KACZ,CACF,CAEA,SAASqP,GAAkB3E,EAAK5F,EAAM,CACpC,GAAI,CACF,GAAIA,IAAS,EAAG,MAAO,IACvB,IAAIwK,EAAMtQ,EAAG,IAAI,EACbuQ,EAAmBnS,GAAgBkS,CAAG,EAAI,EAC9C,OAAIxK,EAAOyK,EAAyB,KACpCrS,GAAaoS,EAAK5E,EAAK5F,CAAI,EACpByK,EACT,OAASvP,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,MAAO,CAACA,EAAE,KACZ,CACF,CAEA,SAASwP,GAAiBlH,EAAImH,EAAIZ,EAAS,CACzCjB,GAAS,QAAUiB,EACnB,GAAI,CACF,IAAIxK,EAASuJ,GAAS,gBAAgBtF,CAAE,EACxC,OAAQmH,EAAI,CACV,IAAK,OACL,IAAK,OACH,OAAKpL,EAAO,IACL,EADiB,IAG1B,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACH,OAAKA,EAAO,IACL,EADiB,IAG1B,IAAK,OAAO,CACV,GAAI,CAACA,EAAO,IAAK,MAAO,IACxB,IAAIqL,EAAO9B,GAAS,IAAI,EACxB,OAAAjQ,GAAO+R,GAAQ,CAAC,EAAI,EACb,CACT,CACA,IAAK,OACH,OAAKrL,EAAO,IACL,IADiB,IAG1B,IAAK,OAAO,CACV,IAAIqL,EAAO9B,GAAS,IAAI,EACxB,OAAO5O,EAAG,MAAMqF,EAAQoL,EAAIC,CAAI,CAClC,CACA,IAAK,OACH,OAAKrL,EAAO,IACL,EADiB,IAG1B,IAAK,OACH,OAAKA,EAAO,IACL,EADiB,IAG1B,QACE,MAAO,GACX,CACF,OAASrE,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,MAAO,CAACA,EAAE,KACZ,CACF,CAEA,SAAS2P,GAAmBzV,EAAMwQ,EAAK,CACrC,GAAI,CACF,OAAAxQ,EAAO0T,GAAS,OAAO1T,CAAI,EACpB0T,GAAS,OAAO5O,EAAG,MAAO9E,EAAMwQ,CAAG,CAC5C,OAAS1K,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,MAAO,CAACA,EAAE,KACZ,CACF,CAEA,SAAS4P,GAAmB/B,EAAO3T,EAAMqL,EAAM,CAC7C,GAAI,CACF,OAAArL,EAAO0T,GAAS,OAAO1T,CAAI,EAC3BA,EAAO0T,GAAS,YAAYC,EAAO3T,CAAI,EAEvCA,EAAO6H,GAAK,UAAU7H,CAAI,EACtBA,EAAKA,EAAK,OAAS,CAAC,IAAM,MAC5BA,EAAOA,EAAK,OAAO,EAAGA,EAAK,OAAS,CAAC,GACvC8E,EAAG,MAAM9E,EAAMqL,EAAM,CAAC,EACf,CACT,OAASvF,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,MAAO,CAACA,EAAE,KACZ,CACF,CAEA,SAAS6P,GAAsBhC,EAAO3T,EAAMwQ,EAAK9D,EAAO,CACtD,GAAI,CACF1M,EAAO0T,GAAS,OAAO1T,CAAI,EAC3B,IAAI4V,EAAWlJ,EAAQ,IACnBkH,EAAalH,EAAQ,KACzB,OAAAA,EAAQA,EAAQ,MAChB1M,EAAO0T,GAAS,YAAYC,EAAO3T,EAAM4T,CAAU,EAC5CF,GAAS,OAAOkC,EAAW9Q,EAAG,MAAQA,EAAG,KAAM9E,EAAMwQ,CAAG,CACjE,OAAS1K,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,MAAO,CAACA,EAAE,KACZ,CACF,CAEA,SAAS+P,GAAkBlC,EAAO3T,EAAM0M,EAAOiI,EAAS,CACtDjB,GAAS,QAAUiB,EACnB,GAAI,CACF3U,EAAO0T,GAAS,OAAO1T,CAAI,EAC3BA,EAAO0T,GAAS,YAAYC,EAAO3T,CAAI,EACvC,IAAIqL,EAAOsJ,EAAUjB,GAAS,IAAI,EAAI,EACtC,OAAO5O,EAAG,KAAK9E,EAAM0M,EAAOrB,CAAI,EAAE,EACpC,OAASvF,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,MAAO,CAACA,EAAE,KACZ,CACF,CAEA,SAASgQ,GAAsBnC,EAAO3T,EAAMwQ,EAAKuF,EAAS,CACxD,GAAI,CAGF,GAFA/V,EAAO0T,GAAS,OAAO1T,CAAI,EAC3BA,EAAO0T,GAAS,YAAYC,EAAO3T,CAAI,EACnC+V,GAAW,EAAG,MAAO,IACzB,IAAIzF,EAAMxL,EAAG,SAAS9E,CAAI,EAEtBmD,EAAM,KAAK,IAAI4S,EAAS7S,GAAgBoN,CAAG,CAAC,EAC5C0F,EAAU1S,GAAMkN,EAAMrN,CAAG,EAC7B,OAAAH,GAAasN,EAAKE,EAAKuF,EAAU,CAAC,EAElCzS,GAAMkN,EAAMrN,CAAG,EAAI6S,EACZ7S,CACT,OAAS2C,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,MAAO,CAACA,EAAE,KACZ,CACF,CAEA,SAASmQ,GAAiBjW,EAAM,CAC9B,GAAI,CACF,OAAAA,EAAO0T,GAAS,OAAO1T,CAAI,EAC3B8E,EAAG,MAAM9E,CAAI,EACN,CACT,OAAS8F,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,MAAO,CAACA,EAAE,KACZ,CACF,CAEA,SAASoQ,GAAkBlW,EAAMwQ,EAAK,CACpC,GAAI,CACF,OAAAxQ,EAAO0T,GAAS,OAAO1T,CAAI,EACpB0T,GAAS,OAAO5O,EAAG,KAAM9E,EAAMwQ,CAAG,CAC3C,OAAS1K,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,MAAO,CAACA,EAAE,KACZ,CACF,CAEA,SAASqQ,GAAoBxC,EAAO3T,EAAM0M,EAAO,CAC/C,GAAI,CACF,OAAA1M,EAAO0T,GAAS,OAAO1T,CAAI,EAC3BA,EAAO0T,GAAS,YAAYC,EAAO3T,CAAI,EACnC0M,IAAU,EACZ5H,EAAG,OAAO9E,CAAI,EACL0M,IAAU,IACnB5H,EAAG,MAAM9E,CAAI,EAEboB,GAAM,kCAAkC,EAEnC,CACT,OAAS0E,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,MAAO,CAACA,EAAE,KACZ,CACF,CAEA,SAASsQ,GAAe7T,EAAK,CAC3B,OAAOmB,GAAQnB,GAAO,CAAC,EAAIkB,GAAQlB,EAAM,GAAM,CAAC,EAAI,UACtD,CAEA,SAAS8T,GAAqB1C,EAAO3T,EAAMsW,EAAO5J,EAAO,CACvD,GAAI,CAGF,GAFA1M,EAAO0T,GAAS,OAAO1T,CAAI,EAC3BA,EAAO0T,GAAS,YAAYC,EAAO3T,EAAM,EAAI,EACxCsW,EAGE,CACL,IAAIC,EAAUH,GAAeE,CAAK,EAC9BE,EAAc/S,GAAQ6S,EAAQ,GAAM,CAAC,EACzCtG,EAAQuG,EAAU,IAAOC,EAAe,IACxCF,GAAS,GACTC,EAAUH,GAAeE,CAAK,EAC9BE,EAAc/S,GAAQ6S,EAAQ,GAAM,CAAC,EACrCrG,EAAQsG,EAAU,IAAOC,EAAe,GAC1C,KAVE,KAAIxG,EAAQ,KAAK,IAAI,EACjBC,EAAQD,EAUd,OAAAlL,EAAG,MAAM9E,EAAMgQ,EAAOC,CAAK,EACpB,CACT,OAASnK,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,MAAO,CAACA,EAAE,KACZ,CACF,CAEA,IAAI2Q,GAAiB,GACrB,SAASC,IAAoC,CAC3C,OAAOD,EACT,CAEA,SAASE,GAAaC,EAAM,CAC1B,OAAOA,EAAO,IAAM,IAAMA,EAAO,MAAQ,GAAKA,EAAO,MAAQ,EAC/D,CAEA,IAAIC,GAA+B,CACjC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GACpD,EAEIC,GAAkC,CACpC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GACpD,EACA,SAASC,GAAiBC,EAAM,CAC9B,IAAIC,EAAaN,GAAaK,EAAK,YAAY,CAAC,EAC5CE,EAAsBD,EACtBJ,GACAC,GACAK,EAAOD,EAAoBF,EAAK,SAAS,CAAC,EAAIA,EAAK,QAAQ,EAAI,EAEnE,OAAOG,CACT,CACA,SAASC,GAAeC,EAAMC,EAAO,CACnC,IAAIN,EAAO,IAAI,KAAKZ,GAAeiB,CAAI,EAAI,GAAI,EAC/C5T,GAAO6T,GAAS,CAAC,EAAIN,EAAK,WAAW,EACrCvT,GAAQ6T,EAAQ,GAAM,CAAC,EAAIN,EAAK,WAAW,EAC3CvT,GAAQ6T,EAAQ,GAAM,CAAC,EAAIN,EAAK,SAAS,EACzCvT,GAAQ6T,EAAQ,IAAO,CAAC,EAAIN,EAAK,QAAQ,EACzCvT,GAAQ6T,EAAQ,IAAO,CAAC,EAAIN,EAAK,SAAS,EAC1CvT,GAAQ6T,EAAQ,IAAO,CAAC,EAAIN,EAAK,YAAY,EAAI,KACjDvT,GAAQ6T,EAAQ,IAAO,CAAC,EAAIN,EAAK,OAAO,EAExC,IAAIG,EAAOJ,GAAiBC,CAAI,EAAI,EACpCvT,GAAQ6T,EAAQ,IAAO,CAAC,EAAIH,EAC5B1T,GAAQ6T,EAAQ,IAAO,CAAC,EAAI,EAAEN,EAAK,kBAAkB,EAAI,IAEzD,IAAI3N,EAAQ,IAAI,KAAK2N,EAAK,YAAY,EAAG,EAAG,CAAC,EACzCO,EAAe,IAAI,KAAKP,EAAK,YAAY,EAAG,EAAG,CAAC,EAAE,kBAAkB,EACpEQ,EAAenO,EAAM,kBAAkB,EACvCoO,GACDF,GAAgBC,GACfR,EAAK,kBAAkB,GAAK,KAAK,IAAIQ,EAAcD,CAAY,GAAK,EACxE9T,GAAQ6T,EAAQ,IAAO,CAAC,EAAIG,CAC9B,CAEA,SAASC,GAAUvU,EAAKsJ,EAAMC,EAAO0B,EAAIuJ,EAAKhL,EAAWqH,EAAM,CAC7D,GAAI,CACF,IAAI7J,EAASuJ,GAAS,gBAAgBtF,CAAE,EACpCwJ,EAAM9S,EAAG,KAAKqF,EAAQhH,EAAKwU,EAAKlL,EAAMC,CAAK,EAC3CnK,EAAMqV,EAAI,IACd,OAAAnU,GAAOkJ,GAAa,CAAC,EAAIiL,EAAI,UAC7BlU,GAAQsQ,GAAQ,CAAC,EAAIzR,EACd,CACT,OAASuD,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,MAAO,CAACA,EAAE,KACZ,CACF,CAEA,SAAS+R,GAAY7D,EAAM7Q,EAAKsJ,EAAMC,EAAO0B,EAAI9D,EAAQ,CACvD,GAAI,CACF,IAAIH,EAASuJ,GAAS,gBAAgBtF,CAAE,EACpC3B,EAAO,GACTiH,GAAS,QAAQM,EAAM7J,EAAQhH,EAAKuJ,EAAOpC,CAAM,EAEnDxF,EAAG,OAAOqF,CAAM,CAClB,OAASrE,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,MAAO,CAACA,EAAE,KACZ,CACF,CAEA,SAASgS,GAAa7V,EAAK,CACzB,IAAI2I,EAAO1H,GAAgBjB,CAAG,EAAI,EAC9BqO,EAAMyH,GAAQnN,CAAI,EACtB,OAAI0F,GAAK7N,GAAkBR,EAAKqB,GAAOgN,EAAK1F,CAAI,EACzC0F,CACT,CACA,SAAS0H,GAAWC,EAAUC,EAAUC,EAAQ,CAC9C,IAAIC,EAAc,IAAI,KAAK,EAAE,YAAY,EACrCC,EAAS,IAAI,KAAKD,EAAa,EAAG,CAAC,EACnCE,EAAS,IAAI,KAAKF,EAAa,EAAG,CAAC,EACnCZ,EAAea,EAAO,kBAAkB,EACxCd,EAAee,EAAO,kBAAkB,EAExCC,EAAoB,KAAK,IAAIf,EAAcD,CAAY,EAE3D7T,GAAQuU,GAAY,CAAC,EAAIM,EAAoB,GAE7C9U,GAAOyU,GAAY,CAAC,EAAI,EAAOV,GAAgBD,GAE/C,SAASiB,EAAYxB,EAAM,CACzB,IAAIyB,EAAQzB,EAAK,aAAa,EAAE,MAAM,mBAAmB,EACzD,OAAOyB,EAAQA,EAAM,CAAC,EAAI,KAC5B,CACA,IAAIC,EAAaF,EAAYH,CAAM,EAC/BM,EAAaH,EAAYF,CAAM,EAC/BM,EAAgBd,GAAaY,CAAU,EACvCG,EAAgBf,GAAaa,CAAU,EACvCpB,EAAeC,GACjB9T,GAAQyU,GAAU,CAAC,EAAIS,EACvBlV,GAASyU,EAAS,GAAM,CAAC,EAAIU,IAE7BnV,GAAQyU,GAAU,CAAC,EAAIU,EACvBnV,GAASyU,EAAS,GAAM,CAAC,EAAIS,EAEjC,CAEA,SAASE,IAAuB,CAC9B,OAAO,KAAK,IAAI,CAClB,CAEA,IAAIC,GACJA,GAAsB,IAAM,YAAY,IAAI,EAC5C,SAASC,IAAa,CACpB,MAAO,WACT,CAEA,SAASC,GAA0BrO,EAAM,CACvC,IAAI5G,EAAI3C,GAAW,OACnB,GAAI,CACF,OAAAA,GAAW,KAAMuJ,EAAO5G,EAAE,WAAa,QAAW,EAAE,EACpDD,GAAkB,EACX,CACT,MAAY,CAAC,CACf,CACA,SAASmV,GAAwBC,EAAe,CAC9C,IAAIC,EAAU5W,GAAO,OACrB2W,EAAgBA,IAAkB,EAElC,IAAIE,EAAcL,GAAW,EAC7B,GAAIG,EAAgBE,EAClB,MAAO,GAGT,IAAIC,EAAU,CAACC,EAAGC,IAChBD,GAAMC,EAAYD,EAAIC,GAAaA,EAErC,QAASC,EAAU,EAAGA,GAAW,EAAGA,GAAW,EAAG,CAChD,IAAIC,EAAoBN,GAAW,EAAI,GAAMK,GAE7CC,EAAoB,KAAK,IACvBA,EACAP,EAAgB,SAClB,EAEA,IAAIxN,EAAU,KAAK,IACjB0N,EACAC,EAAQ,KAAK,IAAIH,EAAeO,CAAiB,EAAG,KAAK,CAC3D,EAEIC,EAAcV,GAA0BtN,CAAO,EACnD,GAAIgO,EACF,MAAO,EAEX,CACA,MAAO,EACT,CAEA,IAAIC,GAAM,CAAC,EAEX,SAASC,IAAoB,CAC3B,OAAOta,IAAe,gBACxB,CACA,SAASua,IAAgB,CACvB,GAAI,CAACA,GAAc,QAAS,CAC1B,IAAIC,GAEC,OAAO,WAAa,UACnB,UAAU,WACV,UAAU,UAAU,CAAC,GACvB,KACA,QAAQ,IAAK,GAAG,EAAI,SACpBC,EAAM,CACR,KAAM,WACN,QAAS,WACT,KAAM,IACN,IAAK,IACL,KAAM,iBACN,KAAMD,EACN,EAAGF,GAAkB,CACvB,EAEA,QAASN,KAAKK,GACRA,GAAIL,CAAC,IAAM,OAAW,OAAOS,EAAIT,CAAC,EACjCS,EAAIT,CAAC,EAAIK,GAAIL,CAAC,EAErB,IAAIU,EAAU,CAAC,EACf,QAASV,KAAKS,EACZC,EAAQ,KAAKV,EAAI,IAAMS,EAAIT,CAAC,CAAC,EAE/BO,GAAc,QAAUG,CAC1B,CACA,OAAOH,GAAc,OACvB,CAEA,SAASI,GAAmBjY,EAAKoI,EAAQP,EAAa,CACpD,QAAShH,EAAI,EAAGA,EAAIb,EAAI,OAAQ,EAAEa,EAChCQ,GAAM+G,KAAY,CAAC,EAAIpI,EAAI,WAAWa,CAAC,EAGpCgH,IAAaxG,GAAM+G,GAAU,CAAC,EAAI,EACzC,CAEA,SAAS8P,GAAaC,EAAWC,EAAa,CAC5C,IAAIC,EAAU,EACd,OAAAR,GAAc,EAAE,QAAQ,SAAUS,EAAQzX,EAAG,CAC3C,IAAIP,EAAM8X,EAAcC,EACxB5W,GAAS0W,EAAYtX,EAAI,GAAM,CAAC,EAAIP,EACpC2X,GAAmBK,EAAQhY,CAAG,EAC9B+X,GAAWC,EAAO,OAAS,CAC7B,CAAC,EACM,CACT,CAEA,SAASC,GAAmBC,EAAgBC,EAAmB,CAC7D,IAAIT,EAAUH,GAAc,EAC5BpW,GAAQ+W,GAAkB,CAAC,EAAIR,EAAQ,OACvC,IAAIK,EAAU,EACd,OAAAL,EAAQ,QAAQ,SAAUM,EAAQ,CAChCD,GAAWC,EAAO,OAAS,CAC7B,CAAC,EACD7W,GAAQgX,GAAqB,CAAC,EAAIJ,EAC3B,CACT,CAEA,SAASK,GAAUvM,EAAI,CACrB,GAAI,CACF,IAAIjE,EAASuJ,GAAS,gBAAgBtF,CAAE,EACxC,OAAAtJ,EAAG,MAAMqF,CAAM,EACR,CACT,OAASrE,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,OAAOA,EAAE,KACX,CACF,CAEA,SAAS8U,GAAexM,EAAIyM,EAAM,CAChC,GAAI,CACF,IAAI1Q,EAASuJ,GAAS,gBAAgBtF,CAAE,EAEpCrN,EAAOoJ,EAAO,IACd,EACArF,EAAG,MAAMqF,EAAO,IAAI,EAClB,EACArF,EAAG,OAAOqF,EAAO,IAAI,EACnB,EACA,EACR,OAAA7G,GAAMuX,GAAQ,CAAC,EAAI9Z,EAEZ,CACT,OAAS+E,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,OAAOA,EAAE,KACX,CACF,CAEA,SAASgV,GAAQ3Q,EAAQ4Q,EAAKC,EAAQ1Q,EAAQ,CAE5C,QADIgG,EAAM,EACDxN,EAAI,EAAGA,EAAIkY,EAAQlY,IAAK,CAC/B,IAAIP,EAAMmB,GAAQqX,GAAO,CAAC,EACtB5X,EAAMO,GAASqX,EAAM,GAAM,CAAC,EAChCA,GAAO,EACP,IAAIE,EAAOnW,EAAG,KAAKqF,EAAQ7G,GAAOf,EAAKY,EAAKmH,CAAM,EAClD,GAAI2Q,EAAO,EAAG,MAAO,GAErB,GADA3K,GAAO2K,EACHA,EAAO9X,EAAK,MACZ,OAAOmH,EAAW,MACpBA,GAAU2Q,EAEd,CACA,OAAO3K,CACT,CAEA,SAAS4K,GAAS9M,EAAI2M,EAAKC,EAAQG,EAAM,CACvC,GAAI,CACF,IAAIhR,EAASuJ,GAAS,gBAAgBtF,CAAE,EACpC6G,EAAM6F,GAAQ3Q,EAAQ4Q,EAAKC,CAAM,EACrC,OAAAtX,GAAQyX,GAAQ,CAAC,EAAIlG,EACd,CACT,OAASnP,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,OAAOA,EAAE,KACX,CACF,CAEA,SAASsV,GAAShN,EAAI9D,EAAQkC,EAAQ6O,EAAW,CAC/C,GAAI,CAEF,GADA/Q,EAAS0K,GAAmB1K,CAAM,EAC9B,MAAMA,CAAM,EAAG,MAAO,IAC1B,IAAIH,EAASuJ,GAAS,gBAAgBtF,CAAE,EACxC,OAAAtJ,EAAG,OAAOqF,EAAQG,EAAQkC,CAAM,EAC/BlF,GAAU,CACT6C,EAAO,WAAa,GAClB9C,GAAa8C,EAAO,SACtB,CAAC,KAAK,IAAI9C,EAAU,GAAK,EACrBA,GAAa,GACV,KAAK,IACJ,CAAC,KAAK,MAAMA,GAAa,UAAY,EACrC,UACF,EACE,KACF,EACA,CAAC,CAAC,CAAC,KAAK,MACLA,GAAa,EAAE,CAAC,CAACA,KAAe,IAAM,UACzC,IAAM,EACR,EACN,EACG5D,GAAO4X,GAAa,CAAC,EAAI/T,GAAQ,CAAC,EAClC7D,GAAQ4X,EAAY,GAAM,CAAC,EAAI/T,GAAQ,CAAC,EACvC6C,EAAO,UAAYG,IAAW,GAAKkC,IAAW,IAChDrC,EAAO,SAAW,MACb,CACT,OAASrE,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,OAAOA,EAAE,KACX,CACF,CAEA,SAASwV,GAASlN,EAAI,CACpB,GAAI,CACF,IAAIjE,EAASuJ,GAAS,gBAAgBtF,CAAE,EACxC,OAAIjE,EAAO,YAAcA,EAAO,WAAW,MAClCA,EAAO,WAAW,MAAMA,CAAM,EAEhC,CACT,OAASrE,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,OAAOA,EAAE,KACX,CACF,CAEA,SAASyV,GAASpR,EAAQ4Q,EAAKC,EAAQ1Q,EAAQ,CAE7C,QADIgG,EAAM,EACDxN,EAAI,EAAGA,EAAIkY,EAAQlY,IAAK,CAC/B,IAAIP,EAAMmB,GAAQqX,GAAO,CAAC,EACtB5X,EAAMO,GAASqX,EAAM,GAAM,CAAC,EAChCA,GAAO,EACP,IAAIE,EAAOnW,EAAG,MAAMqF,EAAQ7G,GAAOf,EAAKY,EAAKmH,CAAM,EACnD,GAAI2Q,EAAO,EAAG,MAAO,GACrB3K,GAAO2K,EACH,OAAO3Q,EAAW,MACpBA,GAAU2Q,EAEd,CACA,OAAO3K,CACT,CAEA,SAASkL,GAAUpN,EAAI2M,EAAKC,EAAQG,EAAM,CACxC,GAAI,CACF,IAAIhR,EAASuJ,GAAS,gBAAgBtF,CAAE,EACpC6G,EAAMsG,GAASpR,EAAQ4Q,EAAKC,CAAM,EACtC,OAAAtX,GAAQyX,GAAQ,CAAC,EAAIlG,EACd,CACT,OAASnP,EAAG,CACV,GAAI,OAAOhB,EAAM,KAAe,EAAEgB,aAAahB,EAAG,YAAa,MAAMgB,EACrE,OAAOA,EAAE,KACX,CACF,CAEA,IAAI2V,GAAS,SAAUtQ,EAAQC,EAAMC,EAAMyC,EAAM,CAC1C3C,IACHA,EAAS,MAEX,KAAK,OAASA,EACd,KAAK,MAAQA,EAAO,MACpB,KAAK,QAAU,KACf,KAAK,GAAKrG,EAAG,YACb,KAAK,KAAOsG,EACZ,KAAK,KAAOC,EACZ,KAAK,SAAW,CAAC,EACjB,KAAK,WAAa,CAAC,EACnB,KAAK,KAAOyC,CACd,EACI4N,GAAW,IACXC,GAAY,IAChB,OAAO,iBAAiBF,GAAO,UAAW,CACxC,KAAM,CACJ,IAAK,UAAY,CACf,OAAQ,KAAK,KAAOC,MAAcA,EACpC,EACA,IAAK,SAAUjR,EAAK,CAClBA,EAAO,KAAK,MAAQiR,GAAa,KAAK,MAAQ,CAACA,EACjD,CACF,EACA,MAAO,CACL,IAAK,UAAY,CACf,OAAQ,KAAK,KAAOC,MAAeA,EACrC,EACA,IAAK,SAAUlR,EAAK,CAClBA,EAAO,KAAK,MAAQkR,GAAc,KAAK,MAAQ,CAACA,EAClD,CACF,EACA,SAAU,CACR,IAAK,UAAY,CACf,OAAO7W,EAAG,MAAM,KAAK,IAAI,CAC3B,CACF,EACA,SAAU,CACR,IAAK,UAAY,CACf,OAAOA,EAAG,SAAS,KAAK,IAAI,CAC9B,CACF,CACF,CAAC,EACDA,EAAG,OAAS2W,GACZ3W,EAAG,WAAW,EACd,IAAI8W,GAAa,GAEbnV,GAAgB,CAClB,gBAAiBwN,GACjB,oBAAqBC,GACrB,iBAAkBE,GAClB,mBAAoBC,GACpB,kBAAmBK,GACnB,kBAAmBG,GACnB,sBAAuBK,GACvB,iBAAkBC,GAClB,gBAAiBG,GACjB,kBAAmBG,GACnB,kBAAmBC,GACnB,qBAAsBC,GACtB,iBAAkBE,GAClB,qBAAsBC,GACtB,gBAAiBG,GACjB,iBAAkBC,GAClB,mBAAoBC,GACpB,oBAAqBE,GACrB,iCAAkCK,GAClC,cAAeU,GACf,SAAUM,GACV,WAAYG,GACZ,UAAWG,GACX,oBAAqBc,GACrB,mBAAoBC,GACpB,uBAAwBG,GACxB,YAAaiB,GACb,kBAAmBK,GACnB,SAAUG,GACV,cAAeC,GACf,QAASM,GACT,QAASE,GACT,QAASE,GACT,SAAUE,GACV,OAAQna,EACV,EACIwa,GAAMtV,GAAW,EAEjBuV,GAAsBzd,EAAO,mBAAwB,UAAY,CACnE,OAAQyd,GAAqBzd,EAAO,mBAClCA,EAAO,IAAO,mBAAsB,MAAM,KAAM,SAAS,CAC7D,EAEI0d,GAAqB1d,EAAO,kBAAuB,UAAY,CACjE,OAAQ0d,GAAoB1d,EAAO,kBACjCA,EAAO,IAAO,kBAAqB,MAAM,KAAM,SAAS,CAC5D,EAEI2d,GAAmB3d,EAAO,gBAAqB,UAAY,CAC7D,OAAQ2d,GAAkB3d,EAAO,gBAC/BA,EAAO,IAAO,gBAAmB,MAAM,KAAM,SAAS,CAC1D,EAEI4d,GAAsB5d,EAAO,mBAAwB,UAAY,CACnE,OAAQ4d,GAAqB5d,EAAO,mBAClCA,EAAO,IAAO,mBAAsB,MAAM,KAAM,SAAS,CAC7D,EAEI6d,GAAkB7d,EAAO,eAAoB,UAAY,CAC3D,OAAQ6d,GAAiB7d,EAAO,eAC9BA,EAAO,IAAO,eAAkB,MAAM,KAAM,SAAS,CACzD,EAEI8d,GAAqB9d,EAAO,kBAAuB,UAAY,CACjE,OAAQ8d,GAAoB9d,EAAO,kBACjCA,EAAO,IAAO,kBAAqB,MAAM,KAAM,SAAS,CAC5D,EAEI+d,GAAuB/d,EAAO,oBAAyB,UAAY,CACrE,OAAQ+d,GAAsB/d,EAAO,oBACnCA,EAAO,IAAO,oBAAuB,MAAM,KAAM,SAAS,CAC9D,EAEIge,GAAmBhe,EAAO,gBAAqB,UAAY,CAC7D,OAAQge,GAAkBhe,EAAO,gBAC/BA,EAAO,IAAO,gBAAmB,MAAM,KAAM,SAAS,CAC1D,EAEIie,GAAiBje,EAAO,cAAmB,UAAY,CACzD,OAAQie,GAAgBje,EAAO,cAC7BA,EAAO,IAAO,cAAiB,MAAM,KAAM,SAAS,CACxD,EAEIke,GAAyBle,EAAO,sBAA2B,UAAY,CACzE,OAAQke,GAAwBle,EAAO,sBACrCA,EAAO,IAAO,sBAAyB,MAAM,KAAM,SAAS,CAChE,EAEIme,GAA2Bne,EAAO,wBACpC,UAAY,CACV,OAAQme,GAA0Bne,EAAO,wBACvCA,EAAO,IAAO,wBAA2B,MAAM,KAAM,SAAS,CAClE,EAEEoe,GAAqBpe,EAAO,kBAAuB,UAAY,CACjE,OAAQoe,GAAoBpe,EAAO,kBACjCA,EAAO,IAAO,kBAAqB,MAAM,KAAM,SAAS,CAC5D,EAEIqe,GAAoBre,EAAO,iBAAsB,UAAY,CAC/D,OAAQqe,GAAmBre,EAAO,iBAChCA,EAAO,IAAO,iBAAoB,MAAM,KAAM,SAAS,CAC3D,EAEIse,GAAsBte,EAAO,mBAAwB,UAAY,CACnE,OAAQse,GAAqBte,EAAO,mBAClCA,EAAO,IAAO,mBAAsB,MAAM,KAAM,SAAS,CAC7D,EAEIue,GAAuBve,EAAO,oBAAyB,UAAY,CACrE,OAAQue,GAAsBve,EAAO,oBACnCA,EAAO,IAAO,oBAAuB,MAAM,KAAM,SAAS,CAC9D,EAEIwe,GAAuBxe,EAAO,oBAAyB,UAAY,CACrE,OAAQwe,GAAsBxe,EAAO,oBACnCA,EAAO,IAAO,oBAAuB,MAAM,KAAM,SAAS,CAC9D,EAEIye,GAAoBze,EAAO,iBAAsB,UAAY,CAC/D,OAAQye,GAAmBze,EAAO,iBAChCA,EAAO,IAAO,iBAAoB,MAAM,KAAM,SAAS,CAC3D,EAEI0e,GAAqB1e,EAAO,kBAAuB,UAAY,CACjE,OAAQ0e,GAAoB1e,EAAO,kBACjCA,EAAO,IAAO,kBAAqB,MAAM,KAAM,SAAS,CAC5D,EAEI2e,GAA0B3e,EAAO,uBACnC,UAAY,CACV,OAAQ2e,GAAyB3e,EAAO,uBACtCA,EAAO,IAAO,uBAA0B,MAAM,KAAM,SAAS,CACjE,EAEEoW,GAAqBpW,EAAO,kBAAuB,UAAY,CACjE,OAAQoW,GAAoBpW,EAAO,kBACjCA,EAAO,IAAO,kBAAqB,MAAM,KAAM,SAAS,CAC5D,EAEI4e,GAAwB5e,EAAO,qBAA0B,UAAY,CACvE,OAAQ4e,GAAuB5e,EAAO,qBACpCA,EAAO,IAAO,qBAAwB,MAAM,KAAM,SAAS,CAC/D,EAEI6e,GAAsB7e,EAAO,mBAAwB,UAAY,CACnE,OAAQ6e,GAAqB7e,EAAO,mBAClCA,EAAO,IAAO,mBAAsB,MAAM,KAAM,SAAS,CAC7D,EAEI8e,GAAuB9e,EAAO,oBAAyB,UAAY,CACrE,OAAQ8e,GAAsB9e,EAAO,oBACnCA,EAAO,IAAO,oBAAuB,MAAM,KAAM,SAAS,CAC9D,EAEI+e,GAAiB/e,EAAO,cAAmB,UAAY,CACzD,OAAQ+e,GAAgB/e,EAAO,cAC7BA,EAAO,IAAO,cAAiB,MAAM,KAAM,SAAS,CACxD,EAEIgf,GAAyBhf,EAAO,sBAA2B,UAAY,CACzE,OAAQgf,GAAwBhf,EAAO,sBACrCA,EAAO,IAAO,sBAAyB,MAAM,KAAM,SAAS,CAChE,EAEIif,GAAkBjf,EAAO,eAAoB,UAAY,CAC3D,OAAQif,GAAiBjf,EAAO,eAC9BA,EAAO,IAAO,eAAkB,MAAM,KAAM,SAAS,CACzD,EAEIkf,GAAiBlf,EAAO,cAAmB,UAAY,CACzD,OAAQkf,GAAgBlf,EAAO,cAC7BA,EAAO,IAAO,cAAiB,MAAM,KAAM,SAAS,CACxD,EAEImf,GAAuBnf,EAAO,oBAAyB,UAAY,CACrE,OAAQmf,GAAsBnf,EAAO,oBACnCA,EAAO,IAAO,oBAAuB,MAAM,KAAM,SAAS,CAC9D,EAEIof,GAAqBpf,EAAO,kBAAuB,UAAY,CACjE,OAAQof,GAAoBpf,EAAO,kBACjCA,EAAO,IAAO,kBAAqB,MAAM,KAAM,SAAS,CAC5D,EAEIqf,GAAyBrf,EAAO,sBAA2B,UAAY,CACzE,OAAQqf,GAAwBrf,EAAO,sBACrCA,EAAO,IAAO,sBAAyB,MAAM,KAAM,SAAS,CAChE,EAEIsf,GAAwBtf,EAAO,qBAA0B,UAAY,CACvE,OAAQsf,GAAuBtf,EAAO,qBACpCA,EAAO,IAAO,qBAAwB,MAAM,KAAM,SAAS,CAC/D,EAEIuf,GAAwBvf,EAAO,qBAA0B,UAAY,CACvE,OAAQuf,GAAuBvf,EAAO,qBACpCA,EAAO,IAAO,qBAAwB,MAAM,KAAM,SAAS,CAC/D,EAEIwf,GAAwBxf,EAAO,qBAA0B,UAAY,CACvE,OAAQwf,GAAuBxf,EAAO,qBACpCA,EAAO,IAAO,qBAAwB,MAAM,KAAM,SAAS,CAC/D,EAEIyf,GAAmBzf,EAAO,gBAAqB,UAAY,CAC7D,OAAQyf,GAAkBzf,EAAO,gBAC/BA,EAAO,IAAO,gBAAmB,MAAM,KAAM,SAAS,CAC1D,EAEI0f,GAAwB1f,EAAO,qBAA0B,UAAY,CACvE,OAAQ0f,GAAuB1f,EAAO,qBACpCA,EAAO,IAAO,qBAAwB,MAAM,KAAM,SAAS,CAC/D,EAEI2f,GAA2B3f,EAAO,wBACpC,UAAY,CACV,OAAQ2f,GAA0B3f,EAAO,wBACvCA,EAAO,IAAO,wBAA2B,MAAM,KAAM,SAAS,CAClE,EAEE4f,GAAuB5f,EAAO,oBAAyB,UAAY,CACrE,OAAQ4f,GAAsB5f,EAAO,oBACnCA,EAAO,IAAO,oBAAuB,MAAM,KAAM,SAAS,CAC9D,EAEI6f,GAAwB7f,EAAO,qBAA0B,UAAY,CACvE,OAAQ6f,GAAuB7f,EAAO,qBACpCA,EAAO,IAAO,qBAAwB,MAAM,KAAM,SAAS,CAC/D,EAEI8f,GAAyB9f,EAAO,sBAA2B,UAAY,CACzE,OAAQ8f,GAAwB9f,EAAO,sBACrCA,EAAO,IAAO,sBAAyB,MAAM,KAAM,SAAS,CAChE,EAEI+f,GAAsB/f,EAAO,mBAAwB,UAAY,CACnE,OAAQ+f,GAAqB/f,EAAO,mBAClCA,EAAO,IAAO,mBAAsB,MAAM,KAAM,SAAS,CAC7D,EAEIggB,GAAwBhgB,EAAO,qBAA0B,UAAY,CACvE,OAAQggB,GAAuBhgB,EAAO,qBACpCA,EAAO,IAAO,qBAAwB,MAAM,KAAM,SAAS,CAC/D,EAEIigB,GAA0BjgB,EAAO,uBACnC,UAAY,CACV,OAAQigB,GAAyBjgB,EAAO,uBACtCA,EAAO,IAAO,uBAA0B,MAAM,KAAM,SAAS,CACjE,EAEEkgB,GAA0BlgB,EAAO,uBACnC,UAAY,CACV,OAAQkgB,GAAyBlgB,EAAO,uBACtCA,EAAO,IAAO,uBAA0B,MAAM,KAAM,SAAS,CACjE,EAEEmgB,GAAuBngB,EAAO,oBAAyB,UAAY,CACrE,OAAQmgB,GAAsBngB,EAAO,oBACnCA,EAAO,IAAO,oBAAuB,MAAM,KAAM,SAAS,CAC9D,EAEIogB,GAA2BpgB,EAAO,wBACpC,UAAY,CACV,OAAQogB,GAA0BpgB,EAAO,wBACvCA,EAAO,IAAO,wBAA2B,MAAM,KAAM,SAAS,CAClE,EAEEqgB,GAA2BrgB,EAAO,wBACpC,UAAY,CACV,OAAQqgB,GAA0BrgB,EAAO,wBACvCA,EAAO,IAAO,wBAA2B,MAAM,KAAM,SAAS,CAClE,EAEEsgB,GAAsBtgB,EAAO,mBAAwB,UAAY,CACnE,OAAQsgB,GAAqBtgB,EAAO,mBAClCA,EAAO,IAAO,mBAAsB,MAAM,KAAM,SAAS,CAC7D,EAEIugB,GAAuBvgB,EAAO,oBAAyB,UAAY,CACrE,OAAQugB,GAAsBvgB,EAAO,oBACnCA,EAAO,IAAO,oBAAuB,MAAM,KAAM,SAAS,CAC9D,EAEIwgB,GAAwBxgB,EAAO,qBAA0B,UAAY,CACvE,OAAQwgB,GAAuBxgB,EAAO,qBACpCA,EAAO,IAAO,qBAAwB,MAAM,KAAM,SAAS,CAC/D,EAEIygB,GAAgCzgB,EAAO,6BACzC,UAAY,CACV,OAAQygB,GAA+BzgB,EACrC,6BAEAA,EAAO,IAAO,6BAAgC,MAAM,KAAM,SAAS,CACvE,EAEE0gB,GAA+B1gB,EAAO,4BACxC,UAAY,CACV,OAAQ0gB,GAA8B1gB,EACpC,4BAEAA,EAAO,IAAO,4BAA+B,MAAM,KAAM,SAAS,CACtE,EAEE2gB,GAA0B3gB,EAAO,uBACnC,UAAY,CACV,OAAQ2gB,GAAyB3gB,EAAO,uBACtCA,EAAO,IAAO,uBAA0B,MAAM,KAAM,SAAS,CACjE,EAEE4gB,GAAyB5gB,EAAO,sBAA2B,UAAY,CACzE,OAAQ4gB,GAAwB5gB,EAAO,sBACrCA,EAAO,IAAO,sBAAyB,MAAM,KAAM,SAAS,CAChE,EAEI6gB,GAAuB7gB,EAAO,oBAAyB,UAAY,CACrE,OAAQ6gB,GAAsB7gB,EAAO,oBACnCA,EAAO,IAAO,oBAAuB,MAAM,KAAM,SAAS,CAC9D,EAEI8gB,GAAyB9gB,EAAO,sBAA2B,UAAY,CACzE,OAAQ8gB,GAAwB9gB,EAAO,sBACrCA,EAAO,IAAO,sBAAyB,MAAM,KAAM,SAAS,CAChE,EAEI+gB,GAAwB/gB,EAAO,qBAA0B,UAAY,CACvE,OAAQ+gB,GAAuB/gB,EAAO,qBACpCA,EAAO,IAAO,qBAAwB,MAAM,KAAM,SAAS,CAC/D,EAEIghB,GAA2BhhB,EAAO,wBACpC,UAAY,CACV,OAAQghB,GAA0BhhB,EAAO,wBACvCA,EAAO,IAAO,wBAA2B,MAAM,KAAM,SAAS,CAClE,EAEEihB,GAA2BjhB,EAAO,wBACpC,UAAY,CACV,OAAQihB,GAA0BjhB,EAAO,wBACvCA,EAAO,IAAO,wBAA2B,MAAM,KAAM,SAAS,CAClE,EAEEkhB,GAAwBlhB,EAAO,qBAA0B,UAAY,CACvE,OAAQkhB,GAAuBlhB,EAAO,qBACpCA,EAAO,IAAO,qBAAwB,MAAM,KAAM,SAAS,CAC/D,EAEImhB,GAA4BnhB,EAAO,yBACrC,UAAY,CACV,OAAQmhB,GAA2BnhB,EAAO,yBACxCA,EAAO,IAAO,yBAA4B,MAAM,KAAM,SAAS,CACnE,EAEEohB,GAA8BphB,EAAO,2BACvC,UAAY,CACV,OAAQohB,GAA6BphB,EACnC,2BAEAA,EAAO,IAAO,2BAA8B,MAAM,KAAM,SAAS,CACrE,EAEEqhB,GAA8BrhB,EAAO,2BACvC,UAAY,CACV,OAAQqhB,GAA6BrhB,EACnC,2BAEAA,EAAO,IAAO,2BAA8B,MAAM,KAAM,SAAS,CACrE,EAEEshB,GAAsBthB,EAAO,mBAAwB,UAAY,CACnE,OAAQshB,GAAqBthB,EAAO,mBAClCA,EAAO,IAAO,mBAAsB,MAAM,KAAM,SAAS,CAC7D,EAEIuhB,GAA8BvhB,EAAO,2BACvC,UAAY,CACV,OAAQuhB,GAA6BvhB,EACnC,2BAEAA,EAAO,IAAO,2BAA8B,MAAM,KAAM,SAAS,CACrE,EAEEwhB,GAA0BxhB,EAAO,uBACnC,UAAY,CACV,OAAQwhB,GAAyBxhB,EAAO,uBACtCA,EAAO,IAAO,uBAA0B,MAAM,KAAM,SAAS,CACjE,EAEEyhB,GAA0BzhB,EAAO,uBACnC,UAAY,CACV,OAAQyhB,GAAyBzhB,EAAO,uBACtCA,EAAO,IAAO,uBAA0B,MAAM,KAAM,SAAS,CACjE,EAEE0hB,GAAyB1hB,EAAO,sBAA2B,UAAY,CACzE,OAAQ0hB,GAAwB1hB,EAAO,sBACrCA,EAAO,IAAO,sBAAyB,MAAM,KAAM,SAAS,CAChE,EAEI2hB,GAA8B3hB,EAAO,2BACvC,UAAY,CACV,OAAQ2hB,GAA6B3hB,EACnC,2BAEAA,EAAO,IAAO,2BAA8B,MAAM,KAAM,SAAS,CACrE,EAEE4hB,GAAwB5hB,EAAO,qBAA0B,UAAY,CACvE,OAAQ4hB,GAAuB5hB,EAAO,qBACpCA,EAAO,IAAO,qBAAwB,MAAM,KAAM,SAAS,CAC/D,EAEI6hB,GAAwB7hB,EAAO,qBAA0B,UAAY,CACvE,OAAQ6hB,GAAuB7hB,EAAO,qBACpCA,EAAO,IAAO,qBAAwB,MAAM,KAAM,SAAS,CAC/D,EAEI8hB,GAAyB9hB,EAAO,sBAA2B,UAAY,CACzE,OAAQ8hB,GAAwB9hB,EAAO,sBACrCA,EAAO,IAAO,sBAAyB,MAAM,KAAM,SAAS,CAChE,EAEI+hB,GAAuB/hB,EAAO,oBAAyB,UAAY,CACrE,OAAQ+hB,GAAsB/hB,EAAO,oBACnCA,EAAO,IAAO,oBAAuB,MAAM,KAAM,SAAS,CAC9D,EAEIgiB,GAAwBhiB,EAAO,qBAA0B,UAAY,CACvE,OAAQgiB,GAAuBhiB,EAAO,qBACpCA,EAAO,IAAO,qBAAwB,MAAM,KAAM,SAAS,CAC/D,EAEIiiB,GAAyBjiB,EAAO,sBAA2B,UAAY,CACzE,OAAQiiB,GAAwBjiB,EAAO,sBACrCA,EAAO,IAAO,sBAAyB,MAAM,KAAM,SAAS,CAChE,EAEIkiB,GAA0BliB,EAAO,uBACnC,UAAY,CACV,OAAQkiB,GAAyBliB,EAAO,uBACtCA,EAAO,IAAO,uBAA0B,MAAM,KAAM,SAAS,CACjE,EAEEmiB,GAAyBniB,EAAO,sBAA2B,UAAY,CACzE,OAAQmiB,GAAwBniB,EAAO,sBACrCA,EAAO,IAAO,sBAAyB,MAAM,KAAM,SAAS,CAChE,EAEIoiB,GAAsBpiB,EAAO,mBAAwB,UAAY,CACnE,OAAQoiB,GAAqBpiB,EAAO,mBAClCA,EAAO,IAAO,mBAAsB,MAAM,KAAM,SAAS,CAC7D,EAEIqiB,GAAwBriB,EAAO,qBAA0B,UAAY,CACvE,OAAQqiB,GAAuBriB,EAAO,qBACpCA,EAAO,IAAO,qBAAwB,MAAM,KAAM,SAAS,CAC/D,EAEIsiB,GAAqBtiB,EAAO,kBAAuB,UAAY,CACjE,OAAQsiB,GAAoBtiB,EAAO,kBACjCA,EAAO,IAAO,kBAAqB,MAAM,KAAM,SAAS,CAC5D,EAEIuiB,GAAuBviB,EAAO,oBAAyB,UAAY,CACrE,OAAQuiB,GAAsBviB,EAAO,oBACnCA,EAAO,IAAO,oBAAuB,MAAM,KAAM,SAAS,CAC9D,EAEIwiB,GAAsBxiB,EAAO,mBAAwB,UAAY,CACnE,OAAQwiB,GAAqBxiB,EAAO,mBAClCA,EAAO,IAAO,mBAAsB,MAAM,KAAM,SAAS,CAC7D,EAEIyiB,GAAyBziB,EAAO,sBAA2B,UAAY,CACzE,OAAQyiB,GAAwBziB,EAAO,sBACrCA,EAAO,IAAO,sBAAyB,MAAM,KAAM,SAAS,CAChE,EAEI0iB,GAAsB1iB,EAAO,mBAAwB,UAAY,CACnE,OAAQ0iB,GAAqB1iB,EAAO,mBAClCA,EAAO,IAAO,mBAAsB,MAAM,KAAM,SAAS,CAC7D,EAEI2iB,GAAiC3iB,EACnC,8BACE,UAAY,CACd,OAAQ2iB,GAAgC3iB,EACtC,8BAEAA,EAAO,IAAO,8BAAiC,MAAM,KAAM,SAAS,CACxE,EAEI4iB,GAAiC5iB,EACnC,8BACE,UAAY,CACd,OAAQ4iB,GAAgC5iB,EACtC,8BAEAA,EAAO,IAAO,8BAAiC,MAAM,KAAM,SAAS,CACxE,EAEI6iB,GAAsB7iB,EAAO,mBAAwB,UAAY,CACnE,OAAQ6iB,GAAqB7iB,EAAO,mBAClCA,EAAO,IAAO,mBAAsB,MAAM,KAAM,SAAS,CAC7D,EAEI8iB,GAA0B9iB,EAAO,uBACnC,UAAY,CACV,OAAQ8iB,GAAyB9iB,EAAO,uBACtCA,EAAO,IAAO,uBAA0B,MAAM,KAAM,SAAS,CACjE,EAEE+iB,GAA2B/iB,EAAO,wBACpC,UAAY,CACV,OAAQ+iB,GAA0B/iB,EAAO,wBACvCA,EAAO,IAAO,wBAA2B,MAAM,KAAM,SAAS,CAClE,EAEEgjB,GAAwBhjB,EAAO,qBAA0B,UAAY,CACvE,OAAQgjB,GAAuBhjB,EAAO,qBACpCA,EAAO,IAAO,qBAAwB,MAAM,KAAM,SAAS,CAC/D,EAEIijB,GAAgBjjB,EAAO,aAAkB,UAAY,CACvD,OAAQijB,GAAejjB,EAAO,aAC5BA,EAAO,IAAO,aAAgB,MAAM,KAAM,SAAS,CACvD,EAEIkjB,GAAyBljB,EAAO,sBAA2B,UAAY,CACzE,OAAQkjB,GAAwBljB,EAAO,sBACrCA,EAAO,IAAO,sBAAyB,MAAM,KAAM,SAAS,CAChE,EAEImjB,GAA0BnjB,EAAO,uBACnC,UAAY,CACV,OAAQmjB,GAAyBnjB,EAAO,uBACtCA,EAAO,IAAO,uBAA0B,MAAM,KAAM,SAAS,CACjE,EAEEojB,GAA4BpjB,EAAO,yBACrC,UAAY,CACV,OAAQojB,GAA2BpjB,EAAO,yBACxCA,EAAO,IAAO,yBAA4B,MAAM,KAAM,SAAS,CACnE,EAEEqjB,GAA4BrjB,EAAO,yBACrC,UAAY,CACV,OAAQqjB,GAA2BrjB,EAAO,yBACxCA,EAAO,IAAO,yBAA4B,MAAM,KAAM,SAAS,CACnE,EAEEsjB,GAAgCtjB,EAAO,6BACzC,UAAY,CACV,OAAQsjB,GAA+BtjB,EACrC,6BAEAA,EAAO,IAAO,6BAAgC,MAAM,KAAM,SAAS,CACvE,EAEEujB,GAA0BvjB,EAAO,uBACnC,UAAY,CACV,OAAQujB,GAAyBvjB,EAAO,uBACtCA,EAAO,IAAO,uBAA0B,MAAM,KAAM,SAAS,CACjE,EAEEwjB,GAA+BxjB,EAAO,4BACxC,UAAY,CACV,OAAQwjB,GAA8BxjB,EACpC,4BAEAA,EAAO,IAAO,4BAA+B,MAAM,KAAM,SAAS,CACtE,EAEEyjB,GAA2BzjB,EAAO,wBACpC,UAAY,CACV,OAAQyjB,GAA0BzjB,EAAO,wBACvCA,EAAO,IAAO,wBAA2B,MAAM,KAAM,SAAS,CAClE,EAEE0jB,GAAoB1jB,EAAO,iBAAsB,UAAY,CAC/D,OAAQ0jB,GAAmB1jB,EAAO,iBAChCA,EAAO,IAAO,iBAAoB,MAAM,KAAM,SAAS,CAC3D,EAEI2jB,GAAoB3jB,EAAO,iBAAsB,UAAY,CAC/D,OAAQ2jB,GAAmB3jB,EAAO,iBAChCA,EAAO,IAAO,iBAAoB,MAAM,KAAM,SAAS,CAC3D,EAEI4jB,GAA2B5jB,EAAO,wBACpC,UAAY,CACV,OAAQ4jB,GAA0B5jB,EAAO,wBACvCA,EAAO,IAAO,wBAA2B,MAAM,KAAM,SAAS,CAClE,EAEE6jB,GAAkC7jB,EACpC,+BACE,UAAY,CACd,OAAQ6jB,GAAiC7jB,EACvC,+BAEAA,EAAO,IAAO,+BAAkC,MAAM,KAAM,SAAS,CACzE,EAEI8jB,GAAiC9jB,EACnC,8BACE,UAAY,CACd,OAAQ8jB,GAAgC9jB,EACtC,8BAEAA,EAAO,IAAO,8BAAiC,MAAM,KAAM,SAAS,CACxE,EAEI+jB,GAAuB/jB,EAAO,oBAAyB,UAAY,CACrE,OAAQ+jB,GAAsB/jB,EAAO,oBACnCA,EAAO,IAAO,oBAAuB,MAAM,KAAM,SAAS,CAC9D,EAEIgkB,GAA0BhkB,EAAO,uBACnC,UAAY,CACV,OAAQgkB,GAAyBhkB,EAAO,uBACtCA,EAAO,IAAO,uBAA0B,MAAM,KAAM,SAAS,CACjE,EAEEikB,GAA6BjkB,EAAO,0BACtC,UAAY,CACV,OAAQikB,GAA4BjkB,EAClC,0BAEAA,EAAO,IAAO,0BAA6B,MAAM,KAAM,SAAS,CACpE,EAEEkkB,GAAyBlkB,EAAO,sBAA2B,UAAY,CACzE,OAAQkkB,GAAwBlkB,EAAO,sBACrCA,EAAO,IAAO,sBAAyB,MAAM,KAAM,SAAS,CAChE,EAEImkB,GAAyBnkB,EAAO,sBAA2B,UAAY,CACzE,OAAQmkB,GAAwBnkB,EAAO,sBACrCA,EAAO,IAAO,sBAAyB,MAAM,KAAM,SAAS,CAChE,EAEIokB,GAA6BpkB,EAAO,0BACtC,UAAY,CACV,OAAQokB,GAA4BpkB,EAClC,0BAEAA,EAAO,IAAO,0BAA6B,MAAM,KAAM,SAAS,CACpE,EAEEqkB,GAA2BrkB,EAAO,wBACpC,UAAY,CACV,OAAQqkB,GAA0BrkB,EAAO,wBACvCA,EAAO,IAAO,wBAA2B,MAAM,KAAM,SAAS,CAClE,EAEEskB,GAAoBtkB,EAAO,iBAAsB,UAAY,CAC/D,OAAQskB,GAAmBtkB,EAAO,iBAChCA,EAAO,IAAO,iBAAoB,MAAM,KAAM,SAAS,CAC3D,EAEIukB,GAA2BvkB,EAAO,wBACpC,UAAY,CACV,OAAQukB,GAA0BvkB,EAAO,wBACvCA,EAAO,IAAO,wBAA2B,MAAM,KAAM,SAAS,CAClE,EAEEwkB,GAA0BxkB,EAAO,uBACnC,UAAY,CACV,OAAQwkB,GAAyBxkB,EAAO,uBACtCA,EAAO,IAAO,uBAA0B,MAAM,KAAM,SAAS,CACjE,EAEEykB,GAAyBzkB,EAAO,sBAA2B,UAAY,CACzE,OAAQykB,GAAwBzkB,EAAO,sBACrCA,EAAO,IAAO,sBAAyB,MAAM,KAAM,SAAS,CAChE,EAEI0kB,GAA0B1kB,EAAO,uBACnC,UAAY,CACV,OAAQ0kB,GAAyB1kB,EAAO,uBACtCA,EAAO,IAAO,uBAA0B,MAAM,KAAM,SAAS,CACjE,EAEE2kB,GAA0B3kB,EAAO,uBACnC,UAAY,CACV,OAAQ2kB,GAAyB3kB,EAAO,uBACtCA,EAAO,IAAO,uBAA0B,MAAM,KAAM,SAAS,CACjE,EAEE4kB,GAAqB5kB,EAAO,kBAAuB,UAAY,CACjE,OAAQ4kB,GAAoB5kB,EAAO,kBACjCA,EAAO,IAAO,kBAAqB,MAAM,KAAM,SAAS,CAC5D,EAEI6kB,GAAuB7kB,EAAO,oBAAyB,UAAY,CACrE,OAAQ6kB,GAAsB7kB,EAAO,oBACnCA,EAAO,IAAO,oBAAuB,MAAM,KAAM,SAAS,CAC9D,EAEI8kB,GAA8B9kB,EAAO,2BACvC,UAAY,CACV,OAAQ8kB,GAA6B9kB,EACnC,2BAEAA,EAAO,IAAO,2BAA8B,MAAM,KAAM,SAAS,CACrE,EAEE+kB,GAAqB/kB,EAAO,kBAAuB,UAAY,CACjE,OAAQ+kB,GAAoB/kB,EAAO,kBACjCA,EAAO,IAAO,kBAAqB,MAAM,KAAM,SAAS,CAC5D,EAEIglB,GAA8BhlB,EAAO,2BACvC,UAAY,CACV,OAAQglB,GAA6BhlB,EACnC,2BAEAA,EAAO,IAAO,2BAA8B,MAAM,KAAM,SAAS,CACrE,EAEEilB,GAAkCjlB,EACpC,+BACE,UAAY,CACd,OAAQilB,GAAiCjlB,EACvC,+BAEAA,EAAO,IAAO,+BAAkC,MAAM,KAAM,SAAS,CACzE,EAEIklB,GAAsBllB,EAAO,mBAAwB,UAAY,CACnE,OAAQklB,GAAqBllB,EAAO,mBAClCA,EAAO,IAAO,mBAAsB,MAAM,KAAM,SAAS,CAC7D,EAEImlB,GAAoBnlB,EAAO,iBAAsB,UAAY,CAC/D,OAAQmlB,GAAmBnlB,EAAO,iBAChCA,EAAO,IAAO,iBAAoB,MAAM,KAAM,SAAS,CAC3D,EAEIolB,GAA4BplB,EAAO,yBACrC,UAAY,CACV,OAAQolB,GAA2BplB,EAAO,yBACxCA,EAAO,IAAO,yBAA4B,MAAM,KAAM,SAAS,CACnE,EAEEqlB,GAA0BrlB,EAAO,uBACnC,UAAY,CACV,OAAQqlB,GAAyBrlB,EAAO,uBACtCA,EAAO,IAAO,uBAA0B,MAAM,KAAM,SAAS,CACjE,EAEEslB,GAAsBtlB,EAAO,mBAAwB,UAAY,CACnE,OAAQslB,GAAqBtlB,EAAO,mBAClCA,EAAO,IAAO,mBAAsB,MAAM,KAAM,SAAS,CAC7D,EAEIulB,GAAqBvlB,EAAO,kBAAuB,UAAY,CACjE,OAAQulB,GAAoBvlB,EAAO,kBACjCA,EAAO,IAAO,kBAAqB,MAAM,KAAM,SAAS,CAC5D,EAEIwlB,GAAyBxlB,EAAO,sBAA2B,UAAY,CACzE,OAAQwlB,GAAwBxlB,EAAO,sBACrCA,EAAO,IAAO,sBAAyB,MAAM,KAAM,SAAS,CAChE,EAEIylB,GAA6BzlB,EAAO,0BACtC,UAAY,CACV,OAAQylB,GAA4BzlB,EAClC,0BAEAA,EAAO,IAAO,0BAA6B,MAAM,KAAM,SAAS,CACpE,EAEE0lB,GAAyB1lB,EAAO,sBAA2B,UAAY,CACzE,OAAQ0lB,GAAwB1lB,EAAO,sBACrCA,EAAO,IAAO,sBAAyB,MAAM,KAAM,SAAS,CAChE,EAEI2lB,GAA4B3lB,EAAO,yBACrC,UAAY,CACV,OAAQ2lB,GAA2B3lB,EAAO,yBACxCA,EAAO,IAAO,yBAA4B,MAAM,KAAM,SAAS,CACnE,EAEE4lB,GAA+B5lB,EAAO,4BACxC,UAAY,CACV,OAAQ4lB,GAA8B5lB,EACpC,4BAEAA,EAAO,IAAO,4BAA+B,MAAM,KAAM,SAAS,CACtE,EAEE6lB,GAAmC7lB,EACrC,gCACE,UAAY,CACd,OAAQ6lB,GAAkC7lB,EACxC,gCAEAA,EAAO,IAAO,gCAAmC,MAAM,KAAM,SAAS,CAC1E,EAEI8lB,GAA8B9lB,EAAO,2BACvC,UAAY,CACV,OAAQ8lB,GAA6B9lB,EACnC,2BAEAA,EAAO,IAAO,2BAA8B,MAAM,KAAM,SAAS,CACrE,EAEE+lB,GAAqB/lB,EAAO,kBAAuB,UAAY,CACjE,OAAQ+lB,GAAoB/lB,EAAO,kBACjCA,EAAO,IAAO,kBAAqB,MAAM,KAAM,SAAS,CAC5D,EAEIgmB,GAAwBhmB,EAAO,qBAA0B,UAAY,CACvE,OAAQgmB,GAAuBhmB,EAAO,qBACpCA,EAAO,IAAO,qBAAwB,MAAM,KAAM,SAAS,CAC/D,EAEIimB,GAAwBjmB,EAAO,qBAA0B,UAAY,CACvE,OAAQimB,GAAuBjmB,EAAO,qBACpCA,EAAO,IAAO,qBAAwB,MAAM,KAAM,SAAS,CAC/D,EAEIkmB,GAA0BlmB,EAAO,uBACnC,UAAY,CACV,OAAQkmB,GAAyBlmB,EAAO,uBACtCA,EAAO,IAAO,uBAA0B,MAAM,KAAM,SAAS,CACjE,EAEEmmB,GAA2BnmB,EAAO,wBACpC,UAAY,CACV,OAAQmmB,GAA0BnmB,EAAO,wBACvCA,EAAO,IAAO,wBAA2B,MAAM,KAAM,SAAS,CAClE,EAEEomB,GAAyBpmB,EAAO,sBAA2B,UAAY,CACzE,OAAQomB,GAAwBpmB,EAAO,sBACrCA,EAAO,IAAO,sBAAyB,MAAM,KAAM,SAAS,CAChE,EAEIqmB,GAAoBrmB,EAAO,iBAAsB,UAAY,CAC/D,OAAQqmB,GAAmBrmB,EAAO,iBAChCA,EAAO,IAAO,iBAAoB,MAAM,KAAM,SAAS,CAC3D,EAEIsmB,GAA6BtmB,EAAO,0BACtC,UAAY,CACV,OAAQsmB,GAA4BtmB,EAClC,0BAEAA,EAAO,IAAO,0BAA6B,MAAM,KAAM,SAAS,CACpE,EAEEumB,GAAmBvmB,EAAO,gBAAqB,UAAY,CAC7D,OAAQumB,GAAkBvmB,EAAO,gBAC/BA,EAAO,IAAO,gBAAmB,MAAM,KAAM,SAAS,CAC1D,EAEIwmB,GAAkBxmB,EAAO,eAAoB,UAAY,CAC3D,OAAQwmB,GAAiBxmB,EAAO,eAC9BA,EAAO,IAAO,eAAkB,MAAM,KAAM,SAAS,CACzD,EAEIymB,GAAiBzmB,EAAO,cAAmB,UAAY,CACzD,OAAQymB,GAAgBzmB,EAAO,cAC7BA,EAAO,IAAO,cAAiB,MAAM,KAAM,SAAS,CACxD,EAEI0mB,GAAoB1mB,EAAO,iBAAsB,UAAY,CAC/D,OAAQ0mB,GAAmB1mB,EAAO,iBAChCA,EAAO,IAAO,iBAAoB,MAAM,KAAM,SAAS,CAC3D,EAEI2mB,GAA6B3mB,EAAO,0BACtC,UAAY,CACV,OAAQ2mB,GAA4B3mB,EAClC,0BAEAA,EAAO,IAAO,0BAA6B,MAAM,KAAM,SAAS,CACpE,EAEE4mB,GAAgC5mB,EAAO,6BACzC,UAAY,CACV,OAAQ4mB,GAA+B5mB,EACrC,6BAEAA,EAAO,IAAO,6BAAgC,MAAM,KAAM,SAAS,CACvE,EAEE6mB,GAA6B7mB,EAAO,0BACtC,UAAY,CACV,OAAQ6mB,GAA4B7mB,EAClC,0BAEAA,EAAO,IAAO,0BAA6B,MAAM,KAAM,SAAS,CACpE,EAEE8mB,GAA2B9mB,EAAO,wBACpC,UAAY,CACV,OAAQ8mB,GAA0B9mB,EAAO,wBACvCA,EAAO,IAAO,wBAA2B,MAAM,KAAM,SAAS,CAClE,EAEE+mB,GAAkC/mB,EACpC,+BACE,UAAY,CACd,OAAQ+mB,GAAiC/mB,EACvC,+BAEAA,EAAO,IAAO,+BAAkC,MAAM,KAAM,SAAS,CACzE,EAEIgnB,GAAkChnB,EACpC,+BACE,UAAY,CACd,OAAQgnB,GAAiChnB,EACvC,+BAEAA,EAAO,IAAO,+BAAkC,MAAM,KAAM,SAAS,CACzE,EAEIinB,GAAoBjnB,EAAO,iBAAsB,UAAY,CAC/D,OAAQinB,GAAmBjnB,EAAO,iBAChCA,EAAO,IAAO,iBAAoB,MAAM,KAAM,SAAS,CAC3D,EAEIknB,GAAsBlnB,EAAO,mBAAwB,UAAY,CACnE,OAAQknB,GAAqBlnB,EAAO,mBAClCA,EAAO,IAAO,mBAAsB,MAAM,KAAM,SAAS,CAC7D,EAEImnB,GAAoBnnB,EAAO,iBAAsB,UAAY,CAC/D,OAAQmnB,GAAmBnnB,EAAO,iBAChCA,EAAO,IAAO,iBAAoB,MAAM,KAAM,SAAS,CAC3D,EAEIonB,GAAwBpnB,EAAO,qBAA0B,UAAY,CACvE,OAAQonB,GAAuBpnB,EAAO,qBACpCA,EAAO,IAAO,qBAAwB,MAAM,KAAM,SAAS,CAC/D,EAEIqnB,GAA+BrnB,EAAO,4BACxC,UAAY,CACV,OAAQqnB,GAA8BrnB,EACpC,4BAEAA,EAAO,IAAO,4BAA+B,MAAM,KAAM,SAAS,CACtE,EAEEsnB,GAA8BtnB,EAAO,2BACvC,UAAY,CACV,OAAQsnB,GAA6BtnB,EACnC,2BAEAA,EAAO,IAAO,2BAA8B,MAAM,KAAM,SAAS,CACrE,EAEEunB,GAAwBvnB,EAAO,qBAA0B,UAAY,CACvE,OAAQunB,GAAuBvnB,EAAO,qBACpCA,EAAO,IAAO,qBAAwB,MAAM,KAAM,SAAS,CAC/D,EAEIwnB,GAA0BxnB,EAAO,uBACnC,UAAY,CACV,OAAQwnB,GAAyBxnB,EAAO,uBACtCA,EAAO,IAAO,uBAA0B,MAAM,KAAM,SAAS,CACjE,EAEEynB,GAA0BznB,EAAO,uBACnC,UAAY,CACV,OAAQynB,GAAyBznB,EAAO,uBACtCA,EAAO,IAAO,uBAA0B,MAAM,KAAM,SAAS,CACjE,EAEE0nB,GAA0B1nB,EAAO,uBACnC,UAAY,CACV,OAAQ0nB,GAAyB1nB,EAAO,uBACtCA,EAAO,IAAO,uBAA0B,MAAM,KAAM,SAAS,CACjE,EAEE2nB,GAAgC3nB,EAAO,6BACzC,UAAY,CACV,OAAQ2nB,GAA+B3nB,EACrC,6BAEAA,EAAO,IAAO,6BAAgC,MAAM,KAAM,SAAS,CACvE,EAEE4nB,GAA6B5nB,EAAO,0BACtC,UAAY,CACV,OAAQ4nB,GAA4B5nB,EAClC,0BAEAA,EAAO,IAAO,0BAA6B,MAAM,KAAM,SAAS,CACpE,EAEE6nB,GAAkC7nB,EACpC,+BACE,UAAY,CACd,OAAQ6nB,GAAiC7nB,EACvC,+BAEAA,EAAO,IAAO,+BAAkC,MAAM,KAAM,SAAS,CACzE,EAEI8nB,GAAiC9nB,EACnC,8BACE,UAAY,CACd,OAAQ8nB,GAAgC9nB,EACtC,8BAEAA,EAAO,IAAO,8BAAiC,MAAM,KAAM,SAAS,CACxE,EAEI+nB,GAA4B/nB,EAAO,yBACrC,UAAY,CACV,OAAQ+nB,GAA2B/nB,EAAO,yBACxCA,EAAO,IAAO,yBAA4B,MAAM,KAAM,SAAS,CACnE,EAEEgoB,GAA0BhoB,EAAO,uBACnC,UAAY,CACV,OAAQgoB,GAAyBhoB,EAAO,uBACtCA,EAAO,IAAO,uBAA0B,MAAM,KAAM,SAAS,CACjE,EAEEioB,GAA4BjoB,EAAO,yBACrC,UAAY,CACV,OAAQioB,GAA2BjoB,EAAO,yBACxCA,EAAO,IAAO,yBAA4B,MAAM,KAAM,SAAS,CACnE,EAEEkoB,GAA2BloB,EAAO,wBACpC,UAAY,CACV,OAAQkoB,GAA0BloB,EAAO,wBACvCA,EAAO,IAAO,wBAA2B,MAAM,KAAM,SAAS,CAClE,EAEEmoB,GAA+BnoB,EAAO,4BACxC,UAAY,CACV,OAAQmoB,GAA8BnoB,EACpC,4BAEAA,EAAO,IAAO,4BAA+B,MAAM,KAAM,SAAS,CACtE,EAEEooB,GAAiCpoB,EACnC,8BACE,UAAY,CACd,OAAQooB,GAAgCpoB,EACtC,8BAEAA,EAAO,IAAO,8BAAiC,MAAM,KAAM,SAAS,CACxE,EAEIqoB,GAAkCroB,EACpC,+BACE,UAAY,CACd,OAAQqoB,GAAiCroB,EACvC,+BAEAA,EAAO,IAAO,+BAAkC,MAAM,KAAM,SAAS,CACzE,EAEIsoB,GAA2BtoB,EAAO,wBACpC,UAAY,CACV,OAAQsoB,GAA0BtoB,EAAO,wBACvCA,EAAO,IAAO,wBAA2B,MAAM,KAAM,SAAS,CAClE,EAEEuoB,GAA8BvoB,EAAO,2BACvC,UAAY,CACV,OAAQuoB,GAA6BvoB,EACnC,2BAEAA,EAAO,IAAO,2BAA8B,MAAM,KAAM,SAAS,CACrE,EAEEwoB,GAAgCxoB,EAAO,6BACzC,UAAY,CACV,OAAQwoB,GAA+BxoB,EACrC,6BAEAA,EAAO,IAAO,6BAAgC,MAAM,KAAM,SAAS,CACvE,EAEEyoB,GAAmCzoB,EACrC,gCACE,UAAY,CACd,OAAQyoB,GAAkCzoB,EACxC,gCAEAA,EAAO,IAAO,gCAAmC,MAAM,KAAM,SAAS,CAC1E,EAEI0oB,GAA0B1oB,EAAO,uBACnC,UAAY,CACV,OAAQ0oB,GAAyB1oB,EAAO,uBACtCA,EAAO,IAAO,uBAA0B,MAAM,KAAM,SAAS,CACjE,EAEE2oB,GAAwB3oB,EAAO,qBAA0B,UAAY,CACvE,OAAQ2oB,GAAuB3oB,EAAO,qBACpCA,EAAO,IAAO,qBAAwB,MAAM,KAAM,SAAS,CAC/D,EAEI4oB,GAAwB5oB,EAAO,qBAA0B,UAAY,CACvE,OAAQ4oB,GAAuB5oB,EAAO,qBACpCA,EAAO,IAAO,qBAAwB,MAAM,KAAM,SAAS,CAC/D,EAEI6oB,GAAyB7oB,EAAO,sBAA2B,UAAY,CACzE,OAAQ6oB,GAAwB7oB,EAAO,sBACrCA,EAAO,IAAO,sBAAyB,MAAM,KAAM,SAAS,CAChE,EAEI8oB,GAAyB9oB,EAAO,sBAA2B,UAAY,CACzE,OAAQ8oB,GAAwB9oB,EAAO,sBACrCA,EAAO,IAAO,sBAAyB,MAAM,KAAM,SAAS,CAChE,EAEI+oB,GAA8B/oB,EAAO,2BACvC,UAAY,CACV,OAAQ+oB,GAA6B/oB,EACnC,2BAEAA,EAAO,IAAO,2BAA8B,MAAM,KAAM,SAAS,CACrE,EAEEgpB,GAAkChpB,EACpC,+BACE,UAAY,CACd,OAAQgpB,GAAiChpB,EACvC,+BAEAA,EAAO,IAAO,+BAAkC,MAAM,KAAM,SAAS,CACzE,EAEIipB,GAA8BjpB,EAAO,2BACvC,UAAY,CACV,OAAQipB,GAA6BjpB,EACnC,2BAEAA,EAAO,IAAO,2BAA8B,MAAM,KAAM,SAAS,CACrE,EAEEkpB,GAA4BlpB,EAAO,yBACrC,UAAY,CACV,OAAQkpB,GAA2BlpB,EAAO,yBACxCA,EAAO,IAAO,yBAA4B,MAAM,KAAM,SAAS,CACnE,EAEEmpB,GAAiCnpB,EACnC,8BACE,UAAY,CACd,OAAQmpB,GAAgCnpB,EACtC,8BAEAA,EAAO,IAAO,8BAAiC,MAAM,KAAM,SAAS,CACxE,EAEIopB,GAA8BppB,EAAO,2BACvC,UAAY,CACV,OAAQopB,GAA6BppB,EACnC,2BAEAA,EAAO,IAAO,2BAA8B,MAAM,KAAM,SAAS,CACrE,EAEEqpB,GAA2BrpB,EAAO,wBACpC,UAAY,CACV,OAAQqpB,GAA0BrpB,EAAO,wBACvCA,EAAO,IAAO,wBAA2B,MAAM,KAAM,SAAS,CAClE,EAEEspB,GAAmCtpB,EACrC,gCACE,UAAY,CACd,OAAQspB,GAAkCtpB,EACxC,gCAEAA,EAAO,IAAO,gCAAmC,MAAM,KAAM,SAAS,CAC1E,EAEIupB,GAAgCvpB,EAAO,6BACzC,UAAY,CACV,OAAQupB,GAA+BvpB,EACrC,6BAEAA,EAAO,IAAO,6BAAgC,MAAM,KAAM,SAAS,CACvE,EAEEwpB,GAA2BxpB,EAAO,wBACpC,UAAY,CACV,OAAQwpB,GAA0BxpB,EAAO,wBACvCA,EAAO,IAAO,wBAA2B,MAAM,KAAM,SAAS,CAClE,EAEEypB,GAA2BzpB,EAAO,wBACpC,UAAY,CACV,OAAQypB,GAA0BzpB,EAAO,wBACvCA,EAAO,IAAO,wBAA2B,MAAM,KAAM,SAAS,CAClE,EAEE0pB,GAA8B1pB,EAAO,2BACvC,UAAY,CACV,OAAQ0pB,GAA6B1pB,EACnC,2BAEAA,EAAO,IAAO,2BAA8B,MAAM,KAAM,SAAS,CACrE,EAEE2pB,GAAgC3pB,EAAO,6BACzC,UAAY,CACV,OAAQ2pB,GAA+B3pB,EACrC,6BAEAA,EAAO,IAAO,6BAAgC,MAAM,KAAM,SAAS,CACvE,EAEE4pB,GAAmC5pB,EACrC,gCACE,UAAY,CACd,OAAQ4pB,GAAkC5pB,EACxC,gCAEAA,EAAO,IAAO,gCAAmC,MAAM,KAAM,SAAS,CAC1E,EAEI6pB,GAA8B7pB,EAAO,2BACvC,UAAY,CACV,OAAQ6pB,GAA6B7pB,EACnC,2BAEAA,EAAO,IAAO,2BAA8B,MAAM,KAAM,SAAS,CACrE,EAEE8pB,GAA4B9pB,EAAO,yBACrC,UAAY,CACV,OAAQ8pB,GAA2B9pB,EAAO,yBACxCA,EAAO,IAAO,yBAA4B,MAAM,KAAM,SAAS,CACnE,EAEE+pB,GAAiC/pB,EACnC,8BACE,UAAY,CACd,OAAQ+pB,GAAgC/pB,EACtC,8BAEAA,EAAO,IAAO,8BAAiC,MAAM,KAAM,SAAS,CACxE,EAEIgqB,GAA0BhqB,EAAO,uBACnC,UAAY,CACV,OAAQgqB,GAAyBhqB,EAAO,uBACtCA,EAAO,IAAO,uBAA0B,MAAM,KAAM,SAAS,CACjE,EAEEiqB,GAAqBjqB,EAAO,kBAAuB,UAAY,CACjE,OAAQiqB,GAAoBjqB,EAAO,kBACjCA,EAAO,IAAO,kBAAqB,MAAM,KAAM,SAAS,CAC5D,EAEIkqB,GAA6BlqB,EAAO,0BACtC,UAAY,CACV,OAAQkqB,GAA4BlqB,EAClC,0BAEAA,EAAO,IAAO,0BAA6B,MAAM,KAAM,SAAS,CACpE,EAEEmqB,GAAiCnqB,EACnC,8BACE,UAAY,CACd,OAAQmqB,GAAgCnqB,EACtC,8BAEAA,EAAO,IAAO,8BAAiC,MAAM,KAAM,SAAS,CACxE,EAEIoqB,GAA+BpqB,EAAO,4BACxC,UAAY,CACV,OAAQoqB,GAA8BpqB,EACpC,4BAEAA,EAAO,IAAO,4BAA+B,MAAM,KAAM,SAAS,CACtE,EAEEqqB,GAAmCrqB,EACrC,gCACE,UAAY,CACd,OAAQqqB,GAAkCrqB,EACxC,gCAEAA,EAAO,IAAO,gCAAmC,MAAM,KAAM,SAAS,CAC1E,EAEIsqB,GAA+BtqB,EAAO,4BACxC,UAAY,CACV,OAAQsqB,GAA8BtqB,EACpC,4BAEAA,EAAO,IAAO,4BAA+B,MAAM,KAAM,SAAS,CACtE,EAEEuqB,GAA2BvqB,EAAO,wBACpC,UAAY,CACV,OAAQuqB,GAA0BvqB,EAAO,wBACvCA,EAAO,IAAO,wBAA2B,MAAM,KAAM,SAAS,CAClE,EAEEwqB,GAA8BxqB,EAAO,2BACvC,UAAY,CACV,OAAQwqB,GAA6BxqB,EACnC,2BAEAA,EAAO,IAAO,2BAA8B,MAAM,KAAM,SAAS,CACrE,EAEEyqB,GAA4BzqB,EAAO,yBACrC,UAAY,CACV,OAAQyqB,GAA2BzqB,EAAO,yBACxCA,EAAO,IAAO,yBAA4B,MAAM,KAAM,SAAS,CACnE,EAEE0qB,GAA6B1qB,EAAO,0BACtC,UAAY,CACV,OAAQ0qB,GAA4B1qB,EAClC,0BAEAA,EAAO,IAAO,0BAA6B,MAAM,KAAM,SAAS,CACpE,EAEE2qB,GAAyB3qB,EAAO,sBAA2B,UAAY,CACzE,OAAQ2qB,GAAwB3qB,EAAO,sBACrCA,EAAO,IAAO,sBAAyB,MAAM,KAAM,SAAS,CAChE,EAEI4qB,GAA2B5qB,EAAO,wBACpC,UAAY,CACV,OAAQ4qB,GAA0B5qB,EAAO,wBACvCA,EAAO,IAAO,wBAA2B,MAAM,KAAM,SAAS,CAClE,EAEE6qB,GAAoC7qB,EACtC,iCACE,UAAY,CACd,OAAQ6qB,GAAmC7qB,EACzC,iCAEAA,EAAO,IAAO,iCAAoC,MAClD,KACA,SACF,CACF,EAEI8qB,GAA+B9qB,EAAO,4BACxC,UAAY,CACV,OAAQ8qB,GAA8B9qB,EACpC,4BAEAA,EAAO,IAAO,4BAA+B,MAAM,KAAM,SAAS,CACtE,EAEE+qB,GAAkC/qB,EACpC,+BACE,UAAY,CACd,OAAQ+qB,GAAiC/qB,EACvC,+BAEAA,EAAO,IAAO,+BAAkC,MAAM,KAAM,SAAS,CACzE,EAEIgrB,GAAoChrB,EACtC,iCACE,UAAY,CACd,OAAQgrB,GAAmChrB,EACzC,iCAEAA,EAAO,IAAO,iCAAoC,MAClD,KACA,SACF,CACF,EAEIirB,GAAuCjrB,EACzC,oCACE,UAAY,CACd,OAAQirB,GAAsCjrB,EAC5C,oCAEAA,EAAO,IAAO,oCAAuC,MACrD,KACA,SACF,CACF,EAEIkrB,GAAgClrB,EAAO,6BACzC,UAAY,CACV,OAAQkrB,GAA+BlrB,EACrC,6BAEAA,EAAO,IAAO,6BAAgC,MAAM,KAAM,SAAS,CACvE,EAEEmrB,GAA8BnrB,EAAO,2BACvC,UAAY,CACV,OAAQmrB,GAA6BnrB,EACnC,2BAEAA,EAAO,IAAO,2BAA8B,MAAM,KAAM,SAAS,CACrE,EAEEorB,GAA+BprB,EAAO,4BACxC,UAAY,CACV,OAAQorB,GAA8BprB,EACpC,4BAEAA,EAAO,IAAO,4BAA+B,MAAM,KAAM,SAAS,CACtE,EAEEqrB,GAAgCrrB,EAAO,6BACzC,UAAY,CACV,OAAQqrB,GAA+BrrB,EACrC,6BAEAA,EAAO,IAAO,6BAAgC,MAAM,KAAM,SAAS,CACvE,EAEEsrB,GAA8BtrB,EAAO,2BACvC,UAAY,CACV,OAAQsrB,GAA6BtrB,EACnC,2BAEAA,EAAO,IAAO,2BAA8B,MAAM,KAAM,SAAS,CACrE,EAEEurB,GAA2BvrB,EAAO,wBACpC,UAAY,CACV,OAAQurB,GAA0BvrB,EAAO,wBACvCA,EAAO,IAAO,wBAA2B,MAAM,KAAM,SAAS,CAClE,EAEEwrB,GAA4BxrB,EAAO,yBACrC,UAAY,CACV,OAAQwrB,GAA2BxrB,EAAO,yBACxCA,EAAO,IAAO,yBAA4B,MAAM,KAAM,SAAS,CACnE,EAEEyrB,GAA2BzrB,EAAO,wBACpC,UAAY,CACV,OAAQyrB,GAA0BzrB,EAAO,wBACvCA,EAAO,IAAO,wBAA2B,MAAM,KAAM,SAAS,CAClE,EAEE0rB,GAA6B1rB,EAAO,0BACtC,UAAY,CACV,OAAQ0rB,GAA4B1rB,EAClC,0BAEAA,EAAO,IAAO,0BAA6B,MAAM,KAAM,SAAS,CACpE,EAEE2rB,GAA8B3rB,EAAO,2BACvC,UAAY,CACV,OAAQ2rB,GAA6B3rB,EACnC,2BAEAA,EAAO,IAAO,2BAA8B,MAAM,KAAM,SAAS,CACrE,EAEE4rB,GAA8B5rB,EAAO,2BACvC,UAAY,CACV,OAAQ4rB,GAA6B5rB,EACnC,2BAEAA,EAAO,IAAO,2BAA8B,MAAM,KAAM,SAAS,CACrE,EAEE6rB,GAA+B7rB,EAAO,4BACxC,UAAY,CACV,OAAQ6rB,GAA8B7rB,EACpC,4BAEAA,EAAO,IAAO,4BAA+B,MAAM,KAAM,SAAS,CACtE,EAEE8rB,GAAiC9rB,EACnC,8BACE,UAAY,CACd,OAAQ8rB,GAAgC9rB,EACtC,8BAEAA,EAAO,IAAO,8BAAiC,MAAM,KAAM,SAAS,CACxE,EAEI+rB,GAAiC/rB,EACnC,8BACE,UAAY,CACd,OAAQ+rB,GAAgC/rB,EACtC,8BAEAA,EAAO,IAAO,8BAAiC,MAAM,KAAM,SAAS,CACxE,EAEIgsB,GAAoChsB,EACtC,iCACE,UAAY,CACd,OAAQgsB,GAAmChsB,EACzC,iCAEAA,EAAO,IAAO,iCAAoC,MAClD,KACA,SACF,CACF,EAEIisB,GAAoCjsB,EACtC,iCACE,UAAY,CACd,OAAQisB,GAAmCjsB,EACzC,iCAEAA,EAAO,IAAO,iCAAoC,MAClD,KACA,SACF,CACF,EAEIksB,GAAgClsB,EAAO,6BACzC,UAAY,CACV,OAAQksB,GAA+BlsB,EACrC,6BAEAA,EAAO,IAAO,6BAAgC,MAAM,KAAM,SAAS,CACvE,EAEEmsB,GAAsCnsB,EACxC,mCACE,UAAY,CACd,OAAQmsB,GAAqCnsB,EAC3C,mCAEAA,EAAO,IAAO,mCAAsC,MACpD,KACA,SACF,CACF,EAEIosB,GAAiCpsB,EACnC,8BACE,UAAY,CACd,OAAQosB,GAAgCpsB,EACtC,8BAEAA,EAAO,IAAO,8BAAiC,MAAM,KAAM,SAAS,CACxE,EAEIqsB,GAAoCrsB,EACtC,iCACE,UAAY,CACd,OAAQqsB,GAAmCrsB,EACzC,iCAEAA,EAAO,IAAO,iCAAoC,MAClD,KACA,SACF,CACF,EAEI0Z,GAAW1Z,EAAO,QAAa,UAAY,CAC7C,OAAQ0Z,GAAU1Z,EAAO,QAAaA,EAAO,IAAO,QAAW,MAC7D,KACA,SACF,CACF,EAEIssB,GAAStsB,EAAO,MAAW,UAAY,CACzC,OAAQssB,GAAQtsB,EAAO,MAAWA,EAAO,IAAO,MAAS,MACvD,KACA,SACF,CACF,EAEIusB,GAAYvsB,EAAO,SAAc,UAAY,CAC/C,OAAQusB,GAAWvsB,EAAO,SAAcA,EAAO,IAAO,SAAY,MAChE,KACA,SACF,CACF,EAEI2M,GAAgC3M,EAAO,6BACzC,UAAY,CACV,OAAQ2M,GAA+B3M,EACrC,6BAEAA,EAAO,IAAO,6BAAgC,MAAM,KAAM,SAAS,CACvE,EAEEwsB,GAAaxsB,EAAO,UAAe,UAAY,CACjD,OAAQwsB,GAAYxsB,EAAO,UACzBA,EAAO,IAAO,WAAc,MAAM,KAAM,SAAS,CACrD,EAEIysB,GAAgBzsB,EAAO,aAAkB,UAAY,CACvD,OAAQysB,GAAezsB,EAAO,aAC5BA,EAAO,IAAO,cAAiB,MAAM,KAAM,SAAS,CACxD,EAEI0sB,GAAc1sB,EAAO,WAAgB,UAAY,CACnD,OAAQ0sB,GAAa1sB,EAAO,WAC1BA,EAAO,IAAO,YAAe,MAAM,KAAM,SAAS,CACtD,EAEAA,EAAO,WAAgBgD,GAEvB,IAAI2pB,GAEJzlB,GAAwB,SAAS0lB,GAAY,CACtCD,IAAWE,GAAI,EACfF,KAAWzlB,GAAwB0lB,EAC1C,EAEA,SAASC,GAAIC,EAAM,CASjB,GARAA,EAAOA,GAAQ7rB,GAEX+F,GAAkB,IAItBX,GAAO,EAEHW,GAAkB,GACpB,OAGF,SAAS+lB,GAAQ,CACXJ,KACJA,GAAY,GACZ3sB,EAAO,UAAe,GAElB,CAAAiD,KAEJuD,GAAY,EAEZvG,EAAoBD,CAAM,EACtBA,EAAO,sBAAyBA,EAAO,qBAAwB,EAEnE2G,GAAQ,GACV,CAEI3G,EAAO,WACTA,EAAO,UAAa,YAAY,EAChC,WAAW,UAAY,CACrB,WAAW,UAAY,CACrBA,EAAO,UAAa,EAAE,CACxB,EAAG,CAAC,EACJ+sB,EAAM,CACR,EAAG,CAAC,GAEJA,EAAM,CAEV,CAEA,GAAI/sB,EAAO,QAGT,IAFI,OAAOA,EAAO,SAAc,aAC9BA,EAAO,QAAa,CAACA,EAAO,OAAU,GACjCA,EAAO,QAAW,OAAS,GAChCA,EAAO,QAAW,IAAI,EAAE,EAI5B,OAAA6sB,GAAI,EAEC7sB,EAAO,UAASA,EAAO,QAAU,CAAC,GACvCA,EAAO,QAAQ,KAAK,SAAUA,EAAQ,CACpC,aAEA,aA+8QA,GA98QA,WAAW,oBAAsB,SAASgtB,EACxCC,EAAY,WAAW,kBACrBD,EAAoB,cACtB,CACA,GAAIA,EAAoB,QACtB,OAACA,EAAoB,QAAQ,QAAU,SAAS,KAC9C,+CACA,wEACF,EACOA,EAAoB,QAE7B,IAAMjtB,EAAS,OAAO,OACpB,OAAO,OAAO,IAAI,EAClB,CACE,QAAS,OACT,OAAQ,OACR,cACsB,OAAOC,EAAvB,KACIA,EAAO,QAAgB,GAExB,CAAC,CAAC,WAAW,cAEtB,MAAO,QAAQ,MAAM,KAAK,OAAO,EACjC,KAAM,QAAQ,KAAK,KAAK,OAAO,EAC/B,MAAO,QAAQ,MAAM,KAAK,OAAO,EACjC,IAAK,QAAQ,IAAI,KAAK,OAAO,EAC7B,cAAe,QAEf,YAAa,EACf,EACAitB,GAAa,CAAC,CAChB,EAEA,OAAO,OACLltB,EACA,CACE,gBAAiBA,EAAO,YAAc,SAAW,iBACjD,kBAAmBA,EAAO,YAAc,OAAS,eACjD,kBAAmBA,EAAO,YACtB,UACA,iBACN,EACAA,CACF,EAEA,CAAC,UAAW,SAAU,eAAe,EAAE,QAASmtB,GAAM,CACjC,OAAOntB,EAAOmtB,CAAC,GAA9B,aACFntB,EAAOmtB,CAAC,EAAIntB,EAAOmtB,CAAC,EAAE,EAE1B,CAAC,EAED,OAAO,WAAW,iBAClB,OAAOF,EAAoB,cAE3B,IAAMG,EAAO,OAAO,OAAO,IAAI,EAEzBC,EAAO,OAAO,OAAO,IAAI,EAEzBC,EAAWC,GAEZH,EAAK,mBAAqBA,EAAK,kBAAkBG,CAAE,GACpD,wBAA0BA,EAIxBC,EAAWC,GAAmB,OAAOA,GAApB,UAAyBA,KAAOA,EAAI,GAE3D,MAAMC,UAAqB,KAAM,CAC/B,eAAeX,EAAM,CACnB,IAAIQ,EACJ,GAAIR,EAAK,OACP,GAAIS,EAAQT,EAAK,CAAC,CAAC,EAEjB,GADAQ,EAAKR,EAAK,CAAC,EACDA,EAAK,SAAX,EACF,MAAMO,EAAQP,EAAK,CAAC,CAAC,CAAC,MACjB,CACL,IAAMY,EAAQL,EAAQC,CAAE,EACP,OAAOR,EAAK,CAAC,GAA1B,SACF,MAAMY,EAAOZ,EAAK,CAAC,CAAC,GAEpBA,EAAK,CAAC,EAAIY,EAAQ,IAClB,MAAMZ,EAAK,KAAK,GAAG,CAAC,EAExB,MAEUA,EAAK,SAAX,GAAkC,OAAOA,EAAK,CAAC,GAA1B,SACvB,MAAM,GAAGA,CAAI,EAEb,MAAMA,EAAK,KAAK,GAAG,CAAC,EAI1B,KAAK,WAAaQ,GAAMH,EAAK,aAC7B,KAAK,KAAO,cACd,CACF,CAEAM,EAAa,KAAO,IAAIX,IAAS,CAC/B,MAAM,IAAIW,EAAa,GAAGX,CAAI,CAChC,EACA,IAAMa,EAAQF,EAAa,KAEvB1tB,EAAO,eAAiB,CAAC,YAAY,KAAKA,EAAO,aAAa,GAChE4tB,EACE,gEACF,EAGF,IAAMC,EAAWJ,GAEA,OAAOA,GAApB,UACGA,KAAOA,EAAI,IAAMA,GAAK,YAAcA,GAAK,YAI1CK,EAAe,SAASC,EAAEnoB,EAAG,CACjC,OAAKmoB,EAAE,OACLA,EAAE,KAAO,OAAO,oBAAoB,EACpCA,EAAE,KAAO,CAACA,EAAE,MAEPnoB,GAAKmoB,EAAE,MAAQnoB,GAAKmoB,EAAE,IAC/B,EAEMC,EAAgBpoB,GAAMA,GAAK,CAAC,YAAc,IAAMA,GAAK,YAErDqoB,EAAmB,SAASF,EAAEnoB,EAAG,CACrC,OAAKmoB,EAAE,OACLA,EAAE,KAAO,OAAO,iBAChBA,EAAE,KAAO,OAAO,kBAEXnoB,GAAKmoB,EAAE,MAAQnoB,GAAKmoB,EAAE,IAC/B,EAEMG,EAAgBC,GACbA,GAAKA,EAAE,aAAeN,EAAQM,EAAE,YAAY,iBAAiB,EAChEA,EACA,GAGAC,EACY,OAAO,kBAAvB,IACI,UAAY,CAAC,EACb,kBAEAC,EAAsBC,GAC1BA,EAAY,kBAAkBF,EAE1BG,EAAiB,CAACD,EAAaE,EAAOtjB,IACnCmjB,EAAmBC,CAAW,EACjCA,EAAY,MAAME,EAAOtjB,CAAG,EAC5BojB,EAAY,SAASE,EAAOtjB,CAAG,EAG/BujB,EAAwBN,GAE1BA,IACCA,aAAa,YACZA,aAAa,WACbA,aAAa,aAIbO,EAAuBP,GAEzBA,IACCA,aAAa,YACZA,aAAa,WACbA,aAAa,aAIbQ,EAA4BR,GAE9BM,EAAqBN,CAAC,GACtBP,EAAM,8CAA8C,EAIlDgB,EAAc,IAAI,YAAY,OAAO,EAErCC,EAAqB,SAAUC,EAAYN,EAAOtjB,EAAK,CAC3D,OAAO0jB,EAAY,OAAOL,EAAeO,EAAYN,EAAOtjB,CAAG,CAAC,CAClE,EAEM6jB,EAAiB,SAAUZ,EAAG,CAClC,OAAIO,EAAoBP,CAAC,EAChBU,EACLV,aAAa,YAAc,IAAI,WAAWA,CAAC,EAAIA,CACjD,EACS,MAAM,QAAQA,CAAC,EAAUA,EAAE,KAAK,EAAE,GACpCd,EAAK,MAAMc,CAAC,IAAGA,EAAId,EAAK,SAASc,CAAC,GACpCA,EACT,EAEA,MAAMa,UAAuB,KAAM,CACjC,eAAejC,EAAM,CACTA,EAAK,SAAX,GAAkC,OAAOA,EAAK,CAAC,GAA1B,SACvB,MAAM,GAAGA,CAAI,EACJA,EAAK,OACd,MAAMA,EAAK,KAAK,GAAG,CAAC,EAEpB,MAAM,oBAAoB,EAE5B,KAAK,WAAaK,EAAK,aACvB,KAAK,KAAO,gBACd,CACF,CAEA4B,EAAe,KAAO,IAAIjC,IAAS,CACjC,MAAM,IAAIiC,EAAe,GAAGjC,CAAI,CAClC,EAEA,OAAO,OAAOK,EAAM,CAClB,kBAAmB,OAEnB,kBAAmB,OAEnB,2BAA4B,CAC1B6B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GACAC,GACAC,KACG,CAAC,EAEN,wBAAyB,CACvBR,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GACAC,KACG,CAAC,EAEN,+BAAgC,CAC9BP,EACAC,EACAC,EACAC,EACAC,EACAE,EACAC,GACAE,GACAC,GACAF,KACG,CAAC,EAEN,mBAAoB,CAClBG,EACAC,EACAC,EACAC,EACAC,EACAC,IACG,CAAC,EAEN,mBAAoB,CAClBL,EACAC,EACAC,EACAE,EACAC,IACG,CAAC,EAEN,aAAc,CAAChB,EAAKY,EAAKroB,EAAU0oB,EAAOC,IAAY,CAAC,EAEvD,mBAAoB,CAAC1C,EAAG5oB,IAAW,CAAC,CACtC,CAAC,EAED,IAAMurB,EAAO,CACX,yBAAAzB,EACA,eAAAI,EACA,aAAAf,EACA,aAAAF,EACA,iBAAAG,EACA,qBAAAQ,EACA,QAAAZ,EACA,oBAAAa,EACA,aAAAR,EACA,mBAAAW,EACA,WAAY,IACV,WAAW,SAAW,YAAc,CAAC,CAAC,WAAW,SAEnD,mBAAAR,EACA,KAAM,YAAatB,EAAM,CACvB,MAAM,IAAI,MAAMA,EAAK,KAAK,GAAG,CAAC,CAChC,EACA,MAAAa,EACA,eAAAW,EAEA,eAAgB,SAAUvtB,EAAO,CAC3BA,aAAiB,cAAaA,EAAQ,IAAI,WAAWA,CAAK,GAC9D,IAAM4S,EAAS,kBACXA,EAAO,OAAS5S,EAAM,YACxB4sB,EAAM,oDAAoD,EAE5D,QAASlpB,EAAI,EAAGA,EAAIkP,EAAO,OAAQ,EAAElP,EAC/BkP,EAAO,WAAWlP,CAAC,IAAM1D,EAAM0D,CAAC,GAClCkpB,EAAM,oDAAoD,CAGhE,EAEA,WAAY,SAAU5sB,EAAO,CACvBA,aAAiB,cAAaA,EAAQ,IAAI,WAAWA,CAAK,GAC9D,IAAMysB,EAAIzsB,EAAM,YACZysB,EAAI,KAAOA,EAAI,MAAQ,IACzBG,EAAM,kBAAmBH,EAAG,+BAA+B,EAE7D2C,EAAK,eAAepvB,CAAK,CAC3B,CACF,EAEA,OAAO,OAAOqsB,EAAM,CAClB,UAAWrtB,EAAO,eAAiB,EAEnC,MAAOA,EAAO,WAAa,MAE3B,cAAe,CAAC,CAACA,EAAO,cAExB,QACEA,EAAO,SACP4tB,EAAM,mDAAmD,EAE3D,OACE5tB,EAAO,QACPA,EAAO,QAAQ,QACf4tB,EACE,yDACA,6CACA,8BACF,EAEF,MAAO,OAEP,QAAS,OAET,QAAS,MACX,CAAC,EAEDP,EAAK,oBAAsB,SAAUgD,EAAe,CAC9CA,aAAyB,cAC3BA,EAAgB,IAAI,WAAWA,CAAa,GAE9C1B,EAAyB0B,CAAa,EACtC,IAAMC,EAAOjD,EAAK,MAAMgD,EAAc,YAAc,CAAC,EACrD,OAAAhD,EACG,YAAYgD,EAAc,WAAW,EACrC,IAAIA,EAAc,WAAaA,EAAgB,CAAC,CAAC,EAAGC,CAAI,EACpDA,CACT,EAEA,CACE,IAAMC,EAAWvwB,EAAO,gBACtBwwB,EAAaxwB,EAAO,kBACpBywB,EAAazwB,EAAO,kBACtB,QAAW8N,IAAO,CAACyiB,EAAUC,EAAYC,CAAU,EACvCpD,EAAK,QAAQvf,CAAG,YACP,UACjB8f,EAAM,4BAA6B9f,EAAK,aAAa,EAGzDuf,EAAK,MAAQ,SAASU,EAAEN,EAAG,CACzB,OACEM,EAAE,KAAKN,CAAC,GACRuB,EAAe,KAAK,qBAAsBvB,EAAG,SAAS,CAE1D,EACAJ,EAAK,MAAM,KAAOA,EAAK,QAAQkD,CAAQ,EACvClD,EAAK,QAAU,SAASU,EAAEzd,EAAGmd,EAAG,CAC9B,IAAMiD,GAAK3C,EAAE,KAAKzd,EAAGmd,CAAC,EACtB,OAAOA,EACHiD,IAAM1B,EAAe,KAAK,uBAAwBvB,EAAG,SAAS,EAC9D,CACN,EACAJ,EAAK,QAAQ,KAAOA,EAAK,QAAQoD,CAAU,EAC3CpD,EAAK,QAAUA,EAAK,QAAQmD,CAAU,CACxC,CAEAnD,EAAK,kBAAoB,SAASU,EAAE4C,EAAS,CAC3C,GAAK,UAAU,QAoBR,GAAI,MAAM,QAAQA,CAAO,EAAG,CACjC,IAAMpD,EAAK,CAAC,EACZ,OAAAoD,EAAQ,QAASxC,GAAM,CACrBZ,EAAGY,CAAC,EAAIf,EAAK,2BAA2Be,CAAC,CAC3C,CAAC,EACMZ,CACT,SAAwB,OAAOoD,GAApB,SACT,cAAO,KAAKA,CAAO,EAAE,QAASxD,GAAM,CAClCwD,EAAQxD,CAAC,EAAIC,EAAK,2BAA2BD,CAAC,CAChD,CAAC,EACMwD,MA9Bc,CACrB,GAAI5C,EAAE,QAAS,OAAOA,EAAE,QACdA,EAAE,OACVA,EAAE,IAAM,gBACRA,EAAE,OAAS,UACXA,EAAE,KAAO,SAAU6C,GAAKC,GAAI,CAC1B,IAAMvgB,GAAIyd,EAAE,IAAI,KAAK6C,EAAG,EACxBC,GAAG,CAAC,EAAIvgB,GAAIA,GAAE,CAAC,EAAIsgB,GACnBC,GAAG,CAAC,EAAIvgB,GAAKyd,EAAE,OAAO,KAAKzd,GAAE,CAAC,CAAC,EAAI,CAACA,GAAE,CAAC,EAAIA,GAAE,CAAC,EAAK,EACrD,GAEF,IAAMid,EAAK,CAAC,EACVuD,EAAK,CAAC,EAAG,CAAC,EACRpsB,EAAI,EACNyoB,EACF,KAAQA,EAAIC,EAAK,0BAA0B1oB,GAAG,GAC5CqpB,EAAE,KAAKZ,EAAG2D,CAAE,EACZvD,EAAGuD,EAAG,CAAC,CAAC,EAAIA,EAAG,CAAC,EAElB,OAAQ/C,EAAE,QAAUR,CACtB,CAYA,OAAoB,OAAOoD,GAApB,SACH,CAAC,CAACvD,EAAK,2BAA2BuD,CAAO,EACzC,EACN,EAEAtD,EAAK,OAAS,OAAO,OAAO,OAAO,OAAO,IAAI,EAAG,CAC/C,QAASA,EAAK,QAAQ,6BAEtB,MAAO,SAAUI,EAAG,CAClB,OAAiB,OAAOA,GAApB,UAAyB,EAAEA,EAAIJ,EAAK,SAASI,CAAC,IAChDuB,EAAe,KACb,kCACA,UAAU,CAAC,EACX,GACF,EAGA3B,EAAK,QAAQ,2BAA2BI,CAAC,GACzCuB,EAAe,KACb,qBACAvB,EACA,wBACF,CAEJ,EAEA,YAAa,SAAUA,EAAGsD,EAAI,CACX,OAAOA,GAApB,UAA0B,EAAEA,EAAK1D,EAAK,SAAS0D,CAAE,IACnD/B,EAAe,KACb,sCACA,UAAU,CAAC,EACX,GACF,EAEF,IAAMgC,EAAM3D,EAAK,OAAO,MAAMI,EAAIsD,CAAE,EAC9BxD,EAAK,CAAC,EACR7oB,EAAI,EACNwH,EAAS,EACX,KAAOxH,EAAI+oB,EAAG,EAAE/oB,EAAGwH,GAAU6kB,EAAIxD,EAAG,KAAKyD,EAAM9kB,CAAM,EACrD,OAAOqhB,CACT,EAEA,SAAU,CAACE,EAAI,EAAGwD,EAAc,KACjBxD,IAAN,EACHJ,EAAK,OAAO,MAAM4D,EAAc,EAAI5D,EAAK,SAAS,EAClDA,EAAK,OAAO,YAAYI,EAAGwD,EAAc,EAAI5D,EAAK,SAAS,EAGjE,KAAM,SAAUU,EAAG,CACjB,IAAMmD,EAAW7D,EAAK,OAAO,QAC7B,GAAI,CACF,OAAOU,EAAEoD,CAAO,CAClB,QAAE,CACA9D,EAAK,OAAO,QAAQ6D,CAAQ,CAC9B,CACF,CACF,CAAC,EACD,OAAO,iBAAiB7D,EAAK,OAAQ,CACnC,QAAS,CACP,aAAc,GACd,SAAU,GACV,UAAW,GACX,IAAKA,EAAK,QAAQ,wBACpB,EAEA,MAAO,CACL,aAAc,GACd,SAAU,GACV,UAAW,GACX,IAAKA,EAAK,QAAQ,0BACpB,EAEA,UAAW,CACT,aAAc,GACd,SAAU,GACV,UAAW,GACX,IAAKA,EAAK,QAAQ,8BACpB,CACF,CAAC,EAEDD,EAAK,mBAAqB,IAAIL,IAAS,CACrC,GACQA,EAAK,SAAX,GACAqD,EAAK,aAAarD,EAAK,CAAC,CAAC,GACnBA,EAAK,CAAC,EAAE,oBAAd,EACA,CACA,IAAMqE,EAAKrE,EAAK,CAAC,EACjB,GAAUqE,EAAG,aAAT,EACF,OAAA/D,EAAK,QAAQ,mBAAmB,EAAG,CAAC,EAC7B+D,EAET,IAAMC,EAAQhE,EAAK,OAAO,QAC1B,GAAI,CACF,IAAII,EAAI2D,EAAG,WACTllB,EAAS,EACL3B,EAAI8iB,EAAK,QAAQ,mBACjB/oB,GAAO+oB,EAAK,OAAO,EACnBiE,GAAS7D,EAAI,IAAMA,EAAI,IACvBtpB,GAAMkpB,EAAK,OAAO,MAAMiE,EAAM,EACpC,EAAG,CACD,IAAMC,GAAI9D,EAAI6D,GAASA,GAAS7D,EAChCljB,EAAEgnB,GAAGptB,EAAG,EACRitB,EAAG,IAAI7C,EAAejqB,GAAMH,GAAKA,GAAMotB,EAAC,EAAGrlB,CAAM,EACjDuhB,GAAK8D,GACLrlB,GAAUqlB,EACZ,OAAS9D,EAAI,EACf,OAAS/lB,EAAG,CACV,QAAQ,MACN,sEAEAA,CACF,CACF,QAAE,CACA2lB,EAAK,OAAO,QAAQgE,CAAK,CAC3B,CACA,OAAOD,CACT,CACA/D,EAAK,QAAQ,mBAAmB,GAAGN,CAAI,CACzC,EAEA,IAAIyE,EAiOJ,GA/NApE,EAAK,wBAA0B,UAAY,CACzC,GAAkBoE,IAAd,OAA+B,OAAOA,EAE1C,IAAMC,EAAOzxB,EAAO,cACpB,GACE,CAACyxB,GACD,CAAC,WAAW,kBACZ,CAAC,WAAW,2BACZ,CAAC,WAAW,qBAEZ,OAAQD,EAAkB,GAE5B,GAAI,CACF,OACEC,GAEEpE,EAAK,aACH,4BACA,MACA,CAAC,QAAQ,EACToE,CACF,IANF,EAQQD,EAAkBC,EAElBD,EAAkB,EAE9B,MAAY,CACV,OAAQA,EAAkB,EAC5B,CACF,EAEApE,EAAK,sCAAwC,SAAUpgB,EAAM,CAC3D,IAAM/C,EAAImjB,EAAK,wBAAwB,EACvC,OAAOnjB,GAAK+C,EAAOA,EAAK,WAAW/C,EAAI,GAAG,EAAI,EAChD,EAEAmjB,EAAK,uBAAyB,SAAU6B,EAAKyC,EAASC,EAAS,EAAG,CAChE,GAAI,CACF,IAAMC,EAAKxE,EAAK,iBAAiBsE,CAAO,EACxC,OAAKE,EACK3C,EAGD2C,IAAOxE,EAAK,kBAAkB6B,EAAK0C,CAAM,EAAIC,EAAK,GAFlDA,IAAOxE,EAAK,iBAAiB,CAAC,EAAIwE,EAAK,GAFhC,EAMlB,MAAY,CACV,MAAO,EACT,CACF,EAEAxE,EAAK,oBAAsB,UAAY,CACrC,IAAMG,EAAK,CAAC,EACRsE,EAAOzE,EAAK,iBAAiB,CAAC,EAClC,KAAOyE,GAAM,CACX,IAAMC,EAAO,IAAI1E,EAAK,YAAYyE,CAAI,EACtCtE,EAAG,KAAKF,EAAK,SAASyE,EAAK,MAAM,CAAC,EAClCD,EAAOC,EAAK,OACZA,EAAK,QAAQ,CACf,CACA,OAAOvE,CACT,EAEAH,EAAK,qBAAuB,SAAU6B,EAAK8C,EAAS,EAAG,CACrD9C,EAAM5B,EAAK,MAAM,eAAe,WAAY4B,CAAG,EAC1CA,GAAKrB,EAAM,4BAA4B,EACvCP,EAAK,eAAeO,EAAM,kCAAkC,EACjE,IAAMoE,EAAQ3E,EAAK,gBAAgB,EAC/B4E,EACJ,GAAI,CACF,IAAMC,EAAQ7E,EAAK,YAAY,EAAIA,EAAK,SAAS,EAC3C8E,EAAQD,EAAQ,EAEhBE,GAAUL,EACZ1E,EAAK,MAAM0E,CAAM,EACfA,EACA1E,EAAK,mBAAmB,GAAK0E,CAAM,EACrC,EACAxE,GAAKF,EAAK,QAAQ,2BACpB4B,EACAmD,GACAD,EACAD,EACA,CACF,EACI3E,IACFK,EACE,0CACAuD,EAAQ,KAAK,kBAAkB5D,EAAE,CACnC,EAEF0E,EAAO5E,EAAK,QAAQ8E,CAAK,EACzB,IAAME,GAAOhF,EAAK,KAAK6E,EAAO,KAAK,EACnC,OAAA3E,GAAK8E,GACDhF,EAAK,OAAO,EAAE,MAAM4E,EAAMA,EAAO,OAAOI,EAAI,CAAC,EAC7C,IAAI,WACD9E,EACT,QAAE,CACI0E,GAAM5E,EAAK,QAAQ,aAAa4E,CAAI,EACxC5E,EAAK,eAAe2E,CAAK,CAC3B,CACF,EAEA5E,EAAK,kBAAoB,CAACkF,EAAWX,EAAS,IAC5CvB,EAAK,qBAAqBkC,EAAWX,CAAM,EAE7CvE,EAAK,6BAA+B,CAACmF,EAAM9E,IAEvCL,EAAK,0BAA0BmF,EAAM9E,CAAC,IACrCA,EACGuB,EAAe,KACb,kBACAvB,EACA,uCACF,EACA,GAIRL,EAAK,6BAA+B,SAAUvlB,EAAUwK,EAAMmgB,EAAS,CACrE,IAAIC,EACApgB,GAAQgb,EAAK,MAAMhb,CAAI,EACzBogB,EAAQpgB,EAERA,aAAgB,aAChBA,aAAgB,YAEhBogB,EAAQpF,EAAK,oBAAoBhb,CAAI,GACjC,UAAU,OAAS,GAAK,CAAC+d,EAAK,QAAQoC,CAAO,GAAKA,EAAU,KAC9DA,EAAUngB,EAAK,aAGjBqb,EAAa,KACX,0DACF,EAEF,GAAI,EACE,CAAC0C,EAAK,QAAQoC,CAAO,GAAKA,EAAU,IACtC9E,EAAa,KACX,0DACF,EAEF,IAAMH,EAAK6C,EAAK,gCACdvoB,EACA4qB,EACAD,CACF,EACIjF,GACFG,EAAa,KACX,mDACAN,EAAK,kBAAkBG,CAAE,CAC3B,CACJ,QAAE,CACAF,EAAK,QAAQoF,CAAK,CACpB,CACF,EAEArF,EAAK,2BAA6B,SAChCsF,EACA7qB,EACAwK,EACAmgB,EACA,CACAxyB,EAAO,KACL,iDACA,4DACA,gDACF,EACA,IAAIyyB,EACApgB,GACEgb,EAAK,MAAMhb,CAAI,EACjBogB,EAAQpgB,EACCA,aAAgB,cACzBA,EAAO,IAAI,WAAWA,CAAI,GAExBA,aAAgB,YAClBogB,EAAQpF,EAAK,oBAAoBhb,CAAI,GAEnC,UAAU,OAAS,GACnB,CAAC+d,EAAK,QAAQoC,CAAO,GACrBA,EAAU,KAEVA,EAAUngB,EAAK,aAGjBqb,EAAa,KACX,6DACF,GAGF+E,EAAQ,GAEN,CAACrC,EAAK,QAAQoC,CAAO,GAAKA,EAAU,KACtCnF,EAAK,QAAQoF,CAAK,EAClB/E,EAAa,KACX,wDACF,GAEF,GAAI,CACF,IAAMH,EAAK6C,EAAK,8BACdsC,EACA7qB,EACA4qB,EACAD,CACF,EACIjF,GACFG,EAAa,KACX,mDACAN,EAAK,kBAAkBG,CAAE,CAC3B,CACJ,QAAE,CACAF,EAAK,QAAQoF,CAAK,CACpB,CACF,EAEArF,EAAK,yBAA4ByC,GAAQ,CACvC,GAAiB,OAAOA,GAApB,SACF,OAAOA,EAET,IAAM1U,EAAI4T,EAAe,CAAC,EAC1B,OAAO5T,IAAM,EAAI,OAAYA,CAC/B,EAEIiV,EAAK,WAAW,EAAG,CACrB,IAAMuC,EAAc,SAAUC,EAAO,CACnC,IAAMrF,EAAK,OAAO,OAAO,IAAI,EAC7B,OAAAA,EAAG,OAAS,SAAWqF,EACvBrF,EAAG,OAAS,CAAC,GACKqF,IAAd,WAA8BA,IAAP,KACzBrF,EAAG,OAAO,KAAK,WAAW,cAAc,GAC1BqF,IAAZ,SAA4BA,IAAP,KACvBrF,EAAG,OAAO,KAAK,WAAW,YAAY,EACjCA,CACT,EAEAH,EAAK,uBAAyB,SAAUwF,EAAQ,GAAI,CAClD,IAAIrF,EAAK,EACHsF,EAASF,EAAYC,CAAK,EAChC,OAAAC,EAAO,OAAO,QAASC,GAAM,CAC3B,IAAMC,EAAO,CAAC,EACVruB,GACJ,IAAKA,GAAI,EAAGA,GAAIouB,EAAE,OAAQ,EAAEpuB,GAAG,CAC7B,IAAMyoB,GAAI2F,EAAE,IAAIpuB,EAAC,EACbyoB,GAAE,WAAW0F,EAAO,MAAM,GAAGE,EAAK,KAAK5F,EAAC,CAC9C,CACA4F,EAAK,QAASC,IAAOF,EAAE,WAAWE,EAAE,CAAC,EACrCzF,GAAMwF,EAAK,MACb,CAAC,EACMxF,CACT,EAEAH,EAAK,sBAAwB,SAAUwF,EAAQ,GAAI,CACjD,IAAI7B,EAAK,EACH8B,EAASF,EAAYC,CAAK,EAChC,OAAAC,EAAO,OAAO,QAASC,GAAM,CAC3B,IAAIpuB,EACJ,IAAKA,EAAI,EAAGA,EAAIouB,EAAE,OAAQ,EAAEpuB,EAAG,CAC7B,IAAMyoB,GAAI2F,EAAE,IAAIpuB,CAAC,EACbyoB,GAAE,WAAW0F,EAAO,MAAM,IAC5B9B,GAAM5D,GAAE,OACR4D,GAAM+B,EAAE,QAAQ3F,EAAC,EAAE,OAEvB,CACF,CAAC,EACM4D,EAAK,CACd,CACF,CAEA3D,EAAK,kBAAoB,SAAU6B,EAAK9X,KAAO4V,EAAM,CAqBnD,OApBK,KAAK,IACR,KAAK,EAAIM,EAAK,MAAM,4BAA6B,MAAO,CACtD,WACA,MACA,eACF,CAAC,EACD,KAAK,IAAMA,EAAK,MAAM,8BAA+B,MAAO,CAC1D,WACA,MACA,IACA,MACA,KACF,CAAC,EACD,KAAK,GAAKA,EAAK,MAAM,6BAA8B,MAAO,CACxD,WACA,MACA,MACA,GACF,CAAC,GAEKlW,EAAI,CACV,KAAKiW,EAAK,4BACV,KAAKA,EAAK,+BACV,KAAKA,EAAK,sCACV,KAAKA,EAAK,sCACV,KAAKA,EAAK,iCACV,KAAKA,EAAK,4BACV,KAAKA,EAAK,4BACV,KAAKA,EAAK,+BACV,KAAKA,EAAK,0BACV,KAAKA,EAAK,gCACV,KAAKA,EAAK,mCACV,KAAKA,EAAK,wBACV,KAAKA,EAAK,wBACV,KAAKA,EAAK,4BACV,KAAKA,EAAK,mCACV,KAAKA,EAAK,+BACV,KAAKA,EAAK,gCACV,KAAKA,EAAK,kCACR,OAAO,KAAK,GAAG6B,EAAK9X,EAAI4V,EAAK,CAAC,EAAGA,EAAK,CAAC,GAAK,CAAC,EAC/C,KAAKK,EAAK,0BACR,OAAO,KAAK,IAAI6B,EAAK9X,EAAI4V,EAAK,CAAC,EAAGA,EAAK,CAAC,EAAGA,EAAK,CAAC,CAAC,EACpD,KAAKK,EAAK,2BACR,OAAO,KAAK,EAAE6B,EAAK9X,EAAI4V,EAAK,CAAC,CAAC,EAChC,QACE,OAAOK,EAAK,aAChB,CACF,EAAE,KAAK,OAAO,OAAO,IAAI,CAAC,EAE1BA,EAAK,oBAAsB,SACzB6F,EACAC,EAAuB,GACvB,CACA,IAAIpyB,EACEqyB,EAAU/F,EAAK,mBAAmB6F,CAAI,EAC5C,OAAQE,EAAS,CACf,KAAK/F,EAAK,eACJC,EAAK,eACPvsB,EAAMssB,EAAK,oBAAoB6F,CAAI,EAC/B7C,EAAK,iBAAiBtvB,CAAG,IAAGA,EAAM,OAAOA,CAAG,IAC3CA,EAAMssB,EAAK,qBAAqB6F,CAAI,EAC3C,MACF,KAAK7F,EAAK,aACRtsB,EAAMssB,EAAK,qBAAqB6F,CAAI,EACpC,MACF,KAAK7F,EAAK,YACRtsB,EAAMssB,EAAK,mBAAmB6F,CAAI,EAClC,MACF,KAAK7F,EAAK,YAAa,CACrB,IAAMK,EAAIL,EAAK,oBAAoB6F,CAAI,EACjCG,EAAQhG,EAAK,mBAAmB6F,CAAI,EACtCxF,GAAK,CAAC2F,GACRjC,EAAQ,eAAe,KACrB,8CACA1D,EACA,SACF,EACF3sB,EAAM2sB,EAAIJ,EAAK,OAAO,EAAE,MAAM+F,EAAOA,EAAQ,OAAO3F,CAAC,CAAC,EAAI,KAC1D,KACF,CACA,KAAKL,EAAK,YACRtsB,EAAM,KACN,MACF,QACMoyB,GACFtF,EACER,EAAK,gBACL,kCACA+F,CACF,EAEFryB,EAAM,MACV,CACA,OAAOA,CACT,EAEAssB,EAAK,qBAAuB,SAC1BiG,EACAC,EACAJ,EAAuB,GACvB,CACA,IAAIxuB,EACE6uB,EAAM,CAAC,EACb,IAAK7uB,EAAI,EAAGA,EAAI2uB,EAAM,EAAE3uB,EACtB6uB,EAAI,KACFnG,EAAK,oBACHC,EAAK,QAAQiG,EAAQjG,EAAK,UAAY3oB,CAAC,EACvCwuB,CACF,CACF,EAEF,OAAOK,CACT,EAEAnG,EAAK,wBAA0B,SAAUmF,EAAM7qB,EAAG,CAC5CA,aAAasnB,EACf5B,EAAK,2BAA2BmF,CAAI,EAEpCnF,EAAK,qBAAqBmF,EAAM,GAAK7qB,EAAG,EAAE,CAE9C,EAEA0lB,EAAK,kBAAoB,SAAUmF,EAAMlmB,EAAK,CAC5C,GAAIA,aAAe,MAAO,CACxB+gB,EAAK,wBAAwBmF,EAAMlmB,CAAG,EACtC,MACF,CACA,GAAI,CACF,OAAQ,OAAOA,EAAK,CAClB,IAAK,YACH,MACF,IAAK,UACH+gB,EAAK,mBAAmBmF,EAAMlmB,EAAM,EAAI,CAAC,EACzC,MACF,IAAK,SACC+jB,EAAK,aAAa/jB,CAAG,EACvB+gB,EAAK,mBAAmBmF,EAAM,OAAOlmB,CAAG,CAAC,EAChC+jB,EAAK,iBAAiB/jB,CAAG,EAClC+gB,EAAK,sBAAsBmF,EAAM,OAAOlmB,CAAG,CAAC,EACnCghB,EAAK,cACV+C,EAAK,aAAa/jB,CAAG,EACvB+gB,EAAK,qBAAqBmF,EAAMlmB,CAAG,EAEnCuhB,EACE,eACAvhB,EAAI,SAAS,EACb,0BACF,EAEFuhB,EAAM,eAAgBvhB,EAAI,SAAS,EAAG,gBAAgB,EAExD,MACF,IAAK,SAAU,CACb,IAAI0hB,EACAqC,EAAK,QAAQ/jB,CAAG,EAClB0hB,EAAIX,EAAK,mBAETC,EAAK,eACL,OAAO,UAAUhhB,CAAG,GACpB+jB,EAAK,aAAa,OAAO/jB,CAAG,CAAC,EAE7B0hB,EAAIX,EAAK,qBAETW,EAAIX,EAAK,sBAEXW,EAAEwE,EAAMlmB,CAAG,EACX,KACF,CACA,IAAK,SAAU,CACb,GAAM,CAACpC,EAAGwjB,CAAC,EAAIJ,EAAK,aAAahhB,EAAK,EAAI,EAC1C+gB,EAAK,oBAAoBmF,EAAMtoB,EAAGwjB,EAAGL,EAAK,mBAAmB,EAC7D,KACF,CACA,IAAK,SACH,GAAa/gB,IAAT,KAAc,CAChB+gB,EAAK,oBAAoBmF,CAAI,EAC7B,KACF,SAAWnC,EAAK,qBAAqB/jB,CAAG,EAAG,CACzC,IAAM+mB,EAAQ/F,EAAK,oBAAoBhhB,CAAG,EAC1C+gB,EAAK,oBACHmF,EACAa,EACA/mB,EAAI,WACJ+gB,EAAK,mBACP,EACA,KACF,CAEF,QACEQ,EACE,iDACA,OAAOvhB,EACPA,CACF,CACJ,CACF,OAAS3E,EAAG,CACV0lB,EAAK,wBAAwBmF,EAAM7qB,CAAC,CACtC,CACF,EAEA0lB,EAAK,kBAAoB,SACvBoG,EACAC,EACAP,EAAuB,GACvB,CACA,IAAM/E,EAAIf,EAAK,qBAAqBoG,EAAOC,CAAI,EAC/C,OAAatF,IAAN,EACH,OACAf,EAAK,oBAAoBe,EAAG+E,CAAoB,CACtD,EAEA,IAAMQ,EAAgB,SAAUC,EAAMF,EAAMG,EAAM,CAChDA,EAAOxG,EAAKwG,CAAI,EACX,KAAK,IACLvG,EAAK,QAAQ,KAAK,IAAK,CAAC,EADd,KAAK,IAAMA,EAAK,SAAS,EAExC,IAAME,EAAKqG,EAAKD,EAAMF,EAAM,KAAK,GAAG,EACpC,GAAIlG,EACF,OAAOG,EAAa,KAClBH,EACA,UAAU,CAAC,EAAI,uBAAyBA,CAC1C,EACF,IAAMsG,EAAKxG,EAAK,QAAQ,KAAK,GAAG,EAChC,OAAOwG,EAAKzG,EAAK,oBAAoByG,EAAI,EAAI,EAAI,MACnD,EAAE,KAAK,OAAO,OAAO,IAAI,CAAC,EAE1BzG,EAAK,yBAA2B,CAAC6B,EAAKwE,IACpCC,EAAczE,EAAKwE,EAAM,uBAAuB,EAElDrG,EAAK,yBAA2B,CAAC6B,EAAKwE,IACpCC,EAAczE,EAAKwE,EAAM,uBAAuB,EAElDrG,EAAK,wBAA0B,CAAC0G,EAAgBL,IAC9CC,EAAcI,EAAgBL,EAAM,sBAAsB,EAE5DrG,EAAK,wBAA0B,CAAC0G,EAAgBL,IAC9CC,EAAcI,EAAgBL,EAAM,sBAAsB,EAE5D,IAAMtC,EAAU,CACd,eAAgBnC,EAChB,aAActB,EACd,KAAAN,EACA,KAAAgD,EACA,KAAA/C,EACA,OAAArtB,EAEA,QAAS,OAAO,OAAO,IAAI,EAE3B,OAAQ,OAER,cAAe,eAAe+zB,GAAK,CACjC,GAAIA,EAAG,mBAAmB,QAAS,OAAOA,EAAG,QAC7C,IAAIC,EAAM/G,EAAoB,kBAC9B,OAAOA,EAAoB,kBAC3B,IAAMgH,EAAW,UACV9C,EAAQ,gBACX,OAAOA,EAAQ,KAEf,OAAOA,EAAQ,cAEVA,GAEH+C,EAAWxsB,GAAM,CACrB,MAAA1H,EAAO,MAAM,uCAAwC0H,CAAC,EAChDA,CACR,EACA,GAAI,CAACssB,GAAO,CAACA,EAAI,OACf,OAAQD,EAAG,QAAUE,EAAS,EAAE,MAAMC,CAAO,EAE/CF,EAAMA,EAAI,IAAKjG,GACNA,aAAa,SAAW,MAAO5S,IAAM4S,EAAEoD,CAAO,EAAIpD,CAC1D,EACDiG,EAAI,KAAKC,CAAQ,EACjB,IAAIhqB,EAAI,QAAQ,QAAQknB,CAAO,EAC/B,KAAO6C,EAAI,QAAQ/pB,EAAIA,EAAE,KAAK+pB,EAAI,MAAM,CAAC,EACzC,OAAQD,EAAG,QAAU9pB,EAAE,MAAMiqB,CAAO,CACtC,EAEA,WAAY,MACd,EACA,GAAI,CACFjH,EAAoB,aAAa,QAASc,GAAM,CAC9CA,EAAEoD,CAAO,CACX,CAAC,CACH,OAASzpB,EAAG,CACV,cAAQ,MAAM,uCAAwCA,CAAC,EACjDA,CACR,CACA,cAAOulB,EAAoB,aAC3BA,EAAoB,QAAUkE,EACvBA,CACT,EAEA,WAAW,oBAAoB,aAAe,CAAC,EAE/C,WAAW,oBAAoB,kBAAoB,CAAC,EAEpD,WAAW,oBAAoB,cAAgB,OAAO,OAAO,IAAI,EAEjE,WAAW,oBAAoB,QAAU,OAEzC,WAAW,oBAAsB,SAAUgD,EAAQ,CACjD,aACkBA,EAAO,gBAArB,SACFA,EAAO,cAAgB,CAAC,CAAC,WAAW,eAGtC,IAAMC,EAAO,IAAIrH,IAAS,CACxB,MAAM,IAAI,MAAMA,EAAK,KAAK,GAAG,CAAC,CAChC,EAEKoH,EAAO,SACV,OAAO,eAAeA,EAAQ,UAAW,CACvC,WAAY,GACZ,aAAc,GACd,IAAK,IAAMA,EAAO,UAAYA,EAAO,SAAS,OAChD,CAAC,EAGH,IAAME,EAAQF,EAAO,WAAa,MAC5BG,EAAaH,EAAO,UACdE,IAAV,MACI,EACUA,IAAV,MACE,EACAD,EAAK,uBAAwBC,CAAK,EAEpCE,EAAQ,OAAO,OAAO,IAAI,EAEhCA,EAAM,SAAW,EAEjBA,EAAM,OAAS,KAEfA,EAAM,gBAAkB,CAAC,EAEzBA,EAAM,YAAc,CAAC,EAErBA,EAAM,YAAc,IAAI,YACxBA,EAAM,YAAc,IAAI,YAAY,OAAO,EAE3CJ,EAAO,SAAY1G,GAAM,CACvB,OAAQA,EAAG,CACT,IAAK,KACH,MAAO,GACT,IAAK,MACH,MAAO,GACT,IAAK,MACL,IAAK,MACL,IAAK,QACH,MAAO,GACT,IAAK,MACL,IAAK,MACL,IAAK,SACH,MAAO,GACT,IAAK,IACH,OAAO6G,EACT,QACE,OAAQ,GAAK7G,GAAG,SAAS,GAAG,EAAI6G,EAAY,MAChD,CACF,EAEA,IAAME,EAAe,UAAY,CAC/B,GAAI,CAACD,EAAM,OACTA,EAAM,OACJJ,EAAO,kBAAkB,YAAY,OACjCA,EAAO,OACPA,EAAO,QAAQ,eACZI,EAAM,WAAaA,EAAM,OAAO,OAAO,WAChD,OAAOA,EAGT,IAAM3uB,EAAI2uB,EAAM,OAAO,OACvB,OAAAA,EAAM,MAAQ,IAAI,UAAU3uB,CAAC,EAC7B2uB,EAAM,OAAS,IAAI,WAAW3uB,CAAC,EAC/B2uB,EAAM,OAAS,IAAI,WAAW3uB,CAAC,EAC/B2uB,EAAM,QAAU,IAAI,YAAY3uB,CAAC,EACjC2uB,EAAM,OAAS,IAAI,WAAW3uB,CAAC,EAC/B2uB,EAAM,QAAU,IAAI,YAAY3uB,CAAC,EAC7BuuB,EAAO,gBACTI,EAAM,OAAS,IAAI,cAAc3uB,CAAC,EAClC2uB,EAAM,QAAU,IAAI,eAAe3uB,CAAC,GAEtC2uB,EAAM,QAAU,IAAI,aAAa3uB,CAAC,EAClC2uB,EAAM,QAAU,IAAI,aAAa3uB,CAAC,EAClC2uB,EAAM,SAAW3uB,EAAE,WACZ2uB,CACT,EAEAJ,EAAO,MAAQ,IAAMK,EAAa,EAAE,MAEpCL,EAAO,OAAS,IAAMK,EAAa,EAAE,OAErCL,EAAO,OAAS,IAAMK,EAAa,EAAE,OAErCL,EAAO,QAAU,IAAMK,EAAa,EAAE,QAEtCL,EAAO,OAAS,IAAMK,EAAa,EAAE,OAErCL,EAAO,QAAU,IAAMK,EAAa,EAAE,QAEtCL,EAAO,YAAc,SAAU1G,EAAGgH,EAAW,GAAM,CACjD,IAAIC,EACE1vB,EACJuvB,EAAM,QAAUA,EAAM,WAAaA,EAAM,OAAO,OAAO,WACnDA,EACAC,EAAa,EACnB,OAAQ/G,EAAG,CACT,KAAK,UACH,OAAOzoB,EAAE,MACX,KAAK,WACH,OAAOA,EAAE,OACX,KAAK,WACH,OAAOA,EAAE,OACX,KAAK,YACH,OAAOA,EAAE,QACX,KAAK,WACH,OAAOA,EAAE,OACX,KAAK,YACH,OAAOA,EAAE,QACX,IAAK,GACH,OAAOyvB,EAAWzvB,EAAE,OAASA,EAAE,MACjC,IAAK,IACH,OAAOyvB,EAAWzvB,EAAE,QAAUA,EAAE,OAClC,IAAK,IACH,OAAOyvB,EAAWzvB,EAAE,QAAUA,EAAE,OAClC,IAAK,IACH,GAAIA,EAAE,OAAQ,OAAOyvB,EAAWzvB,EAAE,QAAUA,EAAE,OAC9C,MACF,QACE,GAAImvB,EAAO,cAAe,CACxB,GAAI1G,IAAM,WAAW,eAAmB,OAAOzoB,EAAE,QAC5C,GAAIyoB,IAAM,WAAW,cAAkB,OAAOzoB,EAAE,OACrD,KACF,CACJ,CACAovB,EACE,mDACA,+BACF,CACF,EAEAD,EAAO,cAAgB,UAAY,CACjC,OAAOA,EAAO,QAAQ,yBACxB,EAEAA,EAAO,cAAgB,SAAUQ,EAAM,CACrC,IAAMC,EAAKT,EAAO,cAAc,EAChC,OAAOQ,EAAOC,EAAG,OAASA,EAAG,IAAID,CAAI,EAAI,MAC3C,EAEAR,EAAO,aAAe,SAASpG,EAAErY,EAAMmf,EAAK,CAuC1C,GAtCK9G,EAAE,IACLA,EAAE,EAAI,CACJ,SAAU,OAAO,OAAO,OAAO,OAAO,IAAI,EAAG,CAC3C,EAAG,MACH,EAAG,MACH,EAAG,MACH,EAAG,MACH,EAAG,MACH,EAAG,MACH,EAAG,KACL,CAAC,EAED,UAAW,OAAO,OAAO,OAAO,OAAO,IAAI,EAAG,CAC5C,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,GACP,CAAC,EAED,cAAe,SAAUwF,EAAKuB,EAAQrH,EAAG,CACnCA,EAAI,IAAK8F,EAAIuB,CAAM,EAAErH,CAAC,EACrB8F,EAAIuB,CAAM,EAAErH,EAAI,IAAM,IAAKA,GAAK,CAAC,CACxC,EAEA,OAAQ,kBAER,UAAW,SAAUoH,EAAK,CACxB,IAAMvkB,EAAIyd,EAAE,EAAE,OAAO,KAAK8G,CAAG,EAC7B,OAAOvkB,EAAIA,EAAE,CAAC,EAAIukB,EAAI,OAAO,CAAC,CAChC,EAEA,WAAa1Z,GACX4S,EAAE,EAAE,SAAS5S,CAAC,GAAKiZ,EAAK,4BAA6BjZ,CAAC,EAExD,YAAa,CAAC4Z,EAAMC,IAClBD,EAAK,KAAKhH,EAAE,EAAE,UAAUA,EAAE,EAAE,WAAWiH,CAAM,CAAC,CAAC,CACnD,GAEe,OAAOtf,GAApB,SAA0B,CAC5B,IAAMyF,EAAI0Z,EACVA,EAAMnf,EACNA,EAAOyF,CACT,CACA,IAAM8Z,EAAYlH,EAAE,EAAE,UAAU8G,CAAG,EAC7BK,EAAW,CAAC,EAAM,EAAI,EAC5BnH,EAAE,EAAE,cAAcmH,EAAU,OAAQD,EAAU,MAAM,EACpD,QAAW9Z,KAAK8Z,EAAWlH,EAAE,EAAE,YAAYmH,EAAU/Z,CAAC,EACtD,OAAY0Z,EAAI,CAAC,IAAb,IAAgBK,EAAS,KAAK,CAAC,GAEjCA,EAAS,KAAK,CAAC,EACfnH,EAAE,EAAE,YAAYmH,EAAUL,EAAI,CAAC,CAAC,GAElC9G,EAAE,EAAE,cAAcmH,EAAU,UAAWA,EAAS,MAAM,EACtDA,EAAS,QACP,EACA,GACA,IACA,IACA,EACA,EACA,EACA,EACA,CACF,EACAA,EAAS,KACP,EACA,EAEA,EACA,EACA,IACA,EACA,IACA,EACA,EACA,EACA,EAEA,EACA,EACA,IACA,EACA,CACF,EACO,IAAI,YAAY,SACrB,IAAI,YAAY,OAAO,IAAI,WAAWA,CAAQ,CAAC,EAC/C,CACE,EAAG,CAAExf,CAAQ,CACf,CACF,EAAE,QAAQ,CACZ,EAEA,IAAMyf,EAAoB,SAAWzf,EAAMmf,EAAKO,EAAQ,CAItD,GAHIA,GAAU,CAACb,EAAM,YAAY,QAC/BH,EAAK,uCAAuC,EAE7B,OAAO1e,GAApB,SAA0B,CAC5B,IAAMyF,EAAI0Z,EACVA,EAAMnf,EACNA,EAAOyF,CACT,EACiB,OAAO0Z,GAApB,UAA2B,EAAEnf,aAAgB,YAC/C0e,EACE,4EAEF,EAEF,IAAMQ,EAAKT,EAAO,cAAc,EAC1BkB,EAAST,EAAG,OACdzwB,EACJ,KAAOowB,EAAM,gBAAgB,SAC3BpwB,EAAMowB,EAAM,gBAAgB,IAAI,EAC5BK,EAAG,IAAIzwB,CAAG,IAAG,CACfA,EAAM,KACN,QACF,CAIGA,IACHA,EAAMkxB,EACNT,EAAG,KAAK,CAAC,GAEX,GAAI,CACF,OAAAA,EAAG,IAAIzwB,EAAKuR,CAAI,EACZ0f,GACFb,EAAM,YAAYA,EAAM,YAAY,OAAS,CAAC,EAAE,KAAKpwB,CAAG,EAEnDA,CACT,OAASuD,EAAG,CACV,GAAI,EAAEA,aAAa,WACjB,MAAIvD,IAAQkxB,GAAQd,EAAM,gBAAgB,KAAKc,CAAM,EAC/C3tB,CAEV,CAEA,GAAI,CACF,IAAMitB,EAAOR,EAAO,aAAaze,EAAMmf,CAAG,EAC1CD,EAAG,IAAIzwB,EAAKwwB,CAAI,EACZS,GACFb,EAAM,YAAYA,EAAM,YAAY,OAAS,CAAC,EAAE,KAAKpwB,CAAG,CAE5D,OAASuD,EAAG,CACV,MAAIvD,IAAQkxB,GAAQd,EAAM,gBAAgB,KAAKc,CAAM,EAC/C3tB,CACR,CACA,OAAOvD,CACT,EAEAgwB,EAAO,gBAAkB,CAACze,EAAMmf,IAC9BM,EAAkBzf,EAAMmf,EAAK,EAAK,EAEpCV,EAAO,sBAAwB,CAACze,EAAMmf,IACpCM,EAAkBzf,EAAMmf,EAAK,EAAI,EAEnCV,EAAO,kBAAoB,SAAUhwB,EAAK,CACxC,GAAI,CAACA,GAAaA,IAAN,EAAW,OACvB,IAAMmxB,EAAKf,EAAM,gBACXK,EAAKT,EAAO,cAAc,EAChCmB,EAAG,KAAKnxB,CAAG,EACX,IAAMopB,EAAKqH,EAAG,IAAIzwB,CAAG,EACrB,OAAAywB,EAAG,IAAIzwB,EAAK,IAAI,EACTopB,CACT,EAEA4G,EAAO,KAAO,SAAWhwB,EAAKxB,EAAO,KAAM,CACrCA,EAAK,SAAS,GAAG,IAAGA,EAAO0xB,GAC/B,IAAMrvB,EACJuvB,EAAM,QAAUA,EAAM,WAAaA,EAAM,OAAO,OAAO,WACnDA,EACAC,EAAa,EACbe,EAAO,MAAM,QAAQpxB,CAAG,EAAI,CAAC,EAAI,OACnCopB,EACJ,EAAG,CAED,OADIgI,IAAMpxB,EAAM,UAAU,CAAC,EAAE,MAAM,GAC3BxB,EAAM,CACZ,IAAK,KACL,IAAK,KACH4qB,EAAKvoB,EAAE,MAAMb,GAAO,CAAC,EACrB,MACF,IAAK,MACHopB,EAAKvoB,EAAE,OAAOb,GAAO,CAAC,EACtB,MACF,IAAK,MACHopB,EAAKvoB,EAAE,OAAOb,GAAO,CAAC,EACtB,MACF,IAAK,QACL,IAAK,MACHopB,EAAKvoB,EAAE,QAAQb,GAAO,CAAC,EACvB,MACF,IAAK,SACL,IAAK,MACHopB,EAAK,OAAOvoB,EAAE,QAAQb,GAAO,CAAC,CAAC,EAC/B,MACF,IAAK,MACH,GAAIgwB,EAAO,cAAe,CACxB5G,EAAK,OAAOvoB,EAAE,OAAOb,GAAO,CAAC,CAAC,EAC9B,KACF,CAEF,QACEiwB,EAAK,2BAA4BzxB,CAAI,CACzC,CACI4yB,GAAMA,EAAK,KAAKhI,CAAE,CACxB,OAASgI,GAAQ,UAAU,CAAC,EAAE,QAC9B,OAAOA,GAAQhI,CACjB,EAEA4G,EAAO,KAAO,SAAUhwB,EAAKqF,EAAO7G,EAAO,KAAM,CAC3CA,EAAK,SAAS,GAAG,IAAGA,EAAO0xB,GAC/B,IAAMrvB,EACJuvB,EAAM,QAAUA,EAAM,WAAaA,EAAM,OAAO,OAAO,WACnDA,EACAC,EAAa,EACnB,QAAWvqB,KAAK,MAAM,QAAQ9F,CAAG,EAAIA,EAAM,CAACA,CAAG,EAC7C,OAAQxB,EAAM,CACZ,IAAK,KACL,IAAK,KACHqC,EAAE,MAAMiF,GAAK,CAAC,EAAIT,EAClB,SACF,IAAK,MACHxE,EAAE,OAAOiF,GAAK,CAAC,EAAIT,EACnB,SACF,IAAK,MACHxE,EAAE,OAAOiF,GAAK,CAAC,EAAIT,EACnB,SACF,IAAK,QACL,IAAK,MACHxE,EAAE,QAAQiF,GAAK,CAAC,EAAIT,EACpB,SACF,IAAK,SACL,IAAK,MACHxE,EAAE,QAAQiF,GAAK,CAAC,EAAIT,EACpB,SACF,IAAK,MACH,GAAIxE,EAAE,OAAQ,CACZA,EAAE,OAAOiF,GAAK,CAAC,EAAI,OAAOT,CAAK,EAC/B,QACF,CAEF,QACE4qB,EAAK,4BAA8BzxB,CAAI,CAC3C,CAEF,OAAO,IACT,EAEAwxB,EAAO,QAAU,IAAIhwB,IACnBgwB,EAAO,KAAWhwB,EAAI,SAAV,EAAmBA,EAAI,CAAC,EAAIA,EAAKkwB,CAAK,EAEpDF,EAAO,QAAU,CAAChwB,EAAKqF,EAAQ,IAAM2qB,EAAO,KAAKhwB,EAAKqF,EAAO6qB,CAAK,EAElEF,EAAO,MAAQ,IAAIhwB,IACjBgwB,EAAO,KAAWhwB,EAAI,SAAV,EAAmBA,EAAI,CAAC,EAAIA,EAAK,IAAI,EAEnDgwB,EAAO,MAAQ,CAAChwB,EAAKqF,IAAU2qB,EAAO,KAAKhwB,EAAKqF,EAAO,IAAI,EAE3D2qB,EAAO,OAAS,IAAIhwB,IAClBgwB,EAAO,KAAWhwB,EAAI,SAAV,EAAmBA,EAAI,CAAC,EAAIA,EAAK,KAAK,EAEpDgwB,EAAO,OAAS,CAAChwB,EAAKqF,IAAU2qB,EAAO,KAAKhwB,EAAKqF,EAAO,KAAK,EAE7D2qB,EAAO,OAAS,IAAIhwB,IAClBgwB,EAAO,KAAWhwB,EAAI,SAAV,EAAmBA,EAAI,CAAC,EAAIA,EAAK,KAAK,EAEpDgwB,EAAO,OAAS,CAAChwB,EAAKqF,IAAU2qB,EAAO,KAAKhwB,EAAKqF,EAAO,KAAK,EAE7D2qB,EAAO,OAAS,IAAIhwB,IAClBgwB,EAAO,KAAWhwB,EAAI,SAAV,EAAmBA,EAAI,CAAC,EAAIA,EAAK,KAAK,EAEpDgwB,EAAO,OAAS,CAAChwB,EAAKqF,IAAU2qB,EAAO,KAAKhwB,EAAKqF,EAAO,KAAK,EAE7D2qB,EAAO,QAAU,IAAIhwB,IACnBgwB,EAAO,KAAWhwB,EAAI,SAAV,EAAmBA,EAAI,CAAC,EAAIA,EAAK,KAAK,EAEpDgwB,EAAO,QAAU,CAAChwB,EAAKqF,IAAU2qB,EAAO,KAAKhwB,EAAKqF,EAAO,KAAK,EAE9D2qB,EAAO,QAAU,IAAIhwB,IACnBgwB,EAAO,KAAWhwB,EAAI,SAAV,EAAmBA,EAAI,CAAC,EAAIA,EAAK,KAAK,EAEpDgwB,EAAO,QAAU,CAAChwB,EAAKqF,IAAU2qB,EAAO,KAAKhwB,EAAKqF,EAAO,KAAK,EAE9D2qB,EAAO,YAAcA,EAAO,KAE5BA,EAAO,YAAcA,EAAO,QAE5BA,EAAO,YAAcA,EAAO,KAE5BA,EAAO,YAAcA,EAAO,QAE5BA,EAAO,QAAWhwB,GACH,OAAOA,GAApB,UAA2BA,KAASA,EAAM,IAAMA,GAAO,EAEzDgwB,EAAO,MAAQA,EAAO,QAEtBA,EAAO,QAAU,SAAUhwB,EAAK,CAC9B,GAAI,CAACA,GAAO,CAACgwB,EAAO,MAAMhwB,CAAG,EAAG,OAAO,KACvC,IAAMqxB,EAAIhB,EAAa,EAAE,OACrBroB,EAAMhI,EACV,KAAOqxB,EAAErpB,CAAG,IAAM,EAAG,EAAEA,EAAK,CAC5B,OAAOA,EAAMhI,CACf,EAEA,IAAMiqB,EACY,OAAO,kBAAvB,IACI,UAAY,CAAC,EACb,kBACAqH,EAAe,SAAU7mB,EAAa4f,EAAOtjB,EAAK,CACtD,OAAOqpB,EAAM,YAAY,OACvB3lB,EAAY,kBAAkBwf,EAC1Bxf,EAAY,MAAM4f,EAAOtjB,CAAG,EAC5B0D,EAAY,SAAS4f,EAAOtjB,CAAG,CACrC,CACF,EAEAipB,EAAO,SAAW,SAAUhwB,EAAK,CAC/B,IAAMspB,EAAI0G,EAAO,QAAQhwB,CAAG,EAC5B,OAAOspB,EACHgI,EAAajB,EAAa,EAAE,OAAQrwB,EAAKA,EAAMspB,CAAC,EACvCA,IAAT,KACEA,EACA,EACR,EAEA0G,EAAO,QAAU,SAAUtwB,EAAK,CAC9B,GAAiB,OAAOA,GAApB,SAAyB,OAAO,KACpC,IAAM4pB,EAAI5pB,EAAI,OACVkB,EAAM,EACV,QAASL,EAAI,EAAGA,EAAI+oB,EAAG,EAAE/oB,EAAG,CAC1B,IAAIC,EAAId,EAAI,WAAWa,CAAC,EACpBC,GAAK,OAAUA,GAAK,QACtBA,EACG,QAAYA,EAAI,OAAU,IAAQd,EAAI,WAAW,EAAEa,CAAC,EAAI,MAEzDC,GAAK,IAAM,EAAEI,EACRJ,GAAK,KAAOI,GAAO,EACnBJ,GAAK,MAAQI,GAAO,EACxBA,GAAO,CACd,CACA,OAAOA,CACT,EAEAovB,EAAO,QAAU,SACfuB,EACAnC,EACArnB,EAAS,EACTypB,EAAW,GACXC,EAAS,GACT,CAQA,IANE,CAACrC,GACA,EAAEA,aAAe,YAAc,EAAEA,aAAe,cAEjDa,EAAK,sDAAsD,EAEzDuB,EAAW,IAAGA,EAAWpC,EAAI,OAASrnB,GACtC,EAAEypB,EAAW,IAAM,EAAEzpB,GAAU,GAAI,MAAO,GAC9C,IAAIxH,EAAI,EACNmxB,EAAMH,EAAK,OACPlH,EAAQtiB,EACZhB,EAAMgB,EAASypB,GAAYC,EAAS,EAAI,GAC1C,KAAOlxB,EAAImxB,GAAO3pB,EAAShB,EAAK,EAAExG,EAAG,CACnC,IAAIC,EAAI+wB,EAAK,WAAWhxB,CAAC,EAMzB,GALIC,GAAK,OAAUA,GAAK,QACtBA,EACG,QAAYA,EAAI,OAAU,IAC1B+wB,EAAK,WAAW,EAAEhxB,CAAC,EAAI,MAExBC,GAAK,IAAM,CACb,GAAIuH,GAAUhB,EAAK,MACnBqoB,EAAIrnB,GAAQ,EAAIvH,CAClB,SAAWA,GAAK,KAAO,CACrB,GAAIuH,EAAS,GAAKhB,EAAK,MACvBqoB,EAAIrnB,GAAQ,EAAI,IAAQvH,GAAK,EAC7B4uB,EAAIrnB,GAAQ,EAAI,IAAQvH,EAAI,EAC9B,SAAWA,GAAK,MAAQ,CACtB,GAAIuH,EAAS,GAAKhB,EAAK,MACvBqoB,EAAIrnB,GAAQ,EAAI,IAAQvH,GAAK,GAC7B4uB,EAAIrnB,GAAQ,EAAI,IAASvH,GAAK,EAAK,GACnC4uB,EAAIrnB,GAAQ,EAAI,IAAQvH,EAAI,EAC9B,KAAO,CACL,GAAIuH,EAAS,GAAKhB,EAAK,MACvBqoB,EAAIrnB,GAAQ,EAAI,IAAQvH,GAAK,GAC7B4uB,EAAIrnB,GAAQ,EAAI,IAASvH,GAAK,GAAM,GACpC4uB,EAAIrnB,GAAQ,EAAI,IAASvH,GAAK,EAAK,GACnC4uB,EAAIrnB,GAAQ,EAAI,IAAQvH,EAAI,EAC9B,CACF,CACA,OAAIixB,IAAQrC,EAAIrnB,GAAQ,EAAI,GACrBA,EAASsiB,CAClB,EAEA2F,EAAO,SAAW,SAAU2B,EAAQC,EAAQtI,EAAG,CAG7C,IAFI,CAACqI,GAAU,CAACC,IACd3B,EAAK,0CAA0C,EAC7C3G,EAAI,EAAGA,EAAI0G,EAAO,QAAQ,MAAM,EAAI,UAC/B,EAAE1G,EAAI,GAAI,MAAO,GAC1B,IAAMnpB,EAAO6vB,EAAO,OAAO,EACvBzvB,EAAI,EACNT,EACF,KAAOS,EAAI+oB,IAAMxpB,EAAKK,EAAKyxB,EAASrxB,CAAC,GAAI,EAAEA,EACzCJ,EAAKwxB,EAASpxB,CAAC,EAAIT,EAErB,OAAIS,EAAI+oB,IAAGnpB,EAAKwxB,EAASpxB,GAAG,EAAI,GACzBA,CACT,EAEAyvB,EAAO,gBAAkB,CAACtwB,EAAK+xB,EAAS,KAC/BrB,EAAM,YAAY,OAAOqB,EAAS/xB,EAAM,KAAOA,CAAG,EAG3D,IAAMmyB,EAAgB,CAAC1iB,EAAK4b,IAAa,EAErC,EAAE5b,EAAI,iBAAiB,WACvB,EAAEA,EAAI,mBAAmB,YAEzB8gB,EACE,yDACA,cACAlF,EAAW,KACb,CAEJ,EAEM+G,EAAc,SAClBP,EACAQ,EACAC,EACAjH,EACA,CAEA,GADA8G,EAAc7B,EAAQjF,CAAQ,EACb,OAAOwG,GAApB,SAA0B,OAAO,KAM9B,CACL,IAAM/wB,EAAI4vB,EAAM,YAAY,OAAOmB,CAAI,EACrCvxB,EAAMgyB,EAAUxxB,EAAE,OAAS,CAAC,EAC5BL,EAAOkwB,EAAa,EAAE,OACxB,OAAAlwB,EAAK,IAAIK,EAAGR,CAAG,EACfG,EAAKH,EAAMQ,EAAE,MAAM,EAAI,EAChBuxB,EAAmB,CAAC/xB,EAAKQ,EAAE,MAAM,EAAIR,CAC9C,CACF,EAEAgwB,EAAO,aAAe,CAACuB,EAAMQ,EAAmB,KAC9CD,EAAYP,EAAMQ,EAAkB/B,EAAO,MAAO,gBAAgB,EAEpEA,EAAO,gBAAkB,UAAY,CACnC6B,EAAc7B,EAAQ,iBAAiB,EACvC,IAAMiC,EAAI,CAAC,EACX,OAAA7B,EAAM,YAAY,KAAK6B,CAAC,EACjBA,CACT,EAEAjC,EAAO,eAAiB,SAAUkC,EAAO,CACvCL,EAAc7B,EAAQ,gBAAgB,EACtC,IAAM1G,EAAI,UAAU,OAChB8G,EAAM,YAAY,QAAQ8B,CAAK,EAC/B9B,EAAM,YAAY,OAAS,EAC3B9G,EAAI,GAAG2G,EAAK,4CAA4C,EAClD,UAAU,SAAhB,IAAwBiC,EAAQ9B,EAAM,YAAY9G,CAAC,GACvD8G,EAAM,YAAY,OAAO9G,EAAG,CAAC,EAC7B,QAASxjB,EAAIA,EAAIosB,EAAM,IAAI,GACrBlC,EAAO,cAAclqB,CAAC,EACxBkqB,EAAO,kBAAkBlqB,CAAC,EACrBkqB,EAAO,QAAQlqB,CAAC,CAE3B,EAEAkqB,EAAO,YAAc,SAAU1G,EAAG,CAC3B8G,EAAM,YAAY,QACrBH,EAAK,uCAAuC,EAE9C,IAAMnqB,EAAIkqB,EAAO,MAAM1G,CAAC,EACxB,OAAA8G,EAAM,YAAYA,EAAM,YAAY,OAAS,CAAC,EAAE,KAAKtqB,CAAC,EAC/CA,CACT,EAEA,OAAO,eAAekqB,EAAO,YAAa,QAAS,CACjD,aAAc,GACd,WAAY,GACZ,IAAK,IAAMI,EAAM,YAAY,OAC7B,IAAK,IAAMH,EAAK,qCAAqC,CACvD,CAAC,EAEDD,EAAO,mBAAqB,CAACuB,EAAMQ,EAAmB,KACpDD,EACEP,EACAQ,EACA/B,EAAO,YACP,sBACF,EAEF,IAAMmC,EAAkB,SAAUC,EAAUhB,EAAM,CAChD,IAAMiB,EAAQrC,EAAOoC,EAAW,cAAgB,OAAO,GACpDhB,EAAK,OAAS,GAAKpB,EAAO,SAC7B,EACIzvB,EAAI,EACR,OAAA6wB,EAAK,QAAS7tB,GAAM,CAClBysB,EAAO,QACLqC,EAAQrC,EAAO,UAAYzvB,IAC3ByvB,EAAOoC,EAAW,qBAAuB,cAAc,EAAE,GAAK7uB,CAAC,CACjE,CACF,CAAC,EACDysB,EAAO,QAAQqC,EAAQrC,EAAO,UAAYzvB,EAAG,CAAC,EACvC8xB,CACT,EAEArC,EAAO,oBAAuBoB,GAASe,EAAgB,GAAMf,CAAI,EAEjEpB,EAAO,cAAiBoB,GAASe,EAAgB,GAAOf,CAAI,EAE5DpB,EAAO,UAAY,CAACd,EAAMC,IAAU,CAClC,IAAMiC,EAAO,CAAC,EACd,QAAS7wB,EAAI,EAAGA,EAAI2uB,EAAM,EAAE3uB,EAAG,CAC7B,IAAM5D,EAAMqzB,EAAO,QAAQb,EAAQa,EAAO,UAAYzvB,CAAC,EACvD6wB,EAAK,KAAKz0B,EAAMqzB,EAAO,SAASrzB,CAAG,EAAI,IAAI,CAC7C,CACA,OAAOy0B,CACT,EAEApB,EAAO,gBAAkB,SAAUze,EAAM,CACvCye,EAAO,gBAAgB,EACvB,GAAI,CACF,OAAOze,EAAK,CACd,QAAE,CACAye,EAAO,eAAe,CACxB,CACF,EAEA,IAAMsC,EAAa,SAAUC,EAASzF,EAAa6D,EAAQ,CACzDkB,EAAc7B,EAAQW,CAAM,EAC5B,IAAM6B,EAAM1F,EAAc,MAAQoD,EAC9B/jB,EAAI6jB,EAAOW,CAAM,EAAE4B,GAAWzF,EAAc,EAAIqD,EAAU,EAE9D,GADAH,EAAO,KAAK7jB,EAAG,EAAGqmB,CAAG,EACXD,IAAN,EACF,OAAOpmB,EAET,IAAM8lB,EAAI,CAAC9lB,CAAC,EACZ,QAAS5L,EAAI,EAAGA,EAAIgyB,EAAS,EAAEhyB,EAC7B4L,GAAK2gB,EAAc,EAAIqD,EACvB8B,EAAE1xB,CAAC,EAAI4L,EACP6jB,EAAO,KAAK7jB,EAAG,EAAGqmB,CAAG,EAEvB,OAAOP,CACT,EAEAjC,EAAO,SAAW,CAACuC,EAAU,EAAGzF,EAAc,KAC5CwF,EAAWC,EAASzF,EAAa,OAAO,EAE1CkD,EAAO,eAAiB,CAACuC,EAAU,EAAGzF,EAAc,KAClDwF,EAAWC,EAASzF,EAAa,aAAa,EAEhDkD,EAAO,KAAO,SAAUnnB,EAAM,CAC5B,OACEmnB,EAAO,QAAQnnB,CAAI,GAAKonB,EAAK,+BAAgCpnB,CAAI,CAErE,EAEA,IAAM4pB,EAAiB,CAAC7I,EAAGN,IACzB2G,EAAKrG,EAAI,cAAeN,EAAG,cAAc,EAE3C0G,EAAO,MAAQ,SAAU0C,KAAU9J,EAAM,CACvC,IAAMgB,EAAI8I,aAAiB,SAAWA,EAAQ1C,EAAO,KAAK0C,CAAK,EAC/D,OAAM9I,aAAa,UACjBqG,EAAK,kBAAmByC,EAAO,oBAAoB,EACjD9I,EAAE,SAAWhB,EAAK,QACpB6J,EAAe7I,IAAM8I,EAAQ9I,EAAE,KAAO8I,EAAO9I,EAAE,MAAM,EAC1C,UAAU,SAAhB,GAA0B,MAAM,QAAQ,UAAU,CAAC,CAAC,EACvDA,EAAE,MAAM,KAAM,UAAU,CAAC,CAAC,EAC1BA,EAAE,MAAM,KAAMhB,CAAI,CACxB,EAEAwH,EAAM,MAAQ,OAAO,OAAO,IAAI,EAChCA,EAAM,MAAM,QAAU,OAAO,OAAO,IAAI,EAExCA,EAAM,MAAM,QAAQ,IAAM,IAAI,IAE9BA,EAAM,MAAM,QAAQ,OAAS,IAAI,IACjC,IAAMuC,EAAOvC,EAAM,MAAM,QAAQ,IAC/BwC,EAAUxC,EAAM,MAAM,QAAQ,OAE5BJ,EAAO,eACT2C,EAAK,IAAI,MAAQpyB,GAAM,OAAOA,CAAC,CAAC,EAElC,IAAMsyB,EACM3C,IAAV,MAAmB3vB,GAAMA,EAAI,EAAKA,GAAM,OAAOA,CAAC,EAAI,OAAO,CAAC,EAC9DoyB,EACG,IAAI,MAAOE,CAAS,EACpB,IAAI,MAAQtyB,IAAOA,EAAI,GAAK,KAAM,EAClC,IAAI,KAAOA,IAAOA,EAAI,GAAK,GAAI,EAC/B,IAAI,MAAQA,GAAM,OAAOA,CAAC,EAAE,QAAQ,CAAC,EACrC,IAAI,QAASoyB,EAAK,IAAI,KAAK,CAAC,EAC5B,IAAI,MAAOA,EAAK,IAAI,KAAK,CAAC,EAC1B,IAAI,SAAUA,EAAK,IAAI,KAAK,CAAC,EAC7B,IAAI,MAAOA,EAAK,IAAI,KAAK,CAAC,EAC1B,IAAI,OAASpyB,GAAMA,CAAC,EACpB,IAAI,KAAMoyB,EAAK,IAAI,MAAM,CAAC,EAC1B,IAAI,KAAME,CAAS,EACnB,IAAI,IAAKA,CAAS,EACrBD,EACG,IAAI,IAAKC,CAAS,EAClB,IAAI,UAAWA,CAAS,EACxB,IAAI,SAAW7I,GAAM,OAAOA,CAAC,CAAC,EAC9B,IAAI,OAASA,GAAG,EAAY,EAC5B,IAAI,OAASA,GAAMA,CAAC,EACpB,IAAI,KAAM4I,EAAQ,IAAI,MAAM,CAAC,EAEhC,CACE,IAAME,EAAe,CACnB,KACA,MACA,MACA,MACA,MACA,QACA,MACA,QACF,EACI9C,EAAO,eAAe8C,EAAa,KAAK,KAAK,EACjD,IAAMC,EAAWJ,EAAK,IAAIzC,CAAK,EAC/B,QAAW8C,KAAKF,EACdH,EAAK,IAAIK,EAAI,IAAKD,CAAQ,EAC1BH,EAAQ,IAAII,EAAI,IAAKD,CAAQ,EAC7BH,EAAQ,IAAII,EAAGL,EAAK,IAAIK,CAAC,GAAK/C,EAAK,yBAA0B+C,CAAC,CAAC,CAEnE,CAEA,IAAMC,EAAe,SAAUjJ,EAAG,CAChC,OAAiB,OAAOA,GAApB,SAA8BgG,EAAO,mBAAmBhG,CAAC,EACtDA,EAAI6I,EAAU7I,CAAC,EAAI,IAC5B,EACA2I,EACG,IAAI,SAAUM,CAAY,EAC1B,IAAI,OAAQA,CAAY,EACxB,IAAI,UAAWA,CAAY,EAE9BL,EACG,IAAI,SAAWryB,GAAMyvB,EAAO,SAASzvB,CAAC,CAAC,EACvC,IAAI,OAAQqyB,EAAQ,IAAI,QAAQ,CAAC,EACjC,IAAI,iBAAmBryB,GAAM,CAC5B,GAAI,CACF,OAAOA,EAAIyvB,EAAO,SAASzvB,CAAC,EAAI,IAClC,QAAE,CACAyvB,EAAO,QAAQzvB,CAAC,CAClB,CACF,CAAC,EACA,IAAI,eAAgBqyB,EAAQ,IAAI,gBAAgB,CAAC,EACjD,IAAI,OAASryB,GAAM,KAAK,MAAMyvB,EAAO,SAASzvB,CAAC,CAAC,CAAC,EACjD,IAAI,eAAiBA,GAAM,CAC1B,GAAI,CACF,OAAOA,EAAI,KAAK,MAAMyvB,EAAO,SAASzvB,CAAC,CAAC,EAAI,IAC9C,QAAE,CACAyvB,EAAO,QAAQzvB,CAAC,CAClB,CACF,CAAC,EAEH,IAAM2yB,EAAqB,KAAM,CAC/B,YAAYzG,EAAK,CACf,KAAK,KAAOA,EAAI,MAAQ,iBAC1B,CAEA,WAAWzC,EAAGmJ,EAAMC,EAAU,CAC5BnD,EAAK,wCAAwC,CAC/C,CACF,EAEA0C,EAAK,eAAiB,MAAMU,WAAuBH,CAAmB,CACpE,YAAYzG,EAAK,CACf,MAAMA,CAAG,EACLkG,EAAK,eAAe,WACtB,QAAQ,KACN,8CACA,yCACA,mCACAlG,CACF,EAEF,KAAK,KAAOA,EAAI,MAAQ,UACxB,KAAK,UAAYA,EAAI,UACjBA,EAAI,sBAAsB,WAC5B,KAAK,WAAaA,EAAI,WACjBA,EAAI,YAAWA,EAAI,UAAY,YAEtC,KAAK,UACHA,EAAI,WACJwD,EACE,oEACF,EACEoD,GAAe,WAAW,QAAQ5G,EAAI,SAAS,EAAI,GACrDwD,EACE,8BACExD,EAAI,QACJ,4CAEA4G,GAAe,WAAW,KAAK,IAAI,EACnC,GACJ,EAEF,KAAK,YAA8B,KAAK,YAArB,YACnB,KAAK,UAA0B,KAAK,YAAnB,UACjB,KAAK,YAA8B,KAAK,YAArB,YACnB,KAAK,UAA4B,KAAK,YAArB,YAAiC,CAAC,EAAI,OAEvD,KAAK,UACH5G,EAAI,qBAAqB,SAAWA,EAAI,UAAY,MACxD,CAEA,WAAW0G,EAAMC,EAAU,CACzB,OAAO,IACT,CAEA,WAAWzpB,EAAK,CACd,IAAM2pB,EAAK,KAAK,SAAW,KAAK,OAAS,IAAI,KACzClK,EAAKkK,EAAG,IAAI3pB,CAAG,EACnB,OAAkByf,IAAd,QAAkBkK,EAAG,IAAI3pB,EAAMyf,EAAK,CAAC,CAAE,EACpCA,CACT,CAEA,WAAWY,EAAGmJ,EAAMC,EAAU,CAC5B,IAAIG,EAAO,KAAK,UAIhB,GAHI,CAACA,GAAQ,KAAK,YAChBA,EAAO,KAAK,WAAW,KAAK,WAAWJ,EAAMC,CAAQ,CAAC,GAEpDG,GAAQA,EAAK,CAAC,IAAMvJ,EAAG,OAAOuJ,EAAK,CAAC,EACxC,GAAIvJ,aAAa,SAAU,CACrB,KAAK,YAAWA,EAAI,KAAK,UAAUA,CAAC,GACxC,IAAMwJ,EAAKxC,EAAkBhH,EAAG,KAAK,UAAW,KAAK,WAAW,EAUhE,GATIqJ,GAAe,kBACjBA,GAAe,SACb,2BACA,KACA,KAAK,WAAWF,EAAMC,CAAQ,EAC9B,IAAMI,EACNxJ,CACF,EAEEuJ,EAAM,CACR,GAAIA,EAAK,CAAC,EAAG,CACPF,GAAe,kBACjBA,GAAe,SACb,8BACA,KACA,KAAK,WAAWF,EAAMC,CAAQ,EAC9B,IAAMG,EAAK,CAAC,EACZvJ,CACF,EAEF,GAAI,CACFoG,EAAM,YAAYA,EAAM,YAAY,OAAS,CAAC,EAAE,KAC9CmD,EAAK,CAAC,CACR,CACF,MAAY,CAAC,CACf,CACAA,EAAK,CAAC,EAAIvJ,EACVuJ,EAAK,CAAC,EAAIC,CACZ,CACA,OAAOA,CACT,SAAWxD,EAAO,MAAMhG,CAAC,GAAcA,IAAT,MAA4BA,IAAd,OAAiB,CAC3D,GAAIuJ,GAAQA,EAAK,CAAC,GAAKA,EAAK,CAAC,IAAMvJ,EAAG,CAChCqJ,GAAe,kBACjBA,GAAe,SACb,8BACA,KACA,KAAK,WAAWF,EAAMC,CAAQ,EAC9B,IAAMG,EAAK,CAAC,EACZvJ,CACF,EAEF,GAAI,CACFoG,EAAM,YAAYA,EAAM,YAAY,OAAS,CAAC,EAAE,KAAKmD,EAAK,CAAC,CAAC,CAC9D,MAAY,CAAC,CACbA,EAAK,CAAC,EAAIA,EAAK,CAAC,EAAIvJ,EAAI,CAC1B,CACA,OAAOA,GAAK,CACd,KACE,OAAM,IAAI,UACR,4EAEG,KAAK,KAAO,KAAK,KAAO,IAAM,IAC/B,+BACA,KAAK,UACL,GACJ,CAEJ,CACF,EAEA2I,EAAK,eAAe,UAAY,GAEhCA,EAAK,eAAe,iBAAmB,GAEvCA,EAAK,eAAe,SAAW,QAAQ,MAAM,KAAK,OAAO,EAEzDA,EAAK,eAAe,WAAa,CAC/B,YACA,UACA,YACA,WACF,EAEA,IAAMc,EAAsBT,GAC1BL,EAAK,IAAIK,CAAC,GAAK/C,EAAK,8BAA+B+C,CAAC,EAEhDU,EAAyBV,GAC7BJ,EAAQ,IAAII,CAAC,GAAK/C,EAAK,4BAA6B+C,CAAC,EAEvD5C,EAAM,MAAM,WAAa,CAAC4C,KAAMpK,IAAS6K,EAAmBT,CAAC,EAAE,GAAGpK,CAAI,EAEtEwH,EAAM,MAAM,kBAAoB,CAAC4C,KAAMpK,IAAS+J,EAAK,IAAIK,CAAC,EAAE,GAAGpK,CAAI,EAEnEwH,EAAM,MAAM,cAAgB,CAAC4C,EAAGhJ,IACrBgJ,IAAT,KAAahJ,EAAIgJ,EAAIU,EAAsBV,CAAC,EAAEhJ,CAAC,EAAI,OAErDoG,EAAM,MAAM,qBAAuB,CAAC4C,EAAGhJ,IAC5BgJ,IAAT,KAAahJ,EAAIgJ,EAAIJ,EAAQ,IAAII,CAAC,EAAEhJ,CAAC,EAAI,OAE3CgG,EAAO,MAAQ,SAAU2D,EAAMC,KAAeC,EAAU,CAC5C,UAAU,SAAhB,GAA0B,MAAM,QAAQ,UAAU,CAAC,CAAC,IACtDA,EAAW,UAAU,CAAC,GAEpB7D,EAAO,MAAM2D,CAAI,IACnBA,EACE3D,EAAO,cAAc2D,CAAI,GACzB1D,EAAK,oDAAoD,GAE7D,IAAM6D,EAAUH,aAAgB,SAC1BI,EAAKD,EAAUH,EAAO3D,EAAO,KAAK2D,CAAI,EAG5C,GAFIG,IAASH,EAAOI,EAAG,MAAQ,oBAC3BF,EAAS,SAAWE,EAAG,QAAQtB,EAAekB,EAAMI,EAAG,MAAM,EACpDH,IAAT,MAA6BG,EAAG,SAAT,EACzB,OAAOA,EAEgCH,GAAT,MAC9BF,EAAsBE,CAAU,EAClC,QAAWZ,KAAKa,EACVb,aAAaE,EACfP,EAAK,IAAIK,EAAG,IAAIpK,IAASoK,EAAE,WAAW,GAAGpK,CAAI,CAAC,EAC3C6K,EAAmBT,CAAC,EAE3B,IAAMgB,EAAM5D,EAAM,MAClB,OAAU2D,EAAG,SAAT,EACK,IAAInL,IACTA,EAAK,OACD6J,EAAekB,EAAMI,EAAG,MAAM,EAC9BC,EAAI,cAAcJ,EAAYG,EAAG,KAAK,IAAI,CAAC,EAE5C,YAAanL,EAAM,CACpBA,EAAK,SAAWmL,EAAG,QAAQtB,EAAekB,EAAMI,EAAG,MAAM,EAC7D,IAAMlG,EAAQmC,EAAO,gBAAgB,EACrC,GAAI,CACF,IAAIzvB,EAAI,EACR,KAAOA,EAAIqoB,EAAK,OAAQ,EAAEroB,EACxBqoB,EAAKroB,CAAC,EAAIyzB,EAAI,kBAAkBH,EAAStzB,CAAC,EAAGqoB,EAAKroB,CAAC,EAAGqoB,EAAMroB,CAAC,EAC/D,OAAOyzB,EAAI,qBAAqBJ,EAAYG,EAAG,MAAM,KAAMnL,CAAI,CAAC,CAClE,QAAE,CACAoH,EAAO,eAAenC,CAAK,CAC7B,CACF,CACF,EAEA,IAAMoG,EAAa,SACjB1iB,EACA2d,EACAgF,EACAC,EACAC,EACAC,EACA,CACA,GAAiB,OAAOH,GAApB,SAA8B,CAChC,GAAUhF,IAAN,EAAY,OAAOmF,EAAQ,IAAIH,CAAQ,EACtC,GAAUhF,IAAN,EAAY,CACnB,GAAKiF,EAGQA,aAAmB,UAC9BlE,EAAKmE,EAAU,+BAA+B,MAH9C,eAAOC,EAAQ,IAAIH,CAAQ,EACpB3iB,EAIT,OAAA8iB,EAAQ,IAAIH,EAAUC,CAAO,EACtB5iB,CACT,CACF,CACA0e,EAAK,uBAAwBmE,CAAQ,CACvC,EAEA,OAAApE,EAAO,MAAM,cAAgB,SAASpG,EAAEsK,EAAUC,EAAS,CACzD,OAAOF,EACLrK,EACA,UAAU,OACVsK,EACAC,EACA,kBACAvB,CACF,CACF,EAEA5C,EAAO,MAAM,WAAa,SAASpG,EAAEsK,EAAUC,EAAS,CACtD,OAAOF,EACLrK,EACA,UAAU,OACVsK,EACAC,EACA,eACAxB,CACF,CACF,EAEA3C,EAAO,MAAM,eAAiB2C,EAAK,eAEnC3C,EAAO,aAAe,SAAU2D,EAAMC,EAAYC,KAAajL,EAAM,CACnE,OAAI,MAAM,QAAQ,UAAU,CAAC,CAAC,IAAGA,EAAO,UAAU,CAAC,GAC5CoH,EACJ,MAAM2D,EAAMC,EAAYC,GAAY,CAAC,CAAC,EACtC,MAAM,KAAMjL,GAAQ,CAAC,CAAC,CAC3B,EAEAoH,EAAO,MAAM,eAAiBI,EAAM,MAAM,WAE1CJ,EAAO,MAAM,kBAAoBI,EAAM,MAAM,cAEtCJ,CACT,EAEA,WAAW,oBAAoB,KAAO,SAAUn0B,EAAQ,CACtD,IAAMa,EAAS,IAAM,MAAMb,EAAO,IAAK,CAAE,YAAa,aAAc,CAAC,EAC/Dy4B,EAAM,KACNC,EAAY,SAAU53B,EAAK,CAC/B,GAAId,EAAO,eAAgB,CACzB,IAAMo0B,EAAO,IAAIrH,IAAS,CACxB,MAAM,IAAI,MAAMA,EAAK,KAAK,GAAG,CAAC,CAChC,EACMwG,EAAMvzB,EAAO,eAWnB,GAVAuzB,EAAI,OAASzyB,EAAI,OACjByyB,EAAI,SAAWzyB,EAAI,SAEdyyB,EAAI,SAAS,QAAQ,SACxBA,EAAI,OACDvzB,EAAO,SACNA,EAAO,QAAQ,KACfA,EAAO,QAAQ,IAAI,QACrBo0B,EAAK,0BAA0B,GAE/B,CAACb,EAAI,OAASzyB,EAAI,SAAS,QAAQ,OAAQ,CAC7C,IAAM2H,EAAU3H,EAAI,SAAS,QAC7ByyB,EAAI,MAAQ,SAAU9F,EAAG,CACvB,OACEhlB,EAAQ,OAAOglB,CAAC,GAAK2G,EAAK,gBAAiB3G,EAAG,eAAe,CAEjE,EACA8F,EAAI,QAAU,SAAUjjB,EAAG,CACzB7H,EAAQ,KAAK6H,CAAC,CAChB,CACF,CACAmoB,EAAIlF,CAAG,CACT,CACA,OAAIvzB,EAAO,QAAQA,EAAO,OAAOc,EAAKd,CAAM,EACrCc,CACT,EAgBA,OAfiB,YAAY,qBACzB,UAA6B,CAC3B,OAAO,YAAY,qBACjBD,EAAO,EACPb,EAAO,SAAW,CAAC,CACrB,EAAE,KAAK04B,CAAS,CAClB,EACA,UAA6B,CAC3B,OAAO73B,EAAO,EACX,KAAME,GAAaA,EAAS,YAAY,CAAC,EACzC,KAAMC,GACL,YAAY,YAAYA,EAAOhB,EAAO,SAAW,CAAC,CAAC,CACrD,EACC,KAAK04B,CAAS,CACnB,CAEN,EAAE,KAAK,WAAW,mBAAmB,EAGrC,WAAW,UAAY,SAASC,EAAoB34B,EAAQ,CAC1D,IAAMo0B,EAAO,IAAIrH,IAAS,CACxB,MAAM,IAAI,MAAMA,EAAK,KAAK,GAAG,CAAC,CAChC,EAGE,EAAE/sB,EAAO,gBAAgB,YAAY,SACrC,EAAEA,EAAO,gBAAgB,WAEzBo0B,EACE,gEACF,EAEF,CAAC,QAAS,SAAS,EAAE,QAAQ,SAAUjH,EAAG,CACxCntB,EAAOmtB,CAAC,YAAa,UACnBiH,EAAK,kBAAoBjH,EAAI,uBAAuB,CACxD,CAAC,EACD,IAAMyL,EAAMD,EACNr0B,EACFtE,EAAO,gBAAgB,SACnBA,EAAO,KACP,IAAM,IAAI,WAAWA,EAAO,KAAK,MAAM,EAC7C64B,EAAQ74B,EAAO,MACf84B,EAAU94B,EAAO,QACjB+4B,EAAM/4B,EAAO,KAAO,QAAQ,IAAI,KAAK,OAAO,EAC5Cg5B,EAAeh5B,EAAO,cAAgB,GACtCi5B,EAAej5B,EAAO,cAAgB,GACtCk5B,EACgBl5B,EAAO,gBAArB,OACI,CAAC,CAAC,WAAW,cACb,CAAC,CAACA,EAAO,cACfm5B,EAAS,WAAW,OACpBC,EAAgB,WAAW,cAC3B9E,EAAYt0B,EAAO,WAAa,EAChCq0B,EAAQr0B,EAAO,OAAS,MACrB44B,EAAI,aACPA,EAAI,iBAAmB,SAAUS,EAAa,KAAM,CAC9CA,GAAcA,EAAW,UAC3BA,EAAaA,EAAW,SAC1B,IAAMtL,EAAI,SAASA,GAAEzf,GAAO,CAC1B,OAAU,UAAU,SAAhB,EACKyf,GAAE,SAEPzf,GAAQ,GACV,OAAOyf,GAAE,QAAQ,OACjB,OAAOA,GAAE,QAAQ,OACjB,OAAOA,GAAE,QAAQ,MACjB,OAAOA,GAAE,QAAQ,UAEjBA,GAAE,QAAQ,QAAgB,EAAOzf,MAAd,EACnByf,GAAE,QAAQ,QAAgB,EAAOzf,MAAd,EACnByf,GAAE,QAAQ,OAAe,EAAOzf,MAAd,EAClByf,GAAE,QAAQ,SAAiB,EAAOzf,MAAd,GAEfyf,GAAE,OACX,EACA,cAAO,eAAeA,EAAG,UAAW,CAClC,SAAU,GACV,SAAU,GACV,MAAO,OAAO,OAAOsL,CAAU,CACjC,CAAC,EACIA,GAAYtL,EAAE,CAAC,EACbA,CACT,EACA6K,EAAI,WAAaA,EAAI,iBAAiB,GAGxC,IAAMU,EAAkB,UAAY,CAClC,IAAMrtB,EAAS,IAAI,YAAY,CAAC,EAChC,WAAI,SAASA,CAAM,EAAE,SAAS,EAAG,IAAK,EAAI,EAEnC,IAAI,WAAWA,CAAM,EAAE,CAAC,IAAM,GACvC,EAAG,EAEGstB,EAAazG,GAAcA,EAAE,CAAC,IAAX,IAEnB0G,EAAY1G,GAAcA,IAAR,KAAqBA,IAAR,IAC/B2G,EAAgB3G,GAAcA,IAAR,IACtB4G,EAAa5G,GAAOyG,EAAUzG,CAAC,EAAI,IAAMA,EAAE,CAAC,EAE5C6G,EAAQ,SAAU7G,EAAG,CACzB,OAAQ4G,EAAU5G,CAAC,EAAG,CACpB,IAAK,IACL,IAAK,IACH,MAAO,KACT,IAAK,IACH,MAAO,MACT,IAAK,IACL,IAAK,IACL,IAAK,IACH,OAAOuB,EACT,IAAK,IACH,MAAO,MACT,IAAK,IACH,MAAO,QACT,IAAK,IACH,MAAO,QACX,CACAD,EAAK,0BAA2BtB,CAAC,CACnC,EAEM8G,EAAoBR,EACtB,IAAM,GACN,IAAMhF,EAAK,iCAAiC,EAE1CyF,EAAc,SAAU/G,EAAG,CAC/B,OAAQ4G,EAAU5G,CAAC,EAAG,CACpB,IAAK,IACL,IAAK,IACL,IAAK,IAAK,CACR,OAAQwB,EAAW,CACjB,IAAK,GACH,MAAO,WACT,IAAK,GACH,OAAOsF,EAAkB,GAAK,aAClC,CACA,KACF,CACA,IAAK,IACH,MAAO,WACT,IAAK,IACH,MAAO,UACT,IAAK,IACH,MAAO,WACT,IAAK,IACH,OAAOA,EAAkB,GAAK,cAChC,IAAK,IACH,MAAO,aACT,IAAK,IACH,MAAO,YACX,CACAxF,EAAK,2CAA4CtB,CAAC,CACpD,EAEMgH,EAAc,SAAUhH,EAAG,CAC/B,OAAQ4G,EAAU5G,CAAC,EAAG,CACpB,IAAK,IACL,IAAK,IACL,IAAK,IAAK,CACR,OAAQwB,EAAW,CACjB,IAAK,GACH,MAAO,WACT,IAAK,GACH,OAAOsF,EAAkB,GAAK,aAClC,CACA,KACF,CACA,IAAK,IACH,MAAO,WACT,IAAK,IACH,MAAO,UACT,IAAK,IACH,MAAO,WACT,IAAK,IACH,OAAOA,EAAkB,GAAK,cAChC,IAAK,IACH,MAAO,aACT,IAAK,IACH,MAAO,YACX,CACAxF,EAAK,2CAA4CtB,CAAC,CACpD,EAEMiH,EAAkB,SAAUjH,EAAG,CACnC,OAAQ4G,EAAU5G,CAAC,EAAG,CACpB,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACH,OAAO,OACT,IAAK,IACH,OAAO8G,EAAkB,GAAKT,EAChC,IAAK,IACL,IAAK,IACL,IAAK,IACH,OAAQ7E,EAAW,CACjB,IAAK,GACH,OAAO,OACT,IAAK,GACH,OAAOsF,EAAkB,GAAKT,CAClC,CACA,KACJ,CACA/E,EAAK,gDAAiDtB,CAAC,CACzD,EAEMkH,EAAY,CAAClH,EAAG3F,IAAM2F,EAAI,KAAO3F,EAEjC8M,EAAmB,SAAUC,EAAYC,EAAU,CACvD,MAAO,IAAM/F,EAAK4F,EAAUE,EAAYC,CAAQ,EAAG,eAAe,CACpE,EAEMC,EAAuB,IAAI,QAE3BC,EAAe,wBAEfC,EAAe,SAAU5F,EAAMphB,EAAKhD,GAAG,CAE3C,GADKA,KAAGA,GAAI8pB,EAAqB,IAAI9mB,CAAG,GACpChD,GAAG,CAEL,GADA8pB,EAAqB,OAAO9mB,CAAG,EAC3B,MAAM,QAAQA,EAAI,SAAS,EAAG,CAChC,IAAI6H,GACJ,KAAQA,GAAI7H,EAAI,UAAU,MAAM,GAC9B,GAAI,CACE6H,cAAa,SAAUA,GAAE,KAAK7H,CAAG,EAC5B6H,cAAaof,GAAYpf,GAAE,QAAQ,EACtB,OAAOA,IAApB,UAAuB2d,EAAQ3d,EAAC,CAC3C,OAASzT,GAAG,CACV,QAAQ,KACN,kBACAgtB,EAAK,WACL,IACApkB,GACA,6BACA5I,EACF,CACF,CAEJ,SAAW4L,EAAI,qBAAqB,SAClC,GAAI,CACFA,EAAI,UAAU,CAChB,OAAS5L,GAAG,CACV,QAAQ,KACN,kBACAgtB,EAAK,WACL,IACApkB,GACA,6BACA5I,EACF,CACF,CAEF,OAAO4L,EAAI,UACPohB,EAAK,WAAW,QAAQ,SAC1BqE,EACE,iBACAzlB,EAAI+mB,CAAY,EAAI,WAAa,GACjC3F,EAAK,WACL,YACAA,EAAK,WAAW,OAChB,UAAYpkB,EACd,EAEGgD,EAAI+mB,CAAY,GAAGvB,EAAQxoB,EAAC,CACnC,CACF,EAEMkqB,EAAOrM,IACJ,CACL,aAAc,GACd,SAAU,GACV,SAAU,GACV,MAAOA,CACT,GAGIsM,EAAgB,SAAU/F,EAAMphB,EAAKhD,GAAG,CAC5C,IAAIoqB,GAAO,CAACpqB,GACRA,GAAG,OAAO,eAAegD,EAAK+mB,EAAcG,EAAIlqB,EAAC,CAAC,GAEpDA,GAAIuoB,EAAMnE,EAAK,WAAW,MAAM,EAC3BpkB,IAAG8jB,EAAK,gBAAiBM,EAAK,WAAY,mBAAmB,GAEpE,GAAI,CACEA,EAAK,WAAW,QAAQ,OAC1BqE,EACE,eACA2B,GAAO,GAAK,WACZhG,EAAK,WACL,YACAA,EAAK,WAAW,OAChB,UAAYpkB,EACd,EAEEoqB,IAAMp2B,EAAK,EAAE,KAAK,EAAGgM,GAAGA,GAAIokB,EAAK,WAAW,MAAM,EACtD0F,EAAqB,IAAI9mB,EAAKhD,EAAC,CACjC,OAAS5I,GAAG,CACV,MAAA4yB,EAAa5F,EAAMphB,EAAKhD,EAAC,EACnB5I,EACR,CACF,EAEMizB,EAAe,UAAY,CAC/B,IAAM1wB,EAAI,KAAK,QACf,OAAOA,EACH,IAAI,WAAW3F,EAAK,EAAE,MAAM2F,EAAGA,EAAI,KAAK,WAAW,MAAM,CAAC,EAC1D,IACN,EAGM2wB,GAAkBJ,EADHrN,GAAM6L,EAAe7L,EAAI8L,CACP,EAEjC4B,GAAiB,SACrBC,EACAC,EACAC,GAAiB,GACjB,CACA,IAAI1qB,GAAIwqB,EAAW,QAAQC,CAAU,EACrC,GAAI,CAACzqB,KAAM0oB,GAAgBC,GAAe,CACxC,QAAW9K,MAAK,OAAO,OAAO2M,EAAW,OAAO,EAC9C,GAAI3M,GAAE,MAAQ4M,EAAY,CACxBzqB,GAAI6d,GACJ,KACF,CAEE,CAAC7d,IAAK0qB,IACR5G,EACE4F,EAAUc,EAAW,KAAMC,CAAU,EACrC,gCACF,CAEJ,CACA,OAAOzqB,EACT,EAEM2qB,GAAoB,SAASlN,EACjCza,EACAynB,GACAG,GAAmB,GACnB,CACKnN,EAAE,IACLA,EAAE,EAAK5S,IACLA,GAAE,QAAQ,iBAAkB,EAAE,EAAE,QAAQ,WAAY,GAAG,GAC3D,IAAM7K,GAAIuqB,GAAevnB,EAAI,WAAYynB,GAAY,EAAI,EACzD,OAAOG,GAAmBnN,EAAE,EAAEzd,GAAE,SAAS,EAAIA,GAAE,SACjD,EAEM6qB,GAAsB,CAC1B,aAAc,GACd,WAAY,GACZ,IAAK,UAAY,CACf,OAAOf,EAAqB,IAAI,IAAI,CACtC,EACA,IAAK,IAAMhG,EAAK,mDAAmD,CACrE,EAEMgH,GAAqBZ,EAAI,UAAY,CACzC,IAAMpE,EAAI,CAAC,EACX,QAAWjJ,KAAK,OAAO,KAAK,KAAK,WAAW,OAAO,EACjDiJ,EAAE,KAAK,KAAK,UAAUjJ,CAAC,CAAC,EAE1B,OAAOiJ,CACT,CAAC,EAEKiF,EAAgB,IAAI,YAAY,OAAO,EACvCC,EAAgB,IAAI,YAEpBlN,EACY,OAAO,kBAAvB,IACI,UAAY,CAAC,EACb,kBACAqH,EAAe,SAAU7mB,EAAa4f,EAAOtjB,GAAK,CACtD,OAAOmwB,EAAc,OACnBzsB,EAAY,kBAAkBwf,EAC1Bxf,EAAY,MAAM4f,EAAOtjB,EAAG,EAC5B0D,EAAY,SAAS4f,EAAOtjB,EAAG,CACrC,CACF,EAEMqwB,EAAmB,SACvBjoB,EACAynB,EACAC,GAAiB,GACjB,CACA,IAAM1qB,GAAIuqB,GAAevnB,EAAI,WAAYynB,EAAYC,EAAc,EACnE,OAAO1qB,IAAWA,GAAE,UAAU,SAAlB,GAAoCA,GAAE,UAAU,CAAC,IAArB,IACpCA,GACA,EACN,EAEMkrB,EAA2B,SAAUC,EAAQ,CACrCA,EAAO,YAAf,KACJrH,EACE,oDACA,KAAK,UAAUqH,CAAM,CACvB,CACF,EAEMC,EAAqB,SAAWpoB,EAAKynB,GAAY,CACrD,IAAMzqB,GAAIuqB,GAAevnB,EAAI,WAAYynB,GAAY,EAAI,EACzDS,EAAyBlrB,EAAC,EAC1B,IAAMsF,GAAOtC,EAAIhD,GAAE,GAAG,EAEtB,GAAI,CAACsF,GAAM,OAAO,KAClB,IAAIzJ,GAAMyJ,GACJob,GAAM1sB,EAAK,EACjB,KAAO0sB,GAAI7kB,EAAG,IAAM,EAAG,EAAEA,GAAK,CAE9B,OAAOyJ,KAASzJ,GAAM,GAAKspB,EAAazE,GAAKpb,GAAMzJ,EAAG,CACxD,EAEMwvB,EAAiB,SAAUroB,KAAQ6a,EAAG,CACtC7a,EAAI,UACD,MAAM,QAAQA,EAAI,SAAS,IAC9BA,EAAI,UAAY,CAACA,EAAI,SAAS,GAGhCA,EAAI,UAAY,CAAC,EAEnBA,EAAI,UAAU,KAAK,GAAG6a,CAAC,CACzB,EAEMyN,EAAiB,SAAU/3B,EAAK,CACpC,IAAMc,EAAI22B,EAAc,OAAOz3B,CAAG,EAC5BmtB,GAAM6H,EAAMl0B,EAAE,OAAS,CAAC,EACzBqsB,IAAKoD,EAAK,6CAA8CvwB,CAAG,EAChE,IAAM2xB,GAAIlxB,EAAK,EAEf,OAAAkxB,GAAE,IAAI7wB,EAAGqsB,EAAG,EACZwE,GAAExE,GAAMrsB,EAAE,MAAM,EAAI,EAEbqsB,EACT,EAEM6K,GAAqB,SAAUvoB,EAAKynB,EAAYl3B,GAAK,CACzD,IAAMyM,GAAIuqB,GAAevnB,EAAI,WAAYynB,EAAY,EAAI,EACzDS,EAAyBlrB,EAAC,EAE1B,IAAM0gB,GAAM4K,EAAe/3B,EAAG,EAC9B,OAAAyP,EAAIhD,GAAE,GAAG,EAAI0gB,GACb2K,EAAeroB,EAAK0d,EAAG,EAChB1d,CACT,EAEMinB,GAAa,SAAcL,EAAYY,GAAY,CACnD,UAAU,CAAC,IAAMN,GACnBpG,EACE,yCACA,yBACF,EAEF,OAAO,iBAAiB,KAAM,CAC5B,WAAYoG,EAAIN,CAAU,EAC1B,WAAYM,EAAIM,EAAU,CAC5B,CAAC,CACH,EAEAP,GAAW,UAAY,OAAO,OAAO,KAAM,CACzC,QAASC,EAAI,UAAY,CACvBF,EAAa,KAAK,YAAa,IAAI,CACrC,CAAC,EACD,aAAcE,EAAI,SAAUO,EAAYC,EAAiB,GAAM,CAC7D,OAAOH,GAAe,KAAK,WAAYE,EAAYC,CAAc,CACnE,CAAC,EACD,iBAAkBR,EAAI,SAAUO,EAAY,CAC1C,OAAOW,EAAmB,KAAMX,CAAU,CAC5C,CAAC,EACD,eAAgBP,EAAI,SAAUO,EAAYC,EAAiB,GAAM,CAC/D,OAAOO,EAAiB,KAAMR,EAAYC,CAAc,CAC1D,CAAC,EACD,UAAWJ,GACX,WAAYQ,GACZ,gBAAiBZ,EAAI,SAAUO,EAAYG,EAAmB,GAAO,CACnE,OAAOD,GAAkB,KAAMF,EAAYG,CAAgB,CAC7D,CAAC,EACD,WAAYV,EAAIG,CAAY,EAC5B,QAASQ,GACT,iBAAkBX,EAAI,SAAUO,EAAYl3B,EAAK,CAC/C,OAAOg4B,GAAmB,KAAMd,EAAYl3B,CAAG,CACjD,CAAC,CACH,CAAC,EAED,OAAO,OAAO02B,GAAW,UAAW,CAClC,aAAc,YAAapM,EAAG,CAC5B,OAAAwN,EAAe,KAAM,GAAGxN,CAAC,EAClB,IACT,CACF,CAAC,EAED,OAAO,iBAAiBoM,GAAY,CAClC,aAAcC,EAAIoB,CAAc,EAChC,IAAKpB,EAAKrM,GAAMA,aAAaoM,EAAU,EACvC,mBAAoBC,EACjBrM,GAAMA,aAAaoM,IAAc,CAAC,CAACpM,EAAEkM,CAAY,CACpD,EACA,UAAWO,EACb,CAAC,EAED,IAAMkB,GAAkB3N,GACtB,OAAO,SAASA,CAAC,GAAKA,aAAcgL,GAAU,QAE1C4C,GAAoB,SAAShO,EAAE2G,EAAM1nB,GAAMgvB,GAAO,CACtD,GAAI,CAACjO,EAAE,EAAG,CACRA,EAAE,EAAI,CAAE,QAAS,CAAC,EAAG,QAAS,CAAC,EAAG,GAAI,CAAC,CAAE,EACzC,IAAMqI,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAK,EACpD8C,GAAe9C,GAAE,KAAK,GAAG,EAC7BA,GAAE,QAAQ,SAAUjI,GAAG,CACrBJ,EAAE,EAAE,QAAQI,EAAC,EAAI0L,EAAY1L,EAAC,EAC9BJ,EAAE,EAAE,QAAQI,EAAC,EAAI2L,EAAY3L,EAAC,EAC9BJ,EAAE,EAAE,GAAGI,EAAC,EAAI4L,EAAgB5L,EAAC,CAC/B,CAAC,EACD,IAAM8N,GAAS,gBACbC,GAAS,iCACXnO,EAAE,SAAW,SAAUza,GAAKtG,GAAMc,GAAK+mB,GAAK,CACtC,OAAO,UAAU,eAAe,KAAKvhB,GAAKxF,EAAG,GAC/CsmB,EAAK9gB,GAAI,WAAY,+BAAgCxF,GAAM,GAAG,EAEhEmuB,GAAO,KAAKpH,EAAG,GACbqH,GAAO,KAAKrH,EAAG,GACfT,EACE,0BACA4F,EAAU1mB,GAAI,WAAYtG,EAAI,EAAI,IAClC6nB,EACF,CACJ,CACF,CACA,IAAM/mB,GAAM4mB,EAAK,UAAU1nB,EAAI,EAC/B+gB,EAAE,SAAS2G,EAAK,UAAW1nB,GAAMc,GAAKkuB,GAAM,SAAS,EACrDA,GAAM,IAAMluB,GACZkuB,GAAM,KAAOhvB,GACb,IAAMmvB,GAAWzC,EAAUsC,GAAM,SAAS,EACpCI,GAAYpC,EAAUtF,EAAK,UAAU,WAAY5mB,EAAG,EACpDuuB,GAAM3H,EAAK,UAAU,WAAW,QAEhC4H,GAAO,OAAO,OAAO,IAAI,EAC/BA,GAAK,aAAe,GACpBA,GAAK,WAAa,GAClBA,GAAK,IAAM,UAAY,CACjBD,GAAI,QACNtD,EACE,gBACAhL,EAAE,EAAE,QAAQoO,EAAQ,EACpB,MACAxC,EAAMwC,EAAQ,EACdC,GACA,IACA,KAAK,QACL,IACAJ,GAAM,OACN,KACAA,GAAM,MACR,EAEF,IAAIzO,GAAK,IAAI,SACXjpB,EAAK,EAAE,OACP,KAAK,QAAU03B,GAAM,OACrBA,GAAM,MACR,EAAEjO,EAAE,EAAE,QAAQoO,EAAQ,CAAC,EAAE,EAAG7C,CAAc,EAC1C,OAAI+C,GAAI,QAAQtD,EAAI,gBAAiBqD,GAAW,WAAY7O,EAAE,EACvDA,EACT,EACIyO,GAAM,SACRM,GAAK,IAAMrC,EAAiBvF,EAAK,UAAU,WAAY5mB,EAAG,EAE1DwuB,GAAK,IAAM,SAAUnO,GAAG,CAoBtB,GAnBIkO,GAAI,QACNtD,EACE,gBACAhL,EAAE,EAAE,QAAQoO,EAAQ,EACpB,MACAxC,EAAMwC,EAAQ,EACdC,GACA,IACA,KAAK,QACL,IACAJ,GAAM,OACN,KACAA,GAAM,OACN7N,EACF,EAEG,KAAK,SACRiG,EAAK,kDAAkD,EAE5CjG,KAAT,KAAYA,GAAI,MAElB,MAAO,CAAC2N,GAAe3N,EAAC,GAAG,CACzB,GACEsL,EAAauC,GAAM,SAAS,GAC5B7N,cAAaoM,GACb,CACApM,GAAIA,GAAE,SAAW,EACbkO,GAAI,QACNtD,EAAI,gBAAiBqD,GAAW,cAAejO,EAAC,EAClD,KACF,CACAiG,EAAK,iCAAkCgI,GAAY,GAAG,CACxD,CACF,IAAI,SACF93B,EAAK,EAAE,OACP,KAAK,QAAU03B,GAAM,OACrBA,GAAM,MACR,EAAEjO,EAAE,EAAE,QAAQoO,EAAQ,CAAC,EAAE,EAAGpO,EAAE,EAAE,GAAGoO,EAAQ,EAAEhO,EAAC,EAAGmL,CAAc,CACjE,EAEF,OAAO,eAAe5E,EAAK,UAAW5mB,GAAKwuB,EAAI,CACjD,EAEMC,GAAe,SAASA,EAAarC,EAAYY,GAAY,CACvD,UAAU,SAAhB,GACFA,GAAaZ,EACbA,EAAaY,GAAW,MACdA,GAAW,OACrBA,GAAW,KAAOZ,GAEfA,GAAY9F,EAAK,0BAA0B,EAChD,IAAIoI,GAAa,GACjB,OAAO,KAAK1B,GAAW,OAAO,EAAE,QAAS3N,IAAM,CAC7C,IAAM7c,GAAIwqB,GAAW,QAAQ3N,EAAC,EACzB7c,GAAE,OACEA,GAAE,SAAW,EACpBA,GAAE,YAAc,KACdA,GAAE,YAAc,KAChB8jB,EACE,8BACA4F,EAAUc,GAAW,KAAM3N,EAAC,EAC5B,iBACA7c,GAAE,SACJ,GAEQA,GAAE,OAAS,IAAjB,IACF,QAAQ,KACN,sCACAA,GACA,OACAwqB,EACF,EACA1G,EACE8F,EACA,SACA/M,GACA,iCAAmC7c,GAAE,MACvC,GAEQA,GAAE,OAAS,IAAjB,IACF,QAAQ,KACN,sCACAA,GACA,OACAwqB,EACF,EACA1G,EACE8F,EACA,SACA/M,GACA,iCAAmC7c,GAAE,MACvC,IArCW8jB,EAAK8F,EAAY,SAAU/M,GAAG,oBAAoB,GAwC7D,CAACqP,IAAcA,GAAW,OAASlsB,GAAE,UAAQksB,GAAalsB,GAChE,CAAC,EACIksB,GACI1B,GAAW,OAAS0B,GAAW,OAASA,GAAW,QAC1DpI,EACE,yBACA8F,EACA,sBAAwBsC,GAAW,OAAS,KAC5C,sCAAwC1B,GAAW,OAAS,IAC9D,EAPe1G,EAAK,wCAAwC,EAS9D,IAAMqI,GAAajC,EAAI5B,EAAI,iBAAiB2D,EAAa,UAAU,CAAC,EAE9DG,GAAa,SAASA,GAAWC,GAAgB,CAC/C,gBAAgBD,GAMX,UAAU,SAEjBC,MAAoBA,GAAiB,IACrCA,IAAkB,IAElBvI,EAAK,4BAA6B8F,EAAY,cAAc,EAE9DO,EAAciC,GAAY,KAAMC,EAAc,GAE9ClC,EAAciC,GAAY,IAAI,EAd9BtI,EACE,MACA8F,EACA,2CACF,CAYJ,EACA,cAAO,iBAAiBwC,GAAY,CAClC,WAAYD,GACZ,IAAKjC,EAAKrM,IAAMA,cAAauO,EAAU,EACvC,UAAW9B,GACX,WAAYQ,GACZ,iBAAkBZ,EAAI,SAAUoC,GAAM,CAAC,CAAC,EACxC,WAAYpC,EAAIM,EAAU,EAC1B,WAAYN,EAAIN,CAAU,CAC5B,CAAC,EACDwC,GAAW,UAAY,IAAInC,GAAWL,EAAYY,GAAYN,CAAG,EACjE,OAAO,iBAAiBkC,GAAW,UAAW,CAC5C,WAAYD,GACZ,YAAajC,EAAIkC,EAAU,CAC7B,CAAC,EACD,OAAO,KAAK5B,GAAW,OAAO,EAAE,QAAS9tB,IACvC+uB,GAAkBW,GAAY1vB,GAAM8tB,GAAW,QAAQ9tB,EAAI,CAAC,CAC9D,EACO0vB,EACT,EACA,OAAAH,GAAa,WAAahC,GAC1BgC,GAAa,OAASv8B,EACtBu8B,GAAa,aAAeX,EACvBW,GAAa,aAChBA,GAAa,WAAa3D,EAAI,iBAAiBA,EAAI,UAAU,GAExD2D,EACT,EAEA,WAAW,oBAAoB,aAAa,KAAK,SAAUpL,EAAS,CAClE,aACA,IAAMiD,EAAO,IAAIrH,IAAS,CACxB,MAAM,IAAI,MAAMA,EAAK,KAAK,GAAG,CAAC,CAChC,EACMa,EAAQuD,EAAQ,aAAa,KAC7B/D,EAAO+D,EAAQ,KACnB9D,EAAO8D,EAAQ,KACff,EAAOe,EAAQ,KAyajB,GAxaA,WAAW,oBAAoB9D,CAAI,EACnC,OAAO,WAAW,oBAoBlBA,EAAK,kBAAoB,CACvB,CAAC,4BAA6B,QAAS,mBAAoB,KAAK,EAEhE,CAAC,sBAAuB,MAAO,gBAAiB,MAAO,KAAK,EAC5D,CAAC,mBAAoB,MAAO,gBAAiB,MAAO,KAAK,EACzD,CAAC,oBAAqB,OAAW,gBAAiB,KAAK,EACvD,CAAC,+BAAgC,MAAO,eAAe,EACvD,CAAC,+BAAgC,MAAO,gBAAiB,QAAQ,EACjE,CACE,uBACA,MACA,gBACA,MACA,IACA,gBACA,GACF,EACA,CACE,uBACA,MACA,CACE,WACA,IAAIA,EAAK,MAAM,eAAe,CAC5B,UAAW,QACX,WAAY,CAACiK,EAAMC,IAAaD,EAAK,CAAC,CACxC,CAAC,EACD,GACF,CACF,EACA,CAAC,uBAAwB,MAAO,WAAY,KAAK,EAEjD,CAAC,kBAAmB,MAAO,UAAU,EACrC,CAAC,yBAA0B,MAAO,eAAe,EACjD,CAAC,2BAA4B,MAAO,WAAY,IAAK,GAAG,EACxD,CAAC,sBAAuB,IAAK,gBAAiB,KAAK,EACnD,CAAC,uBAAwB,MAAO,gBAAiB,KAAK,EACtD,CAAC,uBAAwB,MAAO,eAAe,EAC/C,CAAC,wBAAyB,MAAO,gBAAiB,KAAK,EACvD,CAAC,qBAAsB,MAAO,gBAAiB,KAAK,EACpD,CAAC,sBAAuB,SAAU,gBAAiB,KAAK,EACxD,CAAC,sBAAuB,SAAU,gBAAiB,KAAK,EACxD,CAAC,sBAAuB,MAAO,gBAAiB,KAAK,EACrD,CAAC,uBAAwB,iBAAkB,gBAAiB,KAAK,EACjE,CACE,sBACA,QACA,CACE,WACA,IAAIjK,EAAK,MAAM,eAAe,CAC5B,KAAM,sBACN,UAAW,OACX,WAAaiK,GAASA,EAAK,CAAC,CAC9B,CAAC,EACD,GACF,CACF,EACA,CAAC,4BAA6B,SAAU,KAAK,EAC7C,CAAC,6BAA8B,MAAO,QAAQ,EAC9C,CAAC,mBAAoB,MAAO,iBAAiB,EAC7C,CAAC,4BAA6B,WAAY,kBAAkB,EAE5D,CAAC,qBAAsB,MAAO,eAAe,EAC7C,CAAC,sBAAuB,SAAU,WAAY,QAAQ,EACtD,CAAC,oBAAqB,WAAY,eAAe,EACjD,CAAC,kBAAmB,SAAU,WAAY,KAAK,EAC/C,CAAC,oBAAqB,MAAO,WAAY,MAAO,IAAK,IAAK,KAAK,EAC/D,CAAC,kBAAmB,MAAO,UAAU,EACrC,CAAC,iBAAkB,SAAU,UAAU,EACvC,CAAC,uBAAwB,MAAO,UAAU,EAC1C,CAAC,iBAAkB,SAAU,KAAK,EAClC,CACE,eACA,MACA,CACE,WACA,kBACA,IAAIjK,EAAK,MAAM,eAAe,CAC5B,UAAW,UACX,UAAW,YACX,UAAY7lB,GAAa,CACvB,IAAIq1B,EACJ,MAAO,CAAC3M,EAAO4M,EAAOC,EAAUC,IAAc,CAC5C,GAAI,CACF,IAAMC,EAAQ5P,EAAK,UAAUyP,EAAOC,CAAQ,EAC5C,OAAKF,IAAQA,EAASxP,EAAK,UAAUyP,EAAOE,CAAS,GAC9Cx1B,EAASy1B,EAAOJ,CAAM,EAAI,CACnC,OAASn1B,EAAG,CACV,OAAOA,EAAE,YAAc0lB,EAAK,YAC9B,CACF,CACF,CACF,CAAC,EACD,IACA,IACF,CACF,EACA,CAAC,uBAAwB,SAAU,eAAe,EAClD,CAAC,2BAA4B,MAAO,UAAU,EAC9C,CAAC,gCAAiC,MAAO,WAAY,KAAK,EAC1D,CAAC,uBAAwB,MAAO,WAAY,SAAU,MAAO,GAAG,EAChE,CAAC,mBAAoB,MAAO,eAAe,EAC3C,CAAC,eAAgB,OAAW,GAAG,EAC/B,CAAC,yBAA0B,MAAO,UAAU,EAC5C,CAAC,sBAAuB,IAAK,mBAAoB,KAAK,EACtD,CAAC,qBAAsB,MAAS,EAEhC,CAAC,wBAAyB,KAAK,EAC/B,CAAC,uBAAwB,MAAO,CAAC,MAAO,KAAM,GAAG,CAAC,EAClD,CAAC,wBAAyB,MAAO,CAAC,SAAU,KAAK,CAAC,EAClD,CAAC,qBAAsB,QAAQ,EAC/B,CAAC,4BAA6B,KAAK,EACnC,CAAC,gBAAiB,MAAO,CAAC,WAAY,MAAO,KAAK,CAAC,EACnD,CAAC,iBAAkB,IAAK,KAAK,EAC7B,CAAC,eAAgB,MAAO,SAAU,GAAG,EACrC,CAAC,kBAAmB,MAAO,SAAU,IAAK,MAAO,QAAQ,EAEzD,CACE,2BACA,OACA,CACE,WACA,MACA,IAAIC,EAAK,MAAM,eAAe,CAC5B,KAAM,mBACN,UAAW,OACX,UAAW,UACX,WAAY,CAACiK,EAAMC,IAAaD,EAAK,CAAC,CACxC,CAAC,EACD,GACF,CACF,EACA,CAAC,kBAAmB,IAAK,IAAK,KAAK,EACnC,CAAC,gBAAiB,MAAO,eAAe,EAExC,CACE,sBACA,OACA,mBACA,IACA,MACA,GACF,EACA,CAAC,wBAAyB,OAAW,mBAAoB,KAAK,EAC9D,CACE,uBACA,OACA,mBACA,SACA,KACF,EACA,CAAC,4BAA6B,OAAW,mBAAoB,KAAK,EAClE,CAAC,6BAA8B,OAAW,kBAAkB,EAC5D,CAAC,8BAA+B,OAAW,kBAAkB,EAC7D,CAAC,qBAAsB,OAAW,mBAAoB,KAAK,EAC3D,CAAC,sBAAuB,OAAW,kBAAkB,EACrD,CACE,yBACA,OACA,mBACA,IACA,gBACA,GACF,EACA,CAAC,yBAA0B,OAAW,iBAAkB,KAAK,EAC7D,CACE,sBACA,OACA,mBACA,SACA,MACA,GACF,EACA,CAAC,0BAA2B,OAAW,mBAAoB,KAAK,EAChE,CACE,wBACA,QACA,CACE,WACA,IAAIjK,EAAK,MAAM,eAAe,CAC5B,KAAM,wBACN,UAAW,OACX,WAAaiK,GAASA,EAAK,CAAC,CAC9B,CAAC,EACD,GACF,CACF,EACA,CACE,yBACA,MACA,CACE,WACA,IAAIjK,EAAK,MAAM,eAAe,CAC5B,KAAM,gCACN,UAAW,YACX,WAAY,CAACiK,EAAMC,IAAaD,EAAK,CAAC,EACtC,UAAY9vB,GACH,CAAC01B,EAAIC,EAAOC,EAAIC,EAAIC,EAAIC,IAAO,CACpC,GAAI,CACF,OAAAH,EAAKA,GAAM/P,EAAK,SAAS+P,CAAE,EAC3BC,EAAKA,GAAMhQ,EAAK,SAASgQ,CAAE,EAC3BC,EAAKA,GAAMjQ,EAAK,SAASiQ,CAAE,EAC3BC,EAAKA,GAAMlQ,EAAK,SAASkQ,CAAE,EACpB/1B,EAAS01B,EAAIC,EAAOC,EAAIC,EAAIC,EAAIC,CAAE,GAAK,CAChD,OAAS71B,EAAG,CACV,OAAOA,EAAE,YAAc0lB,EAAK,YAC9B,CACF,CAEJ,CAAC,EACD,GACF,CACF,EACA,CACE,sBACA,OACA,CACE,mBACA,MACA,IACA,IAAIC,EAAK,MAAM,eAAe,CAC5B,KAAM,kBACN,UAAW,OACX,WAAY,CAACiK,EAAMC,IAAaD,EAAK,CAAC,CACxC,CAAC,CACH,CACF,EACA,CAAC,mBAAoB,MAAS,EAC9B,CAAC,mBAAoB,QAAQ,EAC7B,CAAC,cAAe,SAAU,eAAe,EACzC,CAAC,iBAAkB,MAAO,MAAO,IAAK,IAAK,KAAK,EAChD,CAAC,eAAgB,MAAO,eAAe,EACvC,CAAC,yBAA0B,MAAO,CAAC,eAAe,CAAC,EACnD,CAAC,wBAAyB,MAAO,CAAC,eAAe,CAAC,EAClD,CAAC,sBAAuB,MAAO,gBAAiB,MAAO,KAAK,EAC5D,CAAC,kBAAmB,MAAO,SAAU,QAAQ,EAC7C,CAAC,kBAAmB,MAAO,SAAU,QAAQ,EAC7C,CAAC,kBAAmB,MAAO,SAAU,SAAU,KAAK,EACpD,CAAC,mBAAoB,MAAO,SAAU,SAAU,KAAK,EACrD,CACE,gCACA,MACA,WACA,SACA,SACA,SACA,KACA,KACA,IACA,IACA,GACF,EACA,CAAC,wBAAyB,MAAO,UAAU,EAC3C,CACE,mBACA,MACA,CACE,WACA,MACA,IAAIjK,EAAK,MAAM,eAAe,CAC5B,KAAM,6BACN,UAAW,UACX,WAAY,CAACiK,EAAMC,IAAaD,EAAK,CAAC,CACxC,CAAC,EACD,GACF,CACF,EACA,CAAC,oBAAqB,MAAO,CAAC,WAAY,QAAQ,CAAC,EAEnD,CAAC,sBAAuB,MAAO,mBAAoB,SAAU,KAAK,EAClE,CAAC,kBAAmB,SAAU,mBAAoB,KAAK,EACvD,CAAC,wBAAyB,SAAU,mBAAoB,QAAQ,EAChE,CAAC,oBAAqB,QAAS,kBAAkB,EACjD,CAAC,qBAAsB,IAAK,gBAAgB,EAC5C,CAAC,sBAAuB,MAAO,gBAAgB,EAC/C,CAAC,uBAAwB,MAAO,gBAAgB,EAChD,CAAC,oBAAqB,iBAAkB,gBAAgB,EACxD,CAAC,qBAAsB,OAAW,gBAAgB,EAClD,CAAC,yBAA0B,MAAO,gBAAgB,EAClD,CAAC,oBAAqB,MAAO,gBAAgB,EAC7C,CAAC,yBAA0B,MAAO,gBAAgB,EAClD,CAAC,6BAA8B,MAAO,gBAAgB,EACtD,CAAC,wBAAyB,IAAK,iBAAkB,eAAe,EAChE,CAAC,wBAAyB,MAAO,gBAAgB,EACjD,CAAC,qBAAsB,SAAU,gBAAgB,EACjD,CAAC,qBAAsB,MAAO,gBAAgB,EAC9C,CAAC,mBAAoB,IAAK,QAAQ,EAClC,CAAC,uBAAwB,MAAO,eAAgB,KAAK,EACrD,CAAC,yBAA0B,MAAO,cAAc,CAClD,EAUAjK,EAAK,kBAAkB,MAAQ,CAC7B,CAAC,qBAAsB,MAAO,CAAC,gBAAiB,MAAO,KAAK,CAAC,EAC7D,CAAC,oBAAqB,MAAO,CAAC,UAAU,CAAC,EACzC,CAAC,uBAAwB,MAAO,CAAC,gBAAiB,KAAK,CAAC,EACxD,CACE,wBACA,MACA,CAAC,WAAY,SAAU,kBAAmB,GAAG,CAC/C,EACA,CACE,2BACA,MACA,CAAC,WAAY,SAAU,kBAAmB,IAAK,GAAG,CACpD,EACA,CAAC,uBAAwB,MAAO,CAAC,WAAY,iBAAiB,CAAC,EAC/D,CACE,sBACA,MACA,WACA,SACA,IACA,MACA,MACA,KACF,EACA,CAAC,uBAAwB,MAAO,CAAC,WAAY,IAAI,CAAC,EAClD,CAAC,4BAA6B,MAAO,CAAC,UAAU,CAAC,EACjD,CAAC,mBAAoB,IAAK,KAAK,EAC/B,CAAC,gBAAiB,MAAO,GAAG,EAC5B,CAAC,4BAA6B,MAAO,CAAC,WAAY,SAAU,KAAK,CAAC,EAClE,CAAC,8BAA+B,MAAO,UAAU,EACjD,CAAC,0BAA2B,MAAO,UAAU,EAC7C,CAAC,0BAA2B,MAAO,UAAU,EAC7C,CACE,yBACA,IACA,CACE,WACA,IAAIA,EAAK,MAAM,eAAe,CAC5B,KAAM,yBACN,UAAW,aACX,WAAaiK,GAASA,EAAK,CAAC,EAC5B,UAAY9vB,GACH,CAACyC,EAAG6K,EAAIqC,EAAIqmB,EAAKC,EAAMC,EAAOC,IAAU,CAC7Cn2B,EACEyC,EACA6K,EACAqC,EACAkW,EAAK,SAASmQ,CAAG,EACjBnQ,EAAK,SAASoQ,CAAI,EAClBC,EACAC,CACF,CACF,CAEJ,CAAC,EACD,GACF,CACF,EACA,CAAC,wBAAyB,MAAO,CAAC,WAAY,MAAO,IAAI,CAAC,EAC1D,CAAC,wBAAyB,MAAO,CAAC,WAAY,MAAO,IAAI,CAAC,EAC1D,CAAC,oBAAqB,IAAK,IAAK,KAAK,EACrC,CAAC,uBAAwB,OAAW,IAAK,KAAK,EAC9C,CAAC,4BAA6B,MAAO,IAAK,KAAK,EAC/C,CAAC,oBAAqB,IAAK,WAAY,SAAU,IAAK,KAAK,EAC3D,CAAC,gCAAiC,OAAW,CAAC,WAAY,KAAK,CAAC,EAChE,CAAC,mBAAoB,MAAO,MAAO,IAAK,IAAK,KAAK,EAClD,CAAC,0BAA2B,MAAO,CAAC,UAAU,CAAC,EAC/C,CACE,sBACA,IACA,CACE,WACA,IAAItQ,EAAK,MAAM,eAAe,CAC5B,KAAM,sBACN,UAAW,WACX,WAAaiK,GAASA,EAAK,CAAC,EAC5B,UAAY9vB,GACH,CAACyC,EAAGkN,EAAIymB,EAAIC,EAAIC,IAAU,CAC/Bt2B,EACEyC,EACAkN,EACAkW,EAAK,SAASuQ,CAAE,EAChBvQ,EAAK,SAASwQ,CAAE,EAChBC,CACF,CACF,CAEJ,CAAC,EACD,GACF,CACF,EACA,CAAC,oBAAqB,MAAO,CAAC,mBAAoB,SAAU,KAAK,CAAC,EAClE,CAAC,sBAAuB,MAAO,gBAAgB,EAC/C,CAAC,yBAA0B,SAAU,sBAAuB,KAAK,EACjE,CAAC,wBAAyB,MAAO,qBAAqB,EACtD,CAAC,kBAAmB,MAAO,sBAAuB,MAAO,KAAK,EAC9D,CAAC,wBAAyB,MAAO,iBAAkB,IAAI,EACvD,CAAC,uBAAwB,MAAO,iBAAkB,IAAI,EAEtD,CAAC,wBAAyB,MAAO,kBAAkB,EACnD,CAAC,2BAA4B,MAAO,UAAU,EAC9C,CAAC,yBAA0B,MAAO,sBAAuB,MAAO,IAAI,CACtE,EAEIzQ,EAAK,eAAmBA,EAAK,QAAQ,uBAAwB,CAC/D,IAAM0Q,EAAa,CACjB,UAAW,QACX,UAAYv2B,GACH,CAACyC,EAAG6oB,IAAM,CACf,GAAI,CACF,OAAOtrB,EAASyC,EAAGojB,EAAK,SAASyF,CAAC,CAAC,EAAI,CACzC,OAASprB,EAAG,CACV,OAAOA,EAAE,YAAc0lB,EAAK,YAC9B,CACF,CAEJ,EAEAC,EAAK,kBAAkB,MAAM,KAEzB,CACE,yBACA,MACA,CAAC,uBAAwB,MAAO,OAAO,CACzC,EACA,CACE,8BACA,MACA,CACE,uBACA,IAAIA,EAAK,MAAM,eAAe,CAC5B,KAAM,SACN,UAAW,SACX,UAAW,WACb,CAAC,EACD,OACF,CACF,EACA,CACE,4BACA,OACA,CAAC,sBAAsB,CACzB,EACA,CAAC,yBAA0B,MAAO,CAAC,IAAI,CAAC,EACxC,CACE,4BACA,MACA,CAAC,uBAAwB,OAAQ,IAAI,CACvC,EACA,CACE,iCACA,MACA,CACE,uBACA,IAAIA,EAAK,MAAM,eAAe,CAC5B,KAAM,UACN,UAAW,SACX,UAAW,WACb,CAAC,EACD,OACF,CACF,EACA,CACE,yBACA,MACA,CACE,WACA,MACA,QACA,IAAIA,EAAK,MAAM,eAAe,CAC5B,KAAM,UACN,UAAW,YACX,GAAG0Q,CACL,CAAC,EACD,IAAI1Q,EAAK,MAAM,eAAe,CAC5B,KAAM,YACN,UAAW,SACX,UAAW,WACb,CAAC,EACD,OACF,CACF,EACA,CACE,8BACA,MACA,CACE,WACA,IAAIA,EAAK,MAAM,eAAe,CAC5B,KAAM,SACN,UAAW,SACX,UAAW,WACb,CAAC,EACD,QACA,IAAIA,EAAK,MAAM,eAAe,CAC5B,KAAM,UACN,UAAW,YACX,GAAG0Q,CACL,CAAC,EACD,IAAI1Q,EAAK,MAAM,eAAe,CAC5B,KAAM,YACN,UAAW,SACX,UAAW,WACb,CAAC,EACD,OACF,CACF,EACA,CACE,4BACA,MACA,CACE,WACA,MACA,QACA,IAAIA,EAAK,MAAM,eAAe,CAC5B,KAAM,UACN,UAAW,YACX,GAAG0Q,CACL,CAAC,EACD,IAAI1Q,EAAK,MAAM,eAAe,CAC5B,KAAM,YACN,UAAW,SACX,UAAW,WACb,CAAC,EACD,QACA,KACA,OACA,KACF,CACF,EACA,CACE,iCACA,MACA,CACE,WACA,IAAIA,EAAK,MAAM,eAAe,CAC5B,KAAM,SACN,UAAW,SACX,UAAW,WACb,CAAC,EACD,QACA,IAAIA,EAAK,MAAM,eAAe,CAC5B,KAAM,UACN,UAAW,YACX,GAAG0Q,CACL,CAAC,EACD,IAAI1Q,EAAK,MAAM,eAAe,CAC5B,KAAM,YACN,UAAW,SACX,UAAW,WACb,CAAC,EACD,QACA,KACA,OACA,KACF,CACF,EACA,CACE,0BACA,MACA,CAAC,MAAO,QAAS,MAAO,QAAS,OAAQ,IAAI,CAC/C,EACA,CACE,+BACA,MACA,CACE,IAAIA,EAAK,MAAM,eAAe,CAC5B,KAAM,UACN,UAAW,SACX,UAAW,WACb,CAAC,EACD,QACA,IAAIA,EAAK,MAAM,eAAe,CAC5B,KAAM,UACN,UAAW,SACX,UAAW,WACb,CAAC,EACD,QACA,IAAIA,EAAK,MAAM,eAAe,CAC5B,KAAM,UACN,UAAW,SACX,UAAW,WACb,CAAC,EACD,OACF,CACF,EACA,CACE,4BACA,MACA,CAAC,0BAA2B,MAAO,IAAI,CACzC,EACA,CAAC,4BAA6B,MAAO,CAAC,yBAAyB,CAAC,EAChE,CACE,gCACA,MACA,CAAC,0BAA2B,MAAM,CACpC,EACA,CACE,0BACA,MACA,CAAC,MAAO,QAAS,OAAQ,IAAI,CAC/B,EACA,CACE,+BACA,MACA,CACE,IAAIA,EAAK,MAAM,eAAe,CAC5B,KAAM,SACN,UAAW,SACX,UAAW,WACb,CAAC,EACD,QACA,IAAIA,EAAK,MAAM,eAAe,CAC5B,KAAM,UACN,UAAW,SACX,UAAW,WACb,CAAC,EACD,OACF,CACF,EACA,CACE,uBACA,MACA,CAAC,0BAA2B,MAAO,IAAI,CACzC,EACA,CAAC,wBAAyB,MAAO,CAAC,yBAAyB,CAAC,EAC5D,CACE,uBACA,MACA,CAAC,0BAA2B,MAAO,IAAI,CACzC,EACA,CACE,sBACA,MACA,CAAC,0BAA2B,KAAM,OAAQ,OAAQ,MAAM,CAC1D,EACA,CACE,sBACA,MACA,CAAC,0BAA2B,KAAM,MAAM,CAC1C,EACA,CAAC,yBAA0B,MAAO,CAAC,KAAM,MAAO,GAAG,CAAC,EACpD,CACE,8BACA,MACA,CACE,KACA,IAAIA,EAAK,MAAM,eAAe,CAC5B,KAAM,SACN,UAAW,SACX,UAAW,WACb,CAAC,EACD,OACF,CACF,EACA,CAAC,4BAA6B,MAAO,CAAC,KAAM,MAAO,IAAK,KAAK,CAAC,EAC9D,CACE,iCACA,MACA,CACE,KACA,IAAIA,EAAK,MAAM,eAAe,CAC5B,KAAM,SACN,UAAW,SACX,UAAW,WACb,CAAC,EACD,QACA,KACF,CACF,EACA,CAAC,wBAAyB,MAAO,CAAC,mBAAoB,QAAQ,CAAC,EAC/D,CACE,2BACA,MACA,CAAC,mBAAoB,OAAQ,IAAI,CACnC,EACA,CAAC,gCAAiC,MAAO,CAAC,kBAAkB,CAAC,EAC7D,CACE,gCACA,MACA,CACE,mBACA,IAAIA,EAAK,MAAM,eAAe,CAC5B,KAAM,UACN,UAAW,SACX,UAAW,WACb,CAAC,EACD,OACF,CACF,EACA,CAAC,wBAAyB,MAAO,CAAC,MAAO,OAAO,CAAC,EACjD,CAAC,wBAAyB,MAAO,CAAC,WAAY,SAAU,IAAI,CAAC,EAE7D,CACE,sBACA,MACA,CAAC,mBAAoB,SAAU,SAAU,IAAI,CAC/C,EACA,CAAC,wBAAyB,MAAO,CAAC,mBAAoB,KAAK,CAAC,EAC5D,CAAC,0BAA2B,MAAO,CAAC,mBAAoB,KAAK,CAAC,EAC9D,CAAC,yBAA0B,MAAO,CAAC,kBAAkB,CAAC,EACtD,CAAC,6BAA8B,MAAO,CAAC,kBAAkB,CAAC,EAC1D,CACE,+BACA,MACA,CAAC,mBAAoB,MAAO,OAAO,CACrC,EACA,CACE,0BACA,MACA,CAAC,mBAAoB,IAAK,IAAI,CAChC,EACA,CACE,+BACA,MACA,CACE,mBACA,IAAIA,EAAK,MAAM,eAAe,CAC5B,KAAM,UACN,UAAW,SACX,UAAW,WACb,CAAC,EACD,OACF,CACF,EACA,CACE,8BACA,OACA,CACE,mBACA,IAAIA,EAAK,MAAM,eAAe,CAC5B,KAAM,UACN,GAAG0Q,EACH,WAAY,CAACzG,EAAMC,IAAaD,EAAK,CAAC,CACxC,CAAC,EACD,GACF,CACF,CAEJ,CACF,CAEAjK,EAAK,kBAAkB,aAAe,CACpC,CAAC,yBAA0B,MAAO,UAAU,EAC5C,CAAC,uBAAwB,eAAgB,WAAY,QAAQ,EAC7D,CACE,gCACA,MACA,eACA,SACA,IACA,KACF,EACA,CAAC,kCAAmC,MAAO,SAAU,IAAK,KAAK,EAC/D,CAAC,2BAA4B,MAAO,eAAgB,QAAQ,EAC5D,CAAC,2BAA4B,iBAAkB,SAAU,KAAK,CAChE,EAEA8D,EAAQ,aAAe,WAAW,UAAU,CAC1C,KAAwB9D,EAAK,OAC7B,MAAOA,EAAK,MACZ,QAASA,EAAK,QACd,cAAeA,EAAK,cACpB,aAAc,GAChB,CAAC,EACD,OAAO,WAAW,UAElB,CACE,IAAM2Q,EAAY3Q,EAAK,MAAM,WAAW,QAAQ,EAChDA,EAAK,MAAM,WAAW,kBAAoBc,GACxC6P,EAAU5N,EAAK,eAAejC,CAAC,CAAC,CAClC,EAEAd,EAAK,MAAM,WACT,gBACA,SAAUc,EAAG,CACX,OAAId,EAAK,MAAMc,CAAC,EAAUA,GAC1BA,EAAI,GAAKA,EACA,KAAKA,CAAC,IACD,KAAKA,CAAC,EAAId,EAAK,aAAac,CAAC,GAC7C,EAAE,KAAK,OAAO,OAAO,IAAI,CAAC,CAC5B,EAEA,IAAM6I,EAAY3J,EAAK,MAAM,WAAW,GAAG,EACrC4Q,EAAU,UAAY,CAAC,EAC7B5Q,EAAK,MAAM,WAAW,mBAAoB2J,CAAS,EACjD,mBACAA,CACF,EAAE,iBAAkBA,CAAS,EAAE,QAASA,CAAS,EAC/C,uBACAA,CACF,EAAE,0BAA2BA,CAAS,EACpC,mBACAA,CACF,EAAE,gBAAkB7I,GAClB6I,EACE7I,aAAcgD,GAAS,KAAK,MAAQ8M,GAAW9P,EAAE,QAAUA,CAC7D,CACF,EAAE,WAAaA,GACb6I,EACE7I,aAAcgD,GAAS,KAAK,IAAM8M,GAAW9P,EAAE,QAAUA,CAC3D,CACF,EAAE,sBAAwBA,GACxB6I,EACE7I,aAAcf,EAAK,oBAAsB6Q,GAAW9P,EAAE,QAAUA,CAClE,CACF,EAAE,kBAAoBA,GACpB6I,EACE7I,aAAcf,EAAK,gBAAkB6Q,GAAW9P,EAAE,QAAUA,CAC9D,CACF,EAAE,eAAiBA,GACA,OAAOA,GAApB,SAEAf,EAAK,iBAAiBe,CAAC,GACvBgD,EAAQ,aAAa,KACnB/D,EAAK,gBACL,4BACAe,CACF,EAGG6I,EACL7I,aAAcf,EAAK,aAAe6Q,GAAW9P,EAAE,QAAUA,CAC3D,CACD,EAED,IAAM+P,EAAW7Q,EAAK,MAAM,cAAc,GAAG,EAC7CA,EAAK,MAAM,cAAc,WAAY6Q,CAAQ,EAC3C,mBACAA,CACF,EAAE,gBAAiBA,CAAQ,EAAE,iBAAkBA,CAAQ,EACrD,eACAA,CACF,EAAE,QAASA,CAAQ,EAET7Q,EAAK,QAAQ,aAAa,SAAhC,IACFA,EAAK,MAAM,YAAc,GACzB8D,EAAQ,OAAO,KACb,uEACF,GAEF,QAAWzpB,KAAK2lB,EAAK,kBACnBD,EAAK1lB,EAAE,CAAC,CAAC,EAAI2lB,EAAK,MAAM,MAAM,KAAM3lB,CAAC,EAEvC,QAAWA,KAAK2lB,EAAK,kBAAkB,aACrC+C,EAAK1oB,EAAE,CAAC,CAAC,EAAI2lB,EAAK,MAAM,MAAM,KAAM3lB,CAAC,EAGvC,IAAMy2B,EAAe,SAAUtH,EAAO,CACpC,MAAO,IACLzC,EACEyC,EAAQ,gCACR,kCACF,CACJ,EACA,QAAWnvB,KAAK2lB,EAAK,kBAAkB,MACrCD,EAAK1lB,EAAE,CAAC,CAAC,EAAI2lB,EAAK,cACdA,EAAK,MAAM,MAAM,KAAM3lB,CAAC,EACxBy2B,EAAaz2B,EAAE,CAAC,CAAC,EAKvB,GAFA,OAAO2lB,EAAK,kBAERA,EAAK,QAAQ,uBAAwB,CACvC,IAAM+Q,EAAW/Q,EAAK,MACpB,yBACA,MACA,WACA,MACA,QACF,EAEA+C,EAAK,uBAAyB,SAAUnB,EAAKoP,EAAYC,EAAS,CAChE,OAAID,aAAsBlN,EAAQ,gBAChCkN,EAAajR,EAAK,aAClBkR,EAAU,GACDD,aAAsB,QAC/BC,EAAUA,GAAW,GAAKD,EAC1BA,EAAaA,EAAW,YAAcjR,EAAK,cAEtC6B,EAAMmP,EAASnP,EAAKoP,EAAYC,CAAO,EAAID,CACpD,CACF,MACEjO,EAAK,uBAAyB,SAAUnB,EAAKzf,EAAS+uB,EAAK,CACzD,eAAQ,KACN,4CACA,SACF,EACO/uB,CACT,CAEJ,CAEA,CACE,IAAMgvB,EAAQnR,EAAK,MAAM,yBAAyB,EAC7CmR,GACHpK,EACE,6DACA,qBACF,EAGF/G,EAAK,MAAQ,KAAK,MAAMA,EAAK,SAASmR,CAAK,CAAC,EAE5C,IAAMC,EAAe,CACnB,SACA,aACA,iBACA,YACA,SACA,YACA,WACA,WACA,YACA,QACA,QACA,QACA,SACA,YACA,eACA,cACA,gBACA,aACA,YACA,QACA,WACA,WACA,SACF,EACIpR,EAAK,eACPoR,EAAa,KAAK,YAAa,UAAW,MAAM,EAElD,QAAWtH,KAAKsH,EACd,QAAW/2B,KAAK,OAAO,QAAQ2lB,EAAK,MAAM8J,CAAC,CAAC,EAC1C/J,EAAK1lB,EAAE,CAAC,CAAC,EAAIA,EAAE,CAAC,EAGf2lB,EAAK,cAAcD,EAAK,mBAAmB,GAC9CgH,EACE,mDACA,gCAAkChH,EAAK,oBAAsB,IAC/D,EAEF,IAAMsR,EAAU,OAAO,OAAO,IAAI,EAClC,QAAWvH,IAAK,CAAC,aAAa,EAC5B,QAAWzvB,KAAK,OAAO,QAAQ2lB,EAAK,MAAM8J,CAAC,CAAC,EAC1CuH,EAAQh3B,EAAE,CAAC,CAAC,EAAIA,EAAE,CAAC,EAIvB0lB,EAAK,kBAAqBG,GAAOmR,EAAQnR,CAAE,EAE3C,IAAMoR,EAAW,OAAO,OAAO,OAAO,OAAO,IAAI,EAAG,CAClD,eAAgB,GAEhB,sBAAuB,CAACvO,EAAK,WAAW,EAExC,mBAAoB,CAAC/C,EAAK,cAC1B,yBAA0B,CAACA,EAAK,cAChC,sBAAuB,CAACA,EAAK,cAC7B,+BAAgC,CAACA,EAAK,aACxC,CAAC,EACD,QAAWyF,KAAKzF,EAAK,MAAM,QACpBsR,EAAS7L,EAAE,IAAI,IAClB1F,EAAK0F,EAAE,IAAI,EAAI3B,EAAQ,aAAa2B,CAAC,GAGzC,GAAI1F,EAAK,mBAAoB,CAC3B,QAAWD,IAAK,CACd,2BACA,wBACA,gCACF,EACEC,EAAK,mBAAmBD,CAAC,EAAIC,EAAKD,CAAC,EACnC,OAAOC,EAAKD,CAAC,EAEfC,EAAK,oBAAsBC,EAAK,MAC9B,4BACA,MACA,CAAC,WAAY,MAAO,KAAK,CAC3B,CACF,CACF,CAEA,IAAMuR,EAAmB,CAAC3P,EAAKlB,EAAGN,IACzB2C,EAAK,uBACVnB,EACA7B,EAAK,cACLW,EAAI,eAAiBN,EAAI,aAAqBA,IAAN,EAAU,GAAK,KAAO,GAChE,EAGIoR,EAAiB5P,GACdmB,EAAK,uBACVnB,EACA7B,EAAK,cACL,6CACF,EAGI0R,EAAY7P,GAAQ5B,EAAK,MAAM,WAAW,UAAU,EAAE4B,CAAG,EACzD8P,EAAYl7B,GAASwpB,EAAK,MAAMxpB,CAAG,EAAIwpB,EAAK,SAASxpB,CAAG,EAAIA,EAC5Dm7B,EAAiB,SAAU/P,EAAKhiB,EAAM,CAC1CgiB,EAAM6P,EAAS7P,CAAG,EAClB,IAAI3e,EAAI,KAAK,MAAM,IAAI2e,CAAG,EAC1B,GAAKhiB,EAGM,CAACqD,GAAKrD,EAAO,GACtB,KAAK,MAAM,IAAIgiB,EAAM3e,EAAI,OAAO,OAAO,IAAI,CAAE,MAH7C,aAAK,MAAM,OAAO2e,CAAG,EACd3e,EAIT,OAAOA,CACT,EAAE,KACA,OAAO,OAAO,OAAO,OAAO,IAAI,EAAG,CACjC,MAAO,IAAI,GACb,CAAC,CACH,EAEA0uB,EAAe,aAAe,SAAU/P,EAAKjiB,EAAM,CACjD,IAAMsD,EAAI0uB,EAAe/P,EAAK,CAAC,EAC1B3e,EAAE,YAAWA,EAAE,UAAY,IAAI,KACpCA,EAAE,UAAU,IAAIyuB,EAAS/xB,CAAI,EAAE,YAAY,CAAC,CAC9C,EAEAgyB,EAAe,QAAU,SAAU/P,EAAKjiB,EAAMiyB,EAAOC,EAAK,CACxDlyB,EAAO+xB,EAAS/xB,CAAI,EAAE,YAAY,EAClC,IAAIrI,EAAIu6B,EAAI,IAAIlyB,CAAI,EACfrI,GAAGu6B,EAAI,IAAIlyB,EAAOrI,EAAI,IAAI,GAAM,EACrCA,EAAE,IAAIs6B,EAAQ,EAAI,GAAKA,CAAK,CAC9B,EAEAD,EAAe,YAAc,SAAU/P,EAAKjiB,EAAMiyB,EAAO,CACvD,IAAM3uB,EAAI0uB,EAAe/P,EAAK,CAAC,EAC1B3e,EAAE,MAAKA,EAAE,IAAM,IAAI,KACxB,KAAK,QAAQ2e,EAAKjiB,EAAMiyB,EAAO3uB,EAAE,GAAG,CACtC,EAEA0uB,EAAe,cAAgB,SAAU/P,EAAKjiB,EAAMiyB,EAAO,CACzD,IAAM3uB,EAAI0uB,EAAe/P,EAAK,CAAC,EAC1B3e,EAAE,OAAMA,EAAE,KAAO,IAAI,KAC1B,KAAK,QAAQ2e,EAAKjiB,EAAMiyB,EAAO3uB,EAAE,IAAI,CACvC,EAEA0uB,EAAe,QAAU,SAAU/P,EAAK,CACtCA,EAAM6P,EAAS7P,CAAG,EAElB,IAAMkQ,EAAY,CAAClQ,CAAG,EACtB,QAAWjiB,IAAQ,CACjB,uBACA,sBACA,yBACA,2BACA,wBACA,yBACA,mBACA,qBACF,EAAG,CACD,IAAMmO,EAAIkS,EAAK,QAAQrgB,CAAI,EAC3BmyB,EAAU,OAAShkB,EAAE,OACrB,GAAI,CACFiS,EAAKpgB,CAAI,EAAE,GAAGmyB,CAAS,CACzB,OAASz3B,EAAG,CACV,QAAQ,KACN,qBACAsF,EAAO,IACPmyB,EACA,WACAz3B,CACF,CACF,CACF,CACA,IAAM4I,EAAI0uB,EAAe/P,EAAK,CAAC,EAC/B,GAAI,CAAC3e,EAAG,OACR,GAAIA,EAAE,UAAW,CACf,QAAWtD,KAAQsD,EAAE,UACnB,GAAI,CACF8c,EAAK,4BACH6B,EACAjiB,EACAogB,EAAK,YACL,EACA,EACA,CACF,CACF,MAAY,CAAC,CAEf,OAAO9c,EAAE,SACX,CACA,IAAI5L,EACJ,IAAKA,EAAI,EAAGA,EAAI,EAAG,EAAEA,EAAG,CACtB,IAAM06B,EAAO16B,EAAI4L,EAAE,KAAOA,EAAE,IAC5B,GAAI,CAAC8uB,EAAM,SACX,IAAM1pB,EAAOhR,EACT0oB,EAAK,+BACLA,EAAK,2BACT,QAAW1lB,KAAK03B,EAAM,CACpB,IAAMpyB,EAAOtF,EAAE,CAAC,EACd23B,EAAU33B,EAAE,CAAC,EACT43B,EAAQ,CAACrQ,EAAKjiB,EAAM,EAAGogB,EAAK,YAAa,EAAG,EAAG,EAAG,EAAG,CAAC,EACxD1oB,GAAG46B,EAAM,KAAK,CAAC,EACnB,QAAWL,KAASI,EAClB,GAAI,CACFC,EAAM,CAAC,EAAIL,EACXvpB,EAAK,MAAM,KAAM4pB,CAAK,CACxB,MAAY,CAAC,CAEfD,EAAQ,MAAM,CAChB,CACAD,EAAK,MAAM,CACb,CACA,OAAO9uB,EAAE,IACT,OAAOA,EAAE,IACX,EAEA,CACE,IAAMivB,EAAmBlS,EAAK,MAC5B,mBACA,MACA,UACF,EACAD,EAAK,iBAAmB,SAAU6B,EAAK,CACrC,GAAU,UAAU,SAAhB,EACF,OAAO2P,EAAiB3P,EAAK,mBAAoB,CAAC,EACpD,GAAIA,EACF,GAAI,CACF+P,EAAe,QAAQ/P,CAAG,CAC5B,MAAY,CAAC,CAEf,OAAOsQ,EAAiBtQ,CAAG,CAC7B,CACF,CAEA,GAAI7B,EAAK,4BAA6B,CACpC,IAAMoS,EAAyBnS,EAAK,MAClC,wBACA,OACA,CAAC,kBAAkB,CACrB,EACAD,EAAK,sBAAwB,SAAUqS,EAAU,CAC/C,GAAU,UAAU,SAAhB,EACF,OAAOb,EAAiB,IAAK,wBAAyB,CAAC,EAC9Ca,GACTrS,EAAK,4BAA4BqS,EAAU,EAAG,CAAC,EAEjDD,EAAuBC,CAAQ,CACjC,CACF,CAEA,CACE,IAAMC,EAAa,CAACpI,EAAMC,IAEtB,QACAA,EACA,KACAD,EAAK,CAAC,EACN,IACAjK,EAAK,SAASiK,EAAK,CAAC,CAAC,EAAE,YAAY,EAGjCqI,EAA6BtS,EAAK,MACtC,8BACA,MACA,CACE,WACA,SACA,MACA,IACA,IAAIA,EAAK,MAAM,eAAe,CAC5B,KAAM,WACN,UAAW,WACX,WAAAqS,CACF,CAAC,EACD,IAAIrS,EAAK,MAAM,eAAe,CAC5B,KAAM,WACN,UAAW,OACX,WAAAqS,CACF,CAAC,CACH,CACF,EAEAtS,EAAK,4BAA8B,SACjC6B,EACA2Q,EACAxQ,EACAyQ,EACAC,EACArQ,EACA,CACA,GAAU,UAAU,SAAhB,EACF,OAAOmP,EAAiB3P,EAAK,8BAA+B,CAAC,EAC1D,GAAW,EAAAG,EAAW,IACzBA,GAAYhC,EAAK,oBACRA,EAAK,eAAiBgC,EAAW,IAC1C,OAAOyP,EAAc5P,CAAG,EAE1B,GAAI,CACF,IAAM1B,EAAKoS,EACT1Q,EACA2Q,EACAxQ,EACAyQ,EACAC,EACArQ,CACF,EACA,OAAUlC,IAAN,GAAYuS,aAAoB,UAClCd,EAAe,aAAa/P,EAAK2Q,CAAK,EAEjCrS,CACT,OAAS7lB,EAAG,CACV,OAAO0oB,EAAK,uBAAuBnB,EAAKvnB,CAAC,CAC3C,CACF,EAEA0lB,EAAK,yBAA2B,CAC9B6B,EACA2Q,EACAxQ,EACAyQ,EACAC,IAEa,UAAU,SAAhB,EACH1S,EAAK,4BACH6B,EACA2Q,EACAxQ,EACAyQ,EACAC,EACA,CACF,EACAlB,EAAiB3P,EAAK,2BAA4B,CAAC,CAE3D,CAEA,CACE,IAAMyQ,EAAa,SAAUpI,EAAMC,EAAU,CAC3C,OACED,EAAK,CAAC,EACN,KACCA,EAAK,CAAC,EAAI,EAAI,GAAKA,EAAK,CAAC,GAC1B,IACAC,EACA,IACAlK,EAAK,SAASiK,EAAK,CAAC,CAAC,EAAE,YAAY,CAEvC,EAEMyI,EAAY,OAAO,OAAO,OAAO,OAAO,IAAI,EAAG,CACnD,gBAAiB,CACf,UAAW,SACX,WAAAL,EACA,UAAYl4B,GACH,CAAC+qB,EAAMc,EAAMC,IAAU,CAC5B,GAAI,CACF9rB,EAAS+qB,EAAM,GAAGnF,EAAK,qBAAqBiG,EAAMC,CAAK,CAAC,CAC1D,OAAS5rB,EAAG,CACV0lB,EAAK,wBAAwBmF,EAAM7qB,CAAC,CACtC,CACF,CAEJ,EACA,eAAgB,CACd,UAAW,OACX,WAAAg4B,EACA,UAAYl4B,GACF+qB,GAAS,CACf,GAAI,CACFnF,EAAK,kBAAkBmF,EAAM/qB,EAAS+qB,CAAI,CAAC,CAC7C,OAAS7qB,EAAG,CACV0lB,EAAK,wBAAwBmF,EAAM7qB,CAAC,CACtC,CACF,CAEJ,EACA,MAAO,CACL,UAAW,SACX,WAAAg4B,EACA,UAAYl4B,GACH,CAAC+qB,EAAMc,EAAMC,IAAU,CAC5B,GAAI,CACFlG,EAAK,kBACHmF,EACA/qB,EAAS+qB,EAAM,GAAGnF,EAAK,qBAAqBiG,EAAMC,CAAK,CAAC,CAC1D,CACF,OAAS5rB,EAAG,CACV0lB,EAAK,wBAAwBmF,EAAM7qB,CAAC,CACtC,CACF,CAEJ,EACA,SAAU,CACR,UAAW,OACX,WAAAg4B,EAEA,UAAYl4B,GACF0oB,GAAU,CAChB,GAAI,CACF1oB,EAAS0oB,CAAK,CAChB,OAASxoB,EAAG,CACV,QAAQ,MAAM,6BAA8BA,CAAC,CAC/C,CACF,CAEJ,CACF,CAAC,EAEKs4B,EAA0B3S,EAAK,MACnC,6BACA,MACA,CACE,WACA,SACA,MACA,MACA,IACA,IAAIA,EAAK,MAAM,eAAe,CAC5B,KAAM,QACN,GAAG0S,EAAU,KACf,CAAC,EACD,IAAI1S,EAAK,MAAM,eAAe,CAC5B,KAAM,QACN,GAAG0S,EAAU,eACf,CAAC,EACD,IAAI1S,EAAK,MAAM,eAAe,CAC5B,KAAM,SACN,GAAG0S,EAAU,cACf,CAAC,EACD,IAAI1S,EAAK,MAAM,eAAe,CAC5B,KAAM,WACN,GAAG0S,EAAU,QACf,CAAC,CACH,CACF,EAEME,EAAgC5S,EAAK,MACzC,iCACA,MACA,CACE,WACA,SACA,MACA,MACA,IACA,IAAIA,EAAK,MAAM,eAAe,CAC5B,KAAM,QACN,GAAG0S,EAAU,eACf,CAAC,EACD,IAAI1S,EAAK,MAAM,eAAe,CAC5B,KAAM,SACN,GAAG0S,EAAU,cACf,CAAC,EACD,IAAI1S,EAAK,MAAM,eAAe,CAC5B,KAAM,SACN,GAAG0S,EAAU,cACf,CAAC,EACD,IAAI1S,EAAK,MAAM,eAAe,CAC5B,KAAM,WACN,GAAG0S,EAAU,eACf,CAAC,EACD,IAAI1S,EAAK,MAAM,eAAe,CAC5B,KAAM,WACN,GAAG0S,EAAU,QACf,CAAC,CACH,CACF,EAEA3S,EAAK,2BAA6B,SAASW,EACzCkB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA,CACA,GAAI1B,EAAE,SAAW,UAAU,OACzB,OAAO6Q,EACL3P,EACA,6BACAlB,EAAE,MACJ,EACK,GAAW,EAAAqB,EAAW,IAC3BA,GAAYhC,EAAK,oBACRA,EAAK,eAAiBgC,EAAW,IAC1C,OAAOyP,EAAc5P,CAAG,EAE1B,GAAI,CACF,IAAM1B,EAAKyS,EACT/Q,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,CACF,EACA,OACQlC,IAAN,IACC+B,aAAiB,UAChBC,aAAiB,UACjBC,aAAkB,UAClBC,aAAoB,WAEtBuP,EAAe,YAAY/P,EAAKC,EAAUC,CAAI,EAEzC5B,CACT,OAAS7lB,EAAG,CACV,eAAQ,MAAM,4CAA6CA,CAAC,EACrD0oB,EAAK,uBACVnB,EACAvnB,EACA,0BAA4BA,CAC9B,CACF,CACF,EAEA0lB,EAAK,wBAA0B,SAASW,EACtCkB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA,CACA,OAAOzB,EAAE,SAAW,UAAU,OAC1BX,EAAK,2BACH6B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA,CACF,EACAoP,EAAiB3P,EAAK,0BAA2BlB,EAAE,MAAM,CAC/D,EAEAX,EAAK,+BAAiC,SAASW,EAC7CkB,EACAC,EACAC,EACAC,EACAC,EACAE,EACAC,EACAE,EACAC,EACAF,EACA,CACA,GAAI1B,EAAE,SAAW,UAAU,OACzB,OAAO6Q,EACL3P,EACA,iCACAlB,EAAE,MACJ,EACK,GAAW,EAAAqB,EAAW,IAC3BA,GAAYhC,EAAK,oBACRA,EAAK,eAAiBgC,EAAW,IAC1C,OAAOyP,EAAc5P,CAAG,EAE1B,GAAI,CACF,IAAM1B,EAAK0S,EACThR,EACAC,EACAC,EACAC,EACAC,EACAE,EACAC,EACAE,EACAC,EACAF,CACF,EACA,OACQlC,IAAN,IACCgC,aAAiB,UAChBC,aAAkB,UAClBE,aAAkB,UAClBC,aAAoB,UACpBF,aAAoB,WAEtBuP,EAAe,cAAc/P,EAAKC,EAAUC,CAAI,EAE3C5B,CACT,OAAS7lB,EAAG,CACV,eAAQ,MAAM,gDAAiDA,CAAC,EACzD0oB,EAAK,uBACVnB,EACAvnB,EACA,0BAA4BA,CAC9B,CACF,CACF,EAEA0lB,EAAK,2BAA2B,aAC9BA,EAAK,wBAAwB,aAC7BA,EAAK,+BAA+B,aAClCA,EAAK,kBAETA,EAAK,2BAA2B,eAC9BA,EAAK,wBAAwB,eAC7BA,EAAK,+BAA+B,eAClCA,EAAK,qBAETA,EAAK,2BAA2B,YAC9BA,EAAK,wBAAwB,YAC7BA,EAAK,+BAA+B,YAClCA,EAAK,uBACX,CAEA,CACE,IAAM8S,EAAgB,CAAC/R,EAAGV,KACP,OAAOU,GAApB,SACFV,EAAI,GACK2C,EAAK,oBAAoBjC,CAAC,GACnCV,EAAIU,EAAE,WACNA,EAAIiC,EAAK,mBACPjC,aAAa,YAAc,IAAI,WAAWA,CAAC,EAAIA,CACjD,GACS,MAAM,QAAQA,CAAC,IACxBA,EAAIA,EAAE,KAAK,EAAE,EACbV,EAAI,IAEC,CAACU,EAAGV,CAAC,GAGR0S,EAAY,CAChB,MAAO9S,EAAK,MAAM,qBAAsB,MAAO,CAC7C,WACA,SACA,MACA,MACA,KACA,IACF,CAAC,EAED,KAAMA,EAAK,MAAM,qBAAsB,MAAO,CAC5C,WACA,IACA,MACA,MACA,KACA,IACF,CAAC,CACH,EAEAD,EAAK,mBAAqB,SAASW,EACjCkB,EACAY,EACAuQ,EACArQ,EACAsQ,EACAC,EACA,CACA,GAAIvS,EAAE,SAAW,UAAU,OACzB,OAAO6Q,EAAiB3P,EAAK,qBAAsBlB,EAAE,MAAM,EAE7D,GAAM,CAACwS,EAAMC,CAAO,EAAIN,EAAcrQ,EAAKuQ,CAAM,EACjD,OAAQ,OAAOG,EAAM,CACnB,IAAK,SACH,OAAOJ,EAAU,MACflR,EACAsR,EACAC,EACAzQ,EACAsQ,EACA,IACF,EACF,IAAK,SACH,OAAOF,EAAU,KACflR,EACAsR,EACAC,EACAzQ,EACAsQ,EACAC,CACF,EACF,QACE,OAAOlQ,EAAK,uBACVnB,EACA7B,EAAK,cACL,wDACF,CACJ,CACF,EAEAA,EAAK,mBAAqB,SAASW,EACjCkB,EACAY,EACAuQ,EACAC,EACAC,EACA,CACA,OAAOvS,EAAE,SAAW,UAAU,OAC1BX,EAAK,mBAAmB6B,EAAKY,EAAKuQ,EAAQ,EAAGC,EAAQC,CAAM,EAC3D1B,EAAiB3P,EAAK,qBAAsBlB,EAAE,MAAM,CAC1D,CACF,CAEA,CACE,IAAM0S,EAAapT,EAAK,MAAM,oBAAqB,MAAO,CACxD,gBACA,MACA,SACA,MACA,GACF,CAAC,EACKqT,EAAarT,EAAK,MAAM,oBAAqB,MAAO,CACxD,gBACA,MACA,IACA,MACA,GACF,CAAC,EAEDD,EAAK,kBAAoB,SAASW,EAChCyF,EACAC,EACApwB,EACAs9B,EACAlR,EACA,CACA,GAAI1B,EAAE,SAAW,UAAU,OACzB,OAAO6Q,EACLxR,EAAK,kBAAkBoG,CAAK,EAC5B,oBACAzF,EAAE,MACJ,EACK,GAAIV,EAAK,MAAMhqB,CAAI,GAAcA,IAAT,KAC7B,OAAOo9B,EAAWjN,EAAOC,EAAMpwB,EAAMs9B,EAAOlR,CAAQ,EAC3CpsB,aAAgB,YACzBA,EAAO,IAAI,WAAWA,CAAI,EACjB,MAAM,QAAQ,IAAI,IAC3BA,EAAO,KAAK,KAAK,EAAE,GAErB,IAAI4G,EAAGwjB,EACP,GAAI,CACF,GAAI2C,EAAK,oBAAoB/sB,CAAI,EAC/B4G,EAAIojB,EAAK,oBAAoBhqB,CAAI,EACjCoqB,EAAIpqB,EAAK,mBACa,OAAOA,GAApB,SACT,CAAC4G,EAAGwjB,CAAC,EAAIJ,EAAK,aAAahqB,CAAI,MAE/B,QAAO+sB,EAAK,uBACVhD,EAAK,kBAAkBoG,CAAK,EAC5BpG,EAAK,cACL,oDACF,EAEF,OAAOqT,EAAWjN,EAAOC,EAAMxpB,EAAGwjB,EAAGL,EAAK,mBAAmB,CAC/D,OAAS1lB,EAAG,CACV,OAAA2lB,EAAK,QAAQpjB,CAAC,EACPmmB,EAAK,uBACVhD,EAAK,kBAAkBoG,CAAK,EAC5B9rB,CACF,CACF,CACF,EAEA0lB,EAAK,kBAAoB,SAASW,EAChCyF,EACAC,EACAmN,EACAC,EACApR,EACA,CACA,GAAI1B,EAAE,SAAW,UAAU,OACzB,OAAO6Q,EACLxR,EAAK,kBAAkBoG,CAAK,EAC5B,oBACAzF,EAAE,MACJ,EACK,GAAIV,EAAK,MAAMuT,CAAI,GAAcA,IAAT,KAC7B,OAAOF,EAAWlN,EAAOC,EAAMmN,EAAMC,EAAMpR,CAAQ,EAC1CmR,aAAgB,YACzBA,EAAO,IAAI,WAAWA,CAAI,EACjB,MAAM,QAAQA,CAAI,IAC3BA,EAAOA,EAAK,KAAK,EAAE,GAErB,IAAI32B,EAAGwjB,EACP,GAAI,CACF,GAAI2C,EAAK,qBAAqBwQ,CAAI,EAChC32B,EAAIojB,EAAK,oBAAoBuT,CAAI,EACjCnT,EAAIoT,GAAQ,EAAIA,EAAOD,EAAK,mBACN,OAAOA,GAApB,SACT,CAAC32B,EAAGwjB,CAAC,EAAIJ,EAAK,aAAauT,CAAI,MAE/B,QAAOxQ,EAAK,uBACVhD,EAAK,kBAAkBoG,CAAK,EAC5BpG,EAAK,cACL,oDACF,EAEF,OAAOsT,EAAWlN,EAAOC,EAAMxpB,EAAGwjB,EAAGL,EAAK,mBAAmB,CAC/D,OAAS1lB,EAAG,CACV,OAAA2lB,EAAK,QAAQpjB,CAAC,EACPmmB,EAAK,uBACVhD,EAAK,kBAAkBoG,CAAK,EAC5B9rB,CACF,CACF,CACF,CACF,CAGE0lB,EAAK,eAAiB,SAAUjW,KAAO4V,EAAM,CAC3C,GAAI,UAAU,OAAS,EAAG,OAAOK,EAAK,cACtC,OAAQjW,EAAI,CACV,KAAKiW,EAAK,kCACV,KAAKA,EAAK,wBACV,KAAKA,EAAK,2BACV,KAAKA,EAAK,6BACV,KAAKA,EAAK,6BACV,KAAKA,EAAK,kBACR,OAAOC,EAAK,QAAQ,uBAAuBlW,EAAI4V,EAAK,CAAC,CAAC,EACxD,KAAKK,EAAK,wBACR,OAAOC,EAAK,QAAQ,wBAClBlW,EACA4V,EAAK,CAAC,EACNA,EAAK,CAAC,CACR,EACF,KAAKK,EAAK,4BACR,OAAOC,EAAK,QAAQ,uBAAuBlW,EAAI4V,EAAK,CAAC,CAAC,EACxD,KAAKK,EAAK,wBACV,KAAKA,EAAK,uBACV,KAAKA,EAAK,yBACV,KAAKA,EAAK,wBACV,KAAKA,EAAK,mBACV,KAAKA,EAAK,kBACV,KAAKA,EAAK,qBACV,KAAKA,EAAK,wBACV,KAAKA,EAAK,0BACV,KAAKA,EAAK,oBACV,KAAKA,EAAK,wBACV,KAAKA,EAAK,sBACV,KAAKA,EAAK,qBACV,KAAKA,EAAK,2BACV,KAAKA,EAAK,oBACV,KAAKA,EAAK,yBACV,KAAKA,EAAK,2BACV,KAAKA,EAAK,qBACV,KAAKA,EAAK,6BACV,QACE,OAAOA,EAAK,eAChB,CACF,EAGF,CACE,IAAM0T,EAAgB,IAAI,IAE1B1T,EAAK,uBAAyB,SAAU2T,EAAM,CAC5C,GAAIA,aAAgB,SAClBA,EAAO1T,EAAK,gBAAgB,SAAU0T,CAAI,UAC3B,UAAU,SAAhB,GAA0B,CAAC1T,EAAK,MAAM0T,CAAI,EACnD,OAAO3T,EAAK,cAEd,IAAMG,EAAKF,EAAK,QAAQ,uBAAuB0T,CAAI,EACnD,OAAIA,IAAS,UAAU,CAAC,IACZxT,IAAN,EAAUuT,EAAc,IAAIC,CAAI,EAC/B1T,EAAK,kBAAkB0T,CAAI,GAE3BxT,CACT,EAEAH,EAAK,8BAAgC,SAAU2T,EAAM,CACnD,MAAI,CAACA,GAAc,UAAU,SAAhB,GAA0B,CAAC1T,EAAK,MAAM0T,CAAI,EAAU,EAC1D1T,EAAK,QAAQ,8BAA8B0T,CAAI,CACxD,EAEA3T,EAAK,6BAA+B,UAAY,CAC9CC,EAAK,QAAQ,6BAA6B,EAC1C,QAAWsK,KAAMmJ,EAAezT,EAAK,kBAAkBsK,CAAE,EACzDmJ,EAAc,MAAM,CACtB,CACF,CAEA,IAAME,EAAS5T,EAAK,iBAAiB,OAAO,EAC5C,GAAI4T,EACF,GAAI5Q,EAAK,WAAW,EAAG,CACrB,IAAM6Q,EAAe,IAAI7T,EAAK,sBAC5BC,EAAK,QAAQ,4BAA4B,CAC3C,EACA,OAAOD,EAAK,sBAEZ,IAAM8T,EACF7T,EAAK,QAAQ,mCACf8T,EAAS9T,EAAK,OAEV+T,EAAgBC,GACZhU,EAAK,KAAKgU,CAAM,IAAxB,IAA4B,eAAiB,aAEzCC,EAAa,CACjB,MAAO,CAACD,EAAQE,EAAMC,EAAMC,IAAS,CACnC,IAAMpQ,EAAQ8P,EAAO,QACnBO,EAASrU,EAAK,gBAAgB,EAChC,GAAI,CACF,IAAMsU,EAAQT,EAAaG,EAAQE,CAAI,EACvC,GAAI,CAACI,EAAO,MAAO,GACnB,IAAMC,EAAOvU,EAAK,SAASsU,CAAK,EAC1BE,EAAKT,EAAaC,CAAM,EAAE,QAAQO,CAAI,EAC5C,GAAI,CAACC,EAAI,MAAO,GAChB,IAAMC,EAAKD,EAAG,OACd,GAAIJ,GAAQ,EAAG,OAAOK,EACjB,GAAUL,IAAN,EACP,OAAApU,EAAK,KAAKmU,EAAM,CAAC,EACVM,EAET,IAAMC,EAAK1U,EAAK,mBAAmBwU,CAAE,EACrC,OAAIJ,EAAOK,EAAK,IAAGL,EAAOK,EAAK,GAC/BzU,EAAK,OAAO,EAAE,WAAWmU,EAAMO,EAAIA,EAAKN,EAAO,CAAC,EAChDpU,EAAK,KAAKmU,EAAOC,EAAO,EAAG,CAAC,EACrBA,EAAO,CAChB,OAAS/5B,EAAG,CACV,eAAQ,MAAM,kBAAmBA,CAAC,EAC3B,EACT,QAAE,CACAy5B,EAAO,QAAQ9P,CAAK,EACpBhE,EAAK,eAAeqU,CAAM,CAC5B,CACF,EACA,OAAQ,CAACL,EAAQE,EAAMS,IAAU,CAC/B,IAAM3Q,EAAQ8P,EAAO,QACrB,GAAI,CACF,IAAMQ,EAAQT,EAAaG,EAAQE,CAAI,EACvC,GAAI,CAACI,EAAO,MAAO,GACnB,IAAMC,EAAOvU,EAAK,SAASsU,CAAK,EAChC,OAAAP,EAAaC,CAAM,EAAE,QAAQO,EAAMvU,EAAK,SAAS2U,CAAK,CAAC,EAChD,CACT,OAASt6B,EAAG,CACV,eAAQ,MAAM,mBAAoBA,CAAC,EAC5B0lB,EAAK,YACd,QAAE,CACA+T,EAAO,QAAQ9P,CAAK,CACtB,CACF,EACA,QAAS,CAACgQ,EAAQE,IAAS,CACzB,IAAMlQ,EAAQ8P,EAAO,QACrB,GAAI,CACF,IAAMQ,EAAQT,EAAaG,EAAQE,CAAI,EACvC,OAAKI,GACLP,EAAaC,CAAM,EAAE,WAAWhU,EAAK,SAASsU,CAAK,CAAC,EAC7C,GAFY,CAGrB,OAASj6B,EAAG,CACV,eAAQ,MAAM,oBAAqBA,CAAC,EAC7B0lB,EAAK,YACd,QAAE,CACA+T,EAAO,QAAQ9P,CAAK,CACtB,CACF,CACF,EACA,QAAWlE,KAAK,OAAO,KAAKmU,CAAU,EACpCL,EAAaA,EAAa,UAAU9T,CAAC,CAAC,EAAIE,EAAK,gBAC7C4T,EAAa,gBAAgB9T,CAAC,EAC9BmU,EAAWnU,CAAC,CACd,CAEJ,MACEC,EAAK,uBAAuB4T,CAAM,EAItC3T,EAAK,MAAM,eAAe,UAAY,GAEtC,IAAMkP,EAAepL,EAAQ,aACvB8Q,EAAgB,SAASzhC,EAC7B+yB,EACAvmB,EACA0I,EACAwsB,EAAiB1hC,EAAO,uBACxB,CAMA,GALM+yB,aAAegJ,EAAa,WAEvB,EAAE7mB,aAAgB,WAAa,CAAC2X,EAAK,MAAM3X,CAAI,GACxD0e,EAAK,4DAA4D,EAFjEA,EAAK,iDAAiD,EAI9C,UAAU,SAAhB,EACF,MAAO,CAAC3G,EAAGM,IAAMvtB,EAAO+yB,EAAK9F,EAAGM,EAAGmU,CAAc,EAE9C1hC,EAAO,YACVA,EAAO,UAAY,SAAU+yB,EAAKrE,EAAUxZ,EAAMmf,EAAK,CACrD,OAAO,YAAa9H,EAAM,CACxB,OAAIrX,EAAK,SAAW,UAAU,QAC5B0e,EACE,wBACAb,EAAI,WAAW,KACb,KACArE,EACA,yBACF2F,CACF,EAEKnf,EAAK,MAAM,KAAMqX,CAAI,CAC9B,CACF,EAEAvsB,EAAO,eAAiB,UAAY,CAC9B,KAAK,UAAU,mBACjB,KAAK,UAAU,iBAAiB,QAAQ,CAAC2tB,EAAGgU,IAAQ,CAClD,GAAiB,OAAOhU,GAApB,SACF,GAAI,CACFd,EAAK,kBAAkBc,CAAC,CAC1B,MAAY,CAAC,CAEjB,CAAC,EACD,OAAO,KAAK,UAAU,iBAE1B,GAEF,IAAMiU,EAAO7O,EAAI,gBAAgBvmB,CAAI,EACjCo1B,EAAK,OAAS,GAChBhO,EACE,SACApnB,EACA,8CACAo1B,CACF,EAEF,IAAMC,EAAS9O,EAAI,UAAUvmB,CAAI,EAC3Bs1B,EACJJ,GAAkB,CAAC7U,EAAK,MAAM3X,CAAI,EAC9BlV,EAAO,UAAU+yB,EAAK8O,EAAQ3sB,EAAM0sB,CAAI,EACxC1sB,EACN,GAAI2X,EAAK,MAAMiV,CAAM,EACfA,GAAU,CAACjV,EAAK,cAAciV,CAAM,GACtClO,EAAK,UAAWkO,EAAQ,qCAAqC,EAE/D/O,EAAI8O,CAAM,EAAIC,MACT,CACL,IAAMC,EAAQlV,EAAK,gBACjBiV,EACA/O,EAAI,gBAAgBvmB,EAAM,EAAI,CAChC,EACAumB,EAAI8O,CAAM,EAAIE,GACV,CAAChP,EAAI,WAAa,CAACA,EAAI,UAAU,oBACnCA,EAAI,aACF,qCACA/yB,EAAO,cACT,EACA+yB,EAAI,UAAU,iBAAmB,CAAC,GAEpCA,EAAI,UAAU,iBAAiB,KAAK8O,EAAQE,CAAK,CACnD,CACA,MAAO,CAAC9U,EAAGM,IAAMvtB,EAAO+yB,EAAK9F,EAAGM,EAAGmU,CAAc,CACnD,EACAD,EAAc,uBAAyB,GAEvC,IAAMO,EAAiB,SACrBC,EACAC,EACAR,EAAiBD,EAAc,uBAC/B,CACA,IAAMU,EAAO,IAAI,IACjB,QAAWxV,KAAK,OAAO,KAAKuV,CAAO,EAAG,CACpC,IAAMpyB,EAAIoyB,EAAQvV,CAAC,EACbyV,EAAQD,EAAK,IAAIryB,CAAC,EACxB,GAAIsyB,EAAO,CACT,IAAMC,EAAOJ,EAAe,UAAUtV,CAAC,EACvCsV,EAAeI,CAAI,EACjBJ,EAAeA,EAAe,UAAUG,CAAK,CAAC,CAClD,MACEX,EAAcQ,EAAgBtV,EAAG7c,EAAG4xB,CAAc,EAClDS,EAAK,IAAIryB,EAAG6c,CAAC,CAEjB,CACA,OAAOsV,CACT,EAEAlG,EAAa,WAAW,UAAU,cAAgB,SAChDvvB,EACA0I,EACAwsB,EAAiBD,EAAc,uBAC/B,CACA,OAAO,UAAU,OAAS,GAAKj1B,GAAqB,OAAOA,GAApB,SACnCw1B,EAAe,KAAM,GAAG,SAAS,EACjCP,EAAc,KAAM,GAAG,SAAS,CACtC,EAEA1F,EAAa,WAAW,UAAU,eAAiB,SACjDmG,EACAR,EAAiBD,EAAc,uBAC/B,CACA,OAAOO,EAAe,KAAME,EAASR,CAAc,CACrD,CACF,CAAC,EAED,WAAW,oBAAoB,aAAa,KAAK,SAAU/Q,EAAS,CAClEA,EAAQ,QAAU,CAChB,WAAY,SACZ,iBAAkB,QAClB,SACE,uFACF,gBAAiB,OACnB,CACF,CAAC,EAED,WAAW,oBAAoB,aAAa,KAAK,SAAUA,EAAS,CAClE,IAAMiD,EAAO,IAAIrH,IAAS,CACxB,MAAM,IAAI,MAAMA,EAAK,KAAK,GAAG,CAAC,CAChC,EACMa,EAAQ,IAAIb,IAAS,CACzB,MAAM,IAAIoE,EAAQ,aAAa,GAAGpE,CAAI,CACxC,EAEMK,EAAO+D,EAAQ,KACnB9D,EAAO8D,EAAQ,KACff,EAAOe,EAAQ,KAEX2R,EAAW,IAAI,QAEfC,EAAY,IAAI,QAEhBC,EAAe,CAACl0B,EAAM7E,EAAGg5B,IAAS,CACtC,IAAMjyB,EAAI,OAAO,yBAAyBlC,EAAM7E,CAAC,EACjD,OAAO+G,EAAIA,EAAE,MAAQiyB,CACvB,EAEMC,EAAiB,SAAUtT,EAAOuT,EAAkB,CACxD,OAAIA,IACEvT,aAAiBwT,IAAIxT,EAAQA,EAAM,SACvChC,EACEuV,EACA,sBACAA,EAAmB,IACnBvT,EACIxC,EAAK,eAAewC,CAAK,EACzBxC,EAAK,eAAe+V,CAAgB,CAC1C,GAEK,UAAU,CAAC,CACpB,EAEME,EAAqBhW,EAAK,gBAC9B,UACA,SAAU8J,EAAGnyB,EAAGiF,EAAGkR,EAAG,CAChBiS,EAAK,oBAAsB+J,GAC7B,QAAQ,IACN,eAAgB,EAAE,KAAK,QAAU,gBAAkBnyB,EAAI,IACvDqoB,EAAK,SAASlS,CAAC,CACjB,CAEJ,EAAE,KAAK,CAAE,QAAS,CAAE,CAAC,CACvB,EAEMmoB,EAAmB,OAAO,OAAO,IAAI,EAErCC,EAAe,SAAS7O,KAAQ3H,EAAM,CAC1C,GAAI,CAAC2H,EAAK,UAAW,CACnBA,EAAK,UAAY,OAAO,OAAO,IAAI,EACnC,IAAM8O,GACW,OAAO,eAAtB,WACK/V,GACCG,EACE,cACAH,EACA,8CACF,EACF,GACNiH,EAAK,UAAU,gBAAgB,EAAI,CACjC,IAAK,QACL,SAAU8O,KAAmB,IAAM,QACrC,EACA9O,EAAK,UAAU,kBAAkB,EAAI,CACnC,IAAK,QACL,SAAU8O,KAAmB,IAAM,UACrC,CACF,CACA,IAAM5S,EAAM8D,EAAK,cAAc,GAAG3H,CAAI,EAClC3Y,EAAKwc,EAAI,SACXc,EAAUd,EAAI,IACd6S,EAAW7S,EAAI,OAED,OAAOxc,GAApB,UAAuC,OAAOA,GAApB,UACd,OAAOqvB,GAApB,UACC/R,GACc,OAAOA,GAApB,UACa,OAAOA,GAApB,YAEFP,EAAQ,OAAO,MAAM,uBAAwBP,EAAK,SAAS,EAC3DhD,EAAM,uCAAuC,GAE/C,IAAI8V,EAAoB,OAAOtvB,GAApB,SAAyBiZ,EAAK,SAASjZ,CAAE,EAAIA,EAClDuvB,GAAWjP,EAAK,UAAUgP,CAAI,EAChCC,KACFjS,EAAUiS,GAAS,IACnBvvB,EAAKsvB,EAAOC,GAAS,SAASD,CAAI,GAEpC,IAAIzU,GACF2U,GAAS,EACPH,EAAS,QAAQ,GAAG,GAAK,IAC3BG,IAAUxW,EAAK,mBAAqBA,EAAK,uBAEvCqW,EAAS,QAAQ,GAAG,GAAK,IAAGG,IAAUxW,EAAK,uBACrCwW,KAAN,IAAcA,IAAUxW,EAAK,sBACjCwW,IAAUxW,EAAK,sBACf,IAAMiE,GAAQhE,EAAK,OAAO,QAC1B,GAAI,CACF,IAAMwW,GAAOxW,EAAK,OAAO,SAAS,EAC9BE,EAAKH,EAAK,gBAAgBhZ,EAAIyvB,GAAMD,GAAQlS,GAAW,CAAC,EAC5DzC,GAAM5B,EAAK,QAAQwW,EAAI,EACvBX,EAAejU,GAAK1B,CAAE,EACtBH,EAAK,8BAA8B6B,GAAK,CAAC,EACrCwU,EAAS,QAAQ,GAAG,GAAK,GAC3BrW,EAAK,iBACH6B,GACA7B,EAAK,kBACLiW,EACApU,EACF,CAEJ,OAASvnB,GAAG,CACV,MAAIunB,IAAK7B,EAAK,iBAAiB6B,EAAG,EAC5BvnB,EACR,QAAE,CACA2lB,EAAK,OAAO,QAAQgE,EAAK,CAC3B,CACA,KAAK,SAAWqS,EAChBZ,EAAS,IAAI,KAAM7T,EAAG,EACtB8T,EAAU,IAAI,KAAM,OAAO,OAAO,IAAI,CAAC,EACvC,GAAI,CACF,IAAMlR,GACJzE,EAAK,kBAAkB6B,EAAG,GAC1BrB,EAAM,mDAAmD,EACrDkW,EAAcR,EAAiBzR,EAAI,EACrCiS,IACEA,aAAuB,SACzBA,EAAY,KAAM3S,CAAO,EAEzB+R,EACEjU,GACA7B,EAAK,aAAa6B,GAAK6U,EAAa,EAAG,EAAG,CAAC,CAC7C,EAGN,OAASp8B,GAAG,CACV,WAAK,MAAM,EACLA,EACR,CACF,EAEA67B,EAAa,kBAAoB,SAAU1R,EAAMhC,EAAK,CACpDyT,EAAiBzR,CAAI,EAAIhC,CAC3B,EAEA0T,EAAa,cAAgB,SAC3B17B,EAAW,WACXyG,EAAQ,IACRokB,EAAM,KACN,CACA,IAAM5xB,EAAM,CAAC,EACb,OACQ,UAAU,SAAhB,GACA,UAAU,CAAC,GACE,OAAO,UAAU,CAAC,GAA/B,UAEA,OAAO,OAAOA,EAAK,UAAU,CAAC,CAAC,EACbA,EAAI,QAAlB,SAAyBA,EAAI,MAAQ,KACvBA,EAAI,MAAlB,SAAuBA,EAAI,IAAM,MACnBA,EAAI,WAAlB,SAA4BA,EAAI,SAAW,cAE/CA,EAAI,SAAW+G,EACf/G,EAAI,MAAQwN,EACZxN,EAAI,IAAM4xB,GAEL5xB,CACT,EAEA,IAAMsiC,EAAK,YAAarW,EAAM,CAC5BwW,EAAa,MAAM,KAAMxW,CAAI,CAC/B,EACAqW,EAAG,aAAeG,EAElB,IAAMQ,EAAY,CAChB,KAAM,EACN,OAAQ,EACR,OAAQ,EACR,QAAS,EACT,KAAM,CACR,EACAA,EAAU,WAAgBA,EAAU,KAChC1W,EAAK,gBACP0W,EAAU,OAASA,EAAU,QAG/B,IAAMC,EAAO,UAAY,CACnBD,IAAc,UAAU,CAAC,GAC3BnW,EACER,EAAK,cACL,8DACF,EAEF,KAAK,GAAK,UAAU,CAAC,EACrB0V,EAAS,IAAI,KAAM,UAAU,CAAC,CAAC,EAC/B,KAAK,eAAiB1V,EAAK,6BAA6B,KAAK,OAAO,CACtE,EAEM6W,EAAe,SAAUnvB,EAAI,CACjC,OAAKA,EAAG,SAAS8Y,EAAM,qBAAqB,EACrC9Y,CACT,EAEMovB,EAAiB,SAAUC,EAAMhC,EAAK,CAC1C,OAAIA,KAASA,EAAM,IAAMA,EAAM,GAAKA,GAAOgC,EAAK,cAC9CvW,EAAM,eAAgBuU,EAAK,kBAAkB,EAExCgC,CACT,EAEMC,EAAgB,SAAUtvB,EAAIiY,EAAM,CACxC,IAAMzqB,EAAM,OAAO,OAAO,IAAI,EAE9B,OADAA,EAAI,IAAM,OAAO,OAAO,IAAI,EACpByqB,EAAK,OAAQ,CACnB,IAAK,GAEY,OAAOA,EAAK,CAAC,GAA1B,UACAqD,EAAK,oBAAoBrD,EAAK,CAAC,CAAC,GAGvB,MAAM,QAAQA,EAAK,CAAC,CAAC,EAD9BzqB,EAAI,IAAMyqB,EAAK,CAAC,EAGPA,EAAK,CAAC,GAAkB,OAAOA,EAAK,CAAC,GAA1B,WACpBzqB,EAAI,IAAMyqB,EAAK,CAAC,EAChBzqB,EAAI,IAAMA,EAAI,IAAI,KAEpB,MACF,IAAK,GACHA,EAAI,IAAMyqB,EAAK,CAAC,EAChBzqB,EAAI,IAAMyqB,EAAK,CAAC,EAChB,MACF,QACEa,EAAM,oCAAoC,CAC9C,CACAtrB,EAAI,IAAM8tB,EAAK,eAAe9tB,EAAI,GAAG,EACpB,OAAOA,EAAI,KAAxB,UACFsrB,EAAM,qDAAqD,EAE7D,IAAMgD,EAAMtuB,EAAI,IAChB,OAAQsuB,EAAI,YAAa,CACvB,IAAK,aACEA,EAAI,aAAYA,EAAI,WAAa,CAAC,GACvCtuB,EAAI,UAAY,IAAMsuB,EAAI,WAC1B,MACF,IAAK,UACEA,EAAI,UAASA,EAAI,QAAU,CAAC,GACjCtuB,EAAI,UAAY,IAAMsuB,EAAI,QAC1B,MACF,KAAK,OACL,IAAK,OACHtuB,EAAI,UAAY,IAAMwS,EACtB,MACF,QACE8Y,EAAM,6BAA8BgD,EAAI,WAAW,CACvD,CAKA,GAJI,CAACA,EAAI,UAAY,CAACA,EAAI,aAA6BA,EAAI,UAAlB,SAClCA,EAAI,aAAYA,EAAI,WAAa,CAAC,GACvCtuB,EAAI,UAAY,IAAMsuB,EAAI,YAExBA,EAAI,UAAYA,EAAI,WACtB,OAAsBA,EAAI,UAAlB,OAA4B,QAAUA,EAAI,QAAS,CACzD,IAAK,SACHtuB,EAAI,MAAQ,CAAC6hC,EAAM5P,IAAU,CACtBA,EAAM,cACTA,EAAM,YAAc4P,EAAK,eAAe,CAAC,CAAC,GAE5C,IAAME,EAAMF,EAAK,IAAI,CAAC,CAAC,EACjBtT,GAAK,OAAO,OAAO,IAAI,EAC7B,QAAWnsB,MAAK6vB,EAAM,YACpB1D,GAAG0D,EAAM,YAAY7vB,EAAC,CAAC,EAAI2/B,EAAI3/B,EAAC,EAClC,OAAOmsB,EACT,EACA,MACF,IAAK,QACHvuB,EAAI,MAAS6hC,GAASA,EAAK,IAAI,CAAC,CAAC,EACjC,MACF,IAAK,OACC,MAAM,QAAQvT,EAAI,UAAU,GAC9BhD,EACE,uDACA,+BACA,mDACF,EAEFtrB,EAAI,MAAS6hC,GAASA,EACtB,MACF,QACE,GAAI/T,EAAK,QAAQQ,EAAI,OAAO,EAAG,CAC7BtuB,EAAI,MAAS6hC,GAASA,EAAK,IAAIvT,EAAI,OAAO,EAC1C,KACF,SACe,OAAOA,EAAI,SAAxB,UACAA,EAAI,QAAQ,OAAS,GACbA,EAAI,QAAQ,CAAC,IAArB,IACA,CACA,IAAM0T,EAAW1T,EAAI,QAAQ,OAAO,CAAC,EACrCtuB,EAAI,MAAS6hC,GAAS,CACpB,IAAM5W,EAAK4W,EAAK,IAAI,OAAO,OAAO,IAAI,CAAC,EAAEG,CAAQ,EACjD,OAAqB/W,IAAd,OACHK,EACER,EAAK,gBACL,iCACAkX,CACF,EACA/W,CACN,EACA,KACF,CACAK,EAAM,mBAAoBgD,EAAI,OAAO,CACzC,CAEF,OAAOtuB,CACT,EAEMiiC,EAAmB,CAACzvB,EAAI+a,EAAK2U,KAASC,IAAY,CACtD,IAAMN,EAAOrvB,EAAG,QAAQ+a,CAAG,EAC3B,GAAI,CACF,IAAMtC,EAAK4W,EAAK,KAAKK,CAAI,EAAE,KAAK,EAC5BL,EAAK,IAAI,GAAGM,CAAO,EACnB,OACJ,OAAAN,EAAK,MAAM,EACJ5W,CACT,QAAE,CACA4W,EAAK,SAAS,CAChB,CACF,EAEMO,EAAc,CAAC5vB,EAAI+a,EAAK2U,EAAMG,IAClC7vB,EAAG,KAAK,CACN,IAAA+a,EACA,KAAA2U,EACA,QAAAG,EACA,YAAa,YACf,CAAC,EAEHvB,EAAG,QAAU,CAACtuB,EAAIupB,IAAe6E,EAAepuB,EAAIupB,CAAU,EAE9D+E,EAAG,UAAY,CACb,OAAQ,UAAY,CAClB,MAAO,CAAC,CAAC,KAAK,OAChB,EAEA,WAAY,UAAY,CACtB,OAAOa,EAAa,IAAI,CAC1B,EAEA,MAAO,UAAY,CACjB,GAAI,KAAK,QAAS,CAChB,GAAI,KAAK,SAAW,KAAK,QAAQ,kBAAkB,SACjD,GAAI,CACF,KAAK,QAAQ,OAAO,IAAI,CAC1B,MAAY,CAAC,CAEf,IAAMhV,EAAM,KAAK,QAWjB,GAVA,OAAO,KAAK8T,EAAU,IAAI,IAAI,CAAC,EAAE,QAAQ,CAAC5V,EAAG2F,IAAM,CACjD,GAAIA,GAAKA,EAAE,QACT,GAAI,CACFA,EAAE,SAAS,CACb,MAAY,CAAC,CAEjB,CAAC,EACDgQ,EAAS,OAAO,IAAI,EACpBC,EAAU,OAAO,IAAI,EACrB3V,EAAK,iBAAiB6B,CAAG,EACrB,KAAK,SAAW,KAAK,QAAQ,iBAAiB,SAChD,GAAI,CACF,KAAK,QAAQ,MAAM,IAAI,CACzB,MAAY,CAAC,CAEf,OAAO,KAAK,QACd,CACF,EAEA,QAAS,SAAU9Z,EAAQ,GAAOyvB,EAAY,GAAO,CACnD,IAAM36B,EAAIg6B,EAAa,IAAI,EAAE,QAC7B,OAAI9uB,EACKyvB,EACHxX,EAAK,wBAAwBnjB,CAAC,EAC9BmjB,EAAK,sBAAsBnjB,CAAC,EAEzB26B,EACHxX,EAAK,kBAAkBnjB,CAAC,EACxBmjB,EAAK,gBAAgBnjB,CAAC,CAE9B,EAEA,WAAY,SAAU0nB,EAAS,OAAQ,CACrC,OAAOvE,EAAK,oBAAoB6W,EAAa,IAAI,EAAE,QAAStS,CAAM,CACpE,EAEA,OAAQ,SAAUkT,EAAW,EAAG,CAC9B,OAAOzX,EAAK,gBAAgB6W,EAAa,IAAI,EAAE,QAASY,CAAQ,CAClE,EAEA,UAAW,SAAUlT,EAAS,EAAG,CAC/B,IAAIpE,EACEsE,EAAOzE,EAAK,kBAChB6W,EAAa,IAAI,EAAE,QACnBtS,CACF,EACA,GAAIE,EAAM,CACR,IAAM1D,EAAI,IAAIf,EAAK,YAAYyE,CAAI,EACnC,GAAI,CACFtE,EAAKF,EAAK,SAASc,EAAE,MAAM,CAC7B,QAAE,CACAA,EAAE,QAAQ,CACZ,CACF,CACA,OAAOZ,CACT,EAEA,QAAS,SAAUsC,EAAK,CACtBoU,EAAa,IAAI,EACjB,IAAM5S,EAAQhE,EAAK,OAAO,QACtBgT,EAAQ7M,EACZ,GAAI,CACF6M,EAAShT,EAAK,OAAO,MAAM,CAAC,EAC5B+V,EAAG,QACD,KACAhW,EAAK,mBAAmB,KAAK,QAASyC,EAAK,GAAIwQ,EAAQ,IAAI,CAC7D,EACA7M,EAAQnG,EAAK,QAAQgT,CAAM,CAC7B,QAAE,CACAhT,EAAK,OAAO,QAAQgE,CAAK,CAC3B,CACKmC,GAAO5F,EAAM,2BAA2B,EAC7C,IAAMuW,EAAO,IAAIH,EAAK,KAAMxQ,EAAOuQ,CAAS,EAC5C,OAAAhB,EAAU,IAAI,IAAI,EAAEvP,CAAK,EAAI2Q,EACtBA,CACT,EAEA,KAAM,UAAY,CAChBF,EAAa,IAAI,EACjB,IAAMnjC,EAAMsjC,EAAc,KAAM,SAAS,EACzC,GAAI,CAACtjC,EAAI,IACP,OAAO8sB,EAAM,gCAAgC,EAE/C,IAAMgD,EAAM9vB,EAAI,IACV0G,EAAWopB,EAAI,SACfkU,EAAa,MAAM,QAAQlU,EAAI,UAAU,EAC3CA,EAAI,WACJ,OACAuT,EACAK,EAAO5T,EAAI,KACXmU,EAAkB,CAAC,EACrBjkC,EAAI,OACJ8vB,EAAI,aACJkU,GAEIzT,GAAQhE,EAAK,gBAAgB,EAC7B2X,GAAU,MAAM,QAAQpU,EAAI,OAAO,EACrCA,EAAI,QACJ,OACJ,GAAI,CACF,IAAMqU,GAAO7U,EAAK,oBAAoBtvB,EAAI,GAAG,EACzCgvB,GAAamV,GACbnkC,EAAI,IAAI,WACRusB,EAAK,QAAQvsB,EAAI,GAAG,EAClBu/B,GAAShT,EAAK,YAClB,EAAIA,EAAK,WAAayC,GAAa,EACrC,EACMwQ,EAASD,GAAShT,EAAK,UACzB6X,EAAO5E,EAASjT,EAAK,UACnB8X,EAAUD,EAAOpV,GAIvB,IAHImV,GAAM5X,EAAK,MAAM,EAAE,IAAIvsB,EAAI,IAAKokC,CAAI,EACnC7X,EAAK,QAAQvsB,EAAI,IAAKusB,EAAK,MAAM,EAAG6X,EAAMpV,GAAY,EAAK,EAChEzC,EAAK,KAAK6X,EAAOpV,GAAY,CAAC,EACvBoV,GAAQ7X,EAAK,KAAK6X,EAAM,IAAI,GAAG,CACpC7X,EAAK,QAAQ,CAACgT,GAAQC,CAAM,EAAG,CAAC,EAChC8C,EAAG,QACD,KACAhW,EAAK,mBACH,KAAK,QACL8X,EACApV,GACA,EACAuQ,GACAC,CACF,CACF,EACA,IAAM9M,EAAQnG,EAAK,QAAQgT,EAAM,EAGjC,GAFA6E,EAAO7X,EAAK,QAAQiT,CAAM,EAC1BxQ,GAAaqV,EAAUD,EACnB,EAAC1R,EAOL,IANIwR,IAASA,GAAQ,KAAK5X,EAAK,YAAYoG,CAAK,EAAE,KAAK,CAAC,EACxD2Q,EAAO,IAAIH,EAAK,KAAMxQ,EAAOuQ,CAAS,EAClCS,GAAQL,EAAK,iBACfA,EAAK,KAAKK,CAAI,EACdA,EAAO,MAELO,GAAmBZ,EAAK,YAAa,CACvC,IAAIiB,EAAc,MAAM,QAAQxU,EAAI,WAAW,EAAI,EAAI,EAEvD,GADAmU,EAAkB,GACdjkC,EAAI,OAASgkC,EAAY,CAC3B,IAAMO,EAAa,OAAO,OAAO,IAAI,EACrC,KAAOlB,EAAK,KAAK,EAAGA,EAAK,cAAgB,GAAO,CACpCiB,MAAN,GACFjB,EAAK,eACFkB,EAAW,YAAczU,EAAI,aAAe,CAAC,CAChD,EAEFuT,EAAK,cAAgB,GACrB,IAAME,EAAMvjC,EAAI,MAAMqjC,EAAMkB,CAAU,EAEtC,GADIP,GAAYA,EAAW,KAAKT,CAAG,EAC/B78B,GAAsBA,EAAS,KAAKopB,EAAKyT,EAAKF,CAAI,IAAtC,GACd,KAEJ,CACAA,EAAK,cAAgB,EACvB,CACUiB,IAAN,GACFjB,EAAK,eAAevT,EAAI,WAAW,CAEvC,MACEuT,EAAK,KAAK,EAEZA,EAAK,MAAM,EAAE,SAAS,EACtBA,EAAO,KACT,CACF,QAAE,CACA9W,EAAK,eAAegE,EAAK,EACrB8S,IACF,OAAOA,EAAK,cACZA,EAAK,SAAS,EAElB,CACA,OAAOrjC,EAAI,UAAU,CACvB,EAEA,eAAgB,SAAWkM,EAAMsiB,EAAOsB,EAAK,CAC3C,IAAM0U,EAAUvX,GAAMA,aAAa,SACnC,OAAQ,UAAU,OAAQ,CACxB,IAAK,GACH6C,EAAM5jB,EACNA,EAAO4jB,EAAI,KACXtB,EAAQsB,EAAI,OAAS,EACrB,MACF,IAAK,GACE0U,EAAOhW,CAAK,IACfsB,EAAMtB,EACNA,EAAQsB,EAAI,OAAS,GAEvB,MACF,IAAK,GACH,MACF,QACE,KACJ,CACKA,IAAKA,EAAM,CAAC,GACA,OAAO5jB,GAApB,UACF4gB,EAAM,2CAA2C,EAEnD,IAAI2B,EAAQqB,EAAI,OAAS,EACrBpB,EAASoB,EAAI,QAAU,EACrBlB,GAASkB,EAAI,QAAU,EACvBjB,GAAWiB,EAAI,UAAY,EAC7B2U,GACAD,EAAOhW,CAAK,GACdiW,GAAW,IACPD,EAAO/V,CAAK,GAAK+V,EAAO9V,CAAM,IAChC5B,EAAM,2CAA2C,EAEnD2B,EAAQC,EAAS,MACR8V,EAAO/V,CAAK,GAChB+V,EAAO9V,CAAM,GAChB5B,EAAM,wDAAwD,EAEhE0B,EAAQ,MACCgW,EAAO9V,CAAM,EACtB5B,EAAM,uDAAuD,EAE7DA,EAAM,mCAAmC,EAE7B2X,KAAV,IACED,EAAO5V,EAAM,GAAK4V,EAAO3V,EAAQ,IACnC/B,EACE,4DACF,EAEO0X,EAAO5V,EAAM,GACjB4V,EAAO3V,EAAQ,GAClB/B,EAAM,yCAAyC,EAEjD2X,GAAW,IACFD,EAAO3V,EAAQ,GACxB/B,EAAM,yCAAyC,EAEjD,IAAMyB,GAAOuB,EAAI,KAGNvB,IAAT,OACc,OAAOA,IAApB,UAA4B,CAACe,EAAK,QAAQf,EAAI,IAE/CzB,EACE,sEACF,EAEF,IAAM6B,GAAWmB,EAAI,UAAY,EAC7BnB,IAAY,CAAC6V,EAAO7V,EAAQ,GAC9B7B,EAAM,uCAAuC,EAE/C,IAAI4X,EAAS,EACTxC,EAAapS,EAAK,eAAe,IACnC4U,GAAUpY,EAAK,sBACb4V,EAAapS,EAAK,YAAY,IAChC4U,GAAUpY,EAAK,mBACb4V,EAAapS,EAAK,WAAW,IAAG4U,GAAUpY,EAAK,kBACnDpgB,EAAOA,EAAK,YAAY,EACxB,IAAMy4B,EAASnW,GAASC,EAClB0P,EAAQ+D,EAAapS,EAAK,OAAO,EACjC8U,EACS,OAAOzG,GAApB,SACIA,EACAwG,EAAO,OACLA,EAAO,OAAS,EAChB,EACJlY,EACJ,OAAIgY,GACFhY,EAAKH,EAAK,+BACR,KAAK,QACLpgB,EACA04B,EACAtY,EAAK,YAAcoY,EACnBnW,IAAQ,EACRE,EACAC,EACAE,GACAC,GACAF,EACF,EAEAlC,EAAKH,EAAK,2BACR,KAAK,QACLpgB,EACA04B,EACAtY,EAAK,YAAcoY,EACnBnW,IAAQ,EACRC,EACAC,EACAC,EACAC,EACF,EAEF2T,EAAG,QAAQ,KAAM7V,CAAE,EACZ,IACT,EAEA,YAAa,SAAUsC,EAAK2U,EAAMmB,EAAQ,CACxC,OAAOpB,EAAiB,KAAM1U,EAAK2U,EAAM,EAAGmB,CAAM,CACpD,EAEA,aAAc,SAAU9V,EAAK2U,EAAMmB,EAAQ,CACzC,IAAMxB,EAAO,KAAK,QAAQtU,CAAG,EAC3BtC,EAAK,CAAC,EACR,GAAI,CAEF,IADA4W,EAAK,KAAKK,CAAI,EACPL,EAAK,KAAK,GAAG5W,EAAG,KAAK4W,EAAK,IAAI,EAAGwB,CAAM,CAAC,EAC/CxB,EAAK,MAAM,CACb,QAAE,CACAA,EAAK,SAAS,CAChB,CACA,OAAO5W,CACT,EAEA,YAAa,SAAUsC,EAAK2U,EAAM,CAChC,OAAOD,EAAiB,KAAM1U,EAAK2U,EAAM,CAAC,CAAC,CAC7C,EAEA,aAAc,SAAU3U,EAAK2U,EAAM,CACjC,OAAOD,EAAiB,KAAM1U,EAAK2U,EAAM,CAAC,CAAC,CAC7C,EAEA,aAAc,SAAU3U,EAAK2U,EAAM,CACjC,OAAOE,EAAY,KAAM7U,EAAK2U,EAAM,OAAO,CAC7C,EAEA,cAAe,SAAU3U,EAAK2U,EAAM,CAClC,OAAOE,EAAY,KAAM7U,EAAK2U,EAAM,QAAQ,CAC9C,EAEA,mBAAoB,UAAY,CAC9B,OAAO,KAAK,QAAU,OAAO,KAAKzB,EAAU,IAAI,IAAI,CAAC,EAAE,OAAS,CAClE,EAEA,YAAa,SAAUv7B,EAAU,CAC/B,IAAIo+B,EAAS,QACT,UAAU,OAAS,IACjB,YAAY,KAAK,UAAU,CAAC,CAAC,GAC/BhY,EACER,EAAK,cACL,uCACF,EAEFwY,GAAU,IAAM,UAAU,CAAC,EAC3Bp+B,EAAW,UAAU,CAAC,GAExBy8B,EAAa,IAAI,EAAE,KAAK2B,CAAM,EAC9B,GAAI,CACF,IAAMrY,EAAK/lB,EAAS,IAAI,EACxB,YAAK,KAAK,QAAQ,EACX+lB,CACT,OAAS7lB,EAAG,CACV,WAAK,KAAK,UAAU,EACdA,CACR,CACF,EAEA,UAAW,SAAUF,EAAU,CAC7By8B,EAAa,IAAI,EAAE,KAAK,eAAe,EACvC,GAAI,CACF,IAAM1W,EAAK/lB,EAAS,IAAI,EACxB,YAAK,KAAK,aAAa,EAChB+lB,CACT,OAAS7lB,EAAG,CACV,WAAK,KAAK,kDAAkD,EACtDA,CACR,CACF,EAEA,QAAS,SAAU22B,EAAY,CAC7B,OAAO6E,EAAe,KAAM7E,CAAU,CACxC,CACF,EAEA,IAAMwH,EAAiB,SAAU1B,EAAM,CACrC,OAAKA,EAAK,SAASvW,EAAM,uBAAuB,EACzCuW,CACT,EAEM2B,EAAsB,SAAU3X,EAAG,CACvC,IAAIgJ,EAAI4M,EAAmB5V,GAAT,KAAgC,OAAS,OAAOA,CAAC,EACnE,OAAQgJ,EAAG,CACT,KAAK4M,EAAU,QACf,KAAKA,EAAU,KACf,KAAKA,EAAU,OACf,KAAKA,EAAU,OACb,OAAO5M,EACT,KAAK4M,EAAU,OACb,GAAI1W,EAAK,cAAe,OAAO8J,EAEjC,QACE,OAAO/G,EAAK,qBAAqBjC,CAAC,EAAI4V,EAAU,KAAO,MAC3D,CACF,EAEMgC,EAA0B,SAAU5X,EAAG,CAC3C,OACE2X,EAAoB3X,CAAC,GACrBP,EAAM,oCAAqC,OAAOO,CAAC,CAEvD,EAEM6X,EAAmB,SAAU7B,EAAMr2B,EAAK,CAC5C,IAAM2f,EACS,OAAO3f,GAApB,SACIA,EACAsf,EAAK,6BAA6B+W,EAAK,QAASr2B,CAAG,EACzD,OAAU2f,IAAN,GAAW,CAAC2C,EAAK,QAAQ3C,CAAC,EAC5BG,EAAM,kCAAoC9f,CAAG,GACpC2f,EAAI,GAAKA,EAAI0W,EAAK,iBAC3BvW,EAAM,aAAc9f,EAAK,kBAAkB,EACtC2f,CACT,EAEMwY,EAAwB,SAAU9B,EAAM+B,EAAe,CAC3D,OAAI/B,EAAK,eACPvW,EACE,iDACAsY,CACF,EAEK/B,CACT,EAEMgC,EAAU,SAASpY,EAAEoW,EAAMhC,EAAKiE,EAAU/5B,EAAK,CACnD45B,EAAsBJ,EAAe1B,CAAI,EAAG,QAAQ,EAC/CpW,EAAE,IACLA,EAAE,WAAcI,GACdP,EACE,2DACAO,CACF,EACFJ,EAAE,EAAI,CACJ,OAAQ,SAAUoW,EAAMhC,GAAK91B,GAAKg6B,GAAQ,CACxC,GAAM,CAACC,GAAM7Y,EAAC,EAAIJ,EAAK,aAAahhB,GAAK,EAAI,EAI7C,OAHUg6B,GACNjZ,EAAK,kBACLA,EAAK,mBACA+W,EAAK,QAAShC,GAAKmE,GAAM7Y,GAAGL,EAAK,mBAAmB,CAC/D,CACF,GAEF2Y,EAAwB15B,CAAG,EAC3B81B,EAAM6D,EAAiB7B,EAAMhC,CAAG,EAChC,IAAI5U,EAAK,EACT,OACWlhB,GAAT,KAAoC03B,EAAU,KAAOqC,EACrD,CACA,KAAKrC,EAAU,KACbxW,EAAKH,EAAK,kBAAkB+W,EAAK,QAAShC,CAAG,EAC7C,MACF,KAAK4B,EAAU,OACbxW,EAAKQ,EAAE,EAAE,OAAOoW,EAAMhC,EAAK91B,EAAK,EAAK,EACrC,MACF,KAAK03B,EAAU,OAAQ,CACrB,IAAIzzB,EACA8f,EAAK,QAAQ/jB,CAAG,EAAGiE,EAAI8c,EAAK,iBACV,OAAO/gB,GAApB,SACF+jB,EAAK,aAAa/jB,CAAG,EAEfghB,EAAK,cACd/c,EAAI8c,EAAK,mBACAgD,EAAK,iBAAiB/jB,CAAG,GAClCA,EAAM,OAAOA,CAAG,EAChBiE,EAAI8c,EAAK,qBAETW,EAAE,WAAW1hB,CAAG,EAPhB0hB,EAAE,WAAW1hB,CAAG,GAUlBA,EAAM,OAAOA,CAAG,EACZghB,EAAK,eAAiB,OAAO,UAAUhhB,CAAG,EAC5CiE,EAAI8c,EAAK,mBAET9c,EAAI8c,EAAK,qBAGbG,EAAKjd,EAAE6zB,EAAK,QAAShC,EAAK91B,CAAG,EAC7B,KACF,CACA,KAAK03B,EAAU,QACbxW,EAAKH,EAAK,iBAAiB+W,EAAK,QAAShC,EAAK91B,EAAM,EAAI,CAAC,EACzD,MACF,KAAK03B,EAAU,KAAM,CACnB,GAAiB,OAAO13B,GAApB,SAAyB,CAC3BkhB,EAAKQ,EAAE,EAAE,OAAOoW,EAAMhC,EAAK91B,EAAK,EAAI,EACpC,KACF,MAAWA,aAAe,YACxBA,EAAM,IAAI,WAAWA,CAAG,EACd+jB,EAAK,qBAAqB/jB,CAAG,GACvCuhB,EACE,qCACA,6DACF,EAEF,IAAMwF,EAAQ/F,EAAK,MAAMhhB,EAAI,YAAc,CAAC,EAC5CghB,EAAK,MAAM,EAAE,IAAIhhB,EAAI,WAAaA,EAAM,CAAC,CAAC,EAAG+mB,CAAK,EAClD7F,EAAKH,EAAK,kBACR+W,EAAK,QACLhC,EACA/O,EACA/mB,EAAI,WACJ+gB,EAAK,mBACP,EACA,KACF,CACA,QACE+D,EAAQ,OAAO,KAAK,oCAAqC9kB,CAAG,EAC5DuhB,EAAM,qCAAuC,OAAOvhB,CAAG,CAC3D,CACA,OAAIkhB,GAAI6V,EAAG,QAAQe,EAAK,GAAG,QAAS5W,CAAE,EACtC4W,EAAK,QAAU,GACRA,CACT,EAEAH,EAAK,UAAY,CACf,SAAU,UAAY,CACpB,GAAI,KAAK,QAAS,CAChBiC,EAAsB,KAAM,YAAY,EACxC,IAAM1Y,EAAKH,EAAK,iBAAiB,KAAK,OAAO,EAC7C,cAAO2V,EAAU,IAAI,KAAK,EAAE,EAAE,KAAK,OAAO,EAC1CD,EAAS,OAAO,IAAI,EACpB,OAAO,KAAK,QACZ,OAAO,KAAK,eACZ,OAAO,KAAK,cACZ,OAAO,KAAK,GACLvV,CACT,CACF,EAEA,cAAe,UAAY,CACzB,OAAA0Y,EAAsBJ,EAAe,IAAI,EAAG,iBAAiB,EAC7DzY,EAAK,uBAAuB,KAAK,OAAO,EACxC,KAAK,QAAU,GACR,IACT,EAEA,MAAO,SAAUmZ,EAAgB,CAC/BN,EAAsB,KAAM,SAAS,EACjCM,GAAgB,KAAK,cAAc,EACvC,IAAMhZ,EAAKH,EAAK,cAAcyY,EAAe,IAAI,EAAE,OAAO,EAC1D,YAAK,QAAU,GACf3C,EAAe,KAAK,GAAI3V,CAAE,EACnB,IACT,EAEA,KAAM,UAAY,CAChBsY,EAAe,IAAI,EACnB,IAAI1D,EAAKrhC,EACT,OAAQ,UAAU,OAAQ,CACxB,IAAK,GACHqhC,EAAM,EACNrhC,EAAM,UAAU,CAAC,EACjB,MACF,IAAK,GACHqhC,EAAM,UAAU,CAAC,EACjBrhC,EAAM,UAAU,CAAC,EACjB,MACF,QACE8sB,EAAM,2BAA2B,CACrC,CACA,OAAkB9sB,IAAd,OACK,MACG,KAAK,gBACf8sB,EAAM,4CAA4C,EAEpD,KAAK,QAAU,GACF9sB,IAAT,KACKqlC,EAAQ,KAAMhE,EAAK4B,EAAU,KAAMjjC,CAAG,EACpC,MAAM,QAAQA,CAAG,GAChB,UAAU,SAAhB,GACF8sB,EACE,4DACF,EAEF9sB,EAAI,QAAQ,CAACqtB,EAAGzpB,IACdyhC,EAAQ,KAAMzhC,EAAI,EAAGqhC,EAAwB5X,CAAC,EAAGA,CAAC,CACpD,EACO,OACErtB,aAAe,cACxBA,EAAM,IAAI,WAAWA,CAAG,GAET,OAAOA,GAApB,UAA2B,CAACsvB,EAAK,qBAAqBtvB,CAAG,GACjD,UAAU,SAAhB,GACF8sB,EACE,6DACF,EAEF,OAAO,KAAK9sB,CAAG,EAAE,QAASqsB,GACxBgZ,EAAQ,KAAMhZ,EAAG4Y,EAAwBjlC,EAAIqsB,CAAC,CAAC,EAAGrsB,EAAIqsB,CAAC,CAAC,CAC1D,EACO,MAEAgZ,EAAQ,KAAMhE,EAAK4D,EAAwBjlC,CAAG,EAAGA,CAAG,GAG/D,EAEA,WAAY,SAAUqhC,EAAKrhC,EAAK,CAC9B+kC,EAAe,IAAI,EACT,UAAU,SAAhB,IACF/kC,EAAMqhC,EACNA,EAAM,GAER,IAAMhL,EAAI4O,EAAwBjlC,CAAG,EACrC,OACEijC,EAAU,SAAW5M,GACrB4M,EAAU,OAAS5M,GACnB4M,EAAU,OAAS5M,GAEnBvJ,EAAM,qCAAqC,EAEtCuY,EAAQ,KAAMhE,EAAK4B,EAAU,KAAMjjC,CAAG,CAC/C,EAEA,KAAM,UAAY,CAChBmlC,EAAsB,KAAM,QAAQ,EACpC,IAAM1Y,EAAKH,EAAK,aAAayY,EAAe,IAAI,EAAE,OAAO,EACzD,OAAQtY,EAAI,CACV,KAAKH,EAAK,YACR,OAAQ,KAAK,QAAU,GACzB,KAAKA,EAAK,WACR,OAAQ,KAAK,QAAU,GACzB,QACE,KAAK,QAAU,GACf+D,EAAQ,OAAO,KACb,qBACA5D,EACAH,EAAK,kBAAkBG,CAAE,EACzB,QACAH,EAAK,YAAY,KAAK,OAAO,CAC/B,EACAgW,EAAG,QAAQ,KAAK,GAAG,QAAS7V,CAAE,CAClC,CACF,EAEA,UAAW,UAAY,CACrB,YAAK,KAAK,EACH,KAAK,MAAM,CACpB,EAEA,aAAc,UAAY,CACxB,GAAI,CACF,IAAMA,EAAK,KAAK,KAAK,EACrB,YAAK,MAAM,EACJA,CACT,QAAE,CACA,GAAI,CACF,KAAK,SAAS,CAChB,MAAY,CAAC,CACf,CACF,EAEA,IAAK,SAAU4U,EAAKwD,EAAQ,CAI1B,GAHKE,EAAe,IAAI,EAAE,SACxBjY,EAAM,+CAA+C,EAEnD,MAAM,QAAQuU,CAAG,EAAG,CACtB,IAAIz9B,EAAI,EACF+oB,EAAI,KAAK,YACf,KAAO/oB,EAAI+oB,GACT0U,EAAIz9B,CAAC,EAAI,KAAK,IAAIA,GAAG,EAEvB,OAAOy9B,CACT,SAAWA,GAAoB,OAAOA,GAApB,SAAyB,CACzC,IAAIz9B,EAAI,EACF+oB,EAAI,KAAK,YACf,KAAO/oB,EAAI+oB,GACT0U,EAAI/U,EAAK,oBAAoB,KAAK,QAAS1oB,CAAC,CAAC,EAAI,KAAK,IAAIA,GAAG,EAE/D,OAAOy9B,CACT,CAEA,OADA+B,EAAe,KAAM/B,CAAG,EAERwD,IAAd,OACIvY,EAAK,oBAAoB,KAAK,QAAS+U,CAAG,EAC1CwD,EACJ,CACA,KAAKvY,EAAK,YACR,OAAO,KACT,KAAKA,EAAK,eACR,GAAIC,EAAK,cAAe,CACtB,IAAME,EAAKH,EAAK,qBAAqB,KAAK,QAAS+U,CAAG,EACtD,OACE5U,GAAM,OAAO,kBACbA,GAAM,OAAO,iBAEN,OAAOA,CAAE,EAAE,QAAQ,EAErBA,CACT,KAAO,CACL,IAAMA,EAAKH,EAAK,sBAAsB,KAAK,QAAS+U,CAAG,EACvD,OACE5U,EAAK,OAAO,kBACZA,EAAK,OAAO,mBAEZK,EACE,iDAAmDL,CACrD,EAGK6C,EAAK,QAAQ7C,CAAE,EAAIA,EAAK,EAAIA,CACrC,CAEF,KAAKH,EAAK,aACR,OAAOA,EAAK,sBAAsB,KAAK,QAAS+U,CAAG,EACrD,KAAK/U,EAAK,YACR,OAAOA,EAAK,oBAAoB,KAAK,QAAS+U,CAAG,EACnD,KAAK/U,EAAK,YAAa,CACrB,IAAMK,EAAIL,EAAK,qBAAqB,KAAK,QAAS+U,CAAG,EACnDh+B,EAAMipB,EAAK,oBAAoB,KAAK,QAAS+U,CAAG,EAChD5U,EAAK,IAAI,WAAWE,CAAC,EAEvB,OAAIA,GAAGF,EAAG,IAAIF,EAAK,OAAO,EAAE,MAAMlpB,EAAKA,EAAMspB,CAAC,EAAG,CAAC,EAE9CA,GAAK,KAAK,GAAG,qBAAqB,OACpC,KAAK,GAAG,UAAU,KAAKF,EAAG,MAAM,EAE3BA,CACT,CACA,QACEK,EACE,8BACA,0BAA4BuU,EAAM,GACpC,CACJ,CACAvU,EAAM,cAAc,CACtB,EAEA,OAAQ,SAAUuU,EAAK,CACrB,OAAO,KAAK,IAAIA,EAAK/U,EAAK,cAAc,CAC1C,EAEA,SAAU,SAAU+U,EAAK,CACvB,OAAO,KAAK,IAAIA,EAAK/U,EAAK,YAAY,CACxC,EAEA,UAAW,SAAU+U,EAAK,CACxB,OAAO,KAAK,IAAIA,EAAK/U,EAAK,WAAW,CACvC,EAEA,QAAS,SAAU+U,EAAK,CACtB,OAAO,KAAK,IAAIA,EAAK/U,EAAK,WAAW,CACvC,EAEA,QAAS,SAAU+U,EAAK,CACtB,IAAMrP,EAAI,KAAK,IAAIqP,EAAK/U,EAAK,aAAa,EAC1C,OAAgB0F,IAAT,KAAaA,EAAI,KAAK,MAAMA,CAAC,CACtC,EAEA,cAAe,SAAUqP,EAAK,CAC5B,OAAO/U,EAAK,oBACV8W,EAAe2B,EAAe,IAAI,EAAG1D,CAAG,EAAE,QAC1CA,CACF,CACF,EAEA,eAAgB,SAAU5O,EAAM,CAAC,EAAG,CAClC2Q,EAAe2B,EAAe,IAAI,EAAG,CAAC,EACtC,IAAMpY,EAAI,KAAK,YACf,QAAS/oB,EAAI,EAAGA,EAAI+oB,EAAG,EAAE/oB,EACvB6uB,EAAI,KAAKnG,EAAK,oBAAoB,KAAK,QAAS1oB,CAAC,CAAC,EAEpD,OAAO6uB,CACT,EAEA,cAAe,SAAUvmB,EAAM,CAC7B,OAAO64B,EAAe,IAAI,EAAE,eACxBzY,EAAK,6BAA6B,KAAK,QAASpgB,CAAI,EACpD,MACN,CACF,EAEA,CACE,IAAMsvB,EAAO,CACX,WAAY,GACZ,IAAK,UAAY,CACf,OAAOwG,EAAS,IAAI,IAAI,CAC1B,EACA,IAAK,IAAMlV,EAAM,oCAAoC,CACvD,EACA,OAAO,eAAeoW,EAAK,UAAW,UAAW1H,CAAI,EACrD,OAAO,eAAe8G,EAAG,UAAW,UAAW9G,CAAI,CACrD,CAeA,GAbA,OAAO,eAAe0H,EAAK,UAAW,cAAe,CACnD,WAAY,GACZ,IAAK,UAAY,CACf,OAAO5W,EAAK,qBAAqB,KAAK,OAAO,CAC/C,EACA,IAAK,IAAMQ,EAAM,wCAAwC,CAC3D,CAAC,EAEDuD,EAAQ,IAAM,CACZ,GAAAiS,EACA,KAAAY,CACF,EAEI5T,EAAK,WAAW,EAAG,CACrBe,EAAQ,IAAI,YAAc,SAAUqV,EAAc,UAAW,CAC3D,IAAM5V,EAAM2S,EAAa,cAAc,GAAG,SAAS,EACnDiD,EAAc5V,EAAI,SACA4V,IAAd,WAAyCA,IAAZ,SAC/B5Y,EAAM,0DAA0D,EAElEgD,EAAI,IAAM,QACV2S,EAAa,KAAK,KAAM3S,CAAG,CAC7B,EACA,IAAM6V,EAAMtV,EAAQ,IAAI,YACxBsV,EAAI,UAAY,OAAO,OAAOrD,EAAG,SAAS,EAE1CqD,EAAI,aAAerZ,EAAK,uBAExBqZ,EAAI,UAAU,aAAe,UAAY,CACvC,OAAOA,EAAI,aAAaxC,EAAa,IAAI,EAAE,QAAQ,CACrD,EAEAwC,EAAI,YAAcrZ,EAAK,sBAEvBqZ,EAAI,UAAU,YAAc,UAAY,CACtC,OAAOA,EAAI,YAAYxC,EAAa,IAAI,EAAE,QAAQ,CACpD,CACF,CACF,CAAC,EAED,WAAW,oBAAoB,aAAa,KAAK,SAAU9S,EAAS,CAClE,IAAMf,EAAOe,EAAQ,KACrBA,EAAQ,eAAiB,UAAY,CACnC,aACA,IAAMiD,EAAO,IAAIrH,IAAS,CACxB,MAAM,IAAI,MAAMA,EAAK,KAAK,GAAG,CAAC,CAChC,EACM,WAAW,6BAA6B,UAC5CqH,EAAK,oDAAoD,EAE3D,IAAMjD,EAAU,KAAK,SAAWiD,EAAK,8BAA8B,EAC7DgP,EAAKjS,EAAQ,IAAI,GAEjBuV,EAAU,SAAU5xB,EAAI,CAC5B,IAAIzN,EAAKs/B,EAAO,MAAM,IAAI7xB,CAAE,EAC5B,OAAIzN,IACJA,EAAK,OAAQ,EAAEs/B,EAAO,MAAQ,IAAM7xB,EAAG,QAEvC6xB,EAAO,MAAM,IAAI7xB,EAAIzN,CAAE,EAChBA,EACT,EAEMs/B,EAAS,CACb,OAAQ,CAAC,EAET,MAAO,EAEP,MAAO,IAAI,QAEX,KAAM,CAAC,EACP,KAAM,SAAU/V,EAAK,CACnB,IAAM9b,EAAK,IAAIsuB,EAAGxS,CAAG,EACrB,YAAK,IAAI8V,EAAQ5xB,CAAE,CAAC,EAAIA,EACpB,KAAK,OAAO,QAAQA,CAAE,EAAI,GAAG,KAAK,OAAO,KAAKA,CAAE,EAC7CA,CACT,EACA,MAAO,SAAUA,EAAI8xB,EAAY,CAC/B,GAAI9xB,EAAI,CACN,OAAO,KAAK,IAAI4xB,EAAQ5xB,CAAE,CAAC,EAC3B,IAAMjN,EAAWiN,EAAG,SACd+c,EAAOzB,EAAK,qBAAqBtb,EAAG,QAAS,CAAC,EACpDA,EAAG,MAAM,EACT,IAAM+xB,EAAQ,KAAK,OAAO,QAAQ/xB,CAAE,EAChC+xB,GAAS,GAAG,KAAK,OAAO,OAAOA,EAAO,CAAC,EACvCD,GAAc/+B,GAAYgqB,GAC5BzB,EAAK,yBAAyByB,EAAMhqB,CAAQ,CAEhD,CACF,EAEA,KAAM,SAAU02B,EAAKuI,EAAU,CACzBA,GAAYA,EAAS,QACvB,WAAW,YAAYvI,EAAK,MAAM,KAAKuI,CAAQ,CAAC,EAChDA,EAAS,OAAS,GAElB,WAAW,YAAYvI,CAAG,CAE9B,EAEA,IAAK,OAAO,OAAO,IAAI,EAEvB,MAAO,SAAUl3B,EAAI0/B,EAAU,GAAM,CACnC,OACE,KAAK,IAAI1/B,CAAE,IACV0/B,EAAU3S,EAAK,6BAA8B/sB,CAAE,EAAI,OAExD,CACF,EAEM48B,EAAe,SAAUnvB,EAAK6xB,EAAO,OAAO,CAAC,EAAG,CACpD,OAAO7xB,GAAMA,EAAG,QAAUA,EAAKsf,EAAK,mBAAmB,CACzD,EAEM4S,EAAW,SAAUC,EAASC,EAAe,GAAM,CACvD,IAAMpyB,EAAK6xB,EAAO,MAAMM,EAAQ,KAAM,EAAK,GAAKN,EAAO,OAAO,CAAC,EAC/D,OAAOO,EAAejD,EAAanvB,CAAE,EAAIA,CAC3C,EAEMqyB,EAAiB,UAAY,CACjC,OAAOR,EAAO,OAAO,CAAC,GAAKD,EAAQC,EAAO,OAAO,CAAC,CAAC,CACrD,EAEMS,EAAuB3Z,GACbA,IAAP,IAAoBA,EAAE,CAAC,IAAX,IAGf4Z,EAAc,CAClB,KAAM,SAAUC,EAAI,CAClB,IAAMC,EAAQ,OAAO,OAAO,IAAI,EAC9Bxa,EAAOua,EAAG,MAAQ,OAAO,OAAO,IAAI,EAClCva,EAAK,eACPqH,EAAK,yCAAyC,EAEhD,IAAM7G,EAAK,OAAO,OAAO,IAAI,EAC7Bga,EAAM,IAAMxa,EAAK,IACjBwa,EAAM,SAAWxa,EAAK,UAAY,GAClC,IAAMjY,EAAK6xB,EAAO,KAAKY,CAAK,EAC5B,OAAAha,EAAG,SAAWzY,EAAG,SACjByY,EAAG,WAAa,CAAC,CAAC4D,EAAQ,KAAK,uBAC7Brc,EAAG,QACH,MACF,EACAyY,EAAG,KAAOmZ,EAAQ5xB,CAAE,EACpByY,EAAG,IAAMzY,EAAG,UAAU,EACfyY,CACT,EAEA,MAAO,SAAU+Z,EAAI,CACnB,IAAMxyB,EAAKkyB,EAASM,EAAI,EAAK,EACvBvmC,EAAW,CACf,SAAU+T,GAAMA,EAAG,QACrB,EACA,GAAIA,EAAI,CACN,IAAM0yB,EACJF,EAAG,MAAqB,OAAOA,EAAG,MAAvB,SACP,CAAC,CAACA,EAAG,KAAK,OACV,GACNX,EAAO,MAAM7xB,EAAI0yB,CAAQ,CAC3B,CACA,OAAOzmC,CACT,EAEA,KAAM,SAAUumC,EAAI,CAClB,IAAM/Z,EACS,OAAO+Z,EAAG,MAAvB,SACI,CAAE,IAAKA,EAAG,IAAK,EACfA,EAAG,MAAQ,OAAO,OAAO,IAAI,EACpB/Z,EAAG,UAAd,OACF6G,EACE,wCACA,kCACF,EACU7G,EAAG,KACb6G,EAAK,4BAA4B,EAEnC,IAAMtf,EAAKkyB,EAASM,CAAE,GAClB/Z,EAAG,UAAY,MAAM,QAAQA,EAAG,UAAU,KAC5CzY,EAAG,UAAY6xB,EAAO,MAExB,IAAMc,EAAcla,EAAG,SACnBma,EAAY,EACVC,EAAc,CAAC,CAACpa,EAAG,YACR,OAAOka,GAApB,WACGE,IAAapa,EAAG,YAAc,CAAC,GAEpCA,EAAG,SAAW,SAAU8W,EAAKF,EAAM,CACjCwC,EAAO,KACL,CACE,KAAMc,EACN,YAAala,EAAG,YAChB,UAAW,EAAEma,EACb,IAAKrD,CACP,EACAsC,EAAO,IACT,CACF,GAEF,GAAI,CACF,IAAMiB,EAAgBra,EAAG,aACrBzY,EAAG,QAAQ,GAAayY,EAAG,eAAV,EAAsB,EACvC,OACJzY,EAAG,KAAKyY,CAAE,EACQqa,IAAd,SACFra,EAAG,YACDzY,EAAG,QAAQ,GAAayY,EAAG,eAAV,EAAsB,EAAIqa,GAE3Cra,EAAG,oBAAoB,WACzBA,EAAG,SAAWka,EAEdd,EAAO,KAAK,CACV,KAAMc,EACN,YAAala,EAAG,YAChB,UAAW,KACX,IAAK,MACP,CAAC,EAEL,QAAE,CACA,OAAOzY,EAAG,UACNyY,EAAG,WAAUA,EAAG,SAAWka,EACjC,CACA,OAAOla,CACT,EAEA,aAAc,UAAY,CACxB,IAAMA,EAAK,OAAO,OAAO,IAAI,EAC3Bsa,EAAM1W,EAAQ,OAChB,OAAC,eAAe,EAAE,QAAQ,SAAUhE,EAAG,CACjC,OAAO,yBAAyB0a,EAAK1a,CAAC,IAAGI,EAAGJ,CAAC,EAAI0a,EAAI1a,CAAC,EAC5D,CAAC,EACDI,EAAG,QAAU4D,EAAQ,QACrB5D,EAAG,QAAU4D,EAAQ,KAAK,oBAAoB,EAC9C5D,EAAG,YAAc,CAAC,CAAC4D,EAAQ,KACpB5D,CACT,EAEA,OAAQ,SAAU+Z,EAAI,CACpB,IAAMxyB,EAAKkyB,EAASM,CAAE,EAChBvmC,EAAW,CACf,UAAWowB,EAAQ,KAAK,qBAAqBrc,EAAG,OAAO,EACvD,SAAUA,EAAG,SACb,SAAU,uBACZ,EACA,OAAA6xB,EAAO,KAAK,KAAK5lC,EAAS,UAAU,MAAM,EACnCA,CACT,EAEA,KAAM,SAAUumC,EAAI,CAClBlT,EAAK,0BAA0B,CACjC,EAEA,YAAa,eAAgBkT,EAAI,CAC/B,OAAKnW,EAAQ,MAAMiD,EAAK,8BAA8B,EACrC,MAAMjD,EAAQ,KAAK,SAAS,CAE/C,CACF,EAEA,WAAW,UAAY,eAAgBmW,EAAI,CACzCA,EAAKA,EAAG,KACR,IAAI3+B,EACFm/B,EAAOR,EAAG,KACVS,EAAST,EAAG,KACRU,EAAc,YAAY,IAAI,EACpC,GAAI,CAEAX,EAAY,eAAeU,CAAM,GACjCV,EAAYU,CAAM,YAAa,SAE/Bp/B,EAAS,MAAM0+B,EAAYU,CAAM,EAAET,CAAE,EAErClT,EAAK,kCAAmCkT,EAAG,IAAI,CAEnD,OAAS/kC,EAAK,CACZwlC,EAAS,QACTp/B,EAAS,CACP,UAAW2+B,EAAG,KACd,QAAS/kC,EAAI,QACb,WAAYA,EAAI,KAChB,MAAO+kC,CACT,EACI/kC,EAAI,QACNoG,EAAO,MACQ,OAAOpG,EAAI,OAAxB,SACIA,EAAI,MAAM,MAAM,OAAO,EACvBA,EAAI,MASd,CACKulC,IACHA,EAAOn/B,EAAO,MAAQw+B,EAAe,GAGvCR,EAAO,KACL,CACE,KAAMoB,EACN,KAAMD,EACN,UAAWR,EAAG,UACd,mBAAoBU,EACpB,kBAAmB,YAAY,IAAI,EACnC,cAAeV,EAAG,cAElB,OAAQ3+B,CACV,EACAg+B,EAAO,IACT,CACF,EACA,WAAW,YAAY,CACrB,KAAM,cACN,OAAQ,eACV,CAAC,CACH,EAAE,KAAK,CAAE,QAAAxV,CAAQ,CAAC,CACpB,CAAC,EAGD,WAAW,oBAAoB,aAAa,KAAK,SAAUA,EAAS,CAClE,IAAM9D,EAAO8D,EAAQ,KACnB/D,EAAO+D,EAAQ,KACfiD,EAAOjD,EAAQ,KAAK,MAChBuB,EAAM,OAAO,OAAO,IAAI,EAC9BvB,EAAQ,IAAMuB,EAEdtF,EAAK,YAAY,UAAU,YAAc,SAAU6a,EAAY,GAAO,CAC9D,gBAAgB9W,EAAQ,KAAK,aACjCiD,EAAK,wCAAwC,EAE/C,IAAM7G,EAAKH,EAAK,qBAAqB,KAAM6a,EAAY,EAAI,CAAC,EAC5D,OAAI1a,GACF6G,EAAK,wBAAyB,KAAM,mBAAoB7G,CAAE,EAExD,KAAK,UAAYH,EAAK,iBAAiB,KAAK,MAAM,GACpDgH,EACE,kEACA,IACF,EAEK,IACT,EAEA1B,EAAI,WAAa,SAAU9B,EAAK,CAC9B,IAAIzhB,EAAQ,EACN+4B,EAAW,CAAC,KAAM,KAAK,EAC7B,QAAWp6B,KAAOo6B,EAAU,CAC1B,IAAMC,EAAIvX,EAAI9iB,CAAG,EACbq6B,IACF,EAAEh5B,EACFg5B,EAAE,OAAO,eAAeA,EAAE,QAAS,CAAC,CAACA,EAAE,cAAc,EACvCr6B,IAAV,QACE,CAACq6B,EAAE,OAAO,QAAuB,OAAOA,EAAE,MAAtB,UACtBA,EAAE,OAAO,aACNA,EAAE,OAAO,OAAS9a,EAAK,aAAa8a,EAAE,IAAI,CAC7C,EAEFA,EAAE,OAAO,YAAY,CAAC,CAACA,EAAE,SAAS,GAGxC,CACA,OAAKh5B,GACHilB,EACE,wDACA,UACA8T,CACF,EACK,IACT,CACF,CAAC,EAGD,WAAW,oBAAoB,aAAa,KAAK,SAAU/W,EAAS,CAClE,IAAM9D,EAAO8D,EAAQ,KACnB/D,EAAO+D,EAAQ,KACfiD,EAAOjD,EAAQ,KAAK,MAChBiX,EAAO,OAAO,OAAO,IAAI,EAC/BjX,EAAQ,KAAOiX,EAEf,IAAMC,EAAMjb,EAAK,mBAEjBib,EAAI,UAAU,cAAgB,SAAU5a,EAAG6a,EAAQ,GAAO,CACxD,GAAI7a,EAAI,GAAKA,GAAK,KAAK,aAAc,MAAO,GAC5C,IAAMtpB,EACJ,KAAK,aACLkkC,EAAI,yBAAyB,WAAW,OAAS5a,EACnD,OAAO6a,EAAQnkC,EAAM,IAAIkkC,EAAI,yBAAyBlkC,CAAG,CAC3D,EAEAkkC,EAAI,UAAU,mBAAqB,SAAU5a,EAAG6a,EAAQ,GAAO,CAC7D,GAAI7a,EAAI,GAAKA,GAAK,KAAK,aAAc,MAAO,GAC5C,IAAMtpB,EACJ,KAAK,kBACLkkC,EAAI,+BAA+B,WAAW,OAAS5a,EACzD,OAAO6a,EAAQnkC,EAAM,IAAIkkC,EAAI,+BAA+BlkC,CAAG,CACjE,EAEAkkC,EAAI,UAAU,WAAa,SAAU5a,EAAG6a,EAAQ,GAAO,CACrD,GAAI7a,EAAI,GAAKA,GAAK,KAAK,UAAW,MAAO,GACzC,IAAMtpB,EACJ,KAAK,UAAYkkC,EAAI,sBAAsB,WAAW,OAAS5a,EACjE,OAAO6a,EAAQnkC,EAAM,IAAIkkC,EAAI,sBAAsBlkC,CAAG,CACxD,EAEA,IAAMokC,EAAiB,SAAUC,EAAYjO,EAAY,CACvD,OAAO,SAAUp2B,EAAKskC,EAAgB,GAAO,CAE3C,GADU,UAAU,SAAhB,IAAwBtkC,EAAM,IAAIo2B,GAClCp2B,aAAeo2B,EACjB,YAAK,IAAIp2B,EAAI,QAASA,CAAG,EAClBA,EACGkpB,EAAK,MAAMlpB,CAAG,GACxBgtB,EAAQ,aAAa,KACnB,sBACAqX,EAAa,IACf,EAEF,IAAIjb,EAAK,KAAK,IAAIppB,CAAG,EACrB,OAAIskC,GAAe,KAAK,OAAOtkC,CAAG,EAC3BopB,CACT,EAAE,KAAK,IAAI,GAAK,CAClB,EAEMmb,EAAkB,SAAU17B,EAAMutB,EAAY,CAClD,IAAMoO,EAAUJ,EAAev7B,EAAMutB,CAAU,EAE/C,OAAO,OAAO,OAAO,OAAO,OAAO,IAAI,EAAG,CACxC,WAAAA,EAEA,OAASpI,GAAU,CACjB,IAAM5E,EAAKob,EAAQ,EACnB,OAAAtb,EAAK,QAAQ8E,EAAO5E,EAAG,OAAO,EACvBA,CACT,EAEA,IAAMqb,GAAUD,EAAQC,CAAK,EAE7B,MAAQA,GAAUD,EAAQC,EAAO,EAAI,EAErC,QAAUA,GAAU,CAClB,IAAMT,EAAIQ,EAAQC,EAAO,EAAI,EACzBT,GAAGA,EAAE,QAAQ,CACnB,CACF,CAAC,CACH,EAEAC,EAAK,MAAQM,EAAgB,QAAStb,EAAK,YAAY,EAEvDgb,EAAK,QAAUM,EAAgB,UAAWtb,EAAK,mBAAmB,EAElEgb,EAAK,WAAcS,GAAa,IAAIzb,EAAK,mBAAmByb,CAAQ,EAEpET,EAAK,OAAS,SAASra,EAAEya,EAAYjmC,EAAKumC,EAAW,CACnD,GAAI/a,EAAE,yBAAyB,SAC7B,GAAI,CACFA,EAAE,cACA,mBAAqBya,EAAa,OAASjmC,EAAI,OACjD,CACF,MAAY,CAAC,CAEf,IAAIgrB,EACJ,OAAIhrB,aAAe4uB,EAAQ,eAAgB5D,EAAKH,EAAK,aAC5C,UAAU,OAAS,EAAGG,EAAKub,EAC3BvmC,aAAe4uB,EAAQ,eAAc5D,EAAKhrB,EAAI,YAChDgrB,GAAMH,EAAK,YACpB,EACAgb,EAAK,OAAO,cAAoB,QAAQ,MAAM,KAAK,OAAO,EAE1DA,EAAK,OAAS,CAACW,EAAWv/B,IAAU6jB,EAAK,KAAK0b,EAAWv/B,EAAO,KAAK,EAErE4+B,EAAK,YAAc,SAAUxX,EAAK,CAChC,IAAIoY,EAAa,GACXC,EACJ,gBAAgB7b,EAAK,eACjB,KACAwD,EAAI,SAAWoY,EAAa,IAAI5b,EAAK,gBAC3C,GAAI,CACF,IAAMsV,EAAU9R,EAAI,SAAWwD,EAAK,2BAA2B,EAC/D,QAAW1sB,KAAK,OAAO,QAAQ,CAC7B,SAAU,UACV,YAAa,UACf,CAAC,EAAG,CACF,IAAMylB,EAAIzlB,EAAE,CAAC,EACXymB,EAAIzmB,EAAE,CAAC,EACIg7B,EAAQvV,CAAC,IAAlB,GAAqBuV,EAAQvV,CAAC,EAAIuV,EAAQvU,CAAC,EAC7BuU,EAAQvU,CAAC,IAAlB,KAAqBuU,EAAQvU,CAAC,EAAIuU,EAAQvV,CAAC,EACtD,CACA,GAAIyD,EAAI,gBAAiB,CACvB,IAAMsY,EAAQ,SAAUV,EAAY9yB,EAAM,CACxC,MAAI,CAAC,WAAY,SAAS,EAAE,QAAQ8yB,CAAU,GAAK,EAC1C,SAAUvZ,EAAKka,EAAM9V,EAAMiE,EAAM8R,EAAQC,EAAO,CACrD,GAAI,CACF,OAAO3zB,EAAK,GAAG,SAAS,GAAK,CAC/B,OAAShO,EAAG,CACV,OAAMA,aAAaypB,EAAQ,iBACzB9D,EAAK,QAAQA,EAAK,QAAQgc,CAAK,CAAC,EAChChc,EAAK,QAAQgc,EAAOhc,EAAK,aAAa3lB,EAAE,OAAO,CAAC,GAE3C0gC,EAAK,OAAOI,EAAY9gC,CAAC,CAClC,CACF,EAEO,YAAaqlB,EAAM,CACxB,GAAI,CACF,OAAOrX,EAAK,GAAGqX,CAAI,GAAK,CAC1B,OAASrlB,EAAG,CACV,OAAO0gC,EAAK,OAAOI,EAAY9gC,CAAC,CAClC,CACF,CAEJ,EACM4hC,EAAS,CACb,UACA,WACA,aACA,cACA,WACA,QACA,SACA,UACA,QACA,OACA,UACA,SACA,UACA,SACA,QACA,UACA,YACA,gBACA,UACA,aACA,WACA,cACA,aACF,EACMC,EAAY,OAAO,OAAO,IAAI,EACpC,QAAWpc,KAAKmc,EAAQ,CACtB,IAAMh5B,EAAIoyB,EAAQvV,CAAC,EACnB,GAAM7c,aAAa,SACK6c,IAAf,YAAoBuV,EAAQ,UAAYpyB,EAC/Ci5B,EAAUpc,CAAC,EAAIuV,EAAQ,QACAvV,IAAd,WAAmBuV,EAAQ,WAAapyB,EACjDi5B,EAAUpc,CAAC,EAAIuV,EAAQ,SAEvB6G,EAAUpc,CAAC,EAAI+b,EAAM/b,EAAG7c,CAAC,MANG,SAQhC,CACA24B,EAAI,eAAeM,EAAW,EAAK,CACrC,MACEN,EAAI,eAAevG,EAAS,CAAC,CAAC9R,EAAI,cAAc,EAElD,GAAUqY,EAAI,YAAV,EAAqB,CACvB,IAAI9a,EACa,OAAOyC,EAAI,UAAxB,SAAkCzC,EAAIyC,EAAI,SACrCqY,EAAI,aAAc9a,EAAI,EACtB8a,EAAI,aAAeA,EAAI,WAAaA,EAAI,aAC/C9a,EAAI,EACDA,EAAI,EACT8a,EAAI,UAAY9a,CAClB,CACF,OAASzmB,EAAG,CACV,MAAIshC,GAAYA,EAAW,QAAQ,EAC7BthC,CACR,CACA,OAAOuhC,CACT,EAEA7b,EAAK,eAAe,UAAU,YAAc,SAAUwD,EAAK,CACzD,OAAOwX,EAAK,YAAY,KAAK,KAAMxX,CAAG,CACxC,CACF,CAAC,EAGD,WAAW,oBAAoB,aAAa,KAAK,SAAUO,EAAS,CAClE,IAAMqY,EAAiB,SAAShpC,EAAOipC,EAAS,CAC9C,GAAI,CAAC,WAAW,mBAAqB,CAAC,WAAW,QAC/C,OAAO,QAAQ,OACb,IAAI,MACF,oMAGF,CACF,EACK,GAAoB,OAAO,kBAAvB,IACT,OAAO,QAAQ,OACb,IAAI,MACF,wFAEF,CACF,EACK,GACL,CAAC,WAAW,kBACZ,CAAC,WAAW,2BACZ,CAAC,WAAW,sBACZ,CAAC,WAAW,qBAAqB,UAAU,wBAC3C,CAAC,WAAW,SAAS,aAErB,OAAO,QAAQ,OAAO,IAAI,MAAM,6BAA6B,CAAC,GAE5D,CAACA,GAAwB,OAAOA,GAApB,YACdA,EAAU,OAAO,OAAO,IAAI,GAE9B,IAAMC,EAAY,IAAI,IAAI,WAAW,SAAS,IAAI,EAAE,aACpD,OAAIA,EAAU,IAAI,cAAc,EACvB,QAAQ,QAAQvY,CAAO,GAEdsY,EAAQ,UAAtB,SACFA,EAAQ,QAAUC,EAAU,IAAI,cAAc,EAC1C,CAACA,EAAU,IAAI,cAAc,GAAK,EAClC,GAEYD,EAAQ,eAAtB,SACFA,EAAQ,aAAeC,EAAU,IAAI,mBAAmB,GAExCD,EAAQ,WAAtB,SACFA,EAAQ,SAAWjpC,EAAO,iBAGT,OAAOipC,EAAQ,UAA9B,aACFA,EAAQ,SAAWA,EAAQ,SAAS,GAEnB,IAAI,QAAQ,SAC7BE,EACAC,EACA,CACA,IAAMC,EAAU,CACd1Y,EAAQ,OAAO,MACfA,EAAQ,OAAO,KACfA,EAAQ,OAAO,GACjB,EACM2Y,EAAU,CAACC,KAAUhd,IAAS,CAC9B0c,EAAQ,QAAUM,GACpBF,EAAQE,CAAK,EAAE,eAAgB,GAAGhd,CAAI,CAC1C,EACMgM,EAAM,IAAIhM,IAAS+c,EAAQ,EAAG,GAAG/c,CAAI,EACrCid,EAAO,IAAIjd,IAAS+c,EAAQ,EAAG,GAAG/c,CAAI,EACtC/Z,EAAQ,IAAI+Z,IAAS+c,EAAQ,EAAG,GAAG/c,CAAI,EACvCqH,EAAOjD,EAAQ,KAAK,KACpB/D,EAAO+D,EAAQ,KACff,EAAOe,EAAQ,KACf9D,EAAO8D,EAAQ,KACf8Y,EAAc7c,EAAK,YACnB8c,EAAe9c,EAAK,aACpB+c,EAAqB/c,EAAK,mBAE1Bgd,EAAW,OAAO,OAAO,IAAI,EAE7BC,EAAoB,IAEtB,WAAW,kBACX,WAAW,2BACX,WAAW,sBACX,WAAW,qBAAqB,UAC7B,wBACH,WAAW,SAAS,aAIxBD,EAAS,QAAU,CACjB,KAAM,UAAY,CAChB,IAAIjd,EACFM,EAAI,EACJ0J,EAAI,EACJmT,EAAI,EACN,IAAKnd,KAAKkJ,EAAM,MAAO,CACrB,IAAM/lB,EAAIi6B,EAAQpd,CAAC,EACnBM,GAAKnd,EAAE,MACP6mB,GAAK7mB,EAAE,KACPg6B,GAAKh6B,EAAE,KACPA,EAAE,QAAUA,EAAE,OAASA,EAAE,KAAOA,EAAE,KAAOA,EAAE,MAAQ,EACnDA,EAAE,QAAUA,EAAE,OAASA,EAAE,KAAOA,EAAE,KAAOA,EAAE,MAAQ,CACrD,CACA6gB,EAAQ,OAAO,IACb,WAAW,SAAS,KACpB,cACA,WAAW,SAAS,KACpB,IACAoZ,EACA;AAAA,UACA9c,EACA,YACA0J,EACA,aAAemT,EAAI,mCACrB,EACAnZ,EAAQ,OAAO,IAAI,yBAA0BoZ,EAAQ,IAAI,EACzDC,EAAE,YAAY,CAAE,KAAM,oBAAqB,CAAC,CAC9C,EACA,MAAO,UAAY,CACjB,IAAIrd,EACE5iB,EAAK+F,GAAOA,EAAE,MAAQA,EAAE,KAAOA,EAAE,KAAO,EAC9C,IAAK6c,KAAKkJ,EAAM,MACd9rB,EAAGggC,EAAQpd,CAAC,EAAI,OAAO,OAAO,IAAI,CAAE,EAEtC,IAAI2F,EAAKyX,EAAQ,KAAO,OAAO,OAAO,IAAI,EAC1CzX,EAAIA,EAAE,UAAY,OAAO,OAAO,IAAI,EACpCA,EAAE,MAAQA,EAAE,KAAO,EACnBA,EAAIyX,EAAQ,KAAK,YAAc,OAAO,OAAO,IAAI,EACjDzX,EAAE,MAAQA,EAAE,KAAO,CACrB,CACF,EACA,IAAM2X,EAAgB,IAAIN,EACpBO,EAAU,IAAIT,EAAY,EAAE,aAAa,IAC7CQ,EAAc,QAAQ,CACxB,EACIE,EACEC,EAAiBroC,IACrBooC,EAAqB,GACrBD,EAAQ,QAAQ,EACTd,EAAernC,CAAG,GAErBsoC,EAAiB,KACrBF,EAAqB,GACdhB,EAAgBxY,CAAO,GAE1BqZ,EAAI,IAAI,OACZ,IAAI,IAAI,8BAA+B,YAAY,GAAG,CACxD,EACA,WAAW,IAAM,CACGG,IAAd,QACFC,EACE,IAAI,MACF,oDACF,CACF,CAEJ,EAAG,GAAI,EACPJ,EAAE,iBAAmBA,EAAE,QACvBA,EAAE,QAAU,SAAUjoC,EAAK,CACzByQ,EAAM,mCAAoCzQ,CAAG,EAC7CqoC,EACE,IAAI,MACF,uDACF,CACF,CACF,EACA,IAAME,EAAQ1d,EAAK,iBAAiB,IAAI,EAClC2d,EAAOD,EAAQ,IAAIb,EAAYa,CAAK,EAAI,KAC9CL,EAAc,UAAY,EAC1BC,EAAQ,UAAY,EACpBA,EAAQ,UAAYtd,EAAK,aAAa,WAAW,OACjDsd,EAAQ,YAAc,KACtBA,EAAQ,OAASrd,EAAK,aAAa,MAAM,EAEzCqd,EAAQ,SACNA,EAAQ,UACRA,EAAQ,QACRA,EAAQ,UACN,KACJA,EAAQ,aACN,SACAA,EAAQ,OACR,8BACA,IAAOK,EAAOA,EAAK,QAAQ,EAAI,IACjC,EAEA,IAAM1U,EAAQ,OAAO,OAAO,IAAI,EAChCA,EAAM,QAAUoT,EAAQ,QACxBpT,EAAM,cAAgB,IAAM,CAC1B,IAAMpqB,EAAS,IAAI,YAAY,CAAC,EAChC,WAAI,SAASA,CAAM,EAAE,SAAS,EAAG,IAAK,EAAI,EAEnC,IAAI,WAAWA,CAAM,EAAE,CAAC,IAAM,GACvC,GAAG,EAEHoqB,EAAM,kBAAoB,IAE1BA,EAAM,oBAAsB,EAE5BA,EAAM,eAAiB,KAAO,GAC9BA,EAAM,cAAgBA,EAAM,eAE5BA,EAAM,YAAcqU,EAAQ,YAAc,EAE1CrU,EAAM,MAAQ,IAAI,kBAChBA,EAAM,eAAiBA,EAAM,WAC/B,EACAA,EAAM,MAAQ,OAAO,OAAO,IAAI,EAChC,IAAMkU,EAAU,OAAO,OAAO,IAAI,EAClC,CACE,IAAI7lC,EAAI,EAER2xB,EAAM,MAAM,QAAU3xB,IAEtB2xB,EAAM,MAAM,GAAK3xB,IAEjB2xB,EAAM,MAAM,QAAU3xB,IACtB2xB,EAAM,MAAM,OAAS3xB,IACrB2xB,EAAM,MAAM,QAAU3xB,IACtB2xB,EAAM,MAAM,cAAgB3xB,IAC5B2xB,EAAM,MAAM,UAAY3xB,IACxB2xB,EAAM,MAAM,MAAQ3xB,IACpB2xB,EAAM,MAAM,MAAQ3xB,IACpB2xB,EAAM,MAAM,MAAQ3xB,IACpB2xB,EAAM,MAAM,OAAS3xB,IACrB2xB,EAAM,MAAM,MAAQ3xB,IACpB2xB,EAAM,MAAM,UAAY3xB,IACxB2xB,EAAM,MAAM,QAAU3xB,IACtB2xB,EAAM,MAAM,OAAS3xB,IACrB2xB,EAAM,MAAM,MAAQ3xB,IACpB2xB,EAAM,MAAM,oBAAoB,EAAI3xB,IACpC2xB,EAAM,MAAM,qBAAqB,EAAI3xB,IAErC2xB,EAAM,MAAM,MAAQ3xB,IACpB2xB,EAAM,MAAQ,IAAI,kBAAkB3xB,EAAI,CAAC,EACzC0lC,EAAS,QAAQ,MAAM,CACzB,CAEA/T,EAAM,SAAW,OAAO,OAAO,IAAI,EACnC,CACE,uBACA,0BACA,cACA,kBACA,eACA,eACA,sBACA,qBACA,sBACA,qBACA,oBACA,oBACA,0BACA,wBACA,sBACA,qBACA,wBACA,mBACA,sBACA,uBACA,qBACA,gBACA,gBACA,kBACA,qBACA,4BACA,sBACA,sBACF,EAAE,QAASlJ,GAAM,EACIkJ,EAAM,SAASlJ,CAAC,EAAIC,EAAKD,CAAC,KAAzC,QACFiH,EAAK,mCAAoCjH,CAAC,CAE9C,CAAC,EACDkJ,EAAM,UAAY,OAAO,OAAO,OAAO,OAAO,IAAI,EAAG,CACnD,iBAAkB,EAElB,wBAAyB,EAEzB,kBAAmB,EACrB,CAAC,EAED,IAAM2U,EAAQ,CAAC7zB,KAAO4V,IAAS,CAC7B,IAAMke,EAAQ5U,EAAM,MAAMlf,CAAE,GAAKid,EAAK,iBAAkBjd,CAAE,EAC1Dkf,EAAM,KAAK,UAAU,GAAGtJ,CAAI,EAC5B,QAAQ,MAAMsJ,EAAM,UAAWA,EAAM,MAAM,GAAI,EAAE,EACjD,QAAQ,MAAMA,EAAM,UAAWA,EAAM,MAAM,QAAS4U,CAAK,EACzD,QAAQ,OAAO5U,EAAM,UAAWA,EAAM,MAAM,OAAO,EACnD,IAAMc,EAAI,YAAY,IAAI,EAC1B,KAEE,QAAQ,KAAKd,EAAM,UAAWA,EAAM,MAAM,GAAI,EAAE,IADhD,aAEA,CAEF,IAAM9I,EAAK,QAAQ,KAAK8I,EAAM,UAAWA,EAAM,MAAM,EAAE,EAEvD,GADAkU,EAAQpzB,CAAE,EAAE,MAAQ,YAAY,IAAI,EAAIggB,EACpC5J,GAAM8I,EAAM,oBAAqB,CACnC,IAAM9zB,GAAM8zB,EAAM,KAAK,YAAY,EAC/B9zB,IAAKyQ,EAAMmE,EAAK,kBAAmB,GAAG5U,EAAG,CAC/C,CACA,OAAOgrB,CACT,EAEA6c,EAAS,MAAQ,CACf,cAAe,IAAM,CACnBJ,EACE,sEACF,EACAgB,EAAM,qBAAqB,CAC7B,EACA,aAAc,IAAM,CAClBhB,EACE,uEACF,EACAQ,EAAE,YAAY,CAAE,KAAM,oBAAqB,CAAC,CAC9C,CACF,EAEA,IAAMU,EAAW,IAAM,CACrB,GAAI7U,EAAM,KAAM,OAAOA,EAAM,KAC7B,IAAM8U,EAAc,IAAI,YACtBC,EAAc,IAAI,YAAY,OAAO,EACrCC,EAAS,IAAI,WACXhV,EAAM,MACNA,EAAM,cACNA,EAAM,WACR,EACAiV,EAAS,IAAI,SACXjV,EAAM,MACNA,EAAM,cACNA,EAAM,WACR,EACFA,EAAM,KAAO,OAAO,OAAO,IAAI,EAE/B,IAAMkV,EAAU,OAAO,OAAO,IAAI,EAClCA,EAAQ,OAAS,CACf,GAAI,EACJ,KAAM,EACN,OAAQ,aACR,OAAQ,YACV,EACAA,EAAQ,OAAS,CACf,GAAI,EACJ,KAAM,EACN,OAAQ,cACR,OAAQ,aACV,EACAA,EAAQ,QAAU,CAChB,GAAI,EACJ,KAAM,EACN,OAAQ,WACR,OAAQ,UACV,EACAA,EAAQ,OAAS,CAAE,GAAI,CAAE,EAEzB,IAAMC,GAAard,IACjBod,EAAQ,OAAOpd,EAAC,GAChBiG,EACE,8DACAjG,EACF,EACIsd,GAAiBC,IAAQ,CAC7B,OAAQA,GAAK,CACX,KAAKH,EAAQ,OAAO,GAClB,OAAOA,EAAQ,OACjB,KAAKA,EAAQ,OAAO,GAClB,OAAOA,EAAQ,OACjB,KAAKA,EAAQ,QAAQ,GACnB,OAAOA,EAAQ,QACjB,KAAKA,EAAQ,OAAO,GAClB,OAAOA,EAAQ,OACjB,QACEnX,EAAK,mBAAoBsX,EAAG,CAChC,CACF,EAEA,OAAArV,EAAM,KAAK,YAAc,SAAUsV,GAAQ,GAAO,CAChD,EAAEpB,EAAQ,KAAK,YAAY,MAC3B,IAAMpT,GAAI,YAAY,IAAI,EACpB9D,GAAOgY,EAAO,CAAC,EACf9d,EAAK8F,GAAO,CAAC,EAAI,KACvB,GAAIA,GAAM,CACR,IAAMuY,EAAU,CAAC,EACb1/B,GAAS,EACXxH,GACA+oB,GACAU,GACF,IAAKzpB,GAAI,EAAGA,GAAI2uB,GAAM,EAAE3uB,GAAG,EAAEwH,GAC3B0/B,EAAQ,KAAKH,GAAcJ,EAAOn/B,EAAM,CAAC,CAAC,EAE5C,IAAKxH,GAAI,EAAGA,GAAI2uB,GAAM,EAAE3uB,GAAG,CACzB,IAAMyyB,GAAIyU,EAAQlnC,EAAC,EACfyyB,GAAE,QACJhJ,GAAImd,EAAOnU,GAAE,MAAM,EAAEjrB,GAAQmqB,EAAM,YAAY,EAC/CnqB,IAAUirB,GAAE,OAEZ1J,GAAI6d,EAAO,SAASp/B,GAAQmqB,EAAM,YAAY,EAC9CnqB,IAAU,EACViiB,GAAIgd,EAAY,OAAOE,EAAO,MAAMn/B,GAAQA,GAASuhB,EAAC,CAAC,EACvDvhB,IAAUuhB,IAEZF,EAAG,KAAKY,EAAC,CACX,CACF,CACA,OAAIwd,KAAON,EAAO,CAAC,EAAI,GAEvBd,EAAQ,KAAK,YAAY,MAAQ,YAAY,IAAI,EAAIpT,GAC9C5J,CACT,EAEA8I,EAAM,KAAK,UAAY,YAAatJ,GAAM,CACxC,IAAMoK,GAAI,YAAY,IAAI,EAE1B,GADA,EAAEoT,EAAQ,KAAK,UAAU,MACrBxd,GAAK,OAAQ,CACf,IAAM6e,GAAU,CAAC,EACblnC,EAAI,EACNwH,EAAS,EAEX,IADAm/B,EAAO,CAAC,EAAIte,GAAK,OAAS,IACnBroB,EAAIqoB,GAAK,OAAQ,EAAEroB,EAAG,EAAEwH,EAC7B0/B,GAAQ,KAAKJ,GAAUze,GAAKroB,CAAC,CAAC,CAAC,EAC/B2mC,EAAOn/B,CAAM,EAAI0/B,GAAQlnC,CAAC,EAAE,GAE9B,IAAKA,EAAI,EAAGA,EAAIqoB,GAAK,OAAQ,EAAEroB,EAAG,CAChC,IAAMyyB,GAAIyU,GAAQlnC,CAAC,EACnB,GAAIyyB,GAAE,OACJmU,EAAOnU,GAAE,MAAM,EAAEjrB,EAAQ6gB,GAAKroB,CAAC,EAAG2xB,EAAM,YAAY,EACpDnqB,GAAUirB,GAAE,SACP,CACL,IAAMrE,GAAIsY,EAAY,OAAOre,GAAKroB,CAAC,CAAC,EACpC4mC,EAAO,SAASp/B,EAAQ4mB,GAAE,WAAYuD,EAAM,YAAY,EACxDnqB,GAAU,EACVm/B,EAAO,IAAIvY,GAAG5mB,CAAM,EACpBA,GAAU4mB,GAAE,UACd,CACF,CACF,MACEuY,EAAO,CAAC,EAAI,EAEdd,EAAQ,KAAK,UAAU,MAAQ,YAAY,IAAI,EAAIpT,EACrD,EACOd,EAAM,IACf,EAEMwV,GAAiB,SAAS9d,EAAEhpB,EAAM,GAAI,CACrCgpB,EAAE,SACLA,EAAE,OACA,gEAGFA,EAAE,GAAKA,EAAE,OAAO,QAElB,IAAMqI,EAAI,CAAC,EACP1xB,EAAI,EACR,KAAOA,EAAIK,EAAK,EAAEL,EAAG,CACnB,IAAMy9B,EAAO,KAAK,OAAO,GAAKpU,EAAE,GAAK,IAAOA,EAAE,GAAK,EACnDqI,EAAE1xB,CAAC,EAAIqpB,EAAE,OAAOoU,CAAG,CACrB,CACA,OAAO/L,EAAE,KAAK,EAAE,CAClB,EAEM0V,GAAc,OAAO,OAAO,IAAI,EAEhCC,GAAU,OAAO,OAAO,IAAI,EAClCA,GAAQ,GAAK,OACbA,GAAQ,MAAQ,OAChB,IAAMC,GAAc70B,GAAO,CACzB40B,GAAQ,MAAQ,YAAY,IAAI,EAChCA,GAAQ,GAAK50B,EACb,EAAEozB,EAAQpzB,CAAE,EAAE,KAChB,EACM80B,GAAW,IACd1B,EAAQwB,GAAQ,EAAE,EAAE,MAAQ,YAAY,IAAI,EAAIA,GAAQ,MAErDG,EAAiB,CACrB,mBAAoB,SAAUC,EAAOla,EAAM,CAEvC,OAAA5E,EAAK,KAAK4E,EAAM,EAAG,KAAK,EAKnB,CACT,EACA,OAAQ,SAAUka,EAAO,CACvBH,GAAW,QAAQ,EACnB,IAAIze,EAAK,EACHQ,EAAI+d,GAAYK,CAAK,EAC3B,OAAIpe,IACF,OAAO+d,GAAYK,CAAK,EACxB5e,EAAKyd,EAAM,SAAUmB,CAAK,EACtBpe,EAAE,SAASA,EAAE,QAAQ,QAAQ,GAEnCke,GAAS,EACF1e,CACT,EACA,uBAAwB,SAAU4e,EAAO,CACvC,OAAO/e,EAAK,kCACd,EACA,aAAc,SAAU+e,EAAOC,EAAMvM,EAAM,CACzC,OAAOzS,EAAK,eACd,EACA,UAAW,SAAU+e,EAAOE,EAAO,CACjCL,GAAW,WAAW,EACtB,IAAIze,EAAKyd,EAAM,YAAamB,CAAK,EACjC,GAAS5e,GAAL,EACF,GAAI,CACF,IAAMwD,EAAKsF,EAAM,KAAK,YAAY,EAAE,CAAC,EACrChJ,EAAK,KAAKgf,EAAOtb,EAAI,KAAK,CAC5B,OAASrpB,EAAG,CACVsL,EAAM,+CAAgDtL,CAAC,EACvD6lB,EAAK8I,EAAM,SAAS,YACtB,CAEF,OAAA4V,GAAS,EACF1e,CACT,EACA,MAAO,SAAU4e,EAAOG,EAAU,CAChCN,GAAW,OAAO,EAClB,IAAMje,EAAI+d,GAAYK,CAAK,EACvB5e,EAAK,EAET,OAAKQ,EAAE,SAILA,EAAE,SAAWue,GAHb/e,EAAKyd,EAAM,QAASmB,EAAOG,CAAQ,EACzB/e,IAAN,IAAUQ,EAAE,SAAWue,IAI7BL,GAAS,EACF1e,CACT,EACA,MAAO,SAAU4e,EAAOI,EAAO9e,EAAG+e,EAAU,CAC1CR,GAAW,OAAO,EAClB,IAAMje,EAAI+d,GAAYK,CAAK,EACvB5e,GACJ,GAAI,CACFA,GAAKyd,EAAM,QAASmB,EAAO1e,EAAG,OAAO+e,CAAQ,CAAC,GACpCjf,KAAN,GAAYH,EAAK,0BAA4BG,KAC/CF,EAAK,OAAO,EAAE,IAAIU,EAAE,QAAQ,SAAS,EAAGN,CAAC,EAAG8e,CAAK,CAErD,OAAS7kC,GAAG,CACVsL,EAAM,SAAU,UAAW,YAAatL,GAAGqmB,CAAC,EAC5CR,GAAKH,EAAK,iBACZ,CACA,OAAA6e,GAAS,EACF1e,EACT,EACA,MAAO,SAAU4e,EAAO79B,EAAO,CAC7B09B,GAAW,OAAO,EAClB,EAAEzB,EAAQ,MAAM,MAChB,IAAMhd,EAAKyd,EAAM,QAASmB,EAAO79B,CAAK,EACtC,OAAA29B,GAAS,EACF1e,CACT,EACA,UAAW,SAAU4e,EAAOM,EAAM,CAChCT,GAAW,WAAW,EACtB,IAAMze,EAAKyd,EAAM,YAAamB,EAAO,OAAOM,CAAI,CAAC,EACjD,OAAAR,GAAS,EACF1e,CACT,EACA,QAAS,SAAU4e,EAAOG,EAAU,CAClCN,GAAW,SAAS,EACpB,IAAMje,EAAI+d,GAAYK,CAAK,EACvB5e,EAAK,EACT,OAAIH,EAAK,mBAAqBkf,GAAYve,EAAE,WAC1CR,EAAKyd,EAAM,UAAWmB,EAAOG,CAAQ,GAE7B/e,IAAN,IAAUQ,EAAE,SAAWue,GAC3BL,GAAS,EACF1e,CACT,EACA,OAAQ,SAAU4e,EAAOO,EAAMjf,EAAG+e,EAAU,CAC1CR,GAAW,QAAQ,EACnB,IAAMje,EAAI+d,GAAYK,CAAK,EACvB5e,GACJ,GAAI,CACFQ,EAAE,QAAQ,IAAIV,EAAK,OAAO,EAAE,SAASqf,EAAMA,EAAOjf,CAAC,CAAC,EACpDF,GAAKyd,EAAM,SAAUmB,EAAO1e,EAAG,OAAO+e,CAAQ,CAAC,CACjD,OAAS9kC,GAAG,CACVsL,EAAM,UAAW,UAAW,YAAatL,GAAGqmB,CAAC,EAC7CR,GAAKH,EAAK,kBACZ,CACA,OAAA6e,GAAS,EACF1e,EACT,CACF,EAEMof,EAAkB,CACtB,QAAS,SAAU9a,EAAM+N,EAAOtxB,EAAO2jB,EAAM,CAC3C+Z,GAAW,SAAS,EACpB,IAAMze,EAAKyd,EAAM,UAAW3d,EAAK,SAASuS,CAAK,CAAC,EAChD,OAAAvS,EAAK,KAAK4E,EAAM1E,EAAK,EAAI,EAAG,KAAK,EACjC0e,GAAS,EACF,CACT,EACA,aAAc,SAAUpa,EAAMI,EAAM,CAClC,OAAA5E,EAAK,KACH4E,EACA,YAAY,IAAI,KAAK,EAAE,QAAQ,EAAI,MACnC,QACF,EACO,CACT,EACA,kBAAmB,SAAUJ,EAAMI,EAAM,CACvC,OAAA5E,EAAK,KACH4E,EACA,YAAY,MAAW,IAAI,KAAK,EAAE,QAAQ,EAC1C,KACF,EACO,CACT,EACA,QAAS,SAAUJ,EAAM+N,EAAOgN,EAAW,CACzCZ,GAAW,SAAS,EACpB,IAAMze,EAAKyd,EACT,UACA3d,EAAK,SAASuS,CAAK,EACnBgN,EACA,EACF,EACA,OAAAX,GAAS,EACF1e,CACT,EACA,cAAe,SAAUsE,EAAM+N,EAAOvN,EAAMJ,EAAM,CAEhD,OADU5E,EAAK,SAAS4E,EAAM2N,EAAOvN,CAAI,EAC9BA,EAAO,EAAIjF,EAAK,eAC7B,EACA,cAAe,SAAUyE,EAAMQ,EAAMJ,EAAM,CACzC,OAAA+X,EAAK,sDAAsD,EACpD,CACT,EAEA,MAAO,SAAWnY,EAAM+N,EAAOuM,EAAO79B,EAAOu+B,GAAW,CACtDb,GAAW,OAAO,EAClB,IAAIc,GAAY,EACNlN,IAAN,EACFA,EAAQiM,GAAe,EACdxe,EAAK,MAAMuS,CAAK,IACrBxS,EAAK,oBAAoBwS,EAAO,mBAAoB,CAAC,IACvDkN,IAAazW,EAAM,UAAU,kBAG7BjJ,EAAK,oBAAoBwS,EAAO,qBAAsB,CAAC,IAEvDkN,IAAazW,EAAM,UAAU,yBAE/BuJ,EAAQvS,EAAK,SAASuS,CAAK,GAE7B,IAAMmN,GAAK,OAAO,OAAO,IAAI,EAC7BA,GAAG,IAAMZ,EACTY,GAAG,SAAWnN,EACdmN,GAAG,IAAM,IAAI,kBAAkB1W,EAAM,cAAc,EACnD0W,GAAG,MAAQz+B,EACX,IAAMif,GAAKyd,EAAM,QAASmB,EAAOvM,EAAOtxB,EAAOw+B,EAAS,EACxD,OAAKvf,KACCwf,GAAG,UACL1f,EAAK,KAAKwf,GAAWzf,EAAK,qBAAsB,KAAK,EAEvD0e,GAAYK,CAAK,EAAIY,GACrBA,GAAG,QAAU1W,EAAM,eACnB0W,GAAG,QAAU,IAAI7C,EAAaiC,CAAK,EACnCY,GAAG,QAAQ,UAAYtC,EAAc,QACrCsC,GAAG,SAAW3f,EAAK,kBAErB6e,GAAS,EACF1e,EACT,CACF,EAEIwd,IACFL,EAAQ,aAAeK,EAAK,aAC5BL,EAAQ,QAAUK,EAAK,SAEpBL,EAAQ,eACXiC,EAAgB,YAAc,SAAU9a,EAAMQ,EAAMJ,EAAM,CACxD,IAAM3tB,EAAO+oB,EAAK,OAAO,EACrB3oB,EAAI,EACR,KAAOA,EAAI2tB,EAAM,EAAE3tB,EACjBJ,EAAK2tB,EAAOvtB,CAAC,EAAK,KAAK,OAAO,EAAI,MAAU,IAC9C,OAAOA,CACT,GAEGgmC,EAAQ,UACXiC,EAAgB,OAAS,SAAU9a,EAAMmb,EAAI,CAC3C,eAAQ,KAAK3W,EAAM,UAAWA,EAAM,MAAM,OAAQ,EAAG2W,CAAE,EAChD,CACT,GAGF5C,EAAS,gBAAkB,SAAUviC,EAAUolC,EAAS,CACtD,IAAMhjC,EAAI,IAAI,IAAIpC,EAAU,mBAAmB,EAAE,SACjD,OAAOolC,EAAUhjC,EAAE,MAAM,GAAG,EAAE,OAAQkkB,GAAM,CAAC,CAACA,CAAC,EAAIlkB,CACrD,EAEAmgC,EAAS,kBAAoB,eAC3B8C,EACAC,EAAa,GACb,CACA,IAAMvrC,EAAOwoC,EAAS,gBAAgB8C,EAAa,EAAI,EACjDrlC,EAAWjG,EAAK,IAAI,EACtBwrC,GAAKhD,EAAS,cAClB,QAAWiD,MAAWzrC,EAChByrC,KACFD,GAAK,MAAMA,GAAG,mBAAmBC,GAAS,CACxC,OAAQ,CAAC,CAACF,CACZ,CAAC,GAGL,MAAO,CAACC,GAAIvlC,CAAQ,CACtB,EAEAuiC,EAAS,MAAQ,eAAgBkD,EAAY,CAC3C,GAAI,CACF,aAAMlD,EAAS,kBACbkD,EAAa,YACb,EACF,EACO,EACT,MAAY,CACV,MAAO,EACT,CACF,EAEAlD,EAAS,YAAc,eAAgBmD,EAAa,CAClD,GAAI,CACF,GAAM,CAACH,EAAIh5B,CAAE,EAAI,MAAMg2B,EAAS,kBAAkBmD,CAAW,EAC7D,aAAMH,EAAG,cAAch5B,CAAE,EAClB,EACT,MAAY,CACV,MAAO,EACT,CACF,EAEAg2B,EAAS,eAAiByB,GAE1BzB,EAAS,SAAW,gBAAkB,CACpC,IAAMoD,EAAQ,eAAehtC,EAAOitC,EAAWla,EAAK,CAClDA,EAAI,KAAOka,EAAU,KACrBla,EAAI,KAAO,CAAC,EACZA,EAAI,MAAQ,CAAC,EACb,cAAiBma,MAAUD,EAAU,OAAO,EAC1C,GAAoBC,GAAO,OAAvB,YAA6B,CAC/B,IAAMC,GAAS,OAAO,OAAO,IAAI,EACjCpa,EAAI,KAAK,KAAKoa,EAAM,EACpB,MAAMntC,EAAOktC,GAAQC,EAAM,CAC7B,MACEpa,EAAI,MAAM,KAAKma,GAAO,IAAI,CAGhC,EACMxjC,EAAO,OAAO,OAAO,IAAI,EAC/B,aAAMsjC,EAAMpD,EAAS,cAAelgC,CAAI,EACjCA,CACT,EAEAkgC,EAAS,KAAO,gBAAkB,CAChC,IAAMjgC,EAAMigC,EAAS,cACnBxZ,EAAM,CAAE,QAAS,EAAK,EACxB,cAAiB8c,KAAUvjC,EAAI,OAAO,EACpCA,EAAI,YAAYujC,EAAO,KAAM9c,CAAG,CAEpC,EAEAwZ,EAAS,OAAS,eAChBmD,EACAK,EAAY,GACZC,EAAe,GACf,CACA,GAAI,CACF,GAAM,CAACC,EAAMC,CAAY,EAAI,MAAM3D,EAAS,kBAC1CmD,EACA,EACF,EACA,aAAMO,EAAK,YAAYC,EAAc,CAAE,UAAAH,CAAU,CAAC,EAC3C,EACT,OAASlmC,EAAG,CACV,GAAImmC,EACF,MAAM,IAAI,MACR,UACA,UAAU,CAAC,EACX,aAAenmC,EAAE,QACjB,CACE,MAAOA,CACT,CACF,EAEF,MAAO,EACT,CACF,EAEA0iC,EAAS,SAAW,eAAgBxZ,EAAK,CACvC,IAAMod,EAAa,CACjB,UAAW,GACX,UAAW5D,EAAS,aACtB,EACmB,OAAOxZ,GAAtB,aACFA,EAAM,CAAE,SAAUA,CAAI,GAExBA,EAAM,OAAO,OAAOod,EAAYpd,GAAO,CAAC,CAAC,EAC3B,eAAepwB,EAAOitC,EAAWQ,GAAO,CACpD,cAAiBP,MAAUD,EAAU,OAAO,EAAG,CAC7C,GAAc7c,EAAI,SAAS8c,GAAQD,EAAWQ,EAAK,IAA/C,GACF,MAAO,GACJ,GAAIrd,EAAI,WAA6B8c,GAAO,OAAvB,aACT,MAAMltC,EAAOktC,GAAQO,GAAQ,CAAC,IAAzC,GAA6C,KAErD,CACF,EACMrd,EAAI,UAAW,CAAC,CACxB,EAEA,IAAMsd,EAAkB,eAAgBrmC,EAAUL,EAAU,CAC1D,GAAM,CAACsmC,EAAMK,CAAS,EAAI,MAAM/D,EAAS,kBACvCviC,EACA,EACF,EAIIumC,GAAM,MAHI,MAAMN,EAAK,cAAcK,EAAW,CAChD,OAAQ,EACV,CAAC,GACqB,uBAAuB,EACzCE,GAAS,EACXC,GACAC,GAAgB,GAChBhsC,GAAM,GACR,GAAI,CAEF,IADA6rC,GAAI,SAAS,CAAC,GACQE,GAAQ,MAAM9mC,EAAS,KAAtC,QACD8mC,cAAiB,cACnBA,GAAQ,IAAI,WAAWA,EAAK,GACpBD,KAAN,GAAgBC,GAAM,YAAc,KACtCle,EAAK,eAAeke,EAAK,EACzBC,GAAgB,IAElBH,GAAI,MAAME,GAAO,CAAE,GAAID,EAAO,CAAC,EAC/BA,IAAUC,GAAM,WASlB,IAPID,GAAS,KAAaA,GAAS,MAAf,IAClBja,EACE,aACAia,GACA,wCACF,EAEE,CAACE,GAAe,CAClB,IAAM36B,EAAS,IAAI,WAAW,EAAE,EAChCw6B,GAAI,KAAKx6B,EAAQ,CAAE,GAAI,CAAE,CAAC,EAC1Bwc,EAAK,eAAexc,CAAM,CAC5B,CACA,OAAAw6B,GAAI,MAAM,IAAI,WAAW,CAAC,EAAG,CAAC,CAAC,EAAG,CAAE,GAAI,EAAG,CAAC,EACrCC,EACT,OAAS3mC,EAAG,CACV,YAAM0mC,GAAI,MAAM,EAChBA,GAAM,OACN,MAAMN,EAAK,YAAYK,CAAS,EAAE,MAAM,IAAM,CAAC,CAAC,EAC1CzmC,CACR,QAAE,CACI0mC,IAAK,MAAMA,GAAI,MAAM,CAC3B,CACF,EA8CA,GA5CAhE,EAAS,SAAW,eAAgBviC,EAAU7G,EAAO,CACnD,GAAIA,aAAiB,SACnB,OAAOktC,EAAgBrmC,EAAU7G,CAAK,EAEpCA,aAAiB,cAAaA,EAAQ,IAAI,WAAWA,CAAK,GAC9DovB,EAAK,WAAWpvB,CAAK,EACrB,IAAMysB,EAAIzsB,EAAM,WACV,CAAC8sC,EAAMK,CAAS,EAAI,MAAM/D,EAAS,kBACvCviC,EACA,EACF,EACIumC,GACF7rC,GACA8rC,GAAS,EACX,GAAI,CAIF,OAAAD,GAAM,MAHQ,MAAMN,EAAK,cAAcK,EAAW,CAChD,OAAQ,EACV,CAAC,GACiB,uBAAuB,EACzCC,GAAI,SAAS,CAAC,EACdC,GAASD,GAAI,MAAMptC,EAAO,CAAE,GAAI,CAAE,CAAC,EAC/BqtC,IAAU5gB,GACZ2G,EACE,qBACE3G,EACA,oBACA4gB,GACA,GACJ,EAEFD,GAAI,MAAM,IAAI,WAAW,CAAC,EAAG,CAAC,CAAC,EAAG,CAAE,GAAI,EAAG,CAAC,EACrCC,EACT,OAAS3mC,GAAG,CACV,MAAI0mC,KACF,MAAMA,GAAI,MAAM,EAChBA,GAAM,QAER,MAAMN,EAAK,YAAYK,CAAS,EAAE,MAAM,IAAM,CAAC,CAAC,EAC1CzmC,EACR,QAAE,CACI0mC,IAAK,MAAMA,GAAI,MAAM,CAC3B,CACF,EAEIjd,EAAQ,IAAK,CACf,IAAMqd,EAAS,YAAazhB,EAAM,CAChC,IAAM6D,EAAMO,EAAQ,IAAI,GAAG,aAAa,cAAc,GAAGpE,CAAI,EAC7D6D,EAAI,IAAM8Z,EAAQ,OAClBvZ,EAAQ,IAAI,GAAG,aAAa,KAAK,KAAMP,CAAG,CAC5C,EACA4d,EAAO,UAAY,OAAO,OAAOrd,EAAQ,IAAI,GAAG,SAAS,EACzDA,EAAQ,IAAI,OAASqd,EACrBA,EAAO,SAAWpE,EAAS,SAC3BjZ,EAAQ,IAAI,GAAG,aAAa,kBAC1BuZ,EAAQ,QACR,SAAU+D,EAAOtd,EAAS,CACxBA,EAAQ,KAAK,qBAAqBsd,EAAO,GAAK,EAC9Ctd,EAAQ,KAAK,aACXsd,EACA,CACE,8BAEA,2BACF,EACA,EACA,EACA,CACF,CACF,CACF,CACF,CAEA,IAAMC,EAAc,UAAY,CAC9B,IAAM1c,EAAQ3E,EAAK,gBAAgB,EAC7BshB,EAAU,IAAIzE,EACpB,GAAI,CACF,IAAM0E,EAAMD,EAAQ,QACdE,EACJzhB,EAAK,mBACLA,EAAK,sBACLA,EAAK,oBACD6E,EAAO5E,EAAK,YAAY,CAAC,EACzByhB,GAAS,qBAAuBjD,GAAe,CAAC,EAChDkD,GAAU1hB,EAAK,mBAAmByhB,EAAM,EAC1CvhB,GAqBJ,GApBA8I,EAAM,KAAK,UAAU,sBAAmB,EACxC9I,GAAK8I,EAAM,KAAK,YAAY,EAC5B0C,EAAI,sBAAuBxL,EAAE,EACDA,GAAG,CAAC,IAA5B,wBAA+B6G,EAAK,oBAAoB,EAC5DuY,EAAgB,QAAQjC,EAAQ,QAASqE,GAAS,EAAG9c,CAAI,EACzD1E,GAAKF,EAAK,KAAK4E,EAAM,KAAK,EAC1B8G,EAAI,WAAY+V,GAAQ,cAAevhB,EAAE,EACzCA,GAAKof,EAAgB,MACnBjC,EAAQ,QACRqE,GACAH,EACAC,EACA5c,CACF,EACA8G,EACE,YACAxL,GACA,2BACA8I,EAAM,UAAUA,EAAM,MAAM,KAAK,CACnC,EACU9I,KAAN,EAAU,CACZva,EAAM,wBAAyBua,EAAE,EACjC,MACF,CACAof,EAAgB,QAAQjC,EAAQ,QAASqE,GAAS,EAAG9c,CAAI,EACzD1E,GAAKF,EAAK,KAAK4E,EAAM,KAAK,EACrB1E,IAAI6G,EAAK,kCAAkC,EAChD7G,GAAK2e,EAAe,MAAMyC,EAAQ,QAAS,CAAC,EACxCphB,IAAI6G,EAAK,oBAAqB7G,EAAE,EACpCA,GAAK2e,EAAe,UAAUyC,EAAQ,QAAS,IAAI,EAC/CphB,IAAI6G,EAAK,wBAAyB7G,EAAE,EACxCF,EAAK,KAAK4E,EAAM,EAAG,KAAK,EACxB1E,GAAK2e,EAAe,UAAUyC,EAAQ,QAAS1c,CAAI,EAC/C1E,IAAI6G,EAAK,yBAA0B7G,EAAE,EACzCwL,EAAI,kBAAmB1L,EAAK,KAAK4E,EAAM,KAAK,CAAC,EAC7C1E,GAAK2e,EAAe,OAAOyC,EAAQ,QAASI,GAAS,GAAI,CAAC,EACtDxhB,IAAI6G,EAAK,kBAAkB,EAC/B,IAAM4a,GAAU3hB,EAAK,YAAY,EAAE,EACnCE,GAAK2e,EAAe,MAAMyC,EAAQ,QAASK,GAAS,EAAG,CAAC,EACxD3hB,EAAK,KAAK2hB,GAAU,EAAG,CAAC,EACxB,IAAIC,GAAQ5hB,EAAK,SAAS2hB,EAAO,EACjCjW,EAAI,eAAgBkW,EAAK,EACRA,KAAb,UAAoB7a,EAAK,2BAA2B,EACpDuY,EAAgB,SAClB5T,EAAI,kCAAkC,EACtC4T,EAAgB,OAAOjC,EAAQ,QAAS,GAAI,EAC5C3R,EAAI,yBAAyB,GAE/BxL,GAAK2e,EAAe,OAAO0C,CAAG,EAC9B7V,EAAI,cAAexL,GAAI,cAAe8I,EAAM,SAAS,EACrD0C,EAAI,iBAAkB+V,EAAM,EAC5BnC,EAAgB,QAAQjC,EAAQ,QAASqE,GAAS,IAAM,EACxDpC,EAAgB,QAAQjC,EAAQ,QAASqE,GAAS,EAAG9c,CAAI,EACzD1E,GAAKF,EAAK,KAAK4E,EAAM,KAAK,EACtB1E,IACF6G,EACE,4BACA0a,GACA,oBACF,EACF9E,EAAK,4BAA4B,CACnC,QAAE,CACA2E,EAAQ,QAAQ,EAChBthB,EAAK,eAAe2E,CAAK,CAC3B,CACF,EAEAwY,EAAE,UAAY,SAAU,CAAE,KAAAn4B,CAAK,EAAG,CAChC,OAAQA,EAAK,KAAM,CACjB,IAAK,mBACHu4B,EAAc,IAAI,MAAMv4B,EAAK,QAAQ,KAAK,GAAG,CAAC,CAAC,EAC/C,MACF,IAAK,oBACHm4B,EAAE,YAAY,CAAE,KAAM,kBAAmB,KAAMnU,CAAM,CAAC,EACtD,MACF,IAAK,oBAAqB,CACxB,GAAasU,IAAT,GACF,MAEF,GAAI,CACFxZ,EAAQ,IAAI,WAAW,CACrB,GAAI,CAAE,OAAQsZ,EAAe,QAASyB,CAAe,EACrD,IAAK,CAAE,OAAQxB,EAAS,QAASiC,CAAgB,CACnD,CAAC,EACDtW,EAAM,UAAY,IAAI,WAAWA,EAAM,KAAK,EAC5CA,EAAM,eAAiB,IAAI,WACzBA,EAAM,MACN,EACAA,EAAM,cACR,EACAA,EAAM,YAAc,IAAI,WACtBA,EAAM,MACNA,EAAM,cACNA,EAAM,WACR,EACA6U,EAAS,EACLzB,EAAQ,eACVO,EACE,+DACF,EACA0E,EAAY,GAEVrE,EAAkB,EACpB,UAAU,QACP,aAAa,EACb,KAAMr5B,GAAM,CACXw5B,EAAE,QAAUA,EAAE,iBACd,OAAOA,EAAE,iBACTrZ,EAAQ,KAAOiZ,EACfA,EAAS,cAAgBp5B,EACzB+nB,EAAI,iCAAkC2R,CAAO,EAC7CG,EAAe,CACjB,CAAC,EACA,MAAMD,CAAa,EAEtBC,EAAe,CAEnB,OAASnjC,EAAG,CACVsL,EAAMtL,CAAC,EACPkjC,EAAcljC,CAAC,CACjB,CACA,KACF,CACA,QAAS,CACP,IAAMwnC,EACJ,kDACA,KAAK,UAAU78B,CAAI,EACrBW,EAAMk8B,CAAM,EACZtE,EAAc,IAAI,MAAMsE,CAAM,CAAC,EAC/B,KACF,CACF,CACF,CACF,CAAC,EAEH,EACA1F,EAAe,gBAAkB,8BACjC,WAAW,oBAAoB,kBAAkB,KAC/C,MAAOrY,GAAY,CACjB,GAAI,CACF,IAAIge,EAAU3F,EAAe,gBAC7B,OAAIrY,EAAQ,WAAW,aACrBqY,EAAe,gBACbrY,EAAQ,WAAW,WAAage,GAE7B3F,EAAe,EAAE,MAAO9hC,GAAM,CACnCypB,EAAQ,OAAO,KACb,kDACAzpB,EAAE,OACJ,CACF,CAAC,CACH,OAASA,EAAG,CACV,OAAAypB,EAAQ,OAAO,MAAM,8BAA+BzpB,CAAC,EAC9C,QAAQ,OAAOA,CAAC,CACzB,CACF,CACF,CACF,CAAC,EAED,WAAW,oBAAoB,aAAa,KAAK,SAAUypB,EAAS,CAClE,aACA,IAAMiD,EAAOjD,EAAQ,KAAK,KACpBvD,EAAQuD,EAAQ,KAAK,MACrBie,EAAe,OAAO,OAAO,IAAI,EACjChiB,EAAO+D,EAAQ,KACff,EAAOe,EAAQ,KACf9D,EAAO8D,EAAQ,KAEfke,EAAc,KACdC,EAAuB,IACvBC,EAAoB,EACpBC,EAAqB,EACrBC,EAAqBH,EAAuBC,EAC5CG,EAAsBJ,EACtBK,EAAuBF,EACvBG,EAAqBP,EAErBQ,EACJziB,EAAK,oBACLA,EAAK,yBACLA,EAAK,0BACLA,EAAK,gBAED0iB,EAAkB,UAElBC,EAAgB,IAAM,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,MAAM,CAAC,EAExD5E,EAAc,IAAI,YAClBC,EAAc,IAAI,YAElB4E,EAAiB,OAAO,OAAO,OAAO,OAAO,IAAI,EAAG,CACxD,KAAM,eACN,UAAW,OACX,gBAAiB,EACjB,YAAa,GAEb,UAAW,CACb,CAAC,EAEKnG,EAAU,CACd1Y,EAAQ,OAAO,MACfA,EAAQ,OAAO,KACfA,EAAQ,OAAO,GACjB,EACM4H,EAAM5H,EAAQ,OAAO,IACrB6Y,EAAO7Y,EAAQ,OAAO,KACtBne,EAAQme,EAAQ,OAAO,MAEvB8e,EAAiB,IAAI,IACrBC,EAAiBre,GAASoe,EAAe,IAAIpe,CAAI,EACjDse,EAAgB,CAACte,EAAMue,IAAS,CAChCA,EAAMH,EAAe,IAAIpe,EAAMue,CAAI,EAClCH,EAAe,OAAOpe,CAAI,CACjC,EAEMwe,EAAmB,IAAI,IACvBC,EAAmBnE,GAAUkE,EAAiB,IAAIlE,CAAK,EACvDoE,EAAkB,CAACpE,EAAOiE,IAAS,CACnCA,EAAMC,EAAiB,IAAIlE,EAAOiE,CAAI,EACrCC,EAAiB,OAAOlE,CAAK,CACpC,EAEMqE,EAAY,CAChB,mBAAoB,SAAUrE,EAAOla,EAAM,CACzC,IAAMme,EAAOE,EAAgBnE,CAAK,EAClC,OAAAiE,EAAK,IAAI,oBAAoB,EAC7BA,EAAK,SAAS,EACd/iB,EAAK,OAAO4E,EAAM,CAAC,EACZ,CACT,EACA,OAAQ,SAAUka,EAAO,CACvB,IAAMiE,EAAOE,EAAgBnE,CAAK,EAClCiE,EAAK,SAAS,EACd,IAAMnoC,EAAOmoC,EAAK,kBAAkBjE,CAAK,EACzC,GAAIlkC,EACF,GAAI,CACFmoC,EAAK,IAAI,UAAUnoC,EAAK,IAAI,EAAE,EAC9BmoC,EAAK,iBAAiBjE,EAAO,EAAK,EAClClkC,EAAK,IAAI,MAAM,EACXA,EAAK,MAAQmlB,EAAK,2BACpBgjB,EAAK,WAAWnoC,EAAK,IAAI,CAE7B,OAASP,EAAG,CACV,OAAO0oC,EAAK,SAAS1oC,EAAG0lB,EAAK,YAAY,CAC3C,CAEF,MAAO,EACT,EACA,uBAAwB,SAAU+e,EAAO,CACvC,OAAO/e,EAAK,kCACd,EACA,aAAc,SAAU+e,EAAOC,EAAMvM,EAAM,CACzC,OAAOzS,EAAK,eACd,EACA,UAAW,SAAU+e,EAAOE,EAAO,CACjC,IAAM+D,EAAOE,EAAgBnE,CAAK,EAClCiE,EAAK,IAAI,WAAW,EAEpB,IAAM5jC,EADO4jC,EAAK,kBAAkBjE,CAAK,EACvB,IAAI,QAAQ,EAAIyD,EAElC,OAAAviB,EAAK,OAAOgf,EAAO,OAAO7/B,CAAI,CAAC,EACxB,CACT,EACA,MAAO,SAAU2/B,EAAOG,EAAU,CAChC,IAAM8D,EAAOE,EAAgBnE,CAAK,EAClCiE,EAAK,IAAI,SAAS9D,CAAQ,EAAE,EAC5B8D,EAAK,SAAS,EACd,IAAMnoC,EAAOmoC,EAAK,kBAAkBjE,CAAK,EACzC,OAAAlkC,EAAK,SAAWqkC,EACT,CACT,EACA,MAAO,SAAUH,EAAOI,EAAO9e,EAAG+e,EAAU,CAC1C,IAAM4D,EAAOE,EAAgBnE,CAAK,EAClCiE,EAAK,SAAS,EACd,IAAMnoC,EAAOmoC,EAAK,kBAAkBjE,CAAK,EACzCiE,EAAK,IAAI,SAASnoC,EAAK,IAAI,IAAIwlB,CAAC,MAAM+e,CAAQ,EAAE,EAChD,GAAI,CACF,IAAMiE,EAAQxoC,EAAK,IAAI,KACrBolB,EAAK,OAAO,EAAE,SAASkf,EAAOA,EAAQ9e,CAAC,EACvC,CAAE,GAAImiB,EAAqB,OAAOpD,CAAQ,CAAE,CAC9C,EACA,OAAIiE,EAAQhjB,GACVJ,EAAK,OAAO,EAAE,KAAK,EAAGkf,EAAQkE,EAAOlE,EAAQ9e,CAAC,EACvCL,EAAK,yBAEP,CACT,OAAS1lB,EAAG,CACV,OAAO0oC,EAAK,SAAS1oC,EAAG0lB,EAAK,YAAY,CAC3C,CACF,EACA,YAAa,SAAU+e,EAAO,CAC5B,OAAOkD,CACT,EACA,MAAO,SAAUlD,EAAO79B,EAAO,CAC7B,IAAM8hC,EAAOE,EAAgBnE,CAAK,EAClCiE,EAAK,IAAI,SAAS9hC,CAAK,EAAE,EACzB8hC,EAAK,SAAS,EACd,IAAMnoC,EAAOmoC,EAAK,kBAAkBjE,CAAK,EAEzC,GAAI,CACF,OAAAlkC,EAAK,IAAI,MAAM,EACR,CACT,OAASP,EAAG,CACV,OAAO0oC,EAAK,SAAS1oC,EAAG0lB,EAAK,YAAY,CAC3C,CACF,EACA,UAAW,SAAU+e,EAAOM,EAAM,CAChC,IAAM2D,EAAOE,EAAgBnE,CAAK,EAClCiE,EAAK,IAAI,aAAa3D,CAAI,EAAE,EAC5B2D,EAAK,SAAS,EACd,IAAMnoC,EAAOmoC,EAAK,kBAAkBjE,CAAK,EAEzC,GAAI,CACF,OAAAlkC,EAAK,IAAI,SAAS2nC,EAAqB,OAAOnD,CAAI,CAAC,EAC5C,CACT,OAAS/kC,EAAG,CACV,OAAO0oC,EAAK,SAAS1oC,EAAG0lB,EAAK,YAAY,CAC3C,CACF,EACA,QAAS,SAAU+e,EAAOG,EAAU,CAClC,IAAM8D,EAAOE,EAAgBnE,CAAK,EAClCiE,EAAK,IAAI,SAAS,EAClB,IAAMnoC,EAAOmoC,EAAK,kBAAkBjE,CAAK,EACzC,OAAAlkC,EAAK,SAAWqkC,EACT,CACT,EACA,OAAQ,SAAUH,EAAOO,EAAMjf,EAAG+e,EAAU,CAC1C,IAAM4D,EAAOE,EAAgBnE,CAAK,EAClCiE,EAAK,SAAS,EACd,IAAMnoC,EAAOmoC,EAAK,kBAAkBjE,CAAK,EACzCiE,EAAK,IAAI,UAAUnoC,EAAK,IAAI,IAAIwlB,CAAC,IAAI+e,CAAQ,EAAE,EAC/C,GAAI,CACF,IAAMkE,EAASzoC,EAAK,IAAI,MACtBolB,EAAK,OAAO,EAAE,SAASqf,EAAMA,EAAOjf,CAAC,EACrC,CAAE,GAAImiB,EAAqB,OAAOpD,CAAQ,CAAE,CAC9C,EACA,OAAO/e,IAAMijB,EAAS,EAAItc,EAAK,0BAA0B,CAC3D,OAAS1sB,EAAG,CACV,OAAO0oC,EAAK,SAAS1oC,EAAG0lB,EAAK,YAAY,CAC3C,CACF,CACF,EAEMqd,EAAgB,IAAIrd,EAAK,mBAC/Bqd,EAAc,UAAY,EAC1BtZ,EAAQ,IAAI,WAAW,CACrB,GAAI,CAAE,OAAQsZ,EAAe,QAAS+F,CAAU,CAClD,CAAC,EAED,IAAMG,EAAa,CACjB,QAAS,SAAU9e,EAAM+N,EAAOtxB,EAAO2jB,EAAM,CAC3C,IAAMme,EAAOF,EAAcre,CAAI,EAC/Bue,EAAK,SAAS,EACd,GAAI,CACF,IAAMpjC,EAAOojC,EAAK,QAAQxQ,CAAK,EAC/BvS,EAAK,OAAO4E,EAAMme,EAAK,YAAYpjC,CAAI,EAAI,EAAI,CAAC,CAClD,MAAY,CACVqgB,EAAK,OAAO4E,EAAM,CAAC,CACrB,CACA,MAAO,EACT,EACA,aAAc,SAAUJ,EAAMI,EAAM,CAClC,OAAA5E,EAAK,KACH4E,EACA,YAAY,IAAI,KAAK,EAAE,QAAQ,EAAI,MACnC,QACF,EACO,CACT,EACA,kBAAmB,SAAUJ,EAAMI,EAAM,CACvC,OAAA5E,EAAK,KAAK4E,EAAM,YAAY,MAAW,IAAI,KAAK,EAAE,QAAQ,EAAG,KAAK,EAC3D,CACT,EACA,QAAS,SAAUJ,EAAM+N,EAAOgN,EAAW,CACzC,IAAMwD,EAAOF,EAAcre,CAAI,EAC/Bue,EAAK,IAAI,WAAW/iB,EAAK,SAASuS,CAAK,CAAC,EAAE,EAC1CwQ,EAAK,SAAS,EACd,GAAI,CACF,OAAAA,EAAK,WAAWA,EAAK,QAAQxQ,CAAK,CAAC,EAC5B,CACT,OAASl4B,EAAG,CACV,OAAA0oC,EAAK,SAAS1oC,CAAC,EACR0lB,EAAK,mBACd,CACF,EACA,cAAe,SAAUyE,EAAM+N,EAAOvN,EAAMJ,EAAM,CAEhD,OADU5E,EAAK,SAAS4E,EAAM2N,EAAOvN,CAAI,EAC9BA,EAAO,EAAIjF,EAAK,eAC7B,EACA,cAAe,SAAUyE,EAAMQ,EAAMJ,EAAM,CACzC,IAAMme,EAAOF,EAAcre,CAAI,EACzBnqB,EAAI0oC,EAAK,OAAO,EAEtB,GADAA,EAAK,IAAI,iBAAiB/d,CAAI,OAAQ3qB,CAAC,EACnCA,EAAG,CACL,IAAMsqB,EAAQ3E,EAAK,gBAAgB,EACnC,GAAI,CACF,GAAM,CAACujB,EAAMnjB,CAAC,EAAIJ,EAAK,mBAAmB3lB,EAAE,QAAS,EAAI,EACzD2lB,EAAK,SAAS4E,EAAM2e,EAAMve,CAAI,EAC1B5E,EAAI4E,GAAMhF,EAAK,MAAM4E,EAAOI,EAAO,EAAG,CAAC,CAC7C,MAAY,CACV,OAAOjF,EAAK,YACd,QAAE,CACAC,EAAK,eAAe2E,CAAK,CAC3B,CACF,CACA,OAAOtqB,EAAIA,EAAE,WAAa0lB,EAAK,aAAe,CAChD,EAEA,MAAO,SAAWyE,EAAM+N,EAAOuM,EAAO79B,EAAOu+B,EAAW,CACtD,IAAMuD,EAAOF,EAAcre,CAAI,EAC/B,GAAI,CACFue,EAAK,IAAI,SAAS/iB,EAAK,SAASuS,CAAK,CAAC,IAAItxB,CAAK,EAAE,EAEjD,IAAM1M,EACJg+B,GAASvS,EAAK,MAAMuS,CAAK,EACrBwQ,EAAK,QAAQxQ,CAAK,EAClBmQ,EAAc,EAChB3B,EAAMgC,EAAK,cAAcxuC,CAAI,EAC7B,CAACwsC,GAAO9/B,EAAQ8e,EAAK,qBACnBgjB,EAAK,aAAa,EAAIA,EAAK,YAAY,GACzChC,EAAMgC,EAAK,iBAAiB,EAC5BA,EAAK,kBAAkBhC,EAAKxsC,EAAM0M,CAAK,GAEvC8lB,EAAK,uCAAwCxyB,CAAI,GAGhDwsC,GACHha,EAAK,kBAAmBxyB,CAAI,EAG9B,IAAMqG,GAAO,CAAE,KAAArG,EAAM,MAAA0M,EAAO,IAAA8/B,CAAI,EAChCgC,EAAK,iBAAiBjE,EAAOlkC,EAAI,EACjCA,GAAK,SAAWmlB,EAAK,iBACrB,IAAMuhB,GAAU,IAAIvhB,EAAK,aAAa+e,CAAK,EAC3C,OAAAwC,GAAQ,UAAYlE,EAAc,QAClCkE,GAAQ,QAAQ,EAChBthB,EAAK,OAAOwf,EAAWv+B,CAAK,EACrB,CACT,OAAS5G,EAAG,CACV,OAAA0oC,EAAK,SAAS1oC,CAAC,EACR0lB,EAAK,eACd,CACF,CACF,EAEMyjB,GAAgB,SAAUnf,EAAS,CACnCP,EAAQ,KAAK,iBAAiBO,CAAO,GACvC9D,EAAM,kCAAmC8D,CAAO,EAElD,IAAMgZ,EAAU,IAAItd,EAAK,YAEnB0d,EAAQ1d,EAAK,iBAAiB,IAAI,EAClC2d,EAAOD,EAAQ,IAAI1d,EAAK,YAAY0d,CAAK,EAAI,KACnD,OAAAJ,EAAQ,UAAY,EACpBA,EAAQ,UAAYtd,EAAK,aAAa,WAAW,OACjDsd,EAAQ,YAAc4E,EACtB5E,EAAQ,aACLA,EAAQ,OAASrd,EAAK,aAAaqE,CAAO,EAC3C,IAAMye,EAAczF,EAAQ,QAAS,CAAC,CACxC,EAEIK,IACFL,EAAQ,aAAeK,EAAK,aAC5BL,EAAQ,QAAUK,EAAK,QACvBA,EAAK,QAAQ,GAEX,CAACL,EAAQ,cAAgB,CAACiG,EAAW,cACvCA,EAAW,YAAc,SAAU9e,EAAMQ,EAAMJ,EAAM,CACnD,IAAM3tB,EAAO+oB,EAAK,OAAO,EACrB3oB,EAAI,EACR,KAAOA,EAAI2tB,EAAM,EAAE3tB,EACjBJ,EAAK2tB,EAAOvtB,CAAC,EAAK,KAAK,OAAO,EAAI,MAAU,IAC9C,OAAOA,CACT,GAEE,CAACgmC,EAAQ,SAAW,CAACiG,EAAW,SAClCA,EAAW,OAAS,CAAC9e,EAAMmb,IAAO,GAEpC7b,EAAQ,IAAI,WAAW,CACrB,IAAK,CAAE,OAAQuZ,EAAS,QAASiG,CAAW,CAC9C,CAAC,EACMjG,CACT,EAEA,MAAMoG,EAAY,CAChB,OAEAC,GAEAC,GAEAC,GAEAC,GAAgB,IAAI,IAEpBC,GAAoB,IAAI,IAExBC,GAAgB,IAAI,IAEpBC,GAAqB,IAAI,IAEzBC,GAAU,IAAI,WAAW7B,CAAkB,EAE3C8B,GAEAC,GAEAC,GAEA,YAAYhI,EAAU,OAAO,OAAO,IAAI,EAAG,CACzC,KAAKgI,GAAahI,EAAQ,WAAauG,EAAe,UACtD,KAAK,QAAUvG,EAAQ,MAAQuG,EAAe,KAC9C,KAAKwB,GAAQX,GAAc,KAAK,OAAO,EACvCV,EAAc,KAAKqB,GAAM,QAAS,IAAI,EACtC,KAAK,OAAS/H,EAAQ,WAAa,IAAM,KAAK,QAC9C,KAAK8H,GAAU,IAAI,SACjB,KAAKD,GAAQ,OACb,KAAKA,GAAQ,UACf,EACA,KAAK,QAAU,KAAK,MAClB,CAAC,EAAE7H,EAAQ,aAAeuG,EAAe,YAC3C,EAAE,KAAK,IAAM,CACX,GAAI,KAAK,OAAQ,MAAM,KAAK,OAC5B,OAAO,KAAK,YAAY,EACpB,QAAQ,QAAQ,MAAS,EACzB,KAAK,YACHvG,EAAQ,iBAAmBuG,EAAe,eAC5C,CACN,CAAC,CACH,CAEA0B,GAAS3H,KAAUhd,EAAM,CACnB,KAAK0kB,GAAa1H,GACpBF,EAAQE,CAAK,EAAE,KAAK,QAAU,IAAK,GAAGhd,CAAI,CAC9C,CACA,OAAOA,EAAM,CACX,KAAK2kB,GAAS,EAAG,GAAG3kB,CAAI,CAC1B,CACA,QAAQA,EAAM,CACZ,KAAK2kB,GAAS,EAAG,GAAG3kB,CAAI,CAC1B,CACA,SAASA,EAAM,CACb,KAAK2kB,GAAS,EAAG,GAAG3kB,CAAI,CAC1B,CAEA,QAAS,CACP,OAAO,KAAKykB,EACd,CAEA,aAAc,CACZ,OAAO,KAAKN,GAAc,IAC5B,CAEA,cAAe,CACb,OAAO,KAAKC,GAAkB,IAChC,CAEA,cAAe,CACb,IAAM5jB,EAAK,CAAC,EACNokB,EAAO,KAAKR,GAAkB,KAAK,EACzC,QAAW1jB,KAAKkkB,EAAMpkB,EAAG,KAAKE,CAAC,EAC/B,OAAOF,CACT,CAEA,MAAM,YAAYE,EAAG,CACnB,QAAS/oB,EAAI,EAAGA,EAAI+oB,EAAG,EAAE/oB,EAAG,CAC1B,IAAMsI,EAAO+iC,EAAc,EAIrB6B,EAAK,MAHD,MAAM,KAAKZ,GAAU,cAAchkC,EAAM,CACjD,OAAQ,EACV,CAAC,GACkB,uBAAuB,EAC1C,KAAKkkC,GAAc,IAAIU,EAAI5kC,CAAI,EAC/B,KAAK,kBAAkB4kC,EAAI,GAAI,CAAC,CAClC,CACA,OAAO,KAAK,YAAY,CAC1B,CAEA,MAAM,eAAenkB,EAAG,CACtB,IAAIokB,EAAM,EACV,QAAWD,KAAM,MAAM,KAAK,KAAKR,EAAa,EAAG,CAC/C,GAAIS,IAAQpkB,GAAK,KAAK,aAAa,IAAM,KAAK,YAAY,EACxD,MAEF,IAAMzgB,EAAO,KAAKkkC,GAAc,IAAIU,CAAE,EAEtCA,EAAG,MAAM,EACT,MAAM,KAAKZ,GAAU,YAAYhkC,CAAI,EACrC,KAAKkkC,GAAc,OAAOU,CAAE,EAC5B,KAAKR,GAAc,OAAOQ,CAAE,EAC5B,EAAEC,CACJ,CACA,OAAOA,CACT,CAEA,sBAAuB,CACrB,QAAWD,KAAM,KAAKV,GAAc,KAAK,EAAGU,EAAG,MAAM,EACrD,KAAKV,GAAc,MAAM,EACzB,KAAKC,GAAkB,MAAM,EAC7B,KAAKC,GAAc,MAAM,CAC3B,CAEA,MAAM,qBAAqBU,EAAY,CACrC,IAAM98B,EAAQ,CAAC,EACf,aAAiB,CAAChI,EAAMwoB,CAAC,IAAK,KAAKwb,GAClBxb,EAAE,OAAb,QACFxgB,EAAM,KAAK,CAAChI,EAAMwoB,CAAC,CAAC,EAGxB,OAAO,QAAQ,IACbxgB,EAAM,IAAI,MAAO,CAAChI,EAAMwoB,CAAC,IAAM,CAC7B,GAAI,CACF,IAAMoc,EAAK,MAAMpc,EAAE,uBAAuB,EAE1C,GADA,KAAK0b,GAAc,IAAIU,EAAI5kC,CAAI,EAC3B8kC,EACFF,EAAG,SAAShC,CAAkB,EAC9B,KAAK,kBAAkBgC,EAAI,GAAI,CAAC,MAC3B,CACL,IAAMhwC,EAAO,KAAK,kBAAkBgwC,CAAE,EAClChwC,EACF,KAAKuvC,GAAkB,IAAIvvC,EAAMgwC,CAAE,EAEnC,KAAKR,GAAc,IAAIQ,CAAE,CAE7B,CACF,OAASlqC,EAAG,CACV,WAAK,SAASA,CAAC,EACf,KAAK,qBAAqB,EACpBA,CACR,CACF,CAAC,CACH,CACF,CAEA,kBAAkB0mC,EAAK,CACrBA,EAAI,KAAK,KAAKkD,GAAS,CAAE,GAAI,CAAE,CAAC,EAEhC,IAAMhjC,EAAQ,KAAKijC,GAAQ,UAAU7B,CAAmB,EACxD,GACE,KAAK4B,GAAQ,CAAC,IACbhjC,EAAQ8e,EAAK,2BACX,EAAA9e,EAAQuhC,IAEX,OAAA7F,EACE,uCAAuC17B,EAAM,SAAS,EAAE,CAAC,GACzD,KAAKgjC,EACP,EACA,KAAK,kBAAkBlD,EAAK,GAAI,CAAC,EAC1B,GAGT,IAAM2D,EAAa,IAAI,YAAYvC,EAAqB,CAAC,EACzDpB,EAAI,KAAK2D,EAAY,CAAE,GAAIpC,CAAqB,CAAC,EACjD,IAAMqC,EAAa,KAAK,cAAc,KAAKV,EAAO,EAClD,GAAIS,EAAW,MAAM,CAAC5jB,EAAGzpB,IAAMypB,IAAM6jB,EAAWttC,CAAC,CAAC,EAAG,CACnD,IAAMutC,EAAY,KAAKX,GAAQ,UAAWnjB,GAAYA,IAAN,CAAO,EACvD,OAAU8jB,IAAN,GACF7D,EAAI,SAASwB,CAAkB,EAE1BqC,EACH9G,EAAY,OAAO,KAAKmG,GAAQ,SAAS,EAAGW,CAAS,CAAC,EACtD,EACN,KACE,QAAAjI,EAAK,sCAAsC,EAC3C,KAAK,kBAAkBoE,EAAK,GAAI,CAAC,EAC1B,EAEX,CAEA,kBAAkBA,EAAKxsC,EAAM0M,EAAO,CAClC,IAAM4jC,EAAM9G,EAAY,WAAWxpC,EAAM,KAAK0vC,EAAO,EACjDhC,GAAwB4C,EAAI,QAAU,GACxC9d,EAAK,iBAAkBxyB,CAAI,EAE7B,KAAK0vC,GAAQ,KAAK,EAAGY,EAAI,QAAS5C,CAAoB,EACtD,KAAKiC,GAAQ,UAAU7B,EAAqBphC,CAAK,EAEjD,IAAM6jC,EAAS,KAAK,cAAc,KAAKb,EAAO,EAC9ClD,EAAI,MAAM,KAAKkD,GAAS,CAAE,GAAI,CAAE,CAAC,EACjClD,EAAI,MAAM+D,EAAQ,CAAE,GAAIxC,CAAqB,CAAC,EAC9CvB,EAAI,MAAM,EAENxsC,GACF,KAAKuvC,GAAkB,IAAIvvC,EAAMwsC,CAAG,EACpC,KAAKgD,GAAc,OAAOhD,CAAG,IAE7BA,EAAI,SAASwB,CAAkB,EAC/B,KAAKwB,GAAc,IAAIhD,CAAG,EAE9B,CAEA,cAAc15B,EAAW,CACvB,IAAI09B,EAAK,WACLC,EAAK,WACT,QAAWlkB,KAAKzZ,EACd09B,EAAK,GAAKA,EAAKjkB,EAAI,IACnBkkB,EAAK,GAAKA,EAAKlkB,EAAI,IAErB,OAAO,IAAI,YAAY,CAACikB,IAAO,EAAGC,IAAO,CAAC,CAAC,CAC7C,CAEA,MAAM,MAAMP,EAAY,CACtB,MAAM,KAAK,QACX,IAAItc,EAAI,MAAM,UAAU,QAAQ,aAAa,EACzC8c,EAAMC,EACV,QAAWvhC,KAAK,KAAK,OAAO,MAAM,GAAG,EAC/BA,IACFshC,EAAO9c,EACPA,EAAI,MAAMA,EAAE,mBAAmBxkB,EAAG,CAAE,OAAQ,EAAK,CAAC,GAGtD,YAAK+/B,GAAavb,EAClB,KAAKyb,GAAeqB,EACpB,KAAKtB,GAAY,MAAM,KAAKD,GAAW,mBACrCjB,EACA,CAAE,OAAQ,EAAK,CACjB,EACA,KAAK,qBAAqB,EACnB,KAAK,qBAAqBgC,CAAU,CAC7C,CAEA,QAAQhxC,EAAK,CACX,OAAIusB,EAAK,MAAMvsB,CAAG,IAAGA,EAAMusB,EAAK,SAASvsB,CAAG,IAE1CA,aAAe,IAAMA,EAAM,IAAI,IAAIA,EAAK,mBAAmB,GAC3D,QACJ,CAEA,WAAWc,EAAM,CACf,IAAMwsC,EAAM,KAAK+C,GAAkB,IAAIvvC,CAAI,EAC3C,OAAIwsC,IACF,KAAK+C,GAAkB,OAAOvvC,CAAI,EAClC,KAAK,kBAAkBwsC,EAAK,GAAI,CAAC,GAE5B,CAAC,CAACA,CACX,CAEA,SAAS1mC,EAAGmL,EAAM,CAChB,OAAInL,IACFA,EAAE,UAAYmL,GAAQua,EAAK,aAC3B,KAAK,MAAM1lB,CAAC,GAEd,KAAK,OAASA,EACPmL,CACT,CAEA,QAAS,CACP,IAAM0a,EAAK,KAAK,OAChB,YAAK,OAAS,OACPA,CACT,CAEA,kBAAmB,CACjB,GAAM,CAACA,CAAE,EAAI,KAAK6jB,GAAc,KAAK,EACrC,OAAO7jB,CACT,CAEA,kBAAkB4e,EAAO,CACvB,OAAO,KAAKkF,GAAmB,IAAIlF,CAAK,CAC1C,CAEA,iBAAiBA,EAAOlkC,EAAM,CACxBA,GACF,KAAKopC,GAAmB,IAAIlF,EAAOlkC,CAAI,EACvCsoC,EAAgBpE,EAAO,IAAI,IAE3B,KAAKkF,GAAmB,OAAOlF,CAAK,EACpCoE,EAAgBpE,EAAO,EAAK,EAEhC,CAEA,YAAYn/B,EAAM,CAChB,OAAO,KAAKmkC,GAAkB,IAAInkC,CAAI,CACxC,CAEA,cAAcpL,EAAM,CAClB,OAAO,KAAKuvC,GAAkB,IAAIvvC,CAAI,CACxC,CAEA,MAAM,WAAY,CAChB,GAAI,CAAC,KAAK4vC,GAAM,SAAW,CAAC,KAAKR,GAAW,MAAO,GACnD5jB,EAAK,uBAAuB,KAAKokB,GAAM,OAAO,EAC9C,KAAKA,GAAM,QAAQ,EACnB,GAAI,CACF,KAAK,qBAAqB,EAC1B,MAAM,KAAKT,GAAW,YAAYjB,EAAiB,CACjD,UAAW,EACb,CAAC,EACD,KAAKkB,GAAY,OACjB,MAAM,KAAKC,GAAa,YAAY,KAAKF,GAAW,KAAM,CACxD,UAAW,EACb,CAAC,EACD,KAAKA,GAAa,KAAKE,GAAe,MACxC,OAASvpC,EAAG,CACVypB,EAAQ,OAAO,MAAM,KAAK,QAAS,sBAAuBzpB,CAAC,CAC7D,CACA,MAAO,EACT,CAEA,WAAWsF,EAAM,CACf,IAAMohC,EACJ,KAAK+C,GAAkB,IAAInkC,CAAI,GAAKonB,EAAK,kBAAmBpnB,CAAI,EAC5DygB,EAAI2gB,EAAI,QAAQ,EAAIwB,EACpBhqC,EAAI,IAAI,WAAW6nB,EAAI,EAAIA,EAAI,CAAC,EACtC,GAAIA,EAAI,EAAG,CACT,IAAMgjB,EAAQrC,EAAI,KAAKxoC,EAAG,CAAE,GAAIgqC,CAAmB,CAAC,EAChDa,GAAShjB,GACX2G,EACE,oBAAsB3G,EAAI,mBAAqBgjB,EAAQ,GACzD,CAEJ,CACA,OAAO7qC,CACT,CAEA,MAAM,gBAAgBoH,EAAMxF,EAAU,CACpC,IAAM4mC,EACJ,KAAK+C,GAAkB,IAAInkC,CAAI,GAC/B,KAAK,iBAAiB,GACtBonB,EAAK,oCAAoC,EAC3Cga,EAAI,SAAS,CAAC,EACd,IAAIC,EAAS,EACXC,EACAC,EAAgB,GAChBhsC,EAAM,GACR,GAAI,CACF,MAAsB+rC,EAAQ,MAAM9mC,EAAS,KAAtC,QACD8mC,aAAiB,cAAaA,EAAQ,IAAI,WAAWA,CAAK,GACpDD,IAAN,GAAgBC,EAAM,YAAc,KACtCle,EAAK,eAAeke,CAAK,EACzBC,EAAgB,IAElBH,EAAI,MAAME,EAAO,CAAE,GAAIsB,EAAqBvB,CAAO,CAAC,EACpDA,GAAUC,EAAM,WASlB,IAPID,EAAS,KAAaA,EAAS,MAAf,IAClBja,EACE,aACAia,EACA,wCACF,EAEE,CAACE,EAAe,CAClB,IAAM36B,EAAS,IAAI,WAAW,EAAE,EAChCw6B,EAAI,KAAKx6B,EAAQ,CAAE,GAAI,CAAE,CAAC,EAC1Bwc,EAAK,eAAexc,CAAM,CAC5B,CACAw6B,EAAI,MAAM,IAAI,WAAW,CAAC,EAAG,CAAC,CAAC,EAAG,CAChC,GAAIwB,EAAqB,EAC3B,CAAC,CACH,OAASloC,EAAG,CACV,WAAK,kBAAkB0mC,EAAK,GAAI,CAAC,EAC3B1mC,CACR,CACA,YAAK,kBAAkB0mC,EAAKphC,EAAMogB,EAAK,mBAAmB,EACnDihB,CACT,CAEA,SAASrhC,EAAMhM,EAAO,CACpB,GAAIA,aAAiB,YAAaA,EAAQ,IAAI,WAAWA,CAAK,UACrDA,aAAiB,SACxB,OAAO,KAAK,gBAAgBgM,EAAMhM,CAAK,EACzC,IAAMotC,EACJ,KAAK+C,GAAkB,IAAInkC,CAAI,GAC/B,KAAK,iBAAiB,GACtBonB,EAAK,oCAAoC,EACrC3G,EAAIzsB,EAAM,YACZysB,EAAI,KAAOA,EAAI,KAAO,IACxB2G,EAAK,8CAA8C,EAErD,IAAMxgB,EAAS,kBACf,QAASlP,EAAI,EAAGA,EAAIkP,EAAO,OAAQ,EAAElP,EAC/BkP,EAAO,WAAWlP,CAAC,IAAM1D,EAAM0D,CAAC,GAClC0vB,EAAK,mDAAmD,EAG5D,IAAMia,EAASD,EAAI,MAAMptC,EAAO,CAAE,GAAI4uC,CAAmB,CAAC,EAC1D,OAAIvB,GAAU5gB,GACZ,KAAK,kBAAkB2gB,EAAK,GAAI,CAAC,EACjCha,EACE,qBAAuB3G,EAAI,oBAAsB4gB,EAAS,GAC5D,IAEAD,EAAI,MAAM,IAAI,WAAW,CAAC,EAAG,CAAC,CAAC,EAAG,CAChC,GAAIwB,EAAqB,EAC3B,CAAC,EACD,KAAK,kBAAkBxB,EAAKphC,EAAMogB,EAAK,mBAAmB,GAErDihB,CACT,CACF,CAEA,MAAMmE,EAAgB,CACpBC,GAEA,YAAYC,EAAS,CACnB,KAAKD,GAAKC,EACV,KAAK,QAAUA,EAAQ,OACzB,CAEA,MAAM,YAAYjlB,EAAG,CACnB,OAAO,KAAKglB,GAAG,YAAYhlB,CAAC,CAC9B,CAEA,MAAM,eAAeA,EAAG,CACtB,OAAO,KAAKglB,GAAG,eAAehlB,CAAC,CACjC,CAEA,aAAc,CACZ,OAAO,KAAKglB,GAAG,YAAY,KAAKA,EAAE,CACpC,CAEA,cAAe,CACb,OAAO,KAAKA,GAAG,aAAa,CAC9B,CACA,cAAe,CACb,OAAO,KAAKA,GAAG,aAAa,CAC9B,CAEA,MAAM,uBAAuBE,EAAK,CAChC,IAAM3tC,EAAI,KAAKytC,GAAG,YAAY,EAC9B,OAAOztC,EAAI2tC,EAAM,KAAKF,GAAG,YAAYE,EAAM3tC,CAAC,EAAIA,CAClD,CAEA,WAAWgI,EAAM,CACf,OAAO,KAAKylC,GAAG,WAAWzlC,CAAI,CAChC,CAEA,SAASA,EAAMhM,EAAO,CACpB,OAAO,KAAKyxC,GAAG,SAASzlC,EAAMhM,CAAK,CACrC,CAEA,MAAM,WAAY,CAChB,OAAO,KAAKyxC,GAAG,MAAM,EAAI,CAC3B,CAEA,OAAO5qC,EAAU,CACf,OAAO,KAAK4qC,GAAG,WAAW5qC,CAAQ,CACpC,CAEA,MAAM,WAAY,CAChB,OAAO,KAAK4qC,GAAG,UAAU,CAC3B,CACF,CAEA,IAAMG,GAAkB,SAAY,CAClC,IAAMxF,EAAK,MAAM,UAAU,QAAQ,aAAa,EAC1Ch5B,EAAK,4BAA8B27B,EAAc,EAGjD8C,GADK,MADA,MAAMzF,EAAG,cAAch5B,EAAI,CAAE,OAAQ,EAAK,CAAC,GAClC,uBAAuB,GAC1B,MAAM,EACvB,aAAMy+B,EACN,MAAMzF,EAAG,YAAYh5B,CAAE,EACnBy+B,GAAO,MACTze,EACE,kDACA,4DACF,EAEK,EACT,EAEI0e,GAAkB,EAEtB3hB,EAAQ,sBAAwB,eAC9BsY,EAAU,OAAO,OAAO,IAAI,EAC5B,CACA,IAAM/X,EAAU+X,EAAQ,MAAQuG,EAAe,KAI/C,OAAIZ,EAAa1d,CAAO,EACf0d,EAAa1d,CAAO,EAG3B,CAAC,WAAW,kBACZ,CAAC,WAAW,2BACZ,CAAC,WAAW,sBACZ,CAAC,WAAW,qBAAqB,UAAU,wBAC3C,CAAC,WAAW,SAAS,aAEb0d,EAAa1d,CAAO,EAAI,QAAQ,OACtC,IAAI,MAAM,6BAA6B,CACzC,EAGM0d,EAAa1d,CAAO,EAAIkhB,GAAgB,EAC7C,KAAK,gBAAkB,CACtB,GAAInJ,EAAQ,iBACV,MAAMA,EAAQ,iBAEhB,IAAMsJ,EAAU,IAAIjC,GAAYrH,CAAO,EACvC,OAAOsJ,EAAQ,QACZ,KAAK,SAAY,CAChB,IAAMC,EAAW,IAAIR,GAAgBO,CAAO,EAC5C,GAAI5hB,EAAQ,IAAK,CACf,IAAM8hB,EAAM9hB,EAAQ,IACd+hB,EAASH,EAAQ,OAAO,EACxBI,EAAgB,YAAapmB,EAAM,CACvC,IAAM6D,EAAMqiB,EAAI,GAAG,aAAa,cAAc,GAAGlmB,CAAI,EACrD6D,EAAI,IAAMsiB,EAAO,OACjBD,EAAI,GAAG,aAAa,KAAK,KAAMriB,CAAG,CACpC,EACAuiB,EAAc,UAAY,OAAO,OAAOF,EAAI,GAAG,SAAS,EAExDD,EAAS,cAAgBG,EACzBF,EAAI,GAAG,aAAa,kBAClBC,EAAO,QACP,SAAUzE,EAAOtd,EAAS,CACxBA,EAAQ,KAAK,aACXsd,EACA,CACE,8BACA,2BACF,EACA,EACA,EACA,CACF,CACF,CACF,CACF,CACA,OAAAsE,EAAQ,IAAI,kBAAkB,EACvBC,CACT,CAAC,EACA,MAAM,MAAOtrC,GAAM,CAClB,YAAMqrC,EAAQ,UAAU,EAAE,MAAM,IAAM,CAAC,CAAC,EAClCrrC,CACR,CAAC,CACL,CAAC,EACA,MAAOnF,GACE6sC,EAAa1d,CAAO,EAAI,QAAQ,OAAOnvB,CAAG,CACnD,CACL,CACF,CAAC,EAGmB,OAAOtC,EAAvB,IAA+B,CACjC,IAAMmzC,EAAO,OAAO,OAClB,OAAO,OAAO,IAAI,EAClB,CACE,QACkB,OAAO,YAAvB,IAAqCnzC,EAAO,IAAS,YACvD,OAAQA,EAAO,UACjB,EACA,WAAW,kBAAoB,CAAC,CAClC,EAEA,WAAW,iBAAmBmzC,EAC9B,IAAIjiB,EACJ,GAAI,CACFA,EAAU,WAAW,oBAAoB,CAC3C,OAASzpB,EAAG,CACV,cAAQ,MAAM,+BAAgCA,CAAC,EACzCA,CACR,QAAE,CACA,OAAO,WAAW,oBAClB,OAAO,WAAW,gBACpB,CAEAzH,EAAO,QAAUkxB,CACnB,MACE,QAAQ,KACN,0DACA,qEACA,2CACA,6BACF,CAEJ,CAAC,EAEMrxB,EAAkB,KAC3B,CACF,GAAG,EAEGuzC,GAAkB,UAAY,CAClC,IAAMC,EAAexzC,GACrB,GAAI,CAACwzC,EACH,MAAM,IAAI,MACR,+EACF,EAGF,IAAMC,EAAmB,WAAW,uBAAyB,OAAO,OAClE,OAAO,OAAO,IAAI,EAClB,CACE,aAAc,YAAY,UAAU,cACpC,SAA0B,OAAO,kBAAvB,IACV,SAAU,WAAW,SACrB,UAAW,YAAY,UAAU,KAC7B,IAAI,IAAI,WAAW,SAAS,IAAI,EAAE,aAClC,IAAI,eACV,CACF,EAOA,GANAA,EAAgB,YAAcA,EAAgB,UAAU,IACtD,qBACF,EACI,IAAIxmB,IAAS,QAAQ,KAAK,uBAAwB,GAAGA,CAAI,EACzD,IAAM,CAAC,EAEPwmB,EAAgB,UAAU,IAAI,aAAa,EAC7CA,EAAgB,WACdA,EAAgB,UAAU,IAAI,aAAa,EAAI,YACxCA,EAAgB,aAAc,CACvC,IAAMC,EAAKD,EAAgB,aAAa,IAAI,MAAM,GAAG,EACrDC,EAAG,IAAI,EACPD,EAAgB,WAAaC,EAAG,KAAK,GAAG,EAAI,GAC9C,CAoBA,GAlBA,WAAW,kBAAoB,SAASzf,KAAMhH,EAAM,CAClD,OAAOumB,EAAa,GAAGvmB,CAAI,EACxB,KAAM0mB,GAAqB,CAC1B,IAAM3gB,EAAI2gB,EAAiB,QAC3B3gB,EAAE,WAAaygB,EAEXxf,EAAG,gBAAejB,EAAE,cAAgB,IACxC,IAAM/E,GAAI+E,EAAE,cACZ,cAAOA,EAAE,cACF/E,GAAE,CACX,CAAC,EACA,MAAOrmB,GAAM,CACZ,cAAQ,MAAM,oCAAqCA,CAAC,EAC9CA,CACR,CAAC,CACL,EACA,WAAW,kBAAkB,MAAQ4rC,EAAa,MAE9C,WAAW,uBAAuB,aAAc,CAClD,IAAMI,EAAM,WAAW,uBACnB7L,EAAM6L,EAAI,aAAa,IAAI,MAAM,GAAG,EACxC7L,EAAI,IAAI,EACR6L,EAAI,UAAY7L,EAAI,KAAK,GAAG,EAAI,GAClC,CACA,OAAA0L,EAAgB,YAAY,2BAA4BA,CAAe,EAWhE,WAAW,iBACpB,EAAG,EACHzzC,GAAoBuzC,GACpB,IAAOM,GAAQ7zC,GChocf,WAAW,uBAAyB,SAAS8zC,EAC3CC,EAASD,EAAO,cAChB,CACA,GAAU,UAAU,SAAhB,GAAyC,OAAO,UAAU,CAAC,GAAjC,WAAoC,CAChE,IAAME,GAAID,EACVA,EAAS,OAAO,OAAO,OAAO,OAAO,IAAI,EAAGD,EAAO,aAAa,EAChEC,EAAO,QAAUC,EACnB,MACED,EAAS,OAAO,OAAO,OAAO,OAAO,IAAI,EAAGD,EAAO,cAAeC,CAAM,EAE1E,IAAME,EAAa,OAAO,OAAO,IAAI,EAC/BC,EAAO,UAAY,CAAC,EACpBC,EAAMJ,EAAO,SAAWG,EACxBE,EAAQL,EAAO,OAASG,EACxBG,GAAYN,EAAO,kBAAoB,OAAY,OAAO,OAAO,IAAI,EACrEO,GACJP,EAAO,mBACP,SAAUQ,GAAK,CACb,OACEA,GAAI,KAAO,KAAOF,GAAUE,GAAI,IAAI,GAAKF,GAAUE,GAAI,IAAI,GAAK,GAAK,EAEzE,EACIC,GAAO,IAAIC,KAAS,CACxB,MAAM,IAAI,MAAMA,GAAK,KAAK,GAAG,CAAC,CAChC,EACKV,EAAO,SAAQA,EAAO,OAASD,EAAO,cAAc,QACtC,OAAOC,EAAO,QAA7B,aAAqCA,EAAO,OAASA,EAAO,OAAO,GACvE,IAAIW,GACAC,GACJ,OAAAZ,EAAO,OAAO,UAAY,SAAUa,GAAI,CACtCA,GAAKA,GAAG,KACRR,EAAM,oBAAqBQ,EAAE,EAC7B,IAAIC,GAAaZ,EAAWW,GAAG,SAAS,EACxC,GAAI,CAACC,GAAY,CACf,GAAID,IAAwBA,GAAG,OAArB,eAAiDA,GAAG,SAAvB,gBAA+B,CAChEb,EAAO,SAASA,EAAO,QAAQY,EAAY,EAC/C,MACF,CAEA,GADAE,GAAaZ,EAAWW,GAAG,IAAI,EAC3BC,IAAcA,GAAW,MAAO,CAClCA,GAAW,MAAMD,EAAE,EACnB,MACF,CACIb,EAAO,YAAaA,EAAO,YAAY,UAAU,CAAC,CAAC,EAClDI,EAAI,qDAAsDS,EAAE,EACjE,MACF,CAEA,OADA,OAAOX,EAAWW,GAAG,SAAS,EACtBA,GAAG,KAAM,CACf,IAAK,QACHC,GAAW,OAAOD,EAAE,EACpB,OACF,IAAK,OACEF,KAAMA,GAAOE,GAAG,MACrB,MACF,IAAK,QACCA,GAAG,OAASF,KAAMA,GAAO,QAC7B,MACF,QACE,KACJ,CACA,GAAI,CACFG,GAAW,QAAQD,EAAE,CACvB,OAASE,GAAG,CACVD,GAAW,OAAOC,EAAC,CACrB,CACF,EACQH,GAAe,UAAY,CACjC,IAAIJ,GACM,UAAU,SAAhB,EACFA,GAAM,UAAU,CAAC,EACF,UAAU,SAAhB,GACTA,GAAM,OAAO,OAAO,IAAI,EACxBA,GAAI,KAAO,UAAU,CAAC,EACtBA,GAAI,KAAO,UAAU,CAAC,EACtBA,GAAI,KAAOA,GAAI,KAAK,MAEpBC,GAAK,iEAAiE,EAEpE,CAACD,GAAI,MAAQA,GAAI,OAAS,SAAQA,GAAI,KAAOG,IACjDH,GAAI,UAAYD,GAASC,EAAG,EAC5BA,GAAI,cAAgB,YAAY,IAAI,EACpC,IAAMQ,GAAQ,OAAO,OAAO,IAAI,EAChCA,GAAM,QAAUR,GAChB,IAAIS,GACWT,GAAI,OAAf,QAAuBA,GAAI,OACV,OAAOA,GAAI,KAAK,UAA/B,YACFS,GAAgBT,GAAI,UAAY,OAChCQ,GAAM,MAAQR,GAAI,KAAK,SACvBA,GAAI,KAAK,SAAWS,GACpBf,EAAWe,EAAa,EAAID,IACN,OAAOR,GAAI,KAAK,UAA7B,UACTC,GACE,qEACF,GAIJ,IAAIS,GAAI,IAAI,QAAQ,SAAUC,GAASC,GAAQ,CAC7CJ,GAAM,QAAUG,GAChBH,GAAM,OAASI,GACflB,EAAWM,GAAI,SAAS,EAAIQ,GAC5BX,EACE,UACAG,GAAI,KACJ,2BAA6BG,IAAQ,WAAa,IAClDH,EACF,EACAR,EAAO,OAAO,YAAYQ,EAAG,CAC/B,CAAC,EACD,OAAIS,KAAeC,GAAIA,GAAE,QAAQ,IAAM,OAAOhB,EAAWe,EAAa,CAAC,GAChEC,EACT,CACF,EAEA,WAAW,uBAAuB,cAAgB,CAChD,OAAQ,UAAY,CAClB,OAAO,IAAI,OACT,IAAI,IAAI,uCAAwC,YAAY,GAAG,EAC/D,CACE,KAAM,QACR,CACF,CACF,EACA,QAAS,IAAIR,IAAS,QAAQ,MAAM,yBAA0B,GAAGA,CAAI,CACvE,EAEA,uBAAuB,GAAK,SAAUV,EAAQ,CAC5C,IAAIqB,EACc,OAAOrB,GAArB,YACFqB,EAAUrB,EACVA,EAAS,CAAC,GACc,OAAOA,GAAQ,SAA9B,aACTqB,EAAUrB,EAAO,QACjB,OAAOA,EAAO,SAEhB,IAAMsB,EAAe,OAAO,OAAO,IAAI,EACvCtB,EAAS,OAAO,OAAOA,GAAU,OAAO,OAAO,IAAI,EAAG,CACpD,QAAS,eAAgBuB,EAAM,CAC7B,GAAI,CACEF,GAAS,MAAMA,EAAQE,CAAI,EAC/BD,EAAa,QAAQC,CAAI,CAC3B,OAASR,EAAG,CACVO,EAAa,OAAOP,CAAC,CACvB,CACF,CACF,CAAC,EACD,IAAMG,EAAI,IAAI,QAAQ,SAAUC,EAASC,EAAQ,CAC/CE,EAAa,QAAUH,EACvBG,EAAa,OAASF,CACxB,CAAC,EACD,GAAI,CACF,KAAK,SAASpB,CAAM,CACtB,OAASe,EAAG,CACVO,EAAa,OAAOP,CAAC,CACvB,CACA,OAAOG,CACT,EAAE,KAAK,CACL,SAAU,sBACZ,CAAC,EAED,IAAOM,GAAQ,uBAAuB,GCvLtC,IAAMC,GAAyB,KAAK,uBAE7BC,GAAQC,GCLf,IAAAC,GAAyB,WCmFlB,SAASC,IAAY,CAC1B,OAAO,IAAI,KAAK,EAAE,QAAQ,CAC5B,CAEO,SAASC,GAAmBC,EAAgBC,EAAmB,CAapE,GAZIA,EAAO,OAASD,EAAG,WAAaC,EAAO,OAGvCA,EAAO,OAASD,EAAG,WAAaC,EAAO,OAGvC,EAAEA,EAAO,KAAK,SAASD,EAAG,EAAE,GAAK,KAGjC,EAAEC,EAAO,SAAS,SAASD,EAAG,MAAM,GAAK,KAGzC,EAAEC,EAAO,OAAO,SAASD,EAAG,IAAI,GAAK,IACvC,MAAO,GAET,IAAME,EAAO,OAAO,QAAQD,CAAM,EAAE,OAAO,CAAC,CAACE,CAAC,IAAMA,EAAE,WAAW,GAAG,CAAC,EACrE,OAAW,CAACA,EAAGC,CAAC,IAAKF,EAAM,CACzB,IAAMG,EAAQD,EACd,QAAWE,MAAKD,EACd,GAAI,CAACL,EAAG,KAAK,KAAKO,IAAKA,GAAE,CAAC,IAAMJ,EAAE,MAAM,CAAC,GAAKI,GAAE,CAAC,IAAMD,EAAC,EACtD,MAAO,EAGb,CAEA,MAAO,EACT,CClHA,IAAIE,GAAQ,GACL,SAASC,GAASC,EAAeC,KAAgBC,EAAkB,CACnEJ,IACL,QAAQ,IAAIE,EAAOC,EAAK,GAAGC,CAAI,CACjC,CAEO,SAASC,GAAWC,EAAY,CACrCN,GAAQM,CACV,CCJA,IAAMC,GAAM,CAACC,KAAgBC,IAAqBC,GAAS,yBAA0BF,EAAK,GAAGC,CAAI,EAE3FE,GAAa,CACjB,CAAE,QAAS,EAAG,OAAQC,EAAW,EACjC,CAAE,QAAS,EAAG,OAAQC,EAAW,EACjC,CAAE,QAAS,EAAG,OAAQC,EAAW,EACjC,CAAE,QAAS,EAAG,OAAQC,EAAW,EACjC,CAAE,QAAS,EAAG,OAAQC,EAAW,EACjC,CAAE,QAAS,EAAG,OAAQC,EAAW,CACnC,EAEA,eAAeC,GAAQC,EAAoB,CACzC,GAAI,CAACA,EAAM,GAAI,MAAM,IAAI,MAAM,iBAAiB,EAEhDA,EAAM,GAAG,KACP,sGAIF,EAEA,IAAIC,EADQD,EAAM,GAAG,KAAK,uCAAwC,CAAE,YAAa,YAAa,CAAC,EACrE,CAAC,EAAE,CAAC,GAA4B,EAE1D,OAAW,CAAE,QAAAE,EAAS,OAAAC,CAAO,IAAKX,GAC5BS,EAAiBC,IACnBd,GAAI,iBAAiBc,CAAO,EAAE,EAC9B,MAAMC,EAAOH,CAAK,EAClBC,EAAiBC,EAGvB,CAEA,SAAST,GAAWO,EAAoB,CACtC,OAAOA,EAAM,IAAI,YAAYI,GAAM,CACjCA,EAAG,KACD,6IAOF,EACAA,EAAG,KACD,+KAMF,EACAA,EAAG,KAAK,+CAA+C,EACvDA,EAAG,KAAK,uCAAwC,CAC9C,KAAM,CAAC,IAAI,KAAK,EAAE,QAAQ,EAAI,GAAI,CACpC,CAAC,CACH,CAAC,CACH,CAEA,SAASV,GAAWM,EAAoB,CACtCA,EAAM,IAAI,YAAYI,GAAM,CAC1BA,EAAG,KAAK,sDAAsD,EAC9DA,EAAG,KAAK,4DAA4D,EACpEA,EAAG,KAAK,uCAAwC,CAC9C,KAAM,CAAC,IAAI,KAAK,EAAE,QAAQ,EAAI,GAAI,CACpC,CAAC,CACH,CAAC,CACH,CAEA,SAAST,GAAWK,EAAoB,CACtCA,EAAM,IAAI,YAAYI,GAAM,CAC1BA,EAAG,KAAK,uEAAuE,EAC/E,IAAMC,EAASD,EAAG,aAAa,8CAA+C,CAAC,EAAG,CAAC,CAAC,EACpF,QAAWE,KAAQD,EAAQ,CACzB,IAAME,EAAK,KAAK,MAAMD,EAAK,CAAC,CAAW,EACnCC,GACFP,EAAM,sBAAsBI,EAAIG,CAAE,CAEtC,CACAH,EAAG,KAAK,uCAAwC,CAC9C,KAAM,CAAC,IAAI,KAAK,EAAE,QAAQ,EAAI,GAAI,CACpC,CAAC,CACH,CAAC,CACH,CAEA,eAAeR,GAAWI,EAAoB,CAC5CA,EAAM,IAAI,YAAYI,GAAM,CAC1BA,EAAG,KAAK,+CAA+C,EACvDA,EAAG,KAAK,uCAAwC,CAC9C,KAAM,CAAC,IAAI,KAAK,EAAE,QAAQ,EAAI,GAAI,CACpC,CAAC,CACH,CAAC,CACH,CAEA,eAAeP,GAAWG,EAAoB,CAC5CA,EAAM,IAAI,YAAYI,GAAM,CAC1BA,EAAG,KAAK,8CAA8C,EACtDA,EAAG,KAAK,uCAAwC,CAC9C,KAAM,CAAC,IAAI,KAAK,EAAE,QAAQ,EAAI,GAAI,CACpC,CAAC,CACH,CAAC,CACH,CAEA,eAAeN,GAAWE,EAAoB,CAC5CA,EAAM,IAAI,YAAYI,GAAM,CAC1BA,EAAG,KAAK,2CAA2C,EACnDA,EAAG,KAAK,uCAAwC,CAC9C,KAAM,CAAC,IAAI,KAAK,EAAE,QAAQ,EAAI,GAAI,CACpC,CAAC,CACH,CAAC,CACH,CAEA,IAAOI,GAAQT,GC5Gf,OAAOU,OAAgB,8BCLvB,eAAsBC,GAAUC,EAAoB,CAAC,CDQ9C,IAAMC,GAAN,cAA0B,GAAAC,OAAyD,CACxFC,GACAC,GAAO,CAACC,KAAgBC,IAAqBC,GAAS,cAAeF,EAAK,GAAGC,CAAI,EACjF,GACAE,GACAC,GAAe,IAAI,IAKnB,MAAM,KAAKC,EAAc,CACnB,KAAKP,KACT,KAAKA,GAAU,MAAMQ,GAAkB,CACrC,WAAY,CAACD,EAAME,IACbF,IAAS,eACJG,GAEFD,EAASF,EAElB,MAAOL,GAAO,KAAKD,GAAKC,CAAG,EAC3B,SAAUA,GAAO,KAAKD,GAAKC,CAAG,CAChC,CAAC,EACD,KAAKD,GAAK,uBAAuB,KAAKD,GAAQ,QAAQ,UAAU,EAAE,EAClE,MAAM,KAAKW,GAAMJ,CAAI,EACjB,KAAK,KACP,MAAMK,GAAQ,IAAI,EAElBC,GAAU,IAAI,GAElB,CAKA,KAAMF,GAAMJ,EAAc,CACxB,GAAI,CAAC,KAAKP,GAAS,MAAM,IAAI,MAAM,sBAAsB,EACrD,KAAK,KAET,KAAKK,GAAQ,MAAM,KAAKL,GAAQ,sBAAsB,CAAC,CAAC,EACxD,KAAK,GAAK,IAAI,KAAKK,GAAM,cAAcE,CAAI,EAC3C,KAAKN,GAAK,UAAU,KAAK,GAAG,QAAQ,EAAE,EAKxC,CAKA,MAAM,MAAO,CACX,GAAI,KAAKI,IAAS,KAAK,GAAI,CACzB,IAAMS,EAAS,KAAK,GAAG,SACvB,KAAK,MAAM,EACX,MAAM,KAAKT,GAAM,UAAU,EAC3B,MAAM,KAAKM,GAAMG,CAAM,EACvB,MAAMF,GAAQ,IAAI,CACpB,CACF,CAEA,OAAQ,CACN,KAAK,IAAI,MAAM,EACf,KAAK,GAAK,MACZ,CAKA,MAAMG,EAAgB,CACpB,OAAI,KAAKC,GAAa,KAAK,GAAKD,CAAE,GAChC,KAAKd,GAAK,kBAAkBc,EAAG,IAAI,YAAYA,EAAG,MAAM,OAAOA,EAAG,EAAE,EAAE,EACtE,KAAK,KAAK,QAAS,CAACA,CAAE,CAAC,EAChB,IAEF,EACT,CAEA,IAAIE,EAAaC,EAAoB,CACnC,OAAO,KAAK,IAAI,aAAaD,EAAKC,CAAM,CAC1C,CAKA,WAAWC,EAAwB,CACjC,IAAMC,EAAQC,GAAU,EACpBC,EAAoC,CAAC,EACzC,YAAK,IAAI,YAAYC,GAAM,CACzB,QAAWR,KAAMI,EACX,KAAKH,GAAaO,EAAIR,CAAE,GAC1BO,EAAe,KAAKP,CAAE,CAG5B,CAAC,EACGO,EAAe,OAAS,IAC1B,KAAKrB,GAAK,mBAAmBqB,EAAe,MAAM,IAAIH,EAAI,MAAM,MAAME,GAAU,EAAID,GAAO,eAAe,CAAC,IAAI,EAC/G,KAAK,KAAK,QAASE,CAAc,GAE5BA,EAAe,OAAS,CACjC,CAEA,iBAAiBE,EAAYC,EAAqB,CAC5CA,EAAK,SACP,KAAK,IAAI,KAAK,6CAA8C,CAC1D,KAAM,CAACA,EAAK,QAASD,CAAE,CACzB,CAAC,CAEL,CAEAE,GAAYH,EAAcI,EAAoB,CAC5C,GAAIA,EAAI,SAAW,EAAG,OACtBJ,EAAG,KAAK,mCAAmC,KAAKK,GAAcD,EAAI,MAAM,CAAC,IAAK,CAC5E,KAAMA,CACR,CAAC,EACD,IAAME,EAAUN,EAAG,QAAQ,EAC3BA,EAAG,KAAK,2CAA2C,KAAKK,GAAcD,EAAI,MAAM,CAAC,IAAK,CACpF,KAAMA,CACR,CAAC,EACD,KAAK1B,GAAK,UAAW0B,EAAKE,CAAO,CACnC,CAEAb,GAAaO,EAAcR,EAAgB,CACzC,GAAI,KAAKT,GAAa,IAAIS,EAAG,EAAE,EAAG,MAAO,GAGzC,GADyB,CAAC,EAAG,EAAG,EAAE,EACb,SAASA,EAAG,IAAI,GAAMA,EAAG,MAAQ,KAAUA,EAAG,KAAO,IAAS,CACjF,IAAMe,GAAYP,EAAG,aAAa,uEAAwE,CACxGR,EAAG,KACHA,EAAG,OACHA,EAAG,UACL,CAAC,EACD,GAAIe,GAAU,SAASf,EAAG,EAAE,EAAG,CAG7B,GADA,KAAKT,GAAa,IAAIS,EAAG,EAAE,EACvBe,GAAU,OAAS,EAAG,CACxB,IAAMC,GAAWD,GAAU,OAAOE,IAAKA,KAAMjB,EAAG,EAAE,EAClD,KAAKW,GAAYH,EAAIQ,EAAQ,CAC/B,CACA,MAAO,EACT,MAEE,KAAKL,GAAYH,EAAIO,EAAS,CAElC,CACA,GAAIf,EAAG,MAAQ,KAAUA,EAAG,KAAO,IAAQ,CACzC,IAAMkB,GAAOlB,EAAG,KAAK,KAAKiB,IAAKA,GAAE,CAAC,IAAM,GAAG,EAAG,CAAC,EACzCF,GAAYP,EAAG,aACnB,sIACA,CAAC,IAAKU,EAAI,CACZ,EACA,GAAIH,GAAU,SAASf,EAAG,EAAE,EAAG,CAG7B,GADA,KAAKT,GAAa,IAAIS,EAAG,EAAE,EACvBe,GAAU,OAAS,EAAG,CACxB,IAAMC,GAAWD,GAAU,OAAOE,IAAKA,KAAMjB,EAAG,EAAE,EAClD,KAAKW,GAAYH,EAAIQ,EAAQ,CAC/B,CACA,MAAO,EACT,MAEE,KAAKL,GAAYH,EAAIO,EAAS,CAElC,CAGA,IAAMI,EAAW,CACf,GAAGnB,CACL,EACA,OAAOmB,EAAS,OAEhBX,EAAG,KAAK,4FAA6F,CACnG,KAAM,CAACR,EAAG,GAAIA,EAAG,OAAQA,EAAG,WAAYA,EAAG,KAAM,KAAK,UAAUmB,CAAQ,GAAInB,EAAG,QAAU,CAAC,GAAG,KAAK,GAAG,CAAC,CACxG,CAAC,EACD,IAAMoB,EAAiBZ,EAAG,QAAQ,EAClC,GAAIY,EAAiB,EAAG,CACtB,QAAWC,MAAKrB,EAAG,KAAK,OAAOiB,IAAKA,GAAE,CAAC,EAAE,SAAW,CAAC,EACnDT,EAAG,KAAK,yDAA0D,CAChE,KAAM,CAACR,EAAG,GAAIqB,GAAE,CAAC,EAAGA,GAAE,CAAC,CAAC,CAC1B,CAAC,EAEH,KAAK,sBAAsBb,EAAIR,CAAE,CACnC,KACE,aAAKsB,GAAcd,EAAIR,CAAE,EAClB,EAET,YAAKT,GAAa,IAAIS,EAAG,EAAE,EACpBoB,CACT,CAKAE,GAAcd,EAAcR,EAAgB,CAC1C,IAAMuB,EAASf,EAAG,aAAa,yCAA0C,CAACR,EAAG,EAAE,CAAC,EAC1EwB,EAAY,IAAI,IAAKD,GAAQ,GAAG,CAAC,GAAG,GAAG,CAAC,GAAqB,MAAM,GAAG,GAAK,CAAC,CAAC,EAC/EE,EAAS,GACb,QAAWC,MAAK1B,EAAG,QAAU,CAAC,EACvBwB,EAAU,IAAIE,EAAC,IAClBF,EAAU,IAAIE,EAAC,EACfD,EAAS,IAGTA,GACFjB,EAAG,KAAK,4CAA6C,CACnD,KAAM,CAAC,CAAC,GAAGgB,CAAS,EAAE,KAAK,GAAG,EAAGxB,EAAG,EAAE,CACxC,CAAC,CAEL,CAKA,IAAIS,EAAYkB,EAAgB,CAC9B,IAAMtB,EAAQC,GAAU,EAElB,CAACJ,EAAKC,CAAM,EAAI,KAAKyB,GAAYD,CAAG,EAEpCE,GADM,KAAK,IAAI,aAAa3B,EAAKC,CAAM,GAEtC,IAAIc,IACHU,EAAI,WAAa,GACZV,GAAE,CAAC,EAGL,CACL,GAFS,KAAK,MAAMA,GAAE,CAAC,CAAW,EAGlC,OAASA,GAAE,CAAC,GAAqB,MAAM,GAAG,CAC5C,CACD,GAAK,CAAC,EACHa,GAAOxB,GAAU,EAAID,EAC3B,YAAKnB,GAAK,SAASuB,CAAE,iBAAiBqB,GAAK,eAAe,CAAC,IAAI,EACxDD,EACT,CAKA,MAAMF,EAAgB,CACpB,IAAMtB,EAAQC,GAAU,EAClB,CAACJ,EAAKC,CAAM,EAAI,KAAKyB,GAAYD,EAAK,EAAI,EAK1CE,GAJO,KAAK,IAAI,KAAK3B,EAAK,CAC9B,KAAMC,EACN,YAAa,YACf,CAAC,GACsB,GAAG,CAAC,GAAG,GAAG,CAAC,GAA4B,EACxD2B,GAAOxB,GAAU,EAAID,EAC3B,YAAKnB,GAAK,4BAA4B4C,GAAK,eAAe,CAAC,IAAI,EACxDD,EACT,CAKA,OAAOF,EAAgB,CACrB,KAAKzC,GAAK,sBAAsB,KAAK,UAAUyC,CAAG,CAAC,EAAE,EACrD,IAAMtB,EAAQC,GAAU,EAClByB,EAAa,KAAK,IAAI,iBAAkB,CAAE,GAAGJ,EAAK,SAAU,EAAK,CAAC,EAElEK,EAAUD,EAAW,OACzB,CAACE,GAAKC,GAAGC,KAAM,CACb,IAAMC,IAASD,GAAI,KAAM,QAAQ,CAAC,EAClC,OAAAF,GAAIG,EAAK,IAAM,CAAC,EAChBH,GAAIG,EAAK,EAAE,KAAKF,EAAC,EACVD,EACT,EACA,CAAC,CACH,EACA,KAAK/C,GAAK,sBAAsB,OAAO,KAAK8C,CAAO,EAAE,MAAM,UAAU,EACrE,OAAO,QAAQA,CAAO,EAAE,QAAQ,CAAC,CAACI,GAAOxB,EAAG,IAAM,CAChD,KAAKD,GAAY,KAAK,GAAKC,EAAG,CAChC,CAAC,EACD,IAAMkB,EAAOxB,GAAU,EAAID,EAC3B,YAAKnB,GAAK,UAAU6C,EAAW,MAAM,gBAAgBD,EAAK,eAAe,CAAC,IAAI,EACvEC,CACT,CAKA,SAAU,CACR,IAAMM,EAAM,KAAK,IAAI,KAAK,kDAAmD,CAC3E,YAAa,YACf,CAAC,EACD,OAAO,OAAO,YAAYA,GAAK,IAAIpB,GAAK,CAAC,OAAOA,EAAE,CAAC,CAAC,EAAGA,EAAE,CAAC,CAAW,CAAC,GAAK,CAAC,CAAC,CAC/E,CAKA,MAAM,MAAO,CACX,IAAMqB,EAAW,OAAO,KAAK,IAAI,UAAY,EAAE,EAC/C,GAAI,KAAK,IAAM,KAAKhD,GAClB,GAAI,CACF,OAAO,MAAM,KAAKA,GAAM,WAAW,IAAIgD,CAAQ,EAAE,CACnD,OAASC,EAAG,CACV,QAAQ,MAAMA,CAAC,CACjB,QAAE,CACA,MAAM,KAAK3C,GAAM0C,CAAQ,CAC3B,CAEF,OAAO,IAAI,UACb,CAEAV,GAAYD,EAAgBa,EAAQ,GAAOC,EAAS,GAA6B,CAC/E,IAAMC,EAA4B,CAAC,EAC7BvC,EAAqB,CAAC,EAExBwC,GAAa,cACbH,EACFG,GAAa,cACJhB,EAAI,WAAa,KAC1BgB,GAAa,MAEf,IAAIC,GAAY,UAAUD,EAAU,GAChCF,IACFG,GAAY,UAEd,IAAI1C,GAAM,GAAG0C,EAAS,eAChBC,GAAO,OAAO,QAAQlB,CAAG,EAAE,OAAO,CAAC,CAACmB,EAAC,IAAMA,GAAE,WAAW,GAAG,CAAC,EAC9DC,GAAK,EACT,OAAW,CAACC,GAAKC,EAAM,IAAKJ,GAAM,CAChC,IAAMK,GAASD,GACf/C,IAAO,sBAAsB6C,EAAE,qBAAqBA,EAAE,mBAAmBA,EAAE,kBAAkBA,EAAE,cAAc,KAAKlC,GAChHqC,GAAO,MACT,CAAC,IACD/C,EAAO,KAAK6C,GAAI,MAAM,CAAC,CAAC,EACxB7C,EAAO,KAAK,GAAG+C,EAAM,EACrBH,IACF,CACA,OAAIpB,EAAI,SACNzB,IAAO,8DACPwC,EAAW,KAAK,wBAAwB,EACxCvC,EAAO,KAAKwB,EAAI,OAAO,WAAW,IAAK,GAAG,EAAE,WAAW,IAAK,GAAG,CAAC,GAE9DA,EAAI,MACNe,EAAW,KAAK,UAAU,KAAK7B,GAAcc,EAAI,IAAI,MAAM,CAAC,GAAG,EAC/DxB,EAAO,KAAK,GAAGwB,EAAI,GAAG,GAEpBA,EAAI,UACNe,EAAW,KAAK,cAAc,KAAK7B,GAAcc,EAAI,QAAQ,MAAM,CAAC,GAAG,EACvExB,EAAO,KAAK,GAAGwB,EAAI,OAAO,GAExBA,EAAI,QACNe,EAAW,KAAK,YAAY,KAAK7B,GAAcc,EAAI,MAAM,MAAM,CAAC,GAAG,EACnExB,EAAO,KAAK,GAAGwB,EAAI,KAAK,GAEtBA,EAAI,QACNe,EAAW,KAAK,cAAc,EAC9BvC,EAAO,KAAKwB,EAAI,KAAK,GAEnBA,EAAI,QACNe,EAAW,KAAK,aAAa,EAC7BvC,EAAO,KAAKwB,EAAI,KAAK,GAEnBe,EAAW,OAAS,IACtBxC,IAAO,UAAUwC,EAAW,KAAK,OAAO,CAAC,IAEvCf,EAAI,QACNzB,IAAO,gCAAgCyB,EAAI,KAAK,IAE3C,CAACzB,GAAKC,CAAM,CACrB,CAEAU,GAAcsC,EAAW,CACvB,IAAMC,EAAqB,CAAC,EAC5B,QAASC,EAAI,EAAGA,EAAIF,EAAGE,IACrBD,EAAI,KAAK,GAAG,EAEd,OAAOA,EAAI,KAAK,IAAI,CACtB,CAEAE,GAAoBpD,EAAaC,EAAgC,CAC/D,IAAIkC,EAAM,GACNkB,EAAO,EACX,QAAWC,KAAOtD,EAChB,GAAIsD,IAAQ,IAAK,CACf,IAAMC,GAAKtD,EAAOoD,GAAM,EACpB,OAAOE,IAAO,SAChBpB,GAAOoB,GAAG,SAAS,EACV,OAAOA,IAAO,WACvBpB,GAAO,IAAIoB,EAAE,IAEjB,MACEpB,GAAOmB,EAGX,OAAOnB,CACT,CAEA,sBAAsB7B,EAAcR,EAAgB,CAClD,GAAIA,EAAG,OAAS,EAAG,CACjB,IAAM0D,EAAU,KAAK,MAAM1D,EAAG,OAAO,EAQrC,GAAI0D,EAAS,CACX,IAAMC,EAAe,CACnBD,EAAQ,KACRA,EAAQ,aACRA,EAAQ,MACRA,EAAQ,QACRA,EAAQ,MACRA,EAAQ,KACV,EAAE,KAAK,GAAG,EACVlD,EAAG,KAAK,yCAA0C,CAChD,KAAM,CAACR,EAAG,GAAI2D,CAAY,CAC5B,CAAC,CACH,CACF,MAAW3D,EAAG,OAAS,GACrBQ,EAAG,KAAK,yCAA0C,CAChD,KAAM,CAACR,EAAG,GAAIA,EAAG,OAAO,CAC1B,CAAC,CAEL,CAEA4D,GAAgBpD,EAAc,CAAC,CACjC,EEtaO,IAAMqD,GAAN,cAA4B,GAAAC,OAAyD,CAC1FC,GAAmC,IAAI,IACvCC,GAAO,CAACC,KAAgBC,IAAqBC,GAAS,gBAAiBF,EAAK,GAAGC,CAAI,EAEnF,MAAO,CACL,YAAKF,GAAK,uBAAuB,EAC1B,QAAQ,QAAQ,CACzB,CAEA,MAAMI,EAAwB,CAC5B,IAAIC,EAAM,EACV,OAAW,CAAC,CAAE,CAAC,IAAK,KAAKN,GACnBO,GAAmB,EAAGF,CAAG,GAC3BC,IAGJ,OAAOA,CACT,CAEA,SAAkC,CAChC,IAAIA,EAAM,CAAC,EACX,OAAW,CAACE,EAAGC,CAAC,IAAK,KAAKT,GACxBM,EAAIG,EAAE,KAAK,SAAS,CAAC,IAAM,EAC3BH,EAAIG,EAAE,KAAK,SAAS,CAAC,IAEvB,OAAOH,CACT,CAEA,MAA4B,CAC1B,IAAMI,EAAM,IAAI,YAChB,OAAO,QAAQ,QAAQA,EAAI,OAAO,KAAK,UAAU,KAAKV,GAAQ,OAAO,CAAC,CAAC,CAAC,CAC1E,CAEA,OAAc,CAEd,CAEA,MAAO,CACL,YAAKA,GAAU,IAAI,IACZ,QAAQ,QAAQ,CACzB,CAEA,MAAMW,EAAgB,CACpB,OAAI,KAAKX,GAAQ,IAAIW,EAAG,EAAE,EAAU,IACpC,KAAKX,GAAQ,IAAIW,EAAG,GAAIA,CAAE,EAC1B,KAAK,KAAK,QAAS,CAACA,CAAE,CAAC,EAChB,GACT,CAEA,WAAWC,EAAmB,CAC5B,IAAMC,EAAW,CAAC,EAClB,QAAWF,KAAMC,EACX,KAAKZ,GAAQ,IAAIW,EAAG,EAAE,IAC1B,KAAKX,GAAQ,IAAIW,EAAG,GAAIA,CAAE,EAC1BE,EAAS,KAAKF,CAAE,GAElB,OAAIE,EAAS,OAAS,GACpB,KAAK,KAAK,QAASA,CAAQ,EACpB,IAEF,EACT,CAEA,IAAIC,EAAaC,EAAoD,CACnE,MAAO,CAAC,CACV,CAEA,IAAIC,EAAYC,EAAmB,CACjC,IAAMX,EAAM,CAAC,EACb,OAAW,CAAC,CAAEY,CAAC,IAAK,KAAKlB,GACnBO,GAAmBW,EAAGD,CAAM,IAC1BA,EAAO,WAAa,GACtBX,EAAI,KAAKY,EAAE,EAAE,EAEbZ,EAAI,KAAKY,CAAC,GAIhB,OAAOZ,CACT,CAEA,OAAOW,EAAmB,CACxB,IAAME,EAAY,KAAK,IAAI,iBAAkB,CAAE,GAAGF,EAAQ,SAAU,EAAK,CAAC,EAC1E,OAAAE,EAAU,QAAQC,GAAK,KAAKpB,GAAQ,OAAOoB,CAAC,CAAC,EAEtCD,CACT,CAEA,iBAAiBE,EAAaC,EAAsB,CAEpD,CACF,EC7FA,IAAMC,GAAYC,IACT,CAAE,MAAO,IAAK,GAGjBC,GAAM,CAACC,KAAgBC,IAAqBC,GAAS,gBAAiBF,EAAK,GAAGC,CAAI,EAExF,eAAsBE,GAAcC,EAAqBC,EAAuC,CAC9F,QAAQ,KAAK,8BAA8B,EAE3CN,GAAI,SAAUM,CAAM,EAGpB,IAAMC,EAAoB,MAAMC,GAAmBH,EAAOC,CAAM,EAChEN,GAAI,oBAAqBO,CAAiB,EAE1C,IAAME,EAAmB,MAAMC,GAAoBL,EAAOE,EAAmBD,CAAM,EACnFN,GAAI,qBAAsBS,CAAgB,EAG1C,IAAME,EAAmB,MAAMC,GAAoBP,EAAOE,EAAmBD,CAAM,EAEnFN,GAAI,qBAAsBW,CAAgB,EAG1C,IAAME,EAAkB,MAAMC,GAA2BT,EAAOM,EAAkBJ,EAAmBD,CAAM,EAC3GN,GAAI,oBAAqBa,CAAe,EAGxC,IAAME,GAAO,MAAMC,GAAcX,EAAOQ,EAAiBJ,CAAgB,EACzE,OAAAT,GAAI,cAAee,GAAK,MAAM,EAE9B,QAAQ,QAAQ,8BAA8B,EACvCA,EACT,CAEA,eAAeL,GAAoBL,EAAqBE,EAAgCU,EAAkB,CACxG,IAAMR,EAAmB,IAAI,IAM7B,OAJoBJ,EAAM,IAAI,sBAAuB,CACnD,KAAM,MAAM,KAAKE,CAAiB,CACpC,CAAC,EAEW,QAAQW,GAAY,CAC1BA,EAAS,SAAWD,GACtBR,EAAiB,IAAIS,EAAS,QAAST,EAAiB,IAAIS,EAAS,MAAM,GAAK,GAAK,CAAC,CAE1F,CAAC,EAEMT,CACT,CAEA,eAAeD,GAAmBH,EAAqBC,EAAgB,CACrE,IAAMC,EAAoB,IAAI,IAM9B,OAJiBF,EAAM,IAAI,uBAAwB,CACjD,QAAS,CAACC,CAAM,EAChB,MAAO,CAAC,EAAG,EAAG,EAAG,IAAI,CACvB,CAAC,EACQ,QAAQa,GAAM,CACrB,IAAMC,EACJD,EAAG,OAAS,KAAOrB,GAASqB,CAAE,EAAE,OAAO,GAAKA,EAAG,KAAK,KAAME,IAAkBA,GAAI,CAAC,IAAM,GAAG,IAAI,CAAC,EAC7FD,GACFb,EAAkB,IAAIa,CAAa,CAEvC,CAAC,EAEMb,CACT,CAEA,eAAeK,GAAoBP,EAAqBE,EAAgCU,EAAkB,CACxG,IAAMN,EAAmB,IAAI,IAM7B,OAJuBN,EAAM,IAAI,sBAAuB,CACtD,KAAM,MAAM,KAAKE,CAAiB,CACpC,CAAC,EAEc,QAAQW,GAAY,CAC7BA,EAAS,SAAWD,GACtBN,EAAiB,IAAIO,EAAS,QAASP,EAAiB,IAAIO,EAAS,MAAM,GAAK,GAAK,CAAC,CAE1F,CAAC,EAEMP,CACT,CAEA,eAAeG,GACbT,EACAM,EACAW,EACAC,EACA,CACA,IAAMC,EAA0B,IAAI,IAOpC,OALenB,EAAM,IAAI,6BAA8B,CACrD,QAAS,CAAC,GAAGM,EAAiB,KAAK,CAAC,EACpC,MAAO,CAAC,EAAG,EAAG,EAAG,IAAI,CACvB,CAAC,EAEM,QAAQc,IAAS,CAClBA,GAAM,SAAWF,GAASD,EAAgB,IAAIG,GAAM,EAAE,GAI1DA,GAAM,KAAK,QAASJ,IAAkB,CACpC,GAAIA,GAAI,CAAC,IAAM,IAAK,CAClB,IAAMK,GAAQ,KAAK,KAAK,KAAK,KAAKf,EAAiB,IAAIc,GAAM,MAAM,GAAK,CAAC,CAAC,EAC1ED,EAAwB,IAAIH,GAAI,CAAC,GAAIG,EAAwB,IAAIH,GAAI,CAAC,CAAC,GAAK,GAAKK,EAAK,CACxF,CACF,CAAC,CACH,CAAC,EAEMF,CACT,CAEA,eAAeR,GACbX,EACAsB,EACAC,EACA,CACA,IAAMC,EAASxB,EACZ,IACC,wCAAwC,MAAM,KAAKsB,EAAa,KAAK,CAAC,EACnE,IAAI,IAAM,GAAG,EACb,KAAK,IAAI,CAAC,+DACb,MAAM,KAAKA,EAAa,KAAK,CAAC,CAChC,EACC,IAAIG,IAAO,KAAK,MAAMA,GAAI,CAAC,CAAW,CAAe,EAElDC,EAAO,IAAI,IAAYF,EAAO,IAAIV,IAAMA,GAAG,EAAE,CAAC,EAEpDnB,GAAI,mBAAoB4B,CAAgB,EAExC,IAAMI,EAAkB,MAAM,KAAKJ,EAAiB,KAAK,CAAC,EACvD,KAAK,CAACK,GAAGC,KAAMN,EAAiB,IAAIM,EAAC,EAAKN,EAAiB,IAAIK,EAAC,CAAE,EAClE,MAAM,EAAE,EAEqB5B,EAC7B,IACC,4CAA4C2B,EACzC,IAAI,IAAM,GAAG,EACb,KAAK,IAAI,CAAC,8DACbA,CACF,EACC,IAAIF,IAAO,KAAK,MAAMA,GAAI,CAAC,CAAW,CAAe,EAEhC,QAAQX,IAAM,CAC/BY,EAAK,IAAIZ,GAAG,EAAE,GACjBU,EAAO,KAAKV,EAAE,CAElB,CAAC,EAGD,IAAMgB,GAAiBN,EAAO,OAAOV,IAAM,CAACA,GAAG,KAAK,KAAME,IAAkBA,GAAI,CAAC,IAAM,GAAG,CAAC,EAIrFe,GAAc,IAAI,KAAK,EAAE,QAAQ,EAGnCC,GAAe,IACjBC,GAAe,KACbC,GAAS,IACXC,GAAS,KAEXL,GAAe,QAAQV,IAAS,CAC9B,IAAMgB,GAAYd,EAAa,IAAIF,GAAM,EAAE,GAAK,EAChDY,GAAe,KAAK,IAAIA,GAAcI,EAAS,EAC/CH,GAAe,KAAK,IAAIA,GAAcG,EAAS,EAE/C,IAAMC,GAAMN,GAAc,IAAI,KAAKX,GAAM,UAAU,EAAE,QAAQ,EAC7Dc,GAAS,KAAK,IAAIA,GAAQG,EAAG,EAC7BF,GAAS,KAAK,IAAIA,GAAQE,EAAG,CAC/B,CAAC,EAED,IAAMC,GAAY,CAACC,GAAeC,GAAaC,MAAiBF,GAAQC,KAAQC,GAAMD,IAEhFE,GAAkB,KAAK,IAAI,GAAG,MAAM,KAAKnB,EAAiB,OAAO,CAAC,CAAC,EACnEoB,GAAqB,GAG3B,OAAAb,GAAe,KAAK,CAACF,GAAGC,KAAM,CAC5B,IAAMe,GAAaN,GAAUhB,EAAa,IAAIM,GAAE,EAAE,GAAK,EAAGI,GAAcC,EAAY,EAC9EY,GAAaP,GAAUhB,EAAa,IAAIO,GAAE,EAAE,GAAK,EAAGG,GAAcC,EAAY,EAE9Ea,GAAOR,GAAUP,GAAc,IAAI,KAAKH,GAAE,UAAU,EAAE,QAAQ,EAAGM,GAAQC,EAAM,EAC/EY,GAAOT,GAAUP,GAAc,IAAI,KAAKF,GAAE,UAAU,EAAE,QAAQ,EAAGK,GAAQC,EAAM,EAE/Ea,GAAgBV,GAAUf,EAAiB,IAAIK,GAAE,MAAM,GAAK,EAAG,EAAGc,EAAe,EACjFO,GAAgBX,GAAUf,EAAiB,IAAIM,GAAE,MAAM,GAAK,EAAG,EAAGa,EAAe,EAGjFQ,GAAmB,KAAK,OAAO,EAAI,IAAO,IAAO,IACjDC,GAASP,GAAaM,GAAmBJ,GAAOE,GAAgBL,GAItE,OAHeE,GAAaK,GAAmBH,GAAOE,GAAgBN,GAGtDQ,EAClB,CAAC,EAEMrB,EACT,CC3LA,IAAIsB,GACAC,GAAkB,GAGlBC,GAAqC,CAAC,EAC1C,eAAeC,IAAc,CAG3B,GAAID,GAAgB,OAAS,EAAG,CAC9B,IAAME,EAAQC,GAAU,EAClBC,EAAY,IAClB,GAAIN,GACF,KAAOE,GAAgB,OAAS,GAC1B,EAAAG,GAAU,EAAID,GAASE,IADM,CAKjC,IAAMC,EAAQL,GAAgB,OAAO,EAAGD,EAAe,EACvDC,GAAkBA,GAAgB,MAAMK,EAAM,MAAM,EACpDP,GAAM,WAAWO,CAAK,CACxB,CAEJ,CACA,WAAW,IAAMJ,GAAY,EAAG,GAAG,CACrC,CAGA,GAAI,CACF,WAAW,IAAMK,GAAY,EAAG,GAAG,CACrC,OAASC,EAAG,CACV,QAAQ,MAAMA,CAAC,CACjB,CAOA,IAAMC,GAAY,MAAOC,EAAgDC,IAAqB,CAC5F,eAAeC,EAASC,EAAYC,EAAS,CAC3CJ,EAAK,YAAY,CACf,GAAAG,EACA,IAAK,QACL,KAAMC,CACR,CAAqB,CACvB,CAEA,IAAMC,EAAMJ,EAAG,KACf,GAAI,CACF,OAAQI,EAAI,IAAK,CACf,IAAK,QAAS,CACZC,GAAW,EAAI,EACfJ,EAAMG,EAAI,GAAI,EAAI,EAClB,KACF,CACA,IAAK,OAAQ,CACX,IAAME,EAAOF,EAAI,KACjBG,GAAkBD,EAAK,iBAAmB,GAC1C,GAAI,CACE,gBAAiB,KACnBE,GAAQ,IAAIC,GAEZD,GAAQ,IAAIE,GAEd,MAAMF,GAAM,KAAKF,EAAK,YAAY,CACpC,OAAST,EAAG,CACV,QAAQ,MAAM,4BAA6BA,CAAC,EAC5CW,GAAQ,IAAIE,GACZ,MAAMF,GAAM,KAAKF,EAAK,YAAY,CACpC,CACAL,EAAMG,EAAI,GAAI,EAAI,EAClB,KACF,CACA,IAAK,QAAS,CACZ,IAAMJ,EAAKI,EAAI,KACfO,GAAgB,KAAKX,CAAE,EACvBC,EAAMG,EAAI,GAAI,CACZ,GAAI,GACJ,GAAIJ,EAAG,GACP,MAAO,EACT,CAAe,EACf,KACF,CACA,IAAK,QAAS,CACZ,IAAMY,EAAMJ,GAAO,MAAM,EACzBP,EAAMG,EAAI,GAAIQ,CAAG,EACjB,KACF,CACA,IAAK,MAAO,CACV,IAAMC,EAAMT,EAAI,KACVU,EAAUD,EAAI,MAAM,CAAC,EACrBE,GAAsC,CAAC,EACvCC,GAAM,IAAI,IAChB,QAAWC,MAAKH,EAAS,CACvB,IAAMI,GAAKV,GAAO,IAAIK,EAAI,CAAC,EAAGI,EAAC,EAC/B,QAAWE,MAAKD,GACT,OAAOC,IAAM,UAAYH,GAAI,IAAIG,EAAC,GAAMH,GAAI,IAAKG,GAAiB,EAAE,IAGzEH,GAAI,IAAI,OAAOG,IAAM,SAAWA,GAAKA,GAAiB,EAAE,EACxDJ,GAAQ,KAAKI,EAAC,EAElB,CACAlB,EAAMG,EAAI,GAAIW,EAAO,EACrB,KACF,CACA,IAAK,QAAS,CACZ,IAAMF,EAAMT,EAAI,KACZW,EAAU,EACRD,GAAUD,EAAI,MAAM,CAAC,EAC3B,QAAWI,MAAKH,GAAS,CACvB,IAAMM,GAAIZ,GAAO,MAAMS,EAAC,EACxBF,GAAWK,EACb,CACAnB,EAAMG,EAAI,GAAIW,CAAO,EACrB,KACF,CACA,IAAK,SAAU,CACb,IAAMF,EAAMT,EAAI,KACZW,EAAU,CAAC,EACTD,GAAUD,EAAI,MAAM,CAAC,EAC3B,QAAWI,MAAKH,GAAS,CACvB,IAAMM,GAAIZ,GAAO,OAAOS,EAAC,EACzBF,EAAQ,KAAK,GAAGK,EAAC,CACnB,CACAnB,EAAMG,EAAI,GAAIW,CAAO,EACrB,KACF,CACA,IAAK,UAAW,CACd,IAAMH,EAAMJ,GAAO,QAAQ,EAC3BP,EAAMG,EAAI,GAAIQ,CAAG,EACjB,KACF,CACA,IAAK,SAAU,CACb,IAAMA,EAAM,MAAMJ,GAAO,KAAK,EAC9BP,EAAMG,EAAI,GAAIQ,CAAG,EACjB,KACF,CACA,IAAK,OAAQ,CACX,MAAMJ,GAAO,KAAK,EAClBP,EAAMG,EAAI,GAAI,EAAI,EAClB,KACF,CACA,IAAK,aAAc,CACjB,IAAMQ,EAAM,MAAMS,GAAcb,GAAQJ,EAAI,IAAc,EAC1DH,EAAMG,EAAI,GAAIQ,CAAG,EACjB,KACF,CACA,IAAK,mBAAoB,CACvB,GAAM,CAACV,EAAIoB,CAAQ,EAAIlB,EAAI,KAC3BI,GAAO,iBAAiBN,EAAIoB,CAAQ,EACpC,KACF,CACA,QAAS,CACPrB,EAAMG,EAAI,GAAI,CAAE,MAAO,iBAAkB,CAAC,EAC1C,KACF,CACF,CACF,OAASP,EAAG,CACNA,aAAa,MACfI,EAAMG,EAAI,GAAI,CAAE,MAAOP,EAAE,OAAQ,CAAC,EACzB,OAAOA,GAAM,SACtBI,EAAMG,EAAI,GAAI,CAAE,MAAOP,CAAE,CAAC,EAE1BI,EAAMG,EAAI,GAAI,eAAe,CAEjC,CACF,EAEI,4BAA6B,aAC/B,UAAYP,GAAK,CACf,IAAME,EAAOF,EAAE,MAAM,CAAC,EACtBE,EAAK,UAAYK,GAAON,GAAUC,EAAMK,CAAG,EAC3CL,EAAK,MAAM,CACb,GAEE,+BAAgC,aAClC,UAAYF,GAAK,CACfC,GAAU,KAAoCD,CAAC,CACjD",
  "names": ["require_eventemitter3", "__commonJSMin", "exports", "module", "has", "prefix", "Events", "EE", "fn", "context", "once", "addListener", "emitter", "event", "listener", "evt", "clearEvent", "EventEmitter", "names", "events", "name", "handlers", "i", "l", "ee", "listeners", "a1", "a2", "a3", "a4", "a5", "len", "args", "length", "j", "sqlite3InitModule", "_scriptDir", "config", "Module", "readyPromiseResolve", "readyPromiseReject", "resolve", "reject", "sqlite3InitModuleState", "xNameOfInstantiateWasm", "callee", "imports", "onSuccess", "uri", "scriptDirectory", "wfetch", "arg", "response", "bytes", "moduleOverrides", "arguments_", "thisProgram", "quit_", "status", "toThrow", "ENVIRONMENT_IS_WEB", "ENVIRONMENT_IS_WORKER", "ENVIRONMENT_IS_NODE", "ENVIRONMENT_IS_SHELL", "locateFile", "path", "read_", "readAsync", "readBinary", "setWindowTitle", "url", "xhr", "onload", "onerror", "title", "out", "err", "STACK_ALIGN", "POINTER_SIZE", "getNativeTypeSize", "type", "bits", "assert", "wasmBinary", "noExitRuntime", "abort", "wasmMemory", "ABORT", "EXITSTATUS", "condition", "text", "UTF8Decoder", "UTF8ArrayToString", "heapOrArray", "idx", "maxBytesToRead", "endIdx", "endPtr", "str", "u0", "u1", "u2", "ch", "UTF8ToString", "ptr", "HEAPU8", "stringToUTF8Array", "heap", "outIdx", "maxBytesToWrite", "startIdx", "i", "u", "stringToUTF8", "outPtr", "lengthBytesUTF8", "len", "c", "HEAP", "HEAP8", "HEAP16", "HEAPU16", "HEAP32", "HEAPU32", "HEAPF32", "HEAP64", "HEAPU64", "HEAPF64", "updateMemoryViews", "b", "STACK_SIZE", "INITIAL_MEMORY", "wasmTable", "__ATPRERUN__", "__ATINIT__", "__ATEXIT__", "__ATPOSTRUN__", "runtimeInitialized", "keepRuntimeAlive", "preRun", "addOnPreRun", "callRuntimeCallbacks", "initRuntime", "FS", "TTY", "postRun", "addOnPostRun", "cb", "addOnInit", "addOnExit", "runDependencies", "runDependencyWatcher", "dependenciesFulfilled", "getUniqueRunDependency", "id", "addRunDependency", "removeRunDependency", "callback", "what", "e", "dataURIPrefix", "isDataURI", "filename", "isFileURI", "wasmBinaryFile", "getBinary", "file", "getBinaryPromise", "createWasm", "info", "asmLibraryArg", "receiveInstance", "instance", "module", "exports", "receiveInstantiationResult", "result", "instantiateArrayBuffer", "receiver", "binary", "reason", "instantiateAsync", "tempDouble", "tempI64", "ASM_CONSTS", "ExitStatus", "callbacks", "getValue", "setValue", "value", "PATH", "splitPathRe", "parts", "allowAboveRoot", "up", "last", "isAbsolute", "trailingSlash", "p", "root", "dir", "lastSlash", "paths", "l", "r", "getRandomDevice", "randomBuffer", "PATH_FS", "resolvedPath", "resolvedAbsolute", "from", "to", "trim", "arr", "start", "end", "fromParts", "toParts", "length", "samePartsLength", "outputParts", "intArrayFromString", "stringy", "dontAddNull", "u8array", "numBytesWritten", "dev", "ops", "stream", "tty", "buffer", "offset", "pos", "bytesRead", "val", "zeroMemory", "address", "size", "alignMemory", "alignment", "mmapAlloc", "_emscripten_builtin_memalign", "MEMFS", "mount", "parent", "name", "mode", "node", "newCapacity", "prevCapacity", "CAPACITY_DOUBLING_MAX", "oldContents", "newSize", "attr", "old_node", "new_dir", "new_name", "new_node", "entries", "key", "newname", "oldpath", "position", "contents", "canOwn", "whence", "prot", "flags", "allocated", "mmapFlags", "asyncLoad", "noRunDep", "dep", "arrayBuffer", "event", "opts", "defaults", "current", "current_path", "islast", "count", "link", "lookup", "parentid", "hash", "errCode", "nodeName", "rdev", "flag", "perms", "isdir", "fd_start", "fd_end", "fd", "device", "ma", "mi", "mounts", "check", "m", "populate", "completed", "doCallback", "done", "mountpoint", "pseudo", "mountRoot", "next", "dirs", "d", "newpath", "old_path", "new_path", "old_dirname", "new_dirname", "old_name", "old_dir", "relative", "dontFollow", "uid", "gid", "atime", "mtime", "created", "seeking", "bytesWritten", "cmd", "ret", "stat", "buf", "data", "actualNumBytes", "random_device", "proc_self", "stdin", "stdout", "stderr", "errno", "code", "input", "output", "error", "canRead", "canWrite", "dontResolveLastLink", "part", "properties", "obj", "LazyUint8Array", "chunkOffset", "chunkNum", "getter", "datalength", "header", "hasByteServing", "usesGzip", "chunkSize", "doXHR", "lazyArray", "stream_ops", "keys", "fn", "writeChunks", "dontCreateFile", "preFinish", "fullname", "processData", "byteArray", "finish", "indexedDB", "openRequest", "db", "transaction", "files", "ok", "fail", "total", "putRequest", "getRequest", "SYSCALLS", "dirfd", "allowEmpty", "dirstream", "func", "ctime", "addr", "___syscall_chmod", "___syscall_faccessat", "amode", "___syscall_fchmod", "___syscall_fchown32", "owner", "group", "setErrNo", "___errno_location", "___syscall_fcntl64", "varargs", "newStream", "___syscall_fstat64", "MAX_INT53", "MIN_INT53", "bigintToI53Checked", "num", "___syscall_ftruncate64", "___syscall_getcwd", "cwd", "cwdLengthInBytes", "___syscall_ioctl", "op", "argp", "___syscall_lstat64", "___syscall_mkdirat", "___syscall_newfstatat", "nofollow", "___syscall_openat", "___syscall_readlinkat", "bufsize", "endChar", "___syscall_rmdir", "___syscall_stat64", "___syscall_unlinkat", "readI53FromI64", "___syscall_utimensat", "times", "seconds", "nanoseconds", "nowIsMonotonic", "__emscripten_get_now_is_monotonic", "__isLeapYear", "year", "__MONTH_DAYS_LEAP_CUMULATIVE", "__MONTH_DAYS_REGULAR_CUMULATIVE", "__yday_from_date", "date", "isLeapYear", "monthDaysCumulative", "yday", "__localtime_js", "time", "tmPtr", "summerOffset", "winterOffset", "dst", "__mmap_js", "off", "res", "__munmap_js", "allocateUTF8", "_malloc", "__tzset_js", "timezone", "daylight", "tzname", "currentYear", "winter", "summer", "stdTimezoneOffset", "extractZone", "match", "winterName", "summerName", "winterNamePtr", "summerNamePtr", "_emscripten_date_now", "_emscripten_get_now", "getHeapMax", "emscripten_realloc_buffer", "_emscripten_resize_heap", "requestedSize", "oldSize", "maxHeapSize", "alignUp", "x", "multiple", "cutDown", "overGrownHeapSize", "replacement", "ENV", "getExecutableName", "getEnvStrings", "lang", "env", "strings", "writeAsciiToMemory", "_environ_get", "__environ", "environ_buf", "bufSize", "string", "_environ_sizes_get", "penviron_count", "penviron_buf_size", "_fd_close", "_fd_fdstat_get", "pbuf", "doReadv", "iov", "iovcnt", "curr", "_fd_read", "pnum", "_fd_seek", "newOffset", "_fd_sync", "doWritev", "_fd_write", "FSNode", "readMode", "writeMode", "ASSERTIONS", "asm", "___wasm_call_ctors", "_sqlite3_status64", "_sqlite3_status", "_sqlite3_db_status", "_sqlite3_msize", "_sqlite3_vfs_find", "_sqlite3_initialize", "_sqlite3_malloc", "_sqlite3_free", "_sqlite3_vfs_register", "_sqlite3_vfs_unregister", "_sqlite3_malloc64", "_sqlite3_realloc", "_sqlite3_realloc64", "_sqlite3_value_text", "_sqlite3_randomness", "_sqlite3_stricmp", "_sqlite3_strnicmp", "_sqlite3_uri_parameter", "_sqlite3_uri_boolean", "_sqlite3_serialize", "_sqlite3_prepare_v2", "_sqlite3_step", "_sqlite3_column_int64", "_sqlite3_reset", "_sqlite3_exec", "_sqlite3_column_int", "_sqlite3_finalize", "_sqlite3_file_control", "_sqlite3_column_name", "_sqlite3_column_text", "_sqlite3_column_type", "_sqlite3_errmsg", "_sqlite3_deserialize", "_sqlite3_clear_bindings", "_sqlite3_value_blob", "_sqlite3_value_bytes", "_sqlite3_value_double", "_sqlite3_value_int", "_sqlite3_value_int64", "_sqlite3_value_subtype", "_sqlite3_value_pointer", "_sqlite3_value_type", "_sqlite3_value_nochange", "_sqlite3_value_frombind", "_sqlite3_value_dup", "_sqlite3_value_free", "_sqlite3_result_blob", "_sqlite3_result_error_toobig", "_sqlite3_result_error_nomem", "_sqlite3_result_double", "_sqlite3_result_error", "_sqlite3_result_int", "_sqlite3_result_int64", "_sqlite3_result_null", "_sqlite3_result_pointer", "_sqlite3_result_subtype", "_sqlite3_result_text", "_sqlite3_result_zeroblob", "_sqlite3_result_zeroblob64", "_sqlite3_result_error_code", "_sqlite3_user_data", "_sqlite3_context_db_handle", "_sqlite3_vtab_nochange", "_sqlite3_vtab_in_first", "_sqlite3_vtab_in_next", "_sqlite3_aggregate_context", "_sqlite3_get_auxdata", "_sqlite3_set_auxdata", "_sqlite3_column_count", "_sqlite3_data_count", "_sqlite3_column_blob", "_sqlite3_column_bytes", "_sqlite3_column_double", "_sqlite3_column_value", "_sqlite3_bind_blob", "_sqlite3_bind_double", "_sqlite3_bind_int", "_sqlite3_bind_int64", "_sqlite3_bind_null", "_sqlite3_bind_pointer", "_sqlite3_bind_text", "_sqlite3_bind_parameter_count", "_sqlite3_bind_parameter_index", "_sqlite3_db_handle", "_sqlite3_stmt_readonly", "_sqlite3_stmt_isexplain", "_sqlite3_stmt_status", "_sqlite3_sql", "_sqlite3_expanded_sql", "_sqlite3_preupdate_old", "_sqlite3_preupdate_count", "_sqlite3_preupdate_depth", "_sqlite3_preupdate_blobwrite", "_sqlite3_preupdate_new", "_sqlite3_value_numeric_type", "_sqlite3_set_authorizer", "_sqlite3_strglob", "_sqlite3_strlike", "_sqlite3_auto_extension", "_sqlite3_cancel_auto_extension", "_sqlite3_reset_auto_extension", "_sqlite3_prepare_v3", "_sqlite3_create_module", "_sqlite3_create_module_v2", "_sqlite3_drop_modules", "_sqlite3_declare_vtab", "_sqlite3_vtab_on_conflict", "_sqlite3_vtab_collation", "_sqlite3_vtab_in", "_sqlite3_vtab_rhs_value", "_sqlite3_vtab_distinct", "_sqlite3_keyword_name", "_sqlite3_keyword_count", "_sqlite3_keyword_check", "_sqlite3_complete", "_sqlite3_libversion", "_sqlite3_libversion_number", "_sqlite3_shutdown", "_sqlite3_last_insert_rowid", "_sqlite3_set_last_insert_rowid", "_sqlite3_changes64", "_sqlite3_changes", "_sqlite3_total_changes64", "_sqlite3_total_changes", "_sqlite3_txn_state", "_sqlite3_close_v2", "_sqlite3_busy_handler", "_sqlite3_progress_handler", "_sqlite3_busy_timeout", "_sqlite3_create_function", "_sqlite3_create_function_v2", "_sqlite3_create_window_function", "_sqlite3_overload_function", "_sqlite3_trace_v2", "_sqlite3_commit_hook", "_sqlite3_update_hook", "_sqlite3_rollback_hook", "_sqlite3_preupdate_hook", "_sqlite3_error_offset", "_sqlite3_errcode", "_sqlite3_extended_errcode", "_sqlite3_errstr", "_sqlite3_limit", "_sqlite3_open", "_sqlite3_open_v2", "_sqlite3_create_collation", "_sqlite3_create_collation_v2", "_sqlite3_collation_needed", "_sqlite3_get_autocommit", "_sqlite3_table_column_metadata", "_sqlite3_extended_result_codes", "_sqlite3_uri_key", "_sqlite3_uri_int64", "_sqlite3_db_name", "_sqlite3_db_filename", "_sqlite3_compileoption_used", "_sqlite3_compileoption_get", "_sqlite3session_diff", "_sqlite3session_attach", "_sqlite3session_create", "_sqlite3session_delete", "_sqlite3session_table_filter", "_sqlite3session_changeset", "_sqlite3session_changeset_strm", "_sqlite3session_patchset_strm", "_sqlite3session_patchset", "_sqlite3session_enable", "_sqlite3session_indirect", "_sqlite3session_isempty", "_sqlite3session_memory_used", "_sqlite3session_object_config", "_sqlite3session_changeset_size", "_sqlite3changeset_start", "_sqlite3changeset_start_v2", "_sqlite3changeset_start_strm", "_sqlite3changeset_start_v2_strm", "_sqlite3changeset_next", "_sqlite3changeset_op", "_sqlite3changeset_pk", "_sqlite3changeset_old", "_sqlite3changeset_new", "_sqlite3changeset_conflict", "_sqlite3changeset_fk_conflicts", "_sqlite3changeset_finalize", "_sqlite3changeset_invert", "_sqlite3changeset_invert_strm", "_sqlite3changeset_apply_v2", "_sqlite3changeset_apply", "_sqlite3changeset_apply_v2_strm", "_sqlite3changeset_apply_strm", "_sqlite3changegroup_new", "_sqlite3changegroup_add", "_sqlite3changegroup_output", "_sqlite3changegroup_add_strm", "_sqlite3changegroup_output_strm", "_sqlite3changegroup_delete", "_sqlite3changeset_concat", "_sqlite3changeset_concat_strm", "_sqlite3session_config", "_sqlite3_sourceid", "_sqlite3__wasm_pstack_ptr", "_sqlite3__wasm_pstack_restore", "_sqlite3__wasm_pstack_alloc", "_sqlite3__wasm_pstack_remaining", "_sqlite3__wasm_pstack_quota", "_sqlite3__wasm_db_error", "_sqlite3__wasm_test_struct", "_sqlite3__wasm_enum_json", "_sqlite3__wasm_vfs_unlink", "_sqlite3__wasm_db_vfs", "_sqlite3__wasm_db_reset", "_sqlite3__wasm_db_export_chunked", "_sqlite3__wasm_db_serialize", "_sqlite3__wasm_vfs_create_file", "_sqlite3__wasm_posix_create_file", "_sqlite3__wasm_kvvfsMakeKeyOnPstack", "_sqlite3__wasm_kvvfs_methods", "_sqlite3__wasm_vtab_config", "_sqlite3__wasm_db_config_ip", "_sqlite3__wasm_db_config_pii", "_sqlite3__wasm_db_config_s", "_sqlite3__wasm_config_i", "_sqlite3__wasm_config_ii", "_sqlite3__wasm_config_j", "_sqlite3__wasm_qfmt_token", "_sqlite3__wasm_init_wasmfs", "_sqlite3__wasm_test_intptr", "_sqlite3__wasm_test_voidptr", "_sqlite3__wasm_test_int64_max", "_sqlite3__wasm_test_int64_min", "_sqlite3__wasm_test_int64_times2", "_sqlite3__wasm_test_int64_minmax", "_sqlite3__wasm_test_int64ptr", "_sqlite3__wasm_test_stack_overflow", "_sqlite3__wasm_test_str_hello", "_sqlite3__wasm_SQLTester_strglob", "_free", "_realloc", "stackSave", "stackRestore", "stackAlloc", "calledRun", "runCaller", "run", "args", "doRun", "sqlite3ApiBootstrap", "apiConfig", "k", "capi", "wasm", "__rcStr", "rc", "__isInt", "n", "SQLite3Error", "rcStr", "toss3", "isInt32", "bigIntFits64", "f", "bigIntFits32", "bigIntFitsDouble", "isTypedArray", "v", "__SAB", "isSharedTypedArray", "aTypedArray", "typedArrayPart", "begin", "isBindableTypedArray", "isSQLableTypedArray", "affirmBindableTypedArray", "utf8Decoder", "typedArrayToString", "typedArray", "flexibleString", "WasmAllocError", "pDb", "funcName", "nArg", "eTextRep", "pApp", "xFunc", "xStep", "xFinal", "xDestroy", "xValue", "xInverse", "dbPtr", "sql", "sqlByteLen", "prepFlags", "stmtPtrPtr", "strPtrPtr", "pVoid", "pErrMsg", "util", "srcTypedArray", "pRet", "keyAlloc", "keyDealloc", "keyRealloc", "m2", "optName", "opt", "rv", "ov", "sz", "mem", "safePtrSize", "stackPos", "sqlite3", "ta", "stack", "nAlloc", "j", "__wasmfsOpfsDir", "pdir", "vfsName", "dbName", "pK", "pVfs", "oVfs", "schema", "scope", "pOut", "pSize", "ppOut", "zSchema", "nOut", "dbPointer", "pCtx", "dataLen", "pData", "vfs", "__kvvfsInfo", "which", "kvinfo", "s", "toRm", "kk", "pVal", "throwIfCannotConvert", "valType", "pBlob", "argc", "pArgv", "tgt", "pStmt", "iCol", "__newOldValue", "pObj", "impl", "pv", "pChangesetIter", "ff", "lia", "postInit", "catcher", "target", "toss", "ptrIR", "ptrSizeof", "cache", "heapWrappers", "unsigned", "ctor", "fptr", "ft", "sig", "method", "dest", "letter", "sigParams", "wasmCode", "__installFunction", "scoped", "oldLen", "fi", "list", "h", "__utf8Decode", "jstr", "maxBytes", "addNul", "max", "tgtPtr", "srcPtr", "__affirmAlloc", "__allocCStr", "returnWithLength", "allocator", "a", "state", "__allocMainArgv", "isScoped", "pList", "__allocPtr", "howMany", "pIr", "__argcMismatch", "fname", "xArg", "xResult", "__xArgPtr", "copyToResult", "adaptPtr", "t", "__xArgString", "AbstractArgAdapter", "argv", "argIndex", "FuncPtrAdapter", "cm", "pair", "fp", "__xArgAdapterCheck", "__xResultAdapterCheck", "fArg", "resultType", "argTypes", "fIsFunc", "xf", "cxw", "__xAdapter", "typeName", "adapter", "modeName", "xcvPart", "wui", "finalThen", "StructBinderFactory", "SBF", "alloc", "dealloc", "log", "memberPrefix", "memberSuffix", "bigIntEnabled", "BigInt", "BigInt64Array", "deriveFrom", "isLittleEndian", "isFuncSig", "isPtrSig", "isAutoPtrSig", "sigLetter", "sigIR", "affirmBigIntArray", "sigDVGetter", "sigDVSetter", "sigDVSetWrapper", "sPropName", "__propThrowOnSet", "structName", "propName", "__instancePointerMap", "xPtrPropName", "__freeStruct", "StructType", "rop", "__allocStruct", "fill", "__memoryDump", "__memberKeyProp", "__lookupMember", "structInfo", "memberName", "tossIfNotFound", "__memberSignature", "emscriptenFormat", "__ptrPropDescriptor", "__structMemberKeys", "__utf8Decoder", "__utf8Encoder", "__memberIsString", "__affirmCStringSignature", "member", "__memberToJsString", "__addOnDispose", "__allocCString", "__setMemberCString", "isNumericValue", "makeMemberWrapper", "descr", "rxSig1", "rxSig2", "sigGlyph", "xPropName", "dbg", "prop", "StructBinder", "lastMember", "debugFlags", "StructCtor", "externalMemory", "mKey", "aNames", "nCols", "pColVals", "pColNames", "aVals", "pV", "iCode", "s0", "s1", "s2", "s3", "zDb", "zTbl", "iKey1", "iKey2", "z0", "z1", "rowid", "__ipsProxy", "__xString", "nilType", "__xRcPtr", "fI64Disabled", "__db_err", "resultCode", "message", "msg", "cJson", "defineGroups", "__rcMap", "notThese", "__dbArgcMismatch", "__errEncoding", "__argPDb", "__argStr", "__dbCleanupMap", "arity", "map", "closeArgs", "fmap", "arities", "fargs", "__sqlite3CloseV2", "__sqlite3SessionDelete", "pSession", "contextKey", "__sqlite3CreateCollationV2", "zName", "pArg", "xCompare", "__cfProxy", "__sqlite3CreateFunction", "__sqlite3CreateWindowFunction", "__flexiString", "__prepare", "sqlLen", "ppStmt", "pzTail", "xSql", "xSqlLen", "__bindText", "__bindBlob", "nText", "pMem", "nMem", "__autoExtFptr", "fPtr", "pKvvfs", "kvvfsMethods", "kvvfsMakeKey", "pstack", "kvvfsStorage", "zClass", "kvvfsImpls", "zKey", "zBuf", "nBuf", "astack", "zXKey", "jKey", "jV", "nV", "zV", "zData", "installMethod", "applyArgcCheck", "ndx", "sigN", "memKey", "fProxy", "pFunc", "installMethods", "structInstance", "methods", "seen", "prior", "mkey", "__ptrMap", "__stmtMap", "getOwnOption", "dflt", "checkSqlite3Rc", "sqliteResultCode", "DB", "__dbTraceToConsole", "__vfsPostOpenSql", "dbCtorHelper", "isWorkerThread", "flagsStr", "fnJs", "vfsCheck", "oflags", "pPtr", "postInitSql", "BindTypes", "Stmt", "affirmDbOpen", "affirmColIndex", "stmt", "parseExecArgs", "row", "$colName", "__selectFirstRow", "bind", "getArgs", "__selectAll", "rowMode", "sixtyFour", "dbNumber", "resultRows", "evalFirstResult", "saveSql", "isTA", "pSql", "pSqlEnd", "gotColNames", "cbArgCache", "isFunc", "isWindow", "fFlags", "xArity", "arityArg", "asType", "opener", "affirmStmtOpen", "isSupportedBindType", "affirmSupportedBindType", "affirmParamIndex", "affirmNotLockedByExec", "currentOpName", "bindOne", "bindType", "asBlob", "pStr", "alsoClearBinds", "storageName", "jdb", "getDbId", "wState", "alsoUnlink", "ddNdx", "xferList", "require", "getMsgDb", "msgData", "affirmExists", "getDefaultDbId", "isSpecialDbFilename", "wMsgHandler", "ev", "oargs", "doUnlink", "theCallback", "rowNumber", "hadColNames", "changeCount", "src", "dbId", "evType", "arrivalTime", "asDefault", "propList", "o", "vtab", "sii", "asPtr", "__xWrapFactory", "methodName", "removeMapping", "StructPtrMapper", "__xWrap", "pCObj", "pIdxInfo", "defaultRc", "ppRowid64", "createdMod", "mod", "fwrap", "pAux", "ppVtab", "pzErr", "mnames", "remethods", "installOpfsVfs", "options", "urlParams", "promiseResolve_", "promiseReject_", "loggers", "logImpl", "level", "warn", "sqlite3_vfs", "sqlite3_file", "sqlite3_io_methods", "opfsUtil", "thisThreadHasOPFS", "w", "metrics", "W", "opfsIoMethods", "opfsVfs", "promiseWasRejected", "promiseReject", "promiseResolve", "pDVfs", "dVfs", "opRun", "opNdx", "initS11n", "textDecoder", "textEncoder", "viewU8", "viewDV", "TypeIds", "getTypeId", "getTypeIdById", "tid", "clear", "typeIds", "randomFilename", "__openFiles", "opTimer", "mTimeStart", "mTimeEnd", "ioSyncWrappers", "pFile", "opId", "pSz64", "lockType", "pDest", "offset64", "sz64", "pSrc", "vfsSyncWrappers", "doSyncDir", "pOutFlags", "opfsFlags", "fh", "ms", "splitIt", "absFilename", "createDirs", "dh", "dirName", "absDirName", "fsEntryName", "doDir", "dirHandle", "handle", "subDir", "recursive", "throwOnError", "hDir", "filenamePart", "defaultOpt", "depth", "importDbChunked", "fnamePart", "sah", "nWrote", "chunk", "checkedHeader", "OpfsDb", "oo1Db", "sanityCheck", "sq3File", "fid", "openFlags", "dbFile", "zDbFile", "readBuf", "jRead", "errMsg", "proxyJs", "initPromises", "SECTOR_SIZE", "HEADER_MAX_PATH_SIZE", "HEADER_FLAGS_SIZE", "HEADER_DIGEST_SIZE", "HEADER_CORPUS_SIZE", "HEADER_OFFSET_FLAGS", "HEADER_OFFSET_DIGEST", "HEADER_OFFSET_DATA", "PERSISTENT_FILE_TYPES", "OPAQUE_DIR_NAME", "getRandomName", "optionDefaults", "__mapVfsToPool", "getPoolForVfs", "setPoolForVfs", "pool", "__mapSqlite3File", "getPoolForPFile", "setPoolForPFile", "ioMethods", "nRead", "nBytes", "vfsMethods", "cMsg", "createOpfsVfs", "OpfsSAHPool", "#dhVfsRoot", "#dhOpaque", "#dhVfsParent", "#mapSAHToName", "#mapFilenameToSAH", "#availableSAH", "#mapS3FileToOFile_", "#apBody", "#dvBody", "#cVfs", "#verbosity", "#logImpl", "iter", "ah", "nRm", "clearFiles", "fileDigest", "compDigest", "pathBytes", "enc", "digest", "h1", "h2", "prev", "prevName", "OpfsSAHPoolUtil", "#p", "sahPool", "min", "apiVersionCheck", "close", "instanceCounter", "thePool", "poolUtil", "oo1", "theVfs", "OpfsSAHPoolDb", "SABC", "toExportForESM", "originalInit", "initModuleState", "li", "EmscriptenModule", "sim", "sqlite3_bundler_friendly_default", "callee", "config", "f", "handlerMap", "noop", "err", "debug", "idTypeMap", "genMsgId", "msg", "toss", "args", "dbId", "promiserFunc", "ev", "msgHandler", "e", "proxy", "rowCallbackId", "p", "resolve", "reject", "oldFunc", "promiseProxy", "func", "sqlite3_worker1_promiser_default", "sqlite3Worker1Promiser", "sqlite_wasm_default", "sqlite3_bundler_friendly_default", "import_index", "unixNowMs", "eventMatchesFilter", "ev", "filter", "tags", "k", "v", "vargs", "x", "a", "debug", "debugLog", "scope", "msg", "args", "setLogging", "v", "log", "msg", "args", "debugLog", "migrations", "migrate_v1", "migrate_v2", "migrate_v3", "migrate_v4", "migrate_v5", "migrate_v6", "migrate", "relay", "currentVersion", "version", "script", "db", "events", "json", "ev", "migrations_default", "SqlitePath", "runFixers", "relay", "SqliteRelay", "EventEmitter", "#sqlite", "#log", "msg", "args", "debugLog", "#pool", "#seenInserts", "path", "sqlite_wasm_default", "prefix", "SqlitePath", "#open", "migrations_default", "runFixers", "dbName", "ev", "#insertEvent", "sql", "params", "evs", "start", "unixNowMs", "eventsInserted", "db", "id", "meta", "#deleteById", "ids", "#repeatParams", "deleted", "oldEvents", "toDelete", "a", "dTag", "evInsert", "insertedEvents", "t", "#updateRelays", "relays", "oldRelays", "hasNew", "r", "req", "#buildQuery", "results", "time", "for_delete", "grouped", "acc", "v", "i", "batch", "res", "filePath", "e", "count", "remove", "conditions", "resultType", "operation", "tags", "k", "tx", "key", "values", "vArray", "n", "ret", "x", "#replaceParamsDebug", "cIdx", "chr", "px", "profile", "indexContent", "#fixMissingTags", "InMemoryRelay", "EventEmitter", "#events", "#log", "msg", "args", "debugLog", "req", "ret", "eventMatchesFilter", "k", "v", "enc", "ev", "evs", "inserted", "sql", "params", "id", "filter", "e", "forDelete", "a", "_id", "_meta", "parseZap", "_zap", "log", "msg", "args", "debugLog", "getForYouFeed", "relay", "pubkey", "myReactedEventIds", "getMyReactedEvents", "myReactedAuthors", "getMyReactedAuthors", "othersWhoReacted", "getOthersWhoReacted", "reactedByOthers", "getEventIdsReactedByOthers", "feed", "getFeedEvents", "myPubkey", "reaction", "ev", "targetEventId", "tag", "myReactedEvents", "myPub", "eventIdsReactedByOthers", "event", "score", "reactedToIds", "reactedToAuthors", "events", "row", "seen", "favoriteAuthors", "a", "b", "filteredEvents", "currentTime", "minReactions", "maxReactions", "minAge", "maxAge", "reactions", "age", "normalize", "value", "min", "max", "maxFavoriteness", "favoritenessWeight", "aReactions", "bReactions", "aAge", "bAge", "aFavoriteness", "bFavoriteness", "recentnessWeight", "aScore", "relay", "insertBatchSize", "eventWriteQueue", "insertBatch", "start", "unixNowMs", "timeLimit", "batch", "insertBatch", "e", "handleMsg", "port", "ev", "reply", "id", "obj", "msg", "setLogging", "args", "insertBatchSize", "relay", "SqliteRelay", "InMemoryRelay", "eventWriteQueue", "res", "req", "filters", "results", "ids", "r", "rx", "x", "c", "getForYouFeed", "metadata"]
}
