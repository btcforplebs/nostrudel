{"version":3,"file":"worker.js","sources":["../src/worker/worker.js"],"sourcesContent":["// Web Worker for fedimint-client-wasm to run in the browser\n\n// HACK: Fixes vitest browser runner\n// TODO: remove once https://github.com/vitest-dev/vitest/pull/6569 lands in a release\nglobalThis.__vitest_browser_runner__ = { wrapDynamicImport: (foo) => foo() }\n\n// dynamically imported Constructor for WasmClient\nlet WasmClient = null\n// client instance\nlet client = null\n\nconst streamCancelMap = new Map()\n\nconst handleFree = (requestId) => {\n  streamCancelMap.delete(requestId)\n}\n\nconsole.log('Worker - init')\n\nself.onmessage = async (event) => {\n  const { type, payload, requestId } = event.data\n\n  try {\n    if (type === 'init') {\n      WasmClient = (await import('@fedimint/fedimint-client-wasm-bundler'))\n        .WasmClient\n      self.postMessage({ type: 'initialized', data: {}, requestId })\n    } else if (type === 'open') {\n      const { clientName } = payload\n      client = (await WasmClient.open(clientName)) || null\n      self.postMessage({\n        type: 'open',\n        data: { success: !!client },\n        requestId,\n      })\n    } else if (type === 'join') {\n      const { inviteCode, clientName: joinClientName } = payload\n      try {\n        client = await WasmClient.join_federation(joinClientName, inviteCode)\n        self.postMessage({\n          type: 'join',\n          data: { success: !!client },\n          requestId,\n        })\n      } catch (e) {\n        self.postMessage({ type: 'error', error: e.message, requestId })\n      }\n    } else if (type === 'rpc') {\n      const { module, method, body } = payload\n      console.log('RPC received', module, method, body)\n      if (!client) {\n        self.postMessage({\n          type: 'error',\n          error: 'WasmClient not initialized',\n          requestId,\n        })\n        return\n      }\n      const rpcHandle = await client.rpc(\n        module,\n        method,\n        JSON.stringify(body),\n        (res) => {\n          console.log('RPC response', requestId, res)\n          const data = JSON.parse(res)\n          self.postMessage({ type: 'rpcResponse', requestId, ...data })\n\n          if (data.end !== undefined) {\n            // Handle stream ending\n            const handle = streamCancelMap.get(requestId)\n            handle?.free()\n          }\n        },\n      )\n      streamCancelMap.set(requestId, rpcHandle)\n    } else if (type === 'unsubscribe') {\n      const rpcHandle = streamCancelMap.get(requestId)\n      if (rpcHandle) {\n        rpcHandle.cancel()\n        rpcHandle.free()\n        streamCancelMap.delete(requestId)\n      }\n    } else {\n      self.postMessage({\n        type: 'error',\n        error: 'Unknown message type',\n        requestId,\n      })\n    }\n  } catch (e) {\n    console.error('ERROR', e)\n    self.postMessage({ type: 'error', error: e, requestId })\n  }\n}\n\n// self.postMessage({ type: 'init', data: {} })\n"],"names":["globalThis","__vitest_browser_runner__","wrapDynamicImport","foo","WasmClient","client","streamCancelMap","Map","console","log","self","onmessage","async","event","type","payload","requestId","data","import","postMessage","clientName","open","success","inviteCode","joinClientName","join_federation","e","error","message","module","method","body","rpcHandle","rpc","JSON","stringify","res","parse","undefined","end","handle","get","free","set","cancel","delete"],"mappings":"AAIAA,WAAWC,0BAA4B,CAAEC,kBAAoBC,GAAQA,KAGrE,IAAIC,EAAa,KAEbC,EAAS,KAEb,MAAMC,EAAkB,IAAIC,IAM5BC,QAAQC,IAAI,iBAEZC,KAAKC,UAAYC,MAAOC,IACtB,MAAMC,KAAEA,EAAIC,QAAEA,EAAOC,UAAEA,GAAcH,EAAMI,KAE3C,IACE,GAAa,SAATH,EACFV,SAAoBc,OAAO,2CACxBd,WACHM,KAAKS,YAAY,CAAEL,KAAM,cAAeG,KAAM,CAAA,EAAID,mBAC7C,GAAa,SAATF,EAAiB,CAC1B,MAAMM,WAAEA,GAAeL,EACvBV,QAAgBD,EAAWiB,KAAKD,IAAgB,KAChDV,KAAKS,YAAY,CACfL,KAAM,OACNG,KAAM,CAAEK,UAAWjB,GACnBW,aAER,MAAW,GAAa,SAATF,EAAiB,CAC1B,MAAMS,WAAEA,EAAYH,WAAYI,GAAmBT,EACnD,IACEV,QAAeD,EAAWqB,gBAAgBD,EAAgBD,GAC1Db,KAAKS,YAAY,CACfL,KAAM,OACNG,KAAM,CAAEK,UAAWjB,GACnBW,aAEH,CAAC,MAAOU,GACPhB,KAAKS,YAAY,CAAEL,KAAM,QAASa,MAAOD,EAAEE,QAASZ,aACrD,CACP,MAAW,GAAa,QAATF,EAAgB,CACzB,MAAMe,OAAEA,EAAMC,OAAEA,EAAMC,KAAEA,GAAShB,EAEjC,GADAP,QAAQC,IAAI,eAAgBoB,EAAQC,EAAQC,IACvC1B,EAMH,YALAK,KAAKS,YAAY,CACfL,KAAM,QACNa,MAAO,6BACPX,cAIJ,MAAMgB,QAAkB3B,EAAO4B,IAC7BJ,EACAC,EACAI,KAAKC,UAAUJ,IACdK,IACC5B,QAAQC,IAAI,eAAgBO,EAAWoB,GACvC,MAAMnB,EAAOiB,KAAKG,MAAMD,GAGxB,GAFA1B,KAAKS,YAAY,CAAEL,KAAM,cAAeE,eAAcC,SAErCqB,IAAbrB,EAAKsB,IAAmB,CAE1B,MAAMC,EAASlC,EAAgBmC,IAAIzB,GACnCwB,GAAQE,MACT,KAGLpC,EAAgBqC,IAAI3B,EAAWgB,EACrC,MAAW,GAAa,gBAATlB,EAAwB,CACjC,MAAMkB,EAAY1B,EAAgBmC,IAAIzB,GAClCgB,IACFA,EAAUY,SACVZ,EAAUU,OACVpC,EAAgBuC,OAAO7B,GAE/B,MACMN,KAAKS,YAAY,CACfL,KAAM,QACNa,MAAO,uBACPX,aAGL,CAAC,MAAOU,GACPlB,QAAQmB,MAAM,QAASD,GACvBhB,KAAKS,YAAY,CAAEL,KAAM,QAASa,MAAOD,EAAGV,aAC7C"}