import { WorkerClient } from '../worker';
import type { Duration, JSONObject, JSONValue, MintSpendNotesResponse, MSats } from '../types';
export declare class MintService {
    private client;
    constructor(client: WorkerClient);
    redeemEcash(notes: string): Promise<void>;
    reissueExternalNotes(oobNotes: string, extraMeta?: JSONObject): Promise<string>;
    subscribeReissueExternalNotes(operationId: string, onSuccess?: (state: JSONValue) => void, onError?: (error: string) => void): import("../types").CancelFunction;
    spendNotes(minAmount: MSats, tryCancelAfter?: number | Duration, // in seconds or Duration object
    includeInvite?: boolean, extraMeta?: JSONValue): Promise<MintSpendNotesResponse>;
    parseNotes(oobNotes: string): Promise<MSats>;
    tryCancelSpendNotes(operationId: string): Promise<void>;
    subscribeSpendNotes(operationId: string, onSuccess?: (state: JSONValue) => void, onError?: (error: string) => void): import("../types").CancelFunction;
    awaitSpendOobRefund(operationId: string): Promise<JSONValue>;
}
//# sourceMappingURL=MintService.d.ts.map