import { IncomingMessage, OutgoingMessage } from "../relay/relay-message-bus.js";
export type AbstractWebSocketBackend = {
    rx: (listener: (message: OutgoingMessage) => void) => void;
    tx: (message: IncomingMessage) => void;
};
export declare class AbstractWebSocket extends EventTarget implements WebSocket {
    binaryType: BinaryType;
    readonly bufferedAmount = 0;
    readonly extensions = "";
    readonly protocol = "";
    url: string;
    addEventListener: WebSocket["addEventListener"];
    removeEventListener: WebSocket["removeEventListener"];
    readonly CONNECTING: 0;
    readonly OPEN: 1;
    readonly CLOSING: 2;
    readonly CLOSED: 3;
    onclose: ((this: WebSocket, ev: CloseEvent) => any) | null;
    onerror: ((this: WebSocket, ev: Event) => any) | null;
    onmessage: ((this: WebSocket, ev: MessageEvent) => any) | null;
    onopen: ((this: WebSocket, ev: Event) => any) | null;
    readyState: number;
    private backend;
    constructor(url: string | URL, backend: AbstractWebSocketBackend);
    close(code?: number, reason?: string): void;
    send(data: string): void;
}
