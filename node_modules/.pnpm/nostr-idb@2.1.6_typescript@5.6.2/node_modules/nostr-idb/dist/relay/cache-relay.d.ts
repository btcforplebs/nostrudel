import { Event, Filter } from "nostr-tools";
import { NostrIDB } from "../database/schema.js";
import { RelayCore, RelayCoreOptions, Subscription, SubscriptionOptions } from "./relay-core.js";
export interface SimpleRelay {
    url: string;
    publish(event: Event): Promise<string>;
    connected: boolean;
    connect(): Promise<void>;
    close(): void;
    count(filters: Filter[], params?: {
        id?: string | null;
    }): Promise<number>;
    subscribe(filters: Filter[], options: SubscriptionOptions): Subscription;
}
export type CacheRelayOptions = RelayCoreOptions;
export declare class CacheRelay implements SimpleRelay {
    get url(): string;
    get connected(): boolean;
    db: NostrIDB;
    core: RelayCore;
    constructor(db: NostrIDB, opts?: CacheRelayOptions);
    connect(): Promise<void>;
    close(): Promise<void>;
    publish(event: Event): Promise<string>;
    count(filters: Filter[], params?: {
        id?: string | null;
    }): Promise<number>;
    subscribe(filters: Filter[], options: Partial<SubscriptionOptions>): Subscription;
}
