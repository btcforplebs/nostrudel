export async function sendMessageToRelay(core, message, respond) {
    switch (message[0]) {
        case "EVENT":
            if (message[1]) {
                core.publish(message[1]);
                respond(["OK", message[1].id, true, "Accepted"]);
            }
            break;
        case "REQ": {
            const id = message[1];
            const filters = message.slice(2);
            core.subscribe(filters, {
                id,
                onevent: (event) => {
                    respond(["EVENT", id, event]);
                },
                oneose: () => respond(["EOSE", id]),
            });
            break;
        }
        case "CLOSE": {
            const id = message[1];
            if (!id)
                return;
            core.unsubscribe(message[1]);
            respond(["CLOSED", id, "Closed by client"]);
            break;
        }
        case "COUNT": {
            const id = message[1];
            const filters = message.slice(2);
            if (!id)
                return;
            if (filters.length === 0)
                return respond(["NOTICE", "No Filters"]);
            const count = await core.count(filters);
            respond(["COUNT", id, { count }]);
            break;
        }
    }
}
