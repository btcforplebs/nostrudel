import { Event, Filter } from "nostr-tools";
import { RelayCore } from "./relay-core.js";
type IncomingEventMessage = ["EVENT", Event];
type OKMessage = ["OK", string, boolean, string];
type OutgoingEventMessage = ["EVENT", string, Event];
type RequestMessage = ["REQ", string, ...Filter[]];
type EOSEMessage = ["EOSE", string];
type IncomingCountMessage = ["COUNT", string, ...Filter[]];
type OutgoingCountMessage = ["COUNT", string, {
    count: number;
}];
type CloseMessage = ["CLOSE", string];
type ClosedMessage = ["CLOSED", string, string];
type NoticeMessage = ["NOTICE", string];
export type IncomingMessage = IncomingEventMessage | RequestMessage | IncomingCountMessage | CloseMessage;
export type OutgoingMessage = OutgoingEventMessage | OKMessage | EOSEMessage | ClosedMessage | NoticeMessage | OutgoingCountMessage;
export declare function sendMessageToRelay(core: RelayCore, message: IncomingMessage, respond: (message: OutgoingMessage) => void): Promise<void>;
export {};
