{
  "version": 3,
  "sources": ["../../.pnpm/applesauce-core@0.7.0_typescript@5.6.2/node_modules/applesauce-core/dist/observable/stateful.js"],
  "sourcesContent": ["import Observable from \"zen-observable\";\n/** Wraps an {@link Observable} and makes it stateful */\nexport function stateful(observable, cleanup = false) {\n    let subscription = undefined;\n    let observers = [];\n    const self = new Observable((observer) => {\n        // add observer to list\n        observers.push(observer);\n        // pass any cached values\n        if (self.value)\n            observer.next(self.value);\n        if (self.error)\n            observer.error(self.error);\n        if (self.complete)\n            observer.complete();\n        // subscribe if not already\n        if (!subscription) {\n            subscription = observable.subscribe({\n                next: (v) => {\n                    self.value = v;\n                    for (const observer of observers)\n                        observer.next(v);\n                },\n                error: (err) => {\n                    self.error = err;\n                    for (const observer of observers)\n                        observer.error(err);\n                },\n                complete: () => {\n                    self.complete = true;\n                    for (const observer of observers)\n                        observer.complete();\n                },\n            });\n        }\n        return () => {\n            let i = observers.indexOf(observer);\n            if (i !== -1) {\n                // remove observer from list\n                observers.splice(i, 1);\n                if (subscription && observers.length === 0) {\n                    subscription.unsubscribe();\n                    subscription = undefined;\n                    // reset cached values\n                    if (cleanup) {\n                        delete self.value;\n                        delete self.error;\n                        delete self.complete;\n                    }\n                }\n            }\n        };\n    });\n    self._stateful = true;\n    return self;\n}\nexport function isStateful(observable) {\n    // @ts-expect-error\n    return observable._stateful;\n}\n"],
  "mappings": ";;;;;;;;AAAA,4BAAuB;AAEhB,SAAS,SAAS,YAAY,UAAU,OAAO;AAClD,MAAI,eAAe;AACnB,MAAI,YAAY,CAAC;AACjB,QAAM,OAAO,IAAI,sBAAAA,QAAW,CAAC,aAAa;AAEtC,cAAU,KAAK,QAAQ;AAEvB,QAAI,KAAK;AACL,eAAS,KAAK,KAAK,KAAK;AAC5B,QAAI,KAAK;AACL,eAAS,MAAM,KAAK,KAAK;AAC7B,QAAI,KAAK;AACL,eAAS,SAAS;AAEtB,QAAI,CAAC,cAAc;AACf,qBAAe,WAAW,UAAU;AAAA,QAChC,MAAM,CAAC,MAAM;AACT,eAAK,QAAQ;AACb,qBAAWC,aAAY;AACnB,YAAAA,UAAS,KAAK,CAAC;AAAA,QACvB;AAAA,QACA,OAAO,CAAC,QAAQ;AACZ,eAAK,QAAQ;AACb,qBAAWA,aAAY;AACnB,YAAAA,UAAS,MAAM,GAAG;AAAA,QAC1B;AAAA,QACA,UAAU,MAAM;AACZ,eAAK,WAAW;AAChB,qBAAWA,aAAY;AACnB,YAAAA,UAAS,SAAS;AAAA,QAC1B;AAAA,MACJ,CAAC;AAAA,IACL;AACA,WAAO,MAAM;AACT,UAAI,IAAI,UAAU,QAAQ,QAAQ;AAClC,UAAI,MAAM,IAAI;AAEV,kBAAU,OAAO,GAAG,CAAC;AACrB,YAAI,gBAAgB,UAAU,WAAW,GAAG;AACxC,uBAAa,YAAY;AACzB,yBAAe;AAEf,cAAI,SAAS;AACT,mBAAO,KAAK;AACZ,mBAAO,KAAK;AACZ,mBAAO,KAAK;AAAA,UAChB;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ,CAAC;AACD,OAAK,YAAY;AACjB,SAAO;AACX;AACO,SAAS,WAAW,YAAY;AAEnC,SAAO,WAAW;AACtB;",
  "names": ["Observable", "observer"]
}
