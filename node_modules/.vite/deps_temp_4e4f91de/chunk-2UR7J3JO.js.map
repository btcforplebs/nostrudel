{
  "version": 3,
  "sources": ["../../.pnpm/applesauce-core@0.7.0_typescript@5.6.2/node_modules/applesauce-core/dist/event-store/common.js", "../../.pnpm/applesauce-core@0.7.0_typescript@5.6.2/node_modules/applesauce-core/dist/helpers/event.js", "../../.pnpm/applesauce-core@0.7.0_typescript@5.6.2/node_modules/applesauce-core/dist/helpers/relays.js", "../../.pnpm/applesauce-core@0.7.0_typescript@5.6.2/node_modules/applesauce-core/dist/helpers/profile.js", "../../.pnpm/applesauce-core@0.7.0_typescript@5.6.2/node_modules/applesauce-core/dist/helpers/mailboxes.js", "../../.pnpm/applesauce-core@0.7.0_typescript@5.6.2/node_modules/applesauce-core/dist/helpers/pointers.js", "../../.pnpm/applesauce-core@0.7.0_typescript@5.6.2/node_modules/applesauce-core/dist/helpers/threading.js"],
  "sourcesContent": ["const LETTERS = \"abcdefghijklmnopqrstuvwxyz\";\nexport const INDEXABLE_TAGS = new Set((LETTERS + LETTERS.toUpperCase()).split(\"\"));\n", "import { kinds } from \"nostr-tools\";\nimport { INDEXABLE_TAGS } from \"../event-store/common.js\";\nexport const EventUIDSymbol = Symbol.for(\"event-uid\");\nexport const EventIndexableTagsSymbol = Symbol.for(\"indexable-tags\");\n/**\n * Returns if a kind is replaceable ( 10000 <= n < 20000 || n == 0 || n == 3 )\n * or parameterized replaceable ( 30000 <= n < 40000 )\n */\nexport function isReplaceable(kind) {\n    return kinds.isReplaceableKind(kind) || kinds.isParameterizedReplaceableKind(kind);\n}\n/**\n * Returns the events Unique ID\n * For normal or ephemeral events this is ( event.id )\n * For replaceable events this is ( event.kind + \":\" + event.pubkey )\n * For parametrized replaceable events this is ( event.kind + \":\" + event.pubkey + \":\" + event.tags.d.1 )\n */\nexport function getEventUID(event) {\n    let id = event[EventUIDSymbol];\n    if (!id) {\n        if (isReplaceable(event.kind)) {\n            const d = event.tags.find((t) => t[0] === \"d\")?.[1];\n            id = getReplaceableUID(event.kind, event.pubkey, d);\n        }\n        else {\n            id = event.id;\n        }\n    }\n    return id;\n}\nexport function getReplaceableUID(kind, pubkey, d) {\n    return d ? `${kind}:${pubkey}:${d}` : `${kind}:${pubkey}`;\n}\n/** Returns a Set of tag names and values that are indexable */\nexport function getIndexableTags(event) {\n    let indexable = event[EventIndexableTagsSymbol];\n    if (!indexable) {\n        const tags = new Set();\n        for (const tag of event.tags) {\n            if (tag[0] && INDEXABLE_TAGS.has(tag[0]) && tag[1]) {\n                tags.add(tag[0] + \":\" + tag[1]);\n            }\n        }\n        indexable = event[EventIndexableTagsSymbol] = tags;\n    }\n    return indexable;\n}\n/** Returns the second index ( tag[1] ) of the first tag that matches the name */\nexport function getTagValue(event, name) {\n    return event.tags.find((t) => t[0] === name)?.[1];\n}\n", "export const SeenRelaysSymbol = Symbol.for(\"seen-relays\");\n// Seen relays\nexport function addSeenRelay(event, relay) {\n    if (!event[SeenRelaysSymbol])\n        event[SeenRelaysSymbol] = new Set();\n    event[SeenRelaysSymbol].add(relay);\n    return event[SeenRelaysSymbol];\n}\nexport function getSeenRelays(event) {\n    return event[SeenRelaysSymbol];\n}\n// Relay URLs\nexport function validateRelayURL(relay) {\n    if (typeof relay === \"string\" && relay.includes(\",ws\"))\n        throw new Error(\"Can not have multiple relays in one string\");\n    const url = typeof relay === \"string\" ? new URL(relay) : relay;\n    if (url.protocol !== \"wss:\" && url.protocol !== \"ws:\")\n        throw new Error(\"Incorrect protocol\");\n    return url;\n}\nexport function safeRelayUrl(relayUrl) {\n    try {\n        return validateRelayURL(relayUrl).toString();\n    }\n    catch (e) {\n        return null;\n    }\n}\nexport function safeRelayUrls(urls) {\n    return Array.from(urls).map(safeRelayUrl).filter(Boolean);\n}\n", "export const ProfileContentSymbol = Symbol.for(\"profile-content\");\nexport function getProfileContent(event, quite = false) {\n    let cached = event[ProfileContentSymbol];\n    if (!cached) {\n        try {\n            const profile = JSON.parse(event.content);\n            // ensure nip05 is a string\n            if (profile.nip05 && typeof profile.nip05 !== \"string\")\n                profile.nip05 = String(profile.nip05);\n            cached = event[ProfileContentSymbol] = profile;\n        }\n        catch (e) {\n            if (e instanceof Error)\n                cached = event[ProfileContentSymbol] = e;\n        }\n    }\n    if (cached === undefined) {\n        throw new Error(\"Failed to parse profile\");\n    }\n    else if (cached instanceof Error) {\n        if (!quite)\n            throw cached;\n        else\n            return cached;\n    }\n    else\n        return cached;\n}\n", "import { safeRelayUrl } from \"./relays.js\";\nexport const MailboxesInboxesSymbol = Symbol.for(\"mailboxes-inboxes\");\nexport const MailboxesOutboxesSymbol = Symbol.for(\"mailboxes-outboxes\");\n/**\n * Parses a 10002 event and stores the inboxes in the event using the {@link MailboxesInboxesSymbol} symbol\n */\nexport function getInboxes(event) {\n    if (!event[MailboxesInboxesSymbol]) {\n        const inboxes = new Set();\n        for (const tag of event.tags) {\n            if (tag[0] === \"r\" && tag[1] && (tag[2] === \"read\" || tag[2] === undefined)) {\n                const url = safeRelayUrl(tag[1]);\n                if (url)\n                    inboxes.add(url);\n            }\n        }\n        event[MailboxesInboxesSymbol] = inboxes;\n    }\n    return event[MailboxesInboxesSymbol];\n}\n/**\n * Parses a 10002 event and stores the outboxes in the event using the {@link MailboxesOutboxesSymbol} symbol\n */\nexport function getOutboxes(event) {\n    if (!event[MailboxesOutboxesSymbol]) {\n        const outboxes = new Set();\n        for (const tag of event.tags) {\n            if (tag[0] === \"r\" && tag[1] && (tag[2] === \"write\" || tag[2] === undefined)) {\n                const url = safeRelayUrl(tag[1]);\n                if (url)\n                    outboxes.add(url);\n            }\n        }\n        event[MailboxesOutboxesSymbol] = outboxes;\n    }\n    return event[MailboxesOutboxesSymbol];\n}\n", "import { naddrEncode, neventEncode, noteEncode, nprofileEncode, npubEncode, nrelayEncode, nsecEncode, } from \"nostr-tools/nip19\";\nimport { getPublicKey } from \"nostr-tools\";\nimport { safeRelayUrls } from \"./relays.js\";\nexport function parseCoordinate(a, requireD = false, silent = true) {\n    const parts = a.split(\":\");\n    const kind = parts[0] && parseInt(parts[0]);\n    const pubkey = parts[1];\n    const d = parts[2];\n    if (!kind) {\n        if (silent)\n            return null;\n        else\n            throw new Error(\"Missing kind\");\n    }\n    if (!pubkey) {\n        if (silent)\n            return null;\n        else\n            throw new Error(\"Missing pubkey\");\n    }\n    if (requireD && d === undefined) {\n        if (silent)\n            return null;\n        else\n            throw new Error(\"Missing identifier\");\n    }\n    return {\n        kind,\n        pubkey,\n        identifier: d,\n    };\n}\nexport function getPubkeyFromDecodeResult(result) {\n    if (!result)\n        return;\n    switch (result.type) {\n        case \"naddr\":\n        case \"nprofile\":\n            return result.data.pubkey;\n        case \"npub\":\n            return result.data;\n        case \"nsec\":\n            return getPublicKey(result.data);\n        default:\n            return undefined;\n    }\n}\nexport function encodeDecodeResult(result) {\n    switch (result.type) {\n        case \"naddr\":\n            return naddrEncode(result.data);\n        case \"nprofile\":\n            return nprofileEncode(result.data);\n        case \"nevent\":\n            return neventEncode(result.data);\n        case \"nrelay\":\n            return nrelayEncode(result.data);\n        case \"nsec\":\n            return nsecEncode(result.data);\n        case \"npub\":\n            return npubEncode(result.data);\n        case \"note\":\n            return noteEncode(result.data);\n    }\n    return \"\";\n}\nexport function getEventPointerFromTag(tag) {\n    if (!tag[1])\n        throw new Error(\"Missing event id in tag\");\n    let pointer = { id: tag[1] };\n    if (tag[2])\n        pointer.relays = safeRelayUrls([tag[2]]);\n    return pointer;\n}\nexport function getAddressPointerFromTag(tag) {\n    if (!tag[1])\n        throw new Error(\"Missing coordinate in tag\");\n    const pointer = parseCoordinate(tag[1], true, false);\n    if (tag[2])\n        pointer.relays = safeRelayUrls([tag[2]]);\n    return pointer;\n}\nexport function getProfilePointerFromTag(tag) {\n    if (!tag[1])\n        throw new Error(\"Missing pubkey in tag\");\n    const pointer = { pubkey: tag[1] };\n    if (tag[2])\n        pointer.relays = safeRelayUrls([tag[2]]);\n    return pointer;\n}\nexport function getPointerFromTag(tag) {\n    try {\n        switch (tag[0]) {\n            case \"e\":\n                return { type: \"nevent\", data: getEventPointerFromTag(tag) };\n            case \"a\":\n                return {\n                    type: \"naddr\",\n                    data: getAddressPointerFromTag(tag),\n                };\n            case \"p\":\n                return { type: \"nprofile\", data: getProfilePointerFromTag(tag) };\n        }\n    }\n    catch (error) { }\n    return null;\n}\nexport function isAddressPointer(pointer) {\n    return (typeof pointer !== \"string\" &&\n        Object.hasOwn(pointer, \"identifier\") &&\n        Object.hasOwn(pointer, \"pubkey\") &&\n        Object.hasOwn(pointer, \"kind\"));\n}\nexport function isEventPointer(pointer) {\n    return typeof pointer !== \"string\" && Object.hasOwn(pointer, \"id\");\n}\nexport function getCoordinateFromAddressPointer(pointer) {\n    return `${pointer.kind}:${pointer.pubkey}:${pointer.identifier}`;\n}\nexport function getATagFromAddressPointer(pointer) {\n    const relay = pointer.relays?.[0];\n    const coordinate = getCoordinateFromAddressPointer(pointer);\n    return relay ? [\"a\", coordinate, relay] : [\"a\", coordinate];\n}\nexport function getETagFromEventPointer(pointer) {\n    return pointer.relays?.length ? [\"e\", pointer.id, pointer.relays[0]] : [\"e\", pointer.id];\n}\n", "import { getAddressPointerFromTag, getEventPointerFromTag } from \"./pointers.js\";\nexport const Nip10ThreadRefsSymbol = Symbol.for(\"nip10-thread-refs\");\n/** Parses NIP-10 tags and handles legacy behavior */\nexport function interpretThreadTags(event) {\n    const eTags = event.tags.filter((t) => t[0] === \"e\" && t[1]);\n    const aTags = event.tags.filter((t) => t[0] === \"a\" && t[1]);\n    // find the root and reply tags.\n    let rootETag = eTags.find((t) => t[3] === \"root\");\n    let replyETag = eTags.find((t) => t[3] === \"reply\");\n    let rootATag = aTags.find((t) => t[3] === \"root\");\n    let replyATag = aTags.find((t) => t[3] === \"reply\");\n    if (!rootETag || !replyETag) {\n        // a direct reply does not need a \"reply\" reference\n        // https://github.com/nostr-protocol/nips/blob/master/10.md\n        // this is not necessarily to spec. but if there is only one id (root or reply) then assign it to both\n        // this handles the cases where a client only set a \"reply\" tag and no root\n        rootETag = replyETag = rootETag || replyETag;\n    }\n    if (!rootATag || !replyATag) {\n        rootATag = replyATag = rootATag || replyATag;\n    }\n    if (!rootETag && !replyETag) {\n        // legacy behavior\n        // https://github.com/nostr-protocol/nips/blob/master/10.md#positional-e-tags-deprecated\n        const legacyETags = eTags.filter((t) => {\n            // ignore it if there is a marker\n            if (t[3])\n                return false;\n            return true;\n        });\n        if (legacyETags.length >= 1) {\n            // first tag is the root\n            rootETag = legacyETags[0];\n            // last tag is reply\n            replyETag = legacyETags[legacyETags.length - 1] ?? rootETag;\n        }\n    }\n    return {\n        root: rootETag || rootATag ? { e: rootETag, a: rootATag } : undefined,\n        reply: replyETag || replyATag ? { e: replyETag, a: replyATag } : undefined,\n    };\n}\n/** Returns the parsed NIP-10 tags for an event */\nexport function getNip10References(event) {\n    let refs = event[Nip10ThreadRefsSymbol];\n    if (!refs) {\n        const e = event;\n        const tags = interpretThreadTags(e);\n        refs = event[Nip10ThreadRefsSymbol] = {\n            root: tags.root && {\n                e: tags.root.e && getEventPointerFromTag(tags.root.e),\n                a: tags.root.a && getAddressPointerFromTag(tags.root.a),\n            },\n            reply: tags.reply && {\n                e: tags.reply.e && getEventPointerFromTag(tags.reply.e),\n                a: tags.reply.a && getAddressPointerFromTag(tags.reply.a),\n            },\n        };\n    }\n    return refs;\n}\n"],
  "mappings": "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",
  "names": []
}
